// Machine generated file - DO NOT EDIT!

/*
 * Customer ID=11582; Build=0x766db; Copyright (c) 2006-2010 by Tensilica Inc.  ALL RIGHTS RESERVED.
 * These coded instructions, statements, and computer programs are the.
 * copyrighted works and confidential proprietary information of Tensilica Inc..
 * They may not be modified, copied, reproduced, distributed, or disclosed to.
 * third parties in any manner, medium, or form, in whole or in part, without.
 * the prior written consent of Tensilica Inc..
 */

/* Do not modify. This is automatically generated.*/

#ifndef CSTUB_Xm_hmd1a_HEADER
#define CSTUB_Xm_hmd1a_HEADER

#include <string.h>
#include "cstub-extif.h"

/* Cstub definitions */

#if defined(__GNUC__)
#define CSTUB_MSC_ALIGN(x) 
#define CSTUB_GCC_ALIGN(x) __attribute__((aligned(x))) 
#define CSTUB_EXPLICIT explicit
#define CSTUB_MAY_ALIAS __attribute__((__may_alias__)) 
#define CSTUB_EXTERN extern
#elif defined(_MSC_VER)
#define CSTUB_MSC_ALIGN(x) _declspec(align(x)) 
#define CSTUB_GCC_ALIGN(x) 
#define CSTUB_EXPLICIT explicit
#define CSTUB_MAY_ALIAS 
#if defined(CSTUB_DLLEXPORT)
#define CSTUB_EXTERN __declspec(dllexport)
#elif defined(CSTUB_DLLIMPORT)
#define CSTUB_EXTERN __declspec(dllimport)
#else
#define CSTUB_EXTERN extern
#endif
#else 
#error "Error: Only GCC/G++ and Visual C++ are supported"
#endif

#define CSTUB_(X) cstub_Xm_hmd1a_##X

/* Ctype macros */
#define xtbool CSTUB_(xtbool)
#define xtbool2 CSTUB_(xtbool2)
#define xtbool4 CSTUB_(xtbool4)
#define xtbool8 CSTUB_(xtbool8)
#define xtbool16 CSTUB_(xtbool16)
#define ae_p24x2s CSTUB_(ae_p24x2s)
#define ae_p24x2f CSTUB_(ae_p24x2f)
#define ae_p16x2s CSTUB_(ae_p16x2s)
#define ae_p24s CSTUB_(ae_p24s)
#define ae_p24f CSTUB_(ae_p24f)
#define ae_p16s CSTUB_(ae_p16s)
#define ae_int16x4 CSTUB_(ae_int16x4)
#define ae_int16 CSTUB_(ae_int16)
#define ae_f16x4 CSTUB_(ae_f16x4)
#define ae_f16 CSTUB_(ae_f16)
#define ae_int32x2 CSTUB_(ae_int32x2)
#define ae_int32 CSTUB_(ae_int32)
#define ae_f32x2 CSTUB_(ae_f32x2)
#define ae_f32 CSTUB_(ae_f32)
#define ae_int24x2 CSTUB_(ae_int24x2)
#define ae_int24 CSTUB_(ae_int24)
#define ae_f24x2 CSTUB_(ae_f24x2)
#define ae_f24 CSTUB_(ae_f24)
#define ae_int64 CSTUB_(ae_int64)
#define ae_f64 CSTUB_(ae_f64)
#define ae_q56s CSTUB_(ae_q56s)
#define ae_q32s CSTUB_(ae_q32s)
#define ae_valign CSTUB_(ae_valign)
#define ae_int32x4 CSTUB_(ae_int32x4)
#define ae_f32x4 CSTUB_(ae_f32x4)
#define ae_int32u CSTUB_(ae_int32u)
#define ae_int16u CSTUB_(ae_int16u)
#define ae_int64x2 CSTUB_(ae_int64x2)
#define fr32 CSTUB_(fr32)
#define vr64 CSTUB_(vr64)
#define cr64 CSTUB_(cr64)
#define mir18 CSTUB_(mir18)
#define ulsr32 CSTUB_(ulsr32)
#define atbool CSTUB_(atbool)

#if defined(__cplusplus)
/* Ctype declarations */
typedef int immediate;
#define DECLARE_CTYPE(s) \
    namespace s##_space { \
    class s##_; \
    } \
    typedef s##_space::s##_ s;

DECLARE_CTYPE(xtbool);
DECLARE_CTYPE(xtbool2);
DECLARE_CTYPE(xtbool4);
DECLARE_CTYPE(xtbool8);
DECLARE_CTYPE(xtbool16);
DECLARE_CTYPE(ae_p24x2s);
DECLARE_CTYPE(ae_p24x2f);
DECLARE_CTYPE(ae_p16x2s);
DECLARE_CTYPE(ae_p24s);
DECLARE_CTYPE(ae_p24f);
DECLARE_CTYPE(ae_p16s);
DECLARE_CTYPE(ae_int16x4);
DECLARE_CTYPE(ae_int16);
DECLARE_CTYPE(ae_f16x4);
DECLARE_CTYPE(ae_f16);
DECLARE_CTYPE(ae_int32x2);
DECLARE_CTYPE(ae_int32);
DECLARE_CTYPE(ae_f32x2);
DECLARE_CTYPE(ae_f32);
DECLARE_CTYPE(ae_int24x2);
DECLARE_CTYPE(ae_int24);
DECLARE_CTYPE(ae_f24x2);
DECLARE_CTYPE(ae_f24);
DECLARE_CTYPE(ae_int64);
DECLARE_CTYPE(ae_f64);
DECLARE_CTYPE(ae_q56s);
DECLARE_CTYPE(ae_q32s);
DECLARE_CTYPE(ae_valign);
DECLARE_CTYPE(ae_int32x4);
DECLARE_CTYPE(ae_f32x4);
DECLARE_CTYPE(ae_int32u);
DECLARE_CTYPE(ae_int16u);
DECLARE_CTYPE(ae_int64x2);
DECLARE_CTYPE(fr32);
DECLARE_CTYPE(vr64);
DECLARE_CTYPE(cr64);
DECLARE_CTYPE(mir18);
DECLARE_CTYPE(ulsr32);
DECLARE_CTYPE(atbool);

/* Ctype definitions */
namespace xtbool_space {
CSTUB_MSC_ALIGN(1) class xtbool_ {
public:
unsigned char  _[1];
xtbool_ () {}
template <typename T_> inline operator T_() const;
inline xtbool_ (const int src) { _[0] = src & 0x1;}
inline operator int() { return _[0]; }
inline xtbool_ (const unsigned int src) { _[0] = src & 0x1;}
inline operator unsigned int() { return _[0]; }
inline xtbool_ (const short src) { _[0] = src & 0x1;}
inline operator short() { return _[0]; }
inline xtbool_ (const unsigned short src) { _[0] = src & 0x1;}
inline operator unsigned short() { return _[0]; }
inline xtbool_ (const char src) { _[0] = src & 0x1;}
inline operator char() { return _[0]; }
inline xtbool_ (const unsigned char src) { _[0] = src & 0x1;}
inline operator unsigned char() { return _[0]; }
inline xtbool_ (const bool src) { _[0] = (unsigned char)src;}
inline operator bool() { return (bool)(_[0] & 0x1);} 
} CSTUB_GCC_ALIGN(1);
}

namespace xtbool2_space {
CSTUB_MSC_ALIGN(1) class xtbool2_ {
public:
unsigned char  _[1];
xtbool2_ () {}
template <typename T_> inline operator T_() const;
inline xtbool2_ (const int src) { _[0] = src & 0x3;}
inline operator int() { return _[0]; }
inline xtbool2_ (const unsigned int src) { _[0] = src & 0x3;}
inline operator unsigned int() { return _[0]; }
inline xtbool2_ (const short src) { _[0] = src & 0x3;}
inline operator short() { return _[0]; }
inline xtbool2_ (const unsigned short src) { _[0] = src & 0x3;}
inline operator unsigned short() { return _[0]; }
inline xtbool2_ (const char src) { _[0] = src & 0x3;}
inline operator char() { return _[0]; }
inline xtbool2_ (const unsigned char src) { _[0] = src & 0x3;}
inline operator unsigned char() { return _[0]; }
} CSTUB_GCC_ALIGN(1);
}

namespace xtbool4_space {
CSTUB_MSC_ALIGN(1) class xtbool4_ {
public:
unsigned char  _[1];
xtbool4_ () {}
template <typename T_> inline operator T_() const;
inline xtbool4_ (const int src) { _[0] = src & 0xf;}
inline operator int() { return _[0]; }
inline xtbool4_ (const unsigned int src) { _[0] = src & 0xf;}
inline operator unsigned int() { return _[0]; }
inline xtbool4_ (const short src) { _[0] = src & 0xf;}
inline operator short() { return _[0]; }
inline xtbool4_ (const unsigned short src) { _[0] = src & 0xf;}
inline operator unsigned short() { return _[0]; }
inline xtbool4_ (const char src) { _[0] = src & 0xf;}
inline operator char() { return _[0]; }
inline xtbool4_ (const unsigned char src) { _[0] = src & 0xf;}
inline operator unsigned char() { return _[0]; }
} CSTUB_GCC_ALIGN(1);
}

namespace xtbool8_space {
CSTUB_MSC_ALIGN(1) class xtbool8_ {
public:
unsigned char  _[1];
xtbool8_ () {}
template <typename T_> inline operator T_() const;
inline xtbool8_ (const int src) { _[0] = src & 0xff;}
inline operator int() { return _[0]; }
inline xtbool8_ (const unsigned int src) { _[0] = src & 0xff;}
inline operator unsigned int() { return _[0]; }
inline xtbool8_ (const short src) { _[0] = src & 0xff;}
inline operator short() { return _[0]; }
inline xtbool8_ (const unsigned short src) { _[0] = src & 0xff;}
inline operator unsigned short() { return _[0]; }
inline xtbool8_ (const char src) { _[0] = src & 0xff;}
inline operator char() { return _[0]; }
inline xtbool8_ (const unsigned char src) { _[0] = src & 0xff;}
inline operator unsigned char() { return _[0]; }
} CSTUB_GCC_ALIGN(1);
}

namespace xtbool16_space {
CSTUB_MSC_ALIGN(2) class xtbool16_ {
public:
unsigned short  _[1];
xtbool16_ () {}
template <typename T_> inline operator T_() const;
inline xtbool16_ (const int src) { _[0] = src & 0xffff;}
inline operator int() { return _[0]; }
inline xtbool16_ (const unsigned int src) { _[0] = src & 0xffff;}
inline operator unsigned int() { return _[0]; }
inline xtbool16_ (const short src) { _[0] = src & 0xffff;}
inline operator short() { return _[0]; }
inline xtbool16_ (const unsigned short src) { _[0] = src & 0xffff;}
inline operator unsigned short() { return _[0]; }
} CSTUB_GCC_ALIGN(2);
}

namespace ae_p24x2s_space {
CSTUB_MSC_ALIGN(8) class ae_p24x2s_ {
public:
unsigned int _[2];
ae_p24x2s_ () {}
inline ae_p24x2s_& operator= (const ae_p24x2s_ &src);
inline CSTUB_EXPLICIT ae_p24x2s_ (const ae_p24x2f &src);
inline ae_p24x2s_& operator= (const ae_p24x2f &src);
inline CSTUB_EXPLICIT ae_p24x2s_ (const ae_p16x2s &src);
inline ae_p24x2s_& operator= (const ae_p16x2s &src);
inline CSTUB_EXPLICIT ae_p24x2s_ (const ae_p24s &src);
inline ae_p24x2s_& operator= (const ae_p24s &src);
inline CSTUB_EXPLICIT ae_p24x2s_ (const ae_p24f &src);
inline ae_p24x2s_& operator= (const ae_p24f &src);
inline CSTUB_EXPLICIT ae_p24x2s_ (const ae_p16s &src);
inline ae_p24x2s_& operator= (const ae_p16s &src);
inline CSTUB_EXPLICIT ae_p24x2s_ (const ae_int24x2 &src);
inline ae_p24x2s_& operator= (const ae_int24x2 &src);
inline CSTUB_EXPLICIT ae_p24x2s_ (const ae_f24x2 &src);
inline ae_p24x2s_& operator= (const ae_f24x2 &src);
template <typename T_> inline operator T_() const;
inline operator ae_p24x2f() const;
inline operator ae_p16x2s() const;
inline operator ae_p24s() const;
inline operator ae_p24f() const;
inline operator ae_p16s() const;
inline operator ae_int24x2() const;
inline operator ae_f24x2() const;
} CSTUB_GCC_ALIGN(8);
}

namespace ae_p24x2f_space {
CSTUB_MSC_ALIGN(8) class ae_p24x2f_ {
public:
unsigned int _[2];
ae_p24x2f_ () {}
inline ae_p24x2f_& operator= (const ae_p24x2f_ &src);
inline CSTUB_EXPLICIT ae_p24x2f_ (const ae_p24x2s &src);
inline ae_p24x2f_& operator= (const ae_p24x2s &src);
inline CSTUB_EXPLICIT ae_p24x2f_ (const ae_p16x2s &src);
inline ae_p24x2f_& operator= (const ae_p16x2s &src);
inline CSTUB_EXPLICIT ae_p24x2f_ (const ae_p24s &src);
inline ae_p24x2f_& operator= (const ae_p24s &src);
inline CSTUB_EXPLICIT ae_p24x2f_ (const ae_p24f &src);
inline ae_p24x2f_& operator= (const ae_p24f &src);
inline CSTUB_EXPLICIT ae_p24x2f_ (const ae_p16s &src);
inline ae_p24x2f_& operator= (const ae_p16s &src);
inline CSTUB_EXPLICIT ae_p24x2f_ (const ae_int24x2 &src);
inline ae_p24x2f_& operator= (const ae_int24x2 &src);
inline CSTUB_EXPLICIT ae_p24x2f_ (const ae_f24x2 &src);
inline ae_p24x2f_& operator= (const ae_f24x2 &src);
template <typename T_> inline operator T_() const;
inline operator ae_p24x2s() const;
inline operator ae_p16x2s() const;
inline operator ae_p24s() const;
inline operator ae_p24f() const;
inline operator ae_p16s() const;
inline operator ae_int24x2() const;
inline operator ae_f24x2() const;
} CSTUB_GCC_ALIGN(8);
}

namespace ae_p16x2s_space {
CSTUB_MSC_ALIGN(4) class ae_p16x2s_ {
public:
unsigned int _[1];
ae_p16x2s_ () {}
inline ae_p16x2s_& operator= (const ae_p16x2s_ &src);
inline CSTUB_EXPLICIT ae_p16x2s_ (const ae_p24x2s &src);
inline ae_p16x2s_& operator= (const ae_p24x2s &src);
inline CSTUB_EXPLICIT ae_p16x2s_ (const ae_p24x2f &src);
inline ae_p16x2s_& operator= (const ae_p24x2f &src);
inline CSTUB_EXPLICIT ae_p16x2s_ (const ae_int24x2 &src);
inline ae_p16x2s_& operator= (const ae_int24x2 &src);
inline CSTUB_EXPLICIT ae_p16x2s_ (const ae_f24x2 &src);
inline ae_p16x2s_& operator= (const ae_f24x2 &src);
template <typename T_> inline operator T_() const;
inline operator ae_p24x2s() const;
inline operator ae_p24x2f() const;
inline operator ae_int24x2() const;
inline operator ae_f24x2() const;
} CSTUB_GCC_ALIGN(4);
}

namespace ae_p24s_space {
CSTUB_MSC_ALIGN(4) class ae_p24s_ {
public:
unsigned int _[1];
ae_p24s_ () {}
inline ae_p24s_& operator= (const ae_p24s_ &src);
inline CSTUB_EXPLICIT ae_p24s_ (const ae_p24x2s &src);
inline ae_p24s_& operator= (const ae_p24x2s &src);
inline CSTUB_EXPLICIT ae_p24s_ (const ae_p24x2f &src);
inline ae_p24s_& operator= (const ae_p24x2f &src);
inline CSTUB_EXPLICIT ae_p24s_ (const ae_p24f &src);
inline ae_p24s_& operator= (const ae_p24f &src);
inline CSTUB_EXPLICIT ae_p24s_ (const ae_p16s &src);
inline ae_p24s_& operator= (const ae_p16s &src);
inline CSTUB_EXPLICIT ae_p24s_ (const ae_int24x2 &src);
inline ae_p24s_& operator= (const ae_int24x2 &src);
inline CSTUB_EXPLICIT ae_p24s_ (const ae_f24x2 &src);
inline ae_p24s_& operator= (const ae_f24x2 &src);
template <typename T_> inline operator T_() const;
inline operator ae_p24x2s() const;
inline operator ae_p24x2f() const;
inline operator ae_p24f() const;
inline operator ae_p16s() const;
inline operator ae_int24x2() const;
inline operator ae_f24x2() const;
} CSTUB_GCC_ALIGN(4);
}

namespace ae_p24f_space {
CSTUB_MSC_ALIGN(4) class ae_p24f_ {
public:
unsigned int _[1];
ae_p24f_ () {}
inline ae_p24f_& operator= (const ae_p24f_ &src);
inline CSTUB_EXPLICIT ae_p24f_ (const ae_p24x2s &src);
inline ae_p24f_& operator= (const ae_p24x2s &src);
inline CSTUB_EXPLICIT ae_p24f_ (const ae_p24x2f &src);
inline ae_p24f_& operator= (const ae_p24x2f &src);
inline CSTUB_EXPLICIT ae_p24f_ (const ae_p24s &src);
inline ae_p24f_& operator= (const ae_p24s &src);
inline CSTUB_EXPLICIT ae_p24f_ (const ae_p16s &src);
inline ae_p24f_& operator= (const ae_p16s &src);
inline CSTUB_EXPLICIT ae_p24f_ (const ae_int24x2 &src);
inline ae_p24f_& operator= (const ae_int24x2 &src);
inline CSTUB_EXPLICIT ae_p24f_ (const ae_f24x2 &src);
inline ae_p24f_& operator= (const ae_f24x2 &src);
template <typename T_> inline operator T_() const;
inline operator ae_p24x2s() const;
inline operator ae_p24x2f() const;
inline operator ae_p24s() const;
inline operator ae_p16s() const;
inline operator ae_int24x2() const;
inline operator ae_f24x2() const;
} CSTUB_GCC_ALIGN(4);
}

namespace ae_p16s_space {
CSTUB_MSC_ALIGN(2) class ae_p16s_ {
public:
unsigned short  _[1];
ae_p16s_ () {}
inline ae_p16s_& operator= (const ae_p16s_ &src);
inline CSTUB_EXPLICIT ae_p16s_ (const ae_p24x2s &src);
inline ae_p16s_& operator= (const ae_p24x2s &src);
inline CSTUB_EXPLICIT ae_p16s_ (const ae_p24x2f &src);
inline ae_p16s_& operator= (const ae_p24x2f &src);
inline CSTUB_EXPLICIT ae_p16s_ (const ae_p24s &src);
inline ae_p16s_& operator= (const ae_p24s &src);
inline CSTUB_EXPLICIT ae_p16s_ (const ae_p24f &src);
inline ae_p16s_& operator= (const ae_p24f &src);
inline CSTUB_EXPLICIT ae_p16s_ (const ae_int24x2 &src);
inline ae_p16s_& operator= (const ae_int24x2 &src);
inline CSTUB_EXPLICIT ae_p16s_ (const ae_f24x2 &src);
inline ae_p16s_& operator= (const ae_f24x2 &src);
template <typename T_> inline operator T_() const;
inline operator ae_p24x2s() const;
inline operator ae_p24x2f() const;
inline operator ae_p24s() const;
inline operator ae_p24f() const;
inline operator ae_int24x2() const;
inline operator ae_f24x2() const;
} CSTUB_GCC_ALIGN(2);
}

namespace ae_int16x4_space {
CSTUB_MSC_ALIGN(8) class ae_int16x4_ {
public:
unsigned int _[2];
ae_int16x4_ () {}
inline ae_int16x4_& operator= (const ae_int16x4_ &src);
inline ae_int16x4_ (const short &src);
inline ae_int16x4_& operator= (const short &src);
inline ae_int16x4_ (const int &src);
inline ae_int16x4_& operator= (const int &src);
inline CSTUB_EXPLICIT ae_int16x4_ (const ae_int16 &src);
inline ae_int16x4_& operator= (const ae_int16 &src);
inline CSTUB_EXPLICIT ae_int16x4_ (const ae_f16x4 &src);
inline ae_int16x4_& operator= (const ae_f16x4 &src);
inline CSTUB_EXPLICIT ae_int16x4_ (const ae_f16 &src);
inline ae_int16x4_& operator= (const ae_f16 &src);
inline CSTUB_EXPLICIT ae_int16x4_ (const ae_int32x4 &src);
inline ae_int16x4_& operator= (const ae_int32x4 &src);
template <typename T_> inline operator T_() const;
inline operator ae_int16() const;
inline operator ae_f16x4() const;
inline operator ae_f16() const;
inline operator ae_int32x4() const;
inline operator short () const;
} CSTUB_GCC_ALIGN(8);
}

namespace ae_int16_space {
CSTUB_MSC_ALIGN(2) class ae_int16_ {
public:
unsigned short  _[1];
ae_int16_ () {}
inline ae_int16_& operator= (const ae_int16_ &src);
inline ae_int16_ (const short &src);
inline ae_int16_& operator= (const short &src);
inline ae_int16_ (const int &src);
inline ae_int16_& operator= (const int &src);
inline CSTUB_EXPLICIT ae_int16_ (const ae_int16x4 &src);
inline ae_int16_& operator= (const ae_int16x4 &src);
inline CSTUB_EXPLICIT ae_int16_ (const ae_f16x4 &src);
inline ae_int16_& operator= (const ae_f16x4 &src);
inline CSTUB_EXPLICIT ae_int16_ (const ae_f16 &src);
inline ae_int16_& operator= (const ae_f16 &src);
inline CSTUB_EXPLICIT ae_int16_ (const ae_int32 &src);
inline ae_int16_& operator= (const ae_int32 &src);
inline CSTUB_EXPLICIT ae_int16_ (const ae_int24 &src);
inline ae_int16_& operator= (const ae_int24 &src);
inline CSTUB_EXPLICIT ae_int16_ (const ae_int32u &src);
inline ae_int16_& operator= (const ae_int32u &src);
inline CSTUB_EXPLICIT ae_int16_ (const ae_int16u &src);
inline ae_int16_& operator= (const ae_int16u &src);
template <typename T_> inline operator T_() const;
inline operator ae_int16x4() const;
inline operator ae_f16() const;
inline operator ae_int32() const;
inline operator ae_int24() const;
inline operator ae_int64() const;
inline operator ae_int32u() const;
inline operator ae_int16u() const;
inline operator short () const;
inline operator int () const;
} CSTUB_GCC_ALIGN(2);
}

namespace ae_f16x4_space {
CSTUB_MSC_ALIGN(8) class ae_f16x4_ {
public:
unsigned int _[2];
ae_f16x4_ () {}
inline ae_f16x4_& operator= (const ae_f16x4_ &src);
inline ae_f16x4_ (const short &src);
inline ae_f16x4_& operator= (const short &src);
inline CSTUB_EXPLICIT ae_f16x4_ (const ae_int16x4 &src);
inline ae_f16x4_& operator= (const ae_int16x4 &src);
inline CSTUB_EXPLICIT ae_f16x4_ (const ae_f16 &src);
inline ae_f16x4_& operator= (const ae_f16 &src);
template <typename T_> inline operator T_() const;
inline operator ae_int16x4() const;
inline operator ae_int16() const;
inline operator ae_f16() const;
} CSTUB_GCC_ALIGN(8);
}

namespace ae_f16_space {
CSTUB_MSC_ALIGN(2) class ae_f16_ {
public:
unsigned short  _[1];
ae_f16_ () {}
inline ae_f16_& operator= (const ae_f16_ &src);
inline ae_f16_ (const short &src);
inline ae_f16_& operator= (const short &src);
inline ae_f16_ (const int &src);
inline ae_f16_& operator= (const int &src);
inline CSTUB_EXPLICIT ae_f16_ (const ae_int16x4 &src);
inline ae_f16_& operator= (const ae_int16x4 &src);
inline CSTUB_EXPLICIT ae_f16_ (const ae_int16 &src);
inline ae_f16_& operator= (const ae_int16 &src);
inline CSTUB_EXPLICIT ae_f16_ (const ae_f16x4 &src);
inline ae_f16_& operator= (const ae_f16x4 &src);
inline CSTUB_EXPLICIT ae_f16_ (const ae_f32 &src);
inline ae_f16_& operator= (const ae_f32 &src);
inline CSTUB_EXPLICIT ae_f16_ (const ae_f24 &src);
inline ae_f16_& operator= (const ae_f24 &src);
template <typename T_> inline operator T_() const;
inline operator ae_int16x4() const;
inline operator ae_int16() const;
inline operator ae_f16x4() const;
inline operator ae_f32() const;
inline operator ae_f24() const;
inline operator short () const;
inline operator int () const;
} CSTUB_GCC_ALIGN(2);
}

namespace ae_int32x2_space {
CSTUB_MSC_ALIGN(8) class ae_int32x2_ {
public:
unsigned int _[2];
ae_int32x2_ () {}
inline ae_int32x2_& operator= (const ae_int32x2_ &src);
inline ae_int32x2_ (const unsigned char &src);
inline ae_int32x2_& operator= (const unsigned char &src);
inline ae_int32x2_ (const signed char &src);
inline ae_int32x2_& operator= (const signed char &src);
inline ae_int32x2_ (const unsigned short &src);
inline ae_int32x2_& operator= (const unsigned short &src);
inline ae_int32x2_ (const short &src);
inline ae_int32x2_& operator= (const short &src);
inline ae_int32x2_ (const unsigned int &src);
inline ae_int32x2_& operator= (const unsigned int &src);
inline ae_int32x2_ (const int &src);
inline ae_int32x2_& operator= (const int &src);
inline CSTUB_EXPLICIT ae_int32x2_ (const ae_int32 &src);
inline ae_int32x2_& operator= (const ae_int32 &src);
inline CSTUB_EXPLICIT ae_int32x2_ (const ae_f32x2 &src);
inline ae_int32x2_& operator= (const ae_f32x2 &src);
inline CSTUB_EXPLICIT ae_int32x2_ (const ae_f32 &src);
inline ae_int32x2_& operator= (const ae_f32 &src);
inline CSTUB_EXPLICIT ae_int32x2_ (const ae_int24x2 &src);
inline ae_int32x2_& operator= (const ae_int24x2 &src);
inline CSTUB_EXPLICIT ae_int32x2_ (const ae_int24 &src);
inline ae_int32x2_& operator= (const ae_int24 &src);
inline CSTUB_EXPLICIT ae_int32x2_ (const ae_f24x2 &src);
inline ae_int32x2_& operator= (const ae_f24x2 &src);
inline CSTUB_EXPLICIT ae_int32x2_ (const ae_f24 &src);
inline ae_int32x2_& operator= (const ae_f24 &src);
inline CSTUB_EXPLICIT ae_int32x2_ (const ae_int32u &src);
inline ae_int32x2_& operator= (const ae_int32u &src);
template <typename T_> inline operator T_() const;
inline operator ae_int32() const;
inline operator ae_f32x2() const;
inline operator ae_f32() const;
inline operator ae_int32u() const;
inline operator ae_int64x2() const;
inline operator short () const;
inline operator int () const;
inline operator unsigned int () const;
} CSTUB_GCC_ALIGN(8);
}

namespace ae_int32_space {
CSTUB_MSC_ALIGN(4) class ae_int32_ {
public:
unsigned int _[1];
ae_int32_ () {}
inline ae_int32_& operator= (const ae_int32_ &src);
inline ae_int32_ (const unsigned char &src);
inline ae_int32_& operator= (const unsigned char &src);
inline ae_int32_ (const signed char &src);
inline ae_int32_& operator= (const signed char &src);
inline ae_int32_ (const unsigned short &src);
inline ae_int32_& operator= (const unsigned short &src);
inline ae_int32_ (const short &src);
inline ae_int32_& operator= (const short &src);
inline ae_int32_ (const unsigned int &src);
inline ae_int32_& operator= (const unsigned int &src);
inline ae_int32_ (const int &src);
inline ae_int32_& operator= (const int &src);
inline CSTUB_EXPLICIT ae_int32_ (const ae_int16 &src);
inline ae_int32_& operator= (const ae_int16 &src);
inline CSTUB_EXPLICIT ae_int32_ (const ae_int32x2 &src);
inline ae_int32_& operator= (const ae_int32x2 &src);
inline CSTUB_EXPLICIT ae_int32_ (const ae_f32x2 &src);
inline ae_int32_& operator= (const ae_f32x2 &src);
inline CSTUB_EXPLICIT ae_int32_ (const ae_f32 &src);
inline ae_int32_& operator= (const ae_f32 &src);
inline CSTUB_EXPLICIT ae_int32_ (const ae_int24 &src);
inline ae_int32_& operator= (const ae_int24 &src);
inline CSTUB_EXPLICIT ae_int32_ (const ae_f24x2 &src);
inline ae_int32_& operator= (const ae_f24x2 &src);
inline CSTUB_EXPLICIT ae_int32_ (const ae_f24 &src);
inline ae_int32_& operator= (const ae_f24 &src);
inline CSTUB_EXPLICIT ae_int32_ (const ae_int32u &src);
inline ae_int32_& operator= (const ae_int32u &src);
inline CSTUB_EXPLICIT ae_int32_ (const ae_int16u &src);
inline ae_int32_& operator= (const ae_int16u &src);
template <typename T_> inline operator T_() const;
inline operator ae_int16() const;
inline operator ae_int32x2() const;
inline operator ae_f32x2() const;
inline operator ae_f32() const;
inline operator ae_int64() const;
inline operator ae_int32x4() const;
inline operator ae_int32u() const;
inline operator ae_int16u() const;
inline operator short () const;
inline operator int () const;
inline operator unsigned int () const;
} CSTUB_GCC_ALIGN(4);
}

namespace ae_f32x2_space {
CSTUB_MSC_ALIGN(8) class ae_f32x2_ {
public:
unsigned int _[2];
ae_f32x2_ () {}
inline ae_f32x2_& operator= (const ae_f32x2_ &src);
inline ae_f32x2_ (const short &src);
inline ae_f32x2_& operator= (const short &src);
inline ae_f32x2_ (const unsigned int &src);
inline ae_f32x2_& operator= (const unsigned int &src);
inline ae_f32x2_ (const int &src);
inline ae_f32x2_& operator= (const int &src);
inline CSTUB_EXPLICIT ae_f32x2_ (const ae_int32x2 &src);
inline ae_f32x2_& operator= (const ae_int32x2 &src);
inline CSTUB_EXPLICIT ae_f32x2_ (const ae_int32 &src);
inline ae_f32x2_& operator= (const ae_int32 &src);
inline CSTUB_EXPLICIT ae_f32x2_ (const ae_f32 &src);
inline ae_f32x2_& operator= (const ae_f32 &src);
inline CSTUB_EXPLICIT ae_f32x2_ (const ae_int24x2 &src);
inline ae_f32x2_& operator= (const ae_int24x2 &src);
inline CSTUB_EXPLICIT ae_f32x2_ (const ae_int24 &src);
inline ae_f32x2_& operator= (const ae_int24 &src);
inline CSTUB_EXPLICIT ae_f32x2_ (const ae_f24x2 &src);
inline ae_f32x2_& operator= (const ae_f24x2 &src);
inline CSTUB_EXPLICIT ae_f32x2_ (const ae_f24 &src);
inline ae_f32x2_& operator= (const ae_f24 &src);
template <typename T_> inline operator T_() const;
inline operator ae_int32x2() const;
inline operator ae_int32() const;
inline operator ae_f32() const;
} CSTUB_GCC_ALIGN(8);
}

namespace ae_f32_space {
CSTUB_MSC_ALIGN(4) class ae_f32_ {
public:
unsigned int _[1];
ae_f32_ () {}
inline ae_f32_& operator= (const ae_f32_ &src);
inline ae_f32_ (const short &src);
inline ae_f32_& operator= (const short &src);
inline ae_f32_ (const int &src);
inline ae_f32_& operator= (const int &src);
inline CSTUB_EXPLICIT ae_f32_ (const ae_f16 &src);
inline ae_f32_& operator= (const ae_f16 &src);
inline CSTUB_EXPLICIT ae_f32_ (const ae_int32x2 &src);
inline ae_f32_& operator= (const ae_int32x2 &src);
inline CSTUB_EXPLICIT ae_f32_ (const ae_int32 &src);
inline ae_f32_& operator= (const ae_int32 &src);
inline CSTUB_EXPLICIT ae_f32_ (const ae_f32x2 &src);
inline ae_f32_& operator= (const ae_f32x2 &src);
inline CSTUB_EXPLICIT ae_f32_ (const ae_int24x2 &src);
inline ae_f32_& operator= (const ae_int24x2 &src);
inline CSTUB_EXPLICIT ae_f32_ (const ae_int24 &src);
inline ae_f32_& operator= (const ae_int24 &src);
inline CSTUB_EXPLICIT ae_f32_ (const ae_f24 &src);
inline ae_f32_& operator= (const ae_f24 &src);
template <typename T_> inline operator T_() const;
inline operator ae_f16() const;
inline operator ae_int32x2() const;
inline operator ae_int32() const;
inline operator ae_f32x2() const;
inline operator ae_f32x4() const;
inline operator int () const;
} CSTUB_GCC_ALIGN(4);
}

namespace ae_int24x2_space {
CSTUB_MSC_ALIGN(8) class ae_int24x2_ {
public:
unsigned int _[2];
ae_int24x2_ () {}
inline ae_int24x2_& operator= (const ae_int24x2_ &src);
inline ae_int24x2_ (const short &src);
inline ae_int24x2_& operator= (const short &src);
inline ae_int24x2_ (const unsigned int &src);
inline ae_int24x2_& operator= (const unsigned int &src);
inline ae_int24x2_ (const int &src);
inline ae_int24x2_& operator= (const int &src);
inline CSTUB_EXPLICIT ae_int24x2_ (const ae_p24x2s &src);
inline ae_int24x2_& operator= (const ae_p24x2s &src);
inline CSTUB_EXPLICIT ae_int24x2_ (const ae_p24x2f &src);
inline ae_int24x2_& operator= (const ae_p24x2f &src);
inline CSTUB_EXPLICIT ae_int24x2_ (const ae_p16x2s &src);
inline ae_int24x2_& operator= (const ae_p16x2s &src);
inline CSTUB_EXPLICIT ae_int24x2_ (const ae_p24s &src);
inline ae_int24x2_& operator= (const ae_p24s &src);
inline CSTUB_EXPLICIT ae_int24x2_ (const ae_p24f &src);
inline ae_int24x2_& operator= (const ae_p24f &src);
inline CSTUB_EXPLICIT ae_int24x2_ (const ae_p16s &src);
inline ae_int24x2_& operator= (const ae_p16s &src);
inline CSTUB_EXPLICIT ae_int24x2_ (const ae_int24 &src);
inline ae_int24x2_& operator= (const ae_int24 &src);
inline CSTUB_EXPLICIT ae_int24x2_ (const ae_f24x2 &src);
inline ae_int24x2_& operator= (const ae_f24x2 &src);
inline CSTUB_EXPLICIT ae_int24x2_ (const ae_f24 &src);
inline ae_int24x2_& operator= (const ae_f24 &src);
template <typename T_> inline operator T_() const;
inline operator ae_p24x2s() const;
inline operator ae_p24x2f() const;
inline operator ae_p16x2s() const;
inline operator ae_p24s() const;
inline operator ae_p24f() const;
inline operator ae_p16s() const;
inline operator ae_int32x2() const;
inline operator ae_f32x2() const;
inline operator ae_f32() const;
inline operator ae_int24() const;
inline operator ae_f24x2() const;
inline operator ae_f24() const;
} CSTUB_GCC_ALIGN(8);
}

namespace ae_int24_space {
CSTUB_MSC_ALIGN(4) class ae_int24_ {
public:
unsigned int _[1];
ae_int24_ () {}
inline ae_int24_& operator= (const ae_int24_ &src);
inline ae_int24_ (const short &src);
inline ae_int24_& operator= (const short &src);
inline ae_int24_ (const int &src);
inline ae_int24_& operator= (const int &src);
inline CSTUB_EXPLICIT ae_int24_ (const ae_int16 &src);
inline ae_int24_& operator= (const ae_int16 &src);
inline CSTUB_EXPLICIT ae_int24_ (const ae_int24x2 &src);
inline ae_int24_& operator= (const ae_int24x2 &src);
inline CSTUB_EXPLICIT ae_int24_ (const ae_f24x2 &src);
inline ae_int24_& operator= (const ae_f24x2 &src);
inline CSTUB_EXPLICIT ae_int24_ (const ae_f24 &src);
inline ae_int24_& operator= (const ae_f24 &src);
template <typename T_> inline operator T_() const;
inline operator ae_int16() const;
inline operator ae_int32x2() const;
inline operator ae_int32() const;
inline operator ae_f32x2() const;
inline operator ae_f32() const;
inline operator ae_int24x2() const;
inline operator ae_f24x2() const;
inline operator ae_f24() const;
inline operator int () const;
} CSTUB_GCC_ALIGN(4);
}

namespace ae_f24x2_space {
CSTUB_MSC_ALIGN(8) class ae_f24x2_ {
public:
unsigned int _[2];
ae_f24x2_ () {}
inline ae_f24x2_& operator= (const ae_f24x2_ &src);
inline ae_f24x2_ (const short &src);
inline ae_f24x2_& operator= (const short &src);
inline ae_f24x2_ (const unsigned int &src);
inline ae_f24x2_& operator= (const unsigned int &src);
inline ae_f24x2_ (const int &src);
inline ae_f24x2_& operator= (const int &src);
inline CSTUB_EXPLICIT ae_f24x2_ (const ae_p24x2s &src);
inline ae_f24x2_& operator= (const ae_p24x2s &src);
inline CSTUB_EXPLICIT ae_f24x2_ (const ae_p24x2f &src);
inline ae_f24x2_& operator= (const ae_p24x2f &src);
inline CSTUB_EXPLICIT ae_f24x2_ (const ae_p16x2s &src);
inline ae_f24x2_& operator= (const ae_p16x2s &src);
inline CSTUB_EXPLICIT ae_f24x2_ (const ae_p24s &src);
inline ae_f24x2_& operator= (const ae_p24s &src);
inline CSTUB_EXPLICIT ae_f24x2_ (const ae_p24f &src);
inline ae_f24x2_& operator= (const ae_p24f &src);
inline CSTUB_EXPLICIT ae_f24x2_ (const ae_p16s &src);
inline ae_f24x2_& operator= (const ae_p16s &src);
inline CSTUB_EXPLICIT ae_f24x2_ (const ae_int24x2 &src);
inline ae_f24x2_& operator= (const ae_int24x2 &src);
inline CSTUB_EXPLICIT ae_f24x2_ (const ae_int24 &src);
inline ae_f24x2_& operator= (const ae_int24 &src);
inline CSTUB_EXPLICIT ae_f24x2_ (const ae_f24 &src);
inline ae_f24x2_& operator= (const ae_f24 &src);
template <typename T_> inline operator T_() const;
inline operator ae_p24x2s() const;
inline operator ae_p24x2f() const;
inline operator ae_p16x2s() const;
inline operator ae_p24s() const;
inline operator ae_p24f() const;
inline operator ae_p16s() const;
inline operator ae_int32x2() const;
inline operator ae_int32() const;
inline operator ae_f32x2() const;
inline operator ae_int24x2() const;
inline operator ae_int24() const;
inline operator ae_f24() const;
} CSTUB_GCC_ALIGN(8);
}

namespace ae_f24_space {
CSTUB_MSC_ALIGN(4) class ae_f24_ {
public:
unsigned int _[1];
ae_f24_ () {}
inline ae_f24_& operator= (const ae_f24_ &src);
inline ae_f24_ (const short &src);
inline ae_f24_& operator= (const short &src);
inline ae_f24_ (const int &src);
inline ae_f24_& operator= (const int &src);
inline CSTUB_EXPLICIT ae_f24_ (const ae_f16 &src);
inline ae_f24_& operator= (const ae_f16 &src);
inline CSTUB_EXPLICIT ae_f24_ (const ae_int24x2 &src);
inline ae_f24_& operator= (const ae_int24x2 &src);
inline CSTUB_EXPLICIT ae_f24_ (const ae_int24 &src);
inline ae_f24_& operator= (const ae_int24 &src);
inline CSTUB_EXPLICIT ae_f24_ (const ae_f24x2 &src);
inline ae_f24_& operator= (const ae_f24x2 &src);
template <typename T_> inline operator T_() const;
inline operator ae_f16() const;
inline operator ae_int32x2() const;
inline operator ae_int32() const;
inline operator ae_f32x2() const;
inline operator ae_f32() const;
inline operator ae_int24x2() const;
inline operator ae_int24() const;
inline operator ae_f24x2() const;
inline operator int () const;
inline operator __int64 () const;
} CSTUB_GCC_ALIGN(4);
}

namespace ae_int64_space {
CSTUB_MSC_ALIGN(8) class ae_int64_ {
public:
unsigned int _[2];
ae_int64_ () {}
inline ae_int64_& operator= (const ae_int64_ &src);
inline ae_int64_ (const short &src);
inline ae_int64_& operator= (const short &src);
inline ae_int64_ (const int &src);
inline ae_int64_& operator= (const int &src);
inline ae_int64_ (const unsigned long long &src);
inline ae_int64_& operator= (const unsigned long long &src);
inline ae_int64_ (const long long &src);
inline ae_int64_& operator= (const long long &src);
inline CSTUB_EXPLICIT ae_int64_ (const ae_int16 &src);
inline ae_int64_& operator= (const ae_int16 &src);
inline CSTUB_EXPLICIT ae_int64_ (const ae_int32 &src);
inline ae_int64_& operator= (const ae_int32 &src);
inline CSTUB_EXPLICIT ae_int64_ (const ae_f64 &src);
inline ae_int64_& operator= (const ae_f64 &src);
inline CSTUB_EXPLICIT ae_int64_ (const ae_q56s &src);
inline ae_int64_& operator= (const ae_q56s &src);
template <typename T_> inline operator T_() const;
inline operator ae_f64() const;
inline operator ae_q56s() const;
inline operator __int64 () const;
} CSTUB_GCC_ALIGN(8);
}

namespace ae_f64_space {
CSTUB_MSC_ALIGN(8) class ae_f64_ {
public:
unsigned int _[2];
ae_f64_ () {}
inline ae_f64_& operator= (const ae_f64_ &src);
inline ae_f64_ (const short &src);
inline ae_f64_& operator= (const short &src);
inline ae_f64_ (const int &src);
inline ae_f64_& operator= (const int &src);
inline ae_f64_ (const long long &src);
inline ae_f64_& operator= (const long long &src);
inline CSTUB_EXPLICIT ae_f64_ (const ae_int64 &src);
inline ae_f64_& operator= (const ae_int64 &src);
inline CSTUB_EXPLICIT ae_f64_ (const ae_q56s &src);
inline ae_f64_& operator= (const ae_q56s &src);
template <typename T_> inline operator T_() const;
inline operator ae_int64() const;
inline operator ae_q56s() const;
} CSTUB_GCC_ALIGN(8);
}

namespace ae_q56s_space {
CSTUB_MSC_ALIGN(8) class ae_q56s_ {
public:
unsigned int _[2];
ae_q56s_ () {}
inline ae_q56s_& operator= (const ae_q56s_ &src);
inline CSTUB_EXPLICIT ae_q56s_ (const ae_int64 &src);
inline ae_q56s_& operator= (const ae_int64 &src);
inline CSTUB_EXPLICIT ae_q56s_ (const ae_f64 &src);
inline ae_q56s_& operator= (const ae_f64 &src);
inline CSTUB_EXPLICIT ae_q56s_ (const ae_q32s &src);
inline ae_q56s_& operator= (const ae_q32s &src);
template <typename T_> inline operator T_() const;
inline operator ae_int64() const;
inline operator ae_f64() const;
inline operator ae_q32s() const;
} CSTUB_GCC_ALIGN(8);
}

namespace ae_q32s_space {
CSTUB_MSC_ALIGN(4) class ae_q32s_ {
public:
unsigned int _[1];
ae_q32s_ () {}
inline ae_q32s_& operator= (const ae_q32s_ &src);
inline CSTUB_EXPLICIT ae_q32s_ (const ae_q56s &src);
inline ae_q32s_& operator= (const ae_q56s &src);
template <typename T_> inline operator T_() const;
inline operator ae_q56s() const;
} CSTUB_GCC_ALIGN(4);
}

namespace ae_valign_space {
CSTUB_MSC_ALIGN(8) class ae_valign_ {
public:
unsigned int _[2];
ae_valign_ () {}
inline ae_valign_& operator= (const ae_valign_ &src);
template <typename T_> inline operator T_() const;
} CSTUB_GCC_ALIGN(8);
}

namespace ae_int32x4_space {
CSTUB_MSC_ALIGN(8) class ae_int32x4_ {
public:
unsigned int _[4];
ae_int32x4_ () {}
inline ae_int32x4_& operator= (const ae_int32x4_ &src);
inline ae_int32x4_ (const unsigned int &src);
inline ae_int32x4_& operator= (const unsigned int &src);
inline ae_int32x4_ (const int &src);
inline ae_int32x4_& operator= (const int &src);
inline CSTUB_EXPLICIT ae_int32x4_ (const ae_int16x4 &src);
inline ae_int32x4_& operator= (const ae_int16x4 &src);
inline CSTUB_EXPLICIT ae_int32x4_ (const ae_int32 &src);
inline ae_int32x4_& operator= (const ae_int32 &src);
template <typename T_> inline operator T_() const;
inline operator ae_int16x4() const;
inline operator int () const;
inline operator unsigned int () const;
} CSTUB_GCC_ALIGN(8);
}

namespace ae_f32x4_space {
CSTUB_MSC_ALIGN(8) class ae_f32x4_ {
public:
unsigned int _[4];
ae_f32x4_ () {}
inline ae_f32x4_& operator= (const ae_f32x4_ &src);
inline ae_f32x4_ (const unsigned int &src);
inline ae_f32x4_& operator= (const unsigned int &src);
inline ae_f32x4_ (const int &src);
inline ae_f32x4_& operator= (const int &src);
inline CSTUB_EXPLICIT ae_f32x4_ (const ae_f32 &src);
inline ae_f32x4_& operator= (const ae_f32 &src);
template <typename T_> inline operator T_() const;
inline operator int () const;
inline operator unsigned int () const;
} CSTUB_GCC_ALIGN(8);
}

namespace ae_int32u_space {
CSTUB_MSC_ALIGN(4) class ae_int32u_ {
public:
unsigned int _[1];
ae_int32u_ () {}
inline ae_int32u_& operator= (const ae_int32u_ &src);
inline ae_int32u_ (const unsigned int &src);
inline ae_int32u_& operator= (const unsigned int &src);
inline CSTUB_EXPLICIT ae_int32u_ (const ae_int16 &src);
inline ae_int32u_& operator= (const ae_int16 &src);
inline CSTUB_EXPLICIT ae_int32u_ (const ae_int32x2 &src);
inline ae_int32u_& operator= (const ae_int32x2 &src);
inline CSTUB_EXPLICIT ae_int32u_ (const ae_int32 &src);
inline ae_int32u_& operator= (const ae_int32 &src);
inline CSTUB_EXPLICIT ae_int32u_ (const ae_int16u &src);
inline ae_int32u_& operator= (const ae_int16u &src);
template <typename T_> inline operator T_() const;
inline operator ae_int16() const;
inline operator ae_int32x2() const;
inline operator ae_int32() const;
inline operator ae_int16u() const;
inline operator unsigned int () const;
} CSTUB_GCC_ALIGN(4);
}

namespace ae_int16u_space {
CSTUB_MSC_ALIGN(2) class ae_int16u_ {
public:
unsigned short  _[1];
ae_int16u_ () {}
inline ae_int16u_& operator= (const ae_int16u_ &src);
inline ae_int16u_ (const unsigned short &src);
inline ae_int16u_& operator= (const unsigned short &src);
inline CSTUB_EXPLICIT ae_int16u_ (const ae_int16 &src);
inline ae_int16u_& operator= (const ae_int16 &src);
inline CSTUB_EXPLICIT ae_int16u_ (const ae_int32 &src);
inline ae_int16u_& operator= (const ae_int32 &src);
inline CSTUB_EXPLICIT ae_int16u_ (const ae_int32u &src);
inline ae_int16u_& operator= (const ae_int32u &src);
template <typename T_> inline operator T_() const;
inline operator ae_int16() const;
inline operator ae_int32() const;
inline operator ae_int32u() const;
inline operator unsigned short () const;
} CSTUB_GCC_ALIGN(2);
}

namespace ae_int64x2_space {
CSTUB_MSC_ALIGN(8) class ae_int64x2_ {
public:
unsigned int _[4];
ae_int64x2_ () {}
inline ae_int64x2_& operator= (const ae_int64x2_ &src);
inline CSTUB_EXPLICIT ae_int64x2_ (const ae_int32x2 &src);
inline ae_int64x2_& operator= (const ae_int32x2 &src);
template <typename T_> inline operator T_() const;
} CSTUB_GCC_ALIGN(8);
}

namespace fr32_space {
CSTUB_MSC_ALIGN(4) class fr32_ {
public:
unsigned int _[1];
fr32_ () {}
inline fr32_& operator= (const fr32_ &src);
inline fr32_ (const unsigned int &src);
inline fr32_& operator= (const unsigned int &src);
inline fr32_ (const int &src);
inline fr32_& operator= (const int &src);
template <typename T_> inline operator T_() const;
inline operator int () const;
inline operator unsigned int () const;
} CSTUB_GCC_ALIGN(4);
}

namespace vr64_space {
CSTUB_MSC_ALIGN(8) class vr64_ {
public:
unsigned int _[2];
vr64_ () {}
inline vr64_& operator= (const vr64_ &src);
template <typename T_> inline operator T_() const;
} CSTUB_GCC_ALIGN(8);
}

namespace cr64_space {
CSTUB_MSC_ALIGN(8) class cr64_ {
public:
unsigned int _[2];
cr64_ () {}
inline cr64_& operator= (const cr64_ &src);
template <typename T_> inline operator T_() const;
} CSTUB_GCC_ALIGN(8);
}

namespace mir18_space {
CSTUB_MSC_ALIGN(4) class mir18_ {
public:
unsigned int _[1];
mir18_ () {}
inline mir18_& operator= (const mir18_ &src);
template <typename T_> inline operator T_() const;
} CSTUB_GCC_ALIGN(4);
}

namespace ulsr32_space {
CSTUB_MSC_ALIGN(4) class ulsr32_ {
public:
unsigned int _[1];
ulsr32_ () {}
inline ulsr32_& operator= (const ulsr32_ &src);
template <typename T_> inline operator T_() const;
} CSTUB_GCC_ALIGN(4);
}

namespace atbool_space {
CSTUB_MSC_ALIGN(1) class atbool_ {
public:
unsigned char  _[1];
atbool_ () {}
inline atbool_& operator= (const atbool_ &src);
inline atbool_ (const unsigned int &src);
inline atbool_& operator= (const unsigned int &src);
inline atbool_ (const int &src);
inline atbool_& operator= (const int &src);
template <typename T_> inline operator T_() const;
} CSTUB_GCC_ALIGN(1);
}

/* Proto declarations */
CSTUB_EXTERN ae_valign CSTUB_(_TIE_xt_hifi2_AE_ZALIGN64)(void);
CSTUB_EXTERN ae_valign CSTUB_(_TIE_xt_hifi2_AE_LALIGN64_I)(const ae_valign * a /*in*/, immediate i64 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SALIGN64_I)(const ae_valign& su /*in*/, const ae_valign * a /*in*/, immediate i64 /*in*/);
CSTUB_EXTERN ae_valign CSTUB_(_TIE_xt_hifi2_AE_MOVALIGN)(const ae_valign& v /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_xt_hifi2_AE_ADDBRBA32)(const unsigned int ab /*in*/, const unsigned int ai /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_xt_hifi2_AE_SHA32)(const unsigned int ai /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_VLDSHT)(const unsigned int ar_t /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_density_NOP_N)(void);
CSTUB_EXTERN void CSTUB_(_TIE_xt_core_NOP)(void);
CSTUB_EXTERN void CSTUB_(_TIE_xt_core_DEPBITS)(unsigned int& art /*inout*/, const unsigned int ars /*in*/, immediate low_depbits /*in*/, immediate lngth_depbits /*in*/);
CSTUB_EXTERN xtbool CSTUB_(_TIE_xt_booleans_XORB)(const xtbool bs /*in*/, const xtbool bt /*in*/);
CSTUB_EXTERN xtbool CSTUB_(_TIE_xt_booleans_ORBC)(const xtbool bs /*in*/, const xtbool bt /*in*/);
CSTUB_EXTERN xtbool CSTUB_(_TIE_xt_booleans_ORB)(const xtbool bs /*in*/, const xtbool bt /*in*/);
CSTUB_EXTERN xtbool CSTUB_(_TIE_xt_booleans_ANDBC)(const xtbool bs /*in*/, const xtbool bt /*in*/);
CSTUB_EXTERN xtbool CSTUB_(_TIE_xt_booleans_ANDB)(const xtbool bs /*in*/, const xtbool bt /*in*/);
CSTUB_EXTERN xtbool CSTUB_(_TIE_xt_booleans_ALL4)(const xtbool4 bs4 /*in*/);
CSTUB_EXTERN xtbool CSTUB_(_TIE_xt_booleans_ANY4)(const xtbool4 bs4 /*in*/);
CSTUB_EXTERN xtbool CSTUB_(_TIE_xt_booleans_ALL8)(const xtbool8 bs8 /*in*/);
CSTUB_EXTERN xtbool CSTUB_(_TIE_xt_booleans_ANY8)(const xtbool8 bs8 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_booleans_MOVT)(unsigned int& arr /*inout*/, const unsigned int ars /*in*/, const xtbool bt /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_booleans_MOVF)(unsigned int& arr /*inout*/, const unsigned int ars /*in*/, const xtbool bt /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_xt_ioports_READ_IMPWIRE)(void);
CSTUB_EXTERN void CSTUB_(_TIE_xt_ioports_SETB_EXPSTATE)(immediate bitindex /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_ioports_CLRB_EXPSTATE)(immediate bitindex /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_ioports_WRMSK_EXPSTATE)(const unsigned int art /*in*/, const unsigned int ars /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_density_L32I_N)(const int * p /*in*/, immediate i /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_density_S32I_N)(const int t /*in*/, const int * p /*in*/, immediate i /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_density_ADD_N)(const int s /*in*/, const int t /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_density_ADDI_N)(const int s /*in*/, immediate i /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_density_MOV_N)(const int s /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_density_MOVI_N)(immediate i /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_xt_core_uint32_loadi)(const unsigned int * p /*in*/, immediate o /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_core_uint32_storei)(const unsigned int c /*in*/, const unsigned int * p /*in*/, immediate o /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_xt_core_uint32_move)(const unsigned int b /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_core_ADDI)(const int s /*in*/, immediate i /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_core_OR)(const int s /*in*/, const int t /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_core_L32I)(const int * p /*in*/, immediate i /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_core_S32I)(const int r /*in*/, const int * p /*in*/, immediate i /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_core_S32NB)(const int r /*in*/, const int * p /*in*/, immediate i /*in*/);
CSTUB_EXTERN unsigned char CSTUB_(_TIE_xt_core_L8UI)(const unsigned char * p /*in*/, immediate i /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_core_S8I)(const signed char r /*in*/, const signed char * p /*in*/, immediate i /*in*/);
CSTUB_EXTERN unsigned short CSTUB_(_TIE_xt_core_L16UI)(const unsigned short * p /*in*/, immediate i /*in*/);
CSTUB_EXTERN short CSTUB_(_TIE_xt_core_L16SI)(const short * p /*in*/, immediate i /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_core_S16I)(const short r /*in*/, const short * p /*in*/, immediate i /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_core_ADDMI)(const int s /*in*/, immediate i /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_core_ADD)(const int s /*in*/, const int t /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_core_ADDX2)(const int s /*in*/, const int t /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_core_ADDX4)(const int s /*in*/, const int t /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_core_ADDX8)(const int s /*in*/, const int t /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_core_SUB)(const int s /*in*/, const int t /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_core_SUBX2)(const int s /*in*/, const int t /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_core_SUBX4)(const int s /*in*/, const int t /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_core_SUBX8)(const int s /*in*/, const int t /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_core_SALT)(const int s /*in*/, const int t /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_xt_core_SALTU)(const unsigned int s /*in*/, const unsigned int t /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_core_AND)(const int s /*in*/, const int t /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_core_XOR)(const int s /*in*/, const int t /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_xt_core_EXTUI)(const unsigned int t /*in*/, immediate i /*in*/, immediate o /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_core_MOVI)(immediate i /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_core_MOVEQZ)(int& r /*inout*/, const int s /*in*/, const int t /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_core_MOVNEZ)(int& r /*inout*/, const int s /*in*/, const int t /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_core_MOVLTZ)(int& r /*inout*/, const int s /*in*/, const int t /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_core_MOVGEZ)(int& r /*inout*/, const int s /*in*/, const int t /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_core_NEG)(const int t /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_core_ABS)(const int t /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_core_SSR)(const int s /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_core_SSL)(const int s /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_core_SSA8L)(const int s /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_core_SSA8B)(const int s /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_core_SSAI)(immediate i /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_core_SLL)(const int s /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_core_SRC)(const int s /*in*/, const int t /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_xt_core_SRL)(const unsigned int t /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_core_SRA)(const int t /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_core_SLLI)(const int s /*in*/, immediate i /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_core_SRAI)(const int t /*in*/, immediate i /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_xt_core_SRLI)(const unsigned int t /*in*/, immediate i /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_core_SSAI_SRC)(const int src1 /*in*/, const int src2 /*in*/, immediate amount /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_core_SSR_SRC)(const int src1 /*in*/, const int src2 /*in*/, const int amount /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_core_SSR_SRA)(const int src /*in*/, const int amount /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_xt_core_SSR_SRL)(const unsigned int src /*in*/, const int amount /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_core_SSL_SLL)(const int src /*in*/, const int amount /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_misc_CLAMPS)(const int s /*in*/, immediate i /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_misc_MIN)(const int s /*in*/, const int t /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_misc_MAX)(const int s /*in*/, const int t /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_xt_misc_MINU)(const unsigned int s /*in*/, const unsigned int t /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_xt_misc_MAXU)(const unsigned int s /*in*/, const unsigned int t /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_misc_NSA)(const int s /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_xt_misc_NSAU)(const unsigned int s /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_misc_SEXT)(const int s /*in*/, immediate i /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_xt_hifi2_RUR_AE_OVF_SAR)(void);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_WUR_AE_OVF_SAR)(const unsigned int v /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_xt_hifi2_RUR_AE_BITHEAD)(void);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_WUR_AE_BITHEAD)(const unsigned int v /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_xt_hifi2_RUR_AE_TS_FTS_BU_BP)(void);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_WUR_AE_TS_FTS_BU_BP)(const unsigned int v /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_xt_hifi2_RUR_AE_CW_SD_NO)(void);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_WUR_AE_CW_SD_NO)(const unsigned int v /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_xt_hifi2_RUR_AE_CBEGIN0)(void);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_WUR_AE_CBEGIN0)(const unsigned int v /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_xt_hifi2_RUR_AE_CEND0)(void);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_WUR_AE_CEND0)(const unsigned int v /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_xt_hifi2_RAE_OVERFLOW)(void);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_WAE_OVERFLOW)(const unsigned int a /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_xt_hifi2_RUR_AE_OVERFLOW)(void);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_WUR_AE_OVERFLOW)(const unsigned int a /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_RAE_SAR)(void);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_WAE_SAR)(const int a /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_RUR_AE_SAR)(void);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_WUR_AE_SAR)(const int a /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_xt_hifi2_RAE_BITPTR)(void);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_WAE_BITPTR)(const unsigned int a /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_xt_hifi2_RUR_AE_BITPTR)(void);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_WUR_AE_BITPTR)(const unsigned int a /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_xt_hifi2_RAE_BITSUSED)(void);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_WAE_BITSUSED)(const unsigned int a /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_xt_hifi2_RUR_AE_BITSUSED)(void);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_WUR_AE_BITSUSED)(const unsigned int a /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_xt_hifi2_RAE_TABLESIZE)(void);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_WAE_TABLESIZE)(const unsigned int a /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_xt_hifi2_RUR_AE_TABLESIZE)(void);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_WUR_AE_TABLESIZE)(const unsigned int a /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_xt_hifi2_RAE_FIRST_TS)(void);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_WAE_FIRST_TS)(const unsigned int a /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_xt_hifi2_RUR_AE_FIRST_TS)(void);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_WUR_AE_FIRST_TS)(const unsigned int a /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_xt_hifi2_RAE_NEXTOFFSET)(void);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_WAE_NEXTOFFSET)(const unsigned int a /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_xt_hifi2_RUR_AE_NEXTOFFSET)(void);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_WUR_AE_NEXTOFFSET)(const unsigned int a /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_xt_hifi2_RAE_SEARCHDONE)(void);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_WAE_SEARCHDONE)(const unsigned int a /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_xt_hifi2_RUR_AE_SEARCHDONE)(void);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_WUR_AE_SEARCHDONE)(const unsigned int a /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_xt_hifi2_RAE_CWRAP)(void);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_WAE_CWRAP)(const unsigned int a /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_xt_hifi2_RUR_AE_CWRAP)(void);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_WUR_AE_CWRAP)(const unsigned int a /*in*/);
CSTUB_EXTERN void * CSTUB_(_TIE_xt_hifi2_AE_GETCBEGIN0)(void);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SETCBEGIN0)(const void * a /*in*/);
CSTUB_EXTERN void * CSTUB_(_TIE_xt_hifi2_AE_GETCEND0)(void);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SETCEND0)(const void * a /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_L16M_XC)(ae_int32x2& d /*out*/, const ae_p16s ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_LP16F_C)(ae_p24x2s& d /*out*/, const ae_p16s ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_L16M_I)(const ae_p16s * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_LP16F_I)(const ae_p16s * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN ae_p16s CSTUB_(_TIE_xt_hifi2_ae_p16s_loadi)(const ae_p16s * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_L16M_IU)(ae_int32x2& d /*out*/, const ae_p16s ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_LP16F_IU)(ae_p24x2s& d /*out*/, const ae_p16s ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_p16s_loadiu)(ae_p16s& d /*out*/, const ae_p16s ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_L16M_X)(const ae_p16s * a /*in*/, const int off /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_LP16F_X)(const ae_p16s * a /*in*/, const int off /*in*/);
CSTUB_EXTERN ae_p16s CSTUB_(_TIE_xt_hifi2_ae_p16s_loadx)(const ae_p16s * a /*in*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_L16M_XU)(ae_int32x2& d /*out*/, const ae_p16s ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_LP16F_XU)(ae_p24x2s& d /*out*/, const ae_p16s ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_p16s_loadxu)(ae_p16s& d /*out*/, const ae_p16s ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_L16_XC)(ae_int16x4& d /*out*/, const ae_int16 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_L16_I)(const ae_int16 * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN ae_int16 CSTUB_(_TIE_xt_hifi2_ae_int16_loadi)(const ae_int16 * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN ae_f16 CSTUB_(_TIE_xt_hifi2_ae_f16_loadi)(const ae_f16 * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_L16_IP)(ae_int16x4& d /*out*/, const ae_int16 ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int16_loadip)(ae_int16& d /*out*/, const ae_int16 ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_f16_loadip)(ae_f16& d /*out*/, const ae_f16 ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_L16_X)(const ae_int16 * a /*in*/, const int off /*in*/);
CSTUB_EXTERN ae_int16 CSTUB_(_TIE_xt_hifi2_ae_int16_loadx)(const ae_int16 * a /*in*/, const int off /*in*/);
CSTUB_EXTERN ae_f16 CSTUB_(_TIE_xt_hifi2_ae_f16_loadx)(const ae_f16 * a /*in*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_L16_XP)(ae_int16x4& d /*out*/, const ae_int16 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int16_loadxp)(ae_int16& d /*out*/, const ae_int16 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_f16_loadxp)(ae_f16& d /*out*/, const ae_f16 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_L32F24_XC)(ae_f24x2& d /*out*/, const ae_f24 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_LP24F_C)(ae_p24x2s& d /*out*/, const ae_p24f ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_AE_L32F24_I)(const ae_f24 * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_LP24F_I)(const ae_p24f * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN ae_f24 CSTUB_(_TIE_xt_hifi2_ae_f24_loadi)(const ae_f24 * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN ae_p24f CSTUB_(_TIE_xt_hifi2_ae_p24f_loadi)(const ae_p24f * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_L32F24_IP)(ae_f24x2& d /*out*/, const ae_f24 ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_LP24F_IU)(ae_p24x2s& d /*out*/, const ae_p24f ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_f24_loadip)(ae_f24& d /*out*/, const ae_f24 ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_p24f_loadip)(ae_p24f& d /*out*/, const ae_p24f ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_AE_L32F24_X)(const ae_f24 * a /*in*/, const int off /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_LP24F_X)(const ae_p24f * a /*in*/, const int off /*in*/);
CSTUB_EXTERN ae_f24 CSTUB_(_TIE_xt_hifi2_ae_f24_loadx)(const ae_f24 * a /*in*/, const int off /*in*/);
CSTUB_EXTERN ae_p24f CSTUB_(_TIE_xt_hifi2_ae_p24f_loadx)(const ae_p24f * a /*in*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_L32F24_XP)(ae_f24x2& d /*out*/, const ae_f24 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_LP24F_XU)(ae_p24x2s& d /*out*/, const ae_p24f ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_f24_loadxp)(ae_f24& d /*out*/, const ae_f24 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_p24f_loadxp)(ae_p24f& d /*out*/, const ae_p24f ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_L32_XC)(ae_int32x2& d /*out*/, const ae_int32 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_LP24_C)(ae_p24x2s& d /*out*/, const ae_p24s ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_L32_I)(const ae_int32 * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_ae_int32_loadi)(const ae_int32 * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN ae_f32 CSTUB_(_TIE_xt_hifi2_ae_f32_loadi)(const ae_f32 * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_LP24_I)(const ae_p24s * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN ae_int24 CSTUB_(_TIE_xt_hifi2_ae_int24_loadi)(const ae_int24 * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN ae_p24s CSTUB_(_TIE_xt_hifi2_ae_p24s_loadi)(const ae_p24s * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_L32_IP)(ae_int32x2& d /*out*/, const ae_int32 ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int32_loadip)(ae_int32& d /*out*/, const ae_int32 ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_f32_loadip)(ae_f32& d /*out*/, const ae_f32 ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_LP24_IU)(ae_p24x2s& d /*out*/, const ae_p24s ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int24_loadip)(ae_int24& d /*out*/, const ae_int24 ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_p24s_loadip)(ae_p24s& d /*out*/, const ae_p24s ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_L32_X)(const ae_int32 * a /*in*/, const int off /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_ae_int32_loadx)(const ae_int32 * a /*in*/, const int off /*in*/);
CSTUB_EXTERN ae_f32 CSTUB_(_TIE_xt_hifi2_ae_f32_loadx)(const ae_f32 * a /*in*/, const int off /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_LP24_X)(const ae_p24s * a /*in*/, const int off /*in*/);
CSTUB_EXTERN ae_int24 CSTUB_(_TIE_xt_hifi2_ae_int24_loadx)(const ae_int24 * a /*in*/, const int off /*in*/);
CSTUB_EXTERN ae_p24s CSTUB_(_TIE_xt_hifi2_ae_p24s_loadx)(const ae_p24s * a /*in*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_L32_XP)(ae_int32x2& d /*out*/, const ae_int32 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int32_loadxp)(ae_int32& d /*out*/, const ae_int32 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_f32_loadxp)(ae_f32& d /*out*/, const ae_f32 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_LP24_XU)(ae_p24x2s& d /*out*/, const ae_p24s ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int24_loadxp)(ae_int24& d /*out*/, const ae_int24 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_p24s_loadxp)(ae_p24s& d /*out*/, const ae_p24s ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_L32M_XC)(ae_int64& d /*out*/, const ae_q32s ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_LQ32F_C)(ae_q56s& d /*out*/, const ae_q32s ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_L32M_I)(const ae_q32s * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_LQ32F_I)(const ae_q32s * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN ae_q32s CSTUB_(_TIE_xt_hifi2_ae_q32s_loadi)(const ae_q32s * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_L32M_IU)(ae_int64& d /*out*/, const ae_q32s ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_LQ32F_IU)(ae_q56s& d /*out*/, const ae_q32s ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_q32s_loadiu)(ae_q32s& d /*out*/, const ae_q32s ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_L32M_X)(const ae_q32s * a /*in*/, const int off /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_LQ32F_X)(const ae_q32s * a /*in*/, const int off /*in*/);
CSTUB_EXTERN ae_q32s CSTUB_(_TIE_xt_hifi2_ae_q32s_loadx)(const ae_q32s * a /*in*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_L32M_XU)(ae_int64& d /*out*/, const ae_q32s ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_LQ32F_XU)(ae_q56s& d /*out*/, const ae_q32s ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_q32s_loadxu)(ae_q32s& d /*out*/, const ae_q32s ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_L16X2M_XC)(ae_int32x2& d /*out*/, const ae_p16x2s ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_LP16X2F_C)(ae_p24x2s& d /*out*/, const ae_p16x2s ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_L16X2M_I)(const ae_p16x2s * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_LP16X2F_I)(const ae_p16x2s * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN ae_p16x2s CSTUB_(_TIE_xt_hifi2_ae_p16x2s_loadi)(const ae_p16x2s * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_L16X2M_IU)(ae_int32x2& d /*out*/, const ae_p16x2s ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_LP16X2F_IU)(ae_p24x2s& d /*out*/, const ae_p16x2s ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_p16x2s_loadiu)(ae_p16x2s& d /*out*/, const ae_p16x2s ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_L16X2M_X)(const ae_p16x2s * a /*in*/, const int off /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_LP16X2F_X)(const ae_p16x2s * a /*in*/, const int off /*in*/);
CSTUB_EXTERN ae_p16x2s CSTUB_(_TIE_xt_hifi2_ae_p16x2s_loadx)(const ae_p16x2s * a /*in*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_L16X2M_XU)(ae_int32x2& d /*out*/, const ae_p16x2s ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_LP16X2F_XU)(ae_p24x2s& d /*out*/, const ae_p16x2s ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_p16x2s_loadxu)(ae_p16x2s& d /*out*/, const ae_p16x2s ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_L32X2F24_XC)(ae_f24x2& d /*out*/, const ae_f24x2 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_LP24X2F_C)(ae_p24x2s& d /*out*/, const ae_p24x2f ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_AE_L32X2F24_I)(const ae_f24x2 * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_LP24X2F_I)(const ae_p24x2f * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_ae_f24x2_loadi)(const ae_f24x2 * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN ae_p24x2f CSTUB_(_TIE_xt_hifi2_ae_p24x2f_loadi)(const ae_p24x2f * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_L32X2F24_IP)(ae_f24x2& d /*out*/, const ae_f24x2 ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_LP24X2F_IU)(ae_p24x2s& d /*out*/, const ae_p24x2f ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_f24x2_loadip)(ae_f24x2& d /*out*/, const ae_f24x2 ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_p24x2f_loadip)(ae_p24x2f& d /*out*/, const ae_p24x2f ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_L32X2F24_RIP)(ae_f24x2& d /*out*/, const ae_f24x2 ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_L32X2F24_RIC)(ae_f24x2& d /*out*/, const ae_f24x2 ** a /*inout*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_AE_L32X2F24_X)(const ae_f24x2 * a /*in*/, const int off /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_LP24X2F_X)(const ae_p24x2f * a /*in*/, const int off /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_ae_f24x2_loadx)(const ae_f24x2 * a /*in*/, const int off /*in*/);
CSTUB_EXTERN ae_p24x2f CSTUB_(_TIE_xt_hifi2_ae_p24x2f_loadx)(const ae_p24x2f * a /*in*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_L32X2F24_XP)(ae_f24x2& d /*out*/, const ae_f24x2 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_LP24X2F_XU)(ae_p24x2s& d /*out*/, const ae_p24x2f ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_f24x2_loadxp)(ae_f24x2& d /*out*/, const ae_f24x2 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_p24x2f_loadxp)(ae_p24x2f& d /*out*/, const ae_p24x2f ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_L32X2_XC)(ae_int32x2& d /*out*/, const ae_int32x2 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_LP24X2_C)(ae_p24x2s& d /*out*/, const ae_p24x2s ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_L32X2_I)(const ae_int32x2 * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_ae_int32x2_loadi)(const ae_int32x2 * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_ae_f32x2_loadi)(const ae_f32x2 * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_LP24X2_I)(const ae_p24x2s * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_ae_int24x2_loadi)(const ae_int24x2 * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_ae_p24x2s_loadi)(const ae_p24x2s * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_L32X2_IP)(ae_int32x2& d /*out*/, const ae_int32x2 ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int32x2_loadip)(ae_int32x2& d /*out*/, const ae_int32x2 ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_f32x2_loadip)(ae_f32x2& d /*out*/, const ae_f32x2 ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_LP24X2_IU)(ae_p24x2s& d /*out*/, const ae_p24x2s ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int24x2_loadip)(ae_int24x2& d /*out*/, const ae_int24x2 ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_p24x2s_loadip)(ae_p24x2s& d /*out*/, const ae_p24x2s ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_L32X2_RIP)(ae_int32x2& d /*out*/, const ae_int32x2 ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_L32X2_RIC)(ae_int32x2& d /*out*/, const ae_int32x2 ** a /*inout*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_L32X2_X)(const ae_int32x2 * a /*in*/, const int off /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_ae_int32x2_loadx)(const ae_int32x2 * a /*in*/, const int off /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_ae_f32x2_loadx)(const ae_f32x2 * a /*in*/, const int off /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_LP24X2_X)(const ae_p24x2s * a /*in*/, const int off /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_ae_int24x2_loadx)(const ae_int24x2 * a /*in*/, const int off /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_ae_p24x2s_loadx)(const ae_p24x2s * a /*in*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_L32X2_XP)(ae_int32x2& d /*out*/, const ae_int32x2 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int32x2_loadxp)(ae_int32x2& d /*out*/, const ae_int32x2 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_f32x2_loadxp)(ae_f32x2& d /*out*/, const ae_f32x2 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_LP24X2_XU)(ae_p24x2s& d /*out*/, const ae_p24x2s ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int24x2_loadxp)(ae_int24x2& d /*out*/, const ae_int24x2 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_p24x2s_loadxp)(ae_p24x2s& d /*out*/, const ae_p24x2s ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_L16X4_XC)(ae_int16x4& d /*out*/, const ae_int16x4 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_L16X4_I)(const ae_int16x4 * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_ae_int16x4_loadi)(const ae_int16x4 * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN ae_f16x4 CSTUB_(_TIE_xt_hifi2_ae_f16x4_loadi)(const ae_f16x4 * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_L16X4_IP)(ae_int16x4& d /*out*/, const ae_int16x4 ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int16x4_loadip)(ae_int16x4& d /*out*/, const ae_int16x4 ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_f16x4_loadip)(ae_f16x4& d /*out*/, const ae_f16x4 ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_L16X4_RIP)(ae_int16x4& d /*out*/, const ae_int16x4 ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_L16X4_RIC)(ae_int16x4& d /*out*/, const ae_int16x4 ** a /*inout*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_L16X4_X)(const ae_int16x4 * a /*in*/, const int off /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_ae_int16x4_loadx)(const ae_int16x4 * a /*in*/, const int off /*in*/);
CSTUB_EXTERN ae_f16x4 CSTUB_(_TIE_xt_hifi2_ae_f16x4_loadx)(const ae_f16x4 * a /*in*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_L16X4_XP)(ae_int16x4& d /*out*/, const ae_int16x4 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int16x4_loadxp)(ae_int16x4& d /*out*/, const ae_int16x4 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_f16x4_loadxp)(ae_f16x4& d /*out*/, const ae_f16x4 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_L64_XC)(ae_int64& d /*out*/, const ae_int64 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_LQ56_C)(ae_q56s& d /*out*/, const ae_q56s ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_L64_I)(const ae_int64 * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_ae_int64_loadi)(const ae_int64 * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_ae_f64_loadi)(const ae_f64 * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_LQ56_I)(const ae_q56s * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_ae_q56s_loadi)(const ae_q56s * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_L64_IP)(ae_int64& d /*out*/, const ae_int64 ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int64_loadip)(ae_int64& d /*out*/, const ae_int64 ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_f64_loadip)(ae_f64& d /*out*/, const ae_f64 ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_LQ56_IU)(ae_q56s& d /*out*/, const ae_q56s ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_q56s_loadip)(ae_q56s& d /*out*/, const ae_q56s ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_L64_X)(const ae_int64 * a /*in*/, const int off /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_ae_int64_loadx)(const ae_int64 * a /*in*/, const int off /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_ae_f64_loadx)(const ae_f64 * a /*in*/, const int off /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_LQ56_X)(const ae_q56s * a /*in*/, const int off /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_ae_q56s_loadx)(const ae_q56s * a /*in*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_L64_XP)(ae_int64& d /*out*/, const ae_int64 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int64_loadxp)(ae_int64& d /*out*/, const ae_int64 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_f64_loadxp)(ae_f64& d /*out*/, const ae_f64 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_LQ56_XU)(ae_q56s& d /*out*/, const ae_q56s ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_q56s_loadxp)(ae_q56s& d /*out*/, const ae_q56s ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S16X2M_XC)(const ae_int32x2& d /*in*/, ae_p16x2s ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SP16X2F_C)(const ae_p24x2s& d /*in*/, ae_p16x2s ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S16X2M_I)(const ae_int32x2& d /*in*/, const ae_p16x2s * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SP16X2F_I)(const ae_p24x2s& d /*in*/, const ae_p16x2s * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_p16x2s_storei)(const ae_p16x2s& d /*in*/, const ae_p16x2s * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S16X2M_IU)(const ae_int32x2& d /*in*/, ae_p16x2s ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SP16X2F_IU)(const ae_p24x2s& d /*in*/, ae_p16x2s ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_p16x2s_storeiu)(const ae_p16x2s& d /*in*/, ae_p16x2s ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S16X2M_X)(const ae_int32x2& d /*in*/, const ae_p16x2s * a /*in*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SP16X2F_X)(const ae_p24x2s& d /*in*/, const ae_p16x2s * a /*in*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_p16x2s_storex)(const ae_p16x2s& d /*in*/, const ae_p16x2s * a /*in*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S16X2M_XU)(const ae_int32x2& d /*in*/, ae_p16x2s ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SP16X2F_XU)(const ae_p24x2s& d /*in*/, ae_p16x2s ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_p16x2s_storexu)(const ae_p16x2s& d /*in*/, ae_p16x2s ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S32X2F24_XC)(const ae_f24x2& d /*in*/, ae_f24x2 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SP24X2F_C)(const ae_p24x2s& d /*in*/, ae_p24x2f ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S32X2F24_I)(const ae_f24x2& d /*in*/, const ae_f24x2 * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SP24X2F_I)(const ae_p24x2s& d /*in*/, const ae_p24x2f * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_f24x2_storei)(const ae_f24x2& d /*in*/, const ae_f24x2 * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_p24x2f_storei)(const ae_p24x2f& d /*in*/, const ae_p24x2f * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S32X2F24_IP)(const ae_f24x2& d /*in*/, ae_f24x2 ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SP24X2F_IU)(const ae_p24x2s& d /*in*/, ae_p24x2f ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_f24x2_storeip)(const ae_f24x2& d /*in*/, ae_f24x2 ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_p24x2f_storeip)(const ae_p24x2f& d /*in*/, ae_p24x2f ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S32X2F24_RIP)(const ae_f24x2& d /*in*/, ae_f24x2 ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S32X2F24_RIC)(const ae_f24x2& d /*in*/, ae_f24x2 ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S32X2F24_X)(const ae_f24x2& d /*in*/, const ae_f24x2 * a /*in*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SP24X2F_X)(const ae_p24x2s& d /*in*/, const ae_p24x2f * a /*in*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_f24x2_storex)(const ae_f24x2& d /*in*/, const ae_f24x2 * a /*in*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_p24x2f_storex)(const ae_p24x2f& d /*in*/, const ae_p24x2f * a /*in*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S32X2F24_XP)(const ae_f24x2& d /*in*/, ae_f24x2 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SP24X2F_XU)(const ae_p24x2s& d /*in*/, ae_p24x2f ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_f24x2_storexp)(const ae_f24x2& d /*in*/, ae_f24x2 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_p24x2f_storexp)(const ae_p24x2f& d /*in*/, ae_p24x2f ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S32X2_XC)(const ae_int32x2& d /*in*/, ae_int32x2 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SP24X2S_C)(const ae_p24x2s& d /*in*/, ae_p24x2s ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S32X2_I)(const ae_int32x2& d /*in*/, const ae_int32x2 * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int32x2_storei)(const ae_int32x2& d /*in*/, const ae_int32x2 * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_f32x2_storei)(const ae_f32x2& d /*in*/, const ae_f32x2 * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SP24X2S_I)(const ae_p24x2s& d /*in*/, const ae_p24x2s * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_p24x2s_storei)(const ae_p24x2s& d /*in*/, const ae_p24x2s * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int24x2_storei)(const ae_int24x2& d /*in*/, const ae_int24x2 * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S32X2_IP)(const ae_int32x2& d /*in*/, ae_int32x2 ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int32x2_storeip)(const ae_int32x2& d /*in*/, ae_int32x2 ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_f32x2_storeip)(const ae_f32x2& d /*in*/, ae_f32x2 ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SP24X2S_IU)(const ae_p24x2s& d /*in*/, ae_p24x2s ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_p24x2s_storeip)(const ae_p24x2s& d /*in*/, ae_p24x2s ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int24x2_storeip)(const ae_int24x2& d /*in*/, ae_int24x2 ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S32X2_RIP)(const ae_int32x2& d /*in*/, ae_int32x2 ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S32X2_RIC)(const ae_int32x2& d /*in*/, ae_int32x2 ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S32X2_X)(const ae_int32x2& d /*in*/, const ae_int32x2 * a /*in*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int32x2_storex)(const ae_int32x2& d /*in*/, const ae_int32x2 * a /*in*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_f32x2_storex)(const ae_f32x2& d /*in*/, const ae_f32x2 * a /*in*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SP24X2S_X)(const ae_p24x2s& d /*in*/, const ae_p24x2s * a /*in*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_p24x2s_storex)(const ae_p24x2s& d /*in*/, const ae_p24x2s * a /*in*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int24x2_storex)(const ae_int24x2& d /*in*/, const ae_int24x2 * a /*in*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S32X2_XP)(const ae_int32x2& d /*in*/, ae_int32x2 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int32x2_storexp)(const ae_int32x2& d /*in*/, ae_int32x2 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_f32x2_storexp)(const ae_f32x2& d /*in*/, ae_f32x2 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SP24X2S_XU)(const ae_p24x2s& d /*in*/, ae_p24x2s ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_p24x2s_storexp)(const ae_p24x2s& d /*in*/, ae_p24x2s ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int24x2_storexp)(const ae_int24x2& d /*in*/, ae_int24x2 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S16X4_XC)(const ae_int16x4& d /*in*/, ae_int16x4 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S16X4_I)(const ae_int16x4& d /*in*/, const ae_int16x4 * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int16x4_storei)(const ae_int16x4& d /*in*/, const ae_int16x4 * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_f16x4_storei)(const ae_f16x4& d /*in*/, const ae_f16x4 * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S16X4_IP)(const ae_int16x4& d /*in*/, ae_int16x4 ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int16x4_storeip)(const ae_int16x4& d /*in*/, ae_int16x4 ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_f16x4_storeip)(const ae_f16x4& d /*in*/, ae_f16x4 ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S16X4_RIP)(const ae_int16x4& d /*in*/, ae_int16x4 ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S16X4_RIC)(const ae_int16x4& d /*in*/, ae_int16x4 ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S16X4_X)(const ae_int16x4& d /*in*/, const ae_int16x4 * a /*in*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int16x4_storex)(const ae_int16x4& d /*in*/, const ae_int16x4 * a /*in*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_f16x4_storex)(const ae_f16x4& d /*in*/, const ae_f16x4 * a /*in*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S16X4_XP)(const ae_int16x4& d /*in*/, ae_int16x4 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int16x4_storexp)(const ae_int16x4& d /*in*/, ae_int16x4 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_f16x4_storexp)(const ae_f16x4& d /*in*/, ae_f16x4 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S16M_L_XC)(const ae_int32x2& d /*in*/, ae_p16s ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SP16F_L_C)(const ae_p24x2s& d /*in*/, ae_p16s ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S16M_L_I)(const ae_int32x2& d /*in*/, const ae_p16s * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SP16F_L_I)(const ae_p24x2s& d /*in*/, const ae_p16s * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_p16s_storei)(const ae_p16s& d /*in*/, const ae_p16s * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S16M_L_IU)(const ae_int32x2& d /*in*/, ae_p16s ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SP16F_L_IU)(const ae_p24x2s& d /*in*/, ae_p16s ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_p16s_storeiu)(const ae_p16s& d /*in*/, ae_p16s ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S16M_L_X)(const ae_int32x2& d /*in*/, const ae_p16s * a /*in*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SP16F_L_X)(const ae_p24x2s& d /*in*/, const ae_p16s * a /*in*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_p16s_storex)(const ae_p16s& d /*in*/, const ae_p16s * a /*in*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S16M_L_XU)(const ae_int32x2& d /*in*/, ae_p16s ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SP16F_L_XU)(const ae_p24x2s& d /*in*/, ae_p16s ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_p16s_storexu)(const ae_p16s& d /*in*/, ae_p16s ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S32F24_L_XC)(const ae_f24x2& d /*in*/, ae_f24 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SP24F_L_C)(const ae_p24x2s& d /*in*/, ae_p24f ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S32F24_L_I)(const ae_f24x2& d /*in*/, const ae_f24 * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SP24F_L_I)(const ae_p24x2s& d /*in*/, const ae_p24f * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_f24_storei)(const ae_f24& d /*in*/, const ae_f24 * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_p24f_storei)(const ae_p24f& d /*in*/, const ae_p24f * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S32F24_L_IP)(const ae_f24x2& d /*in*/, ae_f24 ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SP24F_L_IU)(const ae_p24x2s& d /*in*/, ae_p24f ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_f24_storeip)(const ae_f24& d /*in*/, ae_f24 ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_p24f_storeip)(const ae_p24f& d /*in*/, ae_p24f ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S32F24_L_X)(const ae_f24x2& d /*in*/, const ae_f24 * a /*in*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SP24F_L_X)(const ae_p24x2s& d /*in*/, const ae_p24f * a /*in*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_f24_storex)(const ae_f24& d /*in*/, const ae_f24 * a /*in*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_p24f_storex)(const ae_p24f& d /*in*/, const ae_p24f * a /*in*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S32F24_L_XP)(const ae_f24x2& d /*in*/, ae_f24 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SP24F_L_XU)(const ae_p24x2s& d /*in*/, ae_p24f ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_f24_storexp)(const ae_f24& d /*in*/, ae_f24 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_p24f_storexp)(const ae_p24f& d /*in*/, ae_p24f ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S32_L_XC)(const ae_int32x2& d /*in*/, ae_int32 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SP24S_L_C)(const ae_p24x2s& d /*in*/, ae_p24s ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S32_L_I)(const ae_int32x2& d /*in*/, const ae_int32 * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int32_storei)(const ae_int32& d /*in*/, const ae_int32 * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_f32_storei)(const ae_f32& d /*in*/, const ae_f32 * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SP24S_L_I)(const ae_p24x2s& d /*in*/, const ae_p24s * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int24_storei)(const ae_int24& d /*in*/, const ae_int24 * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_p24s_storei)(const ae_p24s& d /*in*/, const ae_p24s * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S32_L_IP)(const ae_int32x2& d /*in*/, ae_int32 ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int32_storeip)(const ae_int32& d /*in*/, ae_int32 ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_f32_storeip)(const ae_f32& d /*in*/, ae_f32 ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SP24S_L_IU)(const ae_p24x2s& d /*in*/, ae_p24s ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int24_storeip)(const ae_int24& d /*in*/, ae_int24 ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_p24s_storeip)(const ae_p24s& d /*in*/, ae_p24s ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S32_L_X)(const ae_int32x2& d /*in*/, const ae_int32 * a /*in*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int32_storex)(const ae_int32& d /*in*/, const ae_int32 * a /*in*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_f32_storex)(const ae_f32& d /*in*/, const ae_f32 * a /*in*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SP24S_L_X)(const ae_p24x2s& d /*in*/, const ae_p24s * a /*in*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int24_storex)(const ae_int24& d /*in*/, const ae_int24 * a /*in*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_p24s_storex)(const ae_p24s& d /*in*/, const ae_p24s * a /*in*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S32_L_XP)(const ae_int32x2& d /*in*/, ae_int32 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int32_storexp)(const ae_int32& d /*in*/, ae_int32 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_f32_storexp)(const ae_f32& d /*in*/, ae_f32 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SP24S_L_XU)(const ae_p24x2s& d /*in*/, ae_p24s ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int24_storexp)(const ae_int24& d /*in*/, ae_int24 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_p24s_storexp)(const ae_p24s& d /*in*/, ae_p24s ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S16_0_XC)(const ae_int16x4& d /*in*/, ae_int16 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S16_0_I)(const ae_int16x4& d /*in*/, const ae_int16 * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int16_storei)(const ae_int16& d /*in*/, const ae_int16 * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_f16_storei)(const ae_f16& d /*in*/, const ae_f16 * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S16_0_IP)(const ae_int16x4& d /*in*/, ae_int16 ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int16_storeip)(const ae_int16& d /*in*/, ae_int16 ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_f16_storeip)(const ae_f16& d /*in*/, ae_f16 ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S16_0_X)(const ae_int16x4& d /*in*/, const ae_int16 * a /*in*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int16_storex)(const ae_int16& d /*in*/, const ae_int16 * a /*in*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_f16_storex)(const ae_f16& d /*in*/, const ae_f16 * a /*in*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S16_0_XP)(const ae_int16x4& d /*in*/, ae_int16 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int16_storexp)(const ae_int16& d /*in*/, ae_int16 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_f16_storexp)(const ae_f16& d /*in*/, ae_f16 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S64_XC)(const ae_int64& d /*in*/, ae_int64 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SQ56S_C)(const ae_q56s& d /*in*/, ae_q56s ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S64_I)(const ae_int64& d /*in*/, const ae_int64 * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int64_storei)(const ae_int64& d /*in*/, const ae_int64 * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_f64_storei)(const ae_f64& d /*in*/, const ae_f64 * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SQ56S_I)(const ae_q56s& d /*in*/, const ae_q56s * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_q56s_storei)(const ae_q56s& d /*in*/, const ae_q56s * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S64_IP)(const ae_int64& d /*in*/, ae_int64 ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int64_storeip)(const ae_int64& d /*in*/, ae_int64 ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_f64_storeip)(const ae_f64& d /*in*/, ae_f64 ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SQ56S_IU)(const ae_q56s& d /*in*/, ae_q56s ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_q56s_storeip)(const ae_q56s& d /*in*/, ae_q56s ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S64_X)(const ae_int64& d /*in*/, const ae_int64 * a /*in*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int64_storex)(const ae_int64& d /*in*/, const ae_int64 * a /*in*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_f64_storex)(const ae_f64& d /*in*/, const ae_f64 * a /*in*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SQ56S_X)(const ae_q56s& d /*in*/, const ae_q56s * a /*in*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_q56s_storex)(const ae_q56s& d /*in*/, const ae_q56s * a /*in*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S64_XP)(const ae_int64& d /*in*/, ae_int64 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int64_storexp)(const ae_int64& d /*in*/, ae_int64 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_f64_storexp)(const ae_f64& d /*in*/, ae_f64 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SQ56S_XU)(const ae_q56s& d /*in*/, ae_q56s ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_q56s_storexp)(const ae_q56s& d /*in*/, ae_q56s ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S32M_XC)(const ae_int64& d /*in*/, ae_q32s ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SQ32F_C)(const ae_q56s& d /*in*/, ae_q32s ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S32M_I)(const ae_int64& d /*in*/, const ae_q32s * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SQ32F_I)(const ae_q56s& d /*in*/, const ae_q32s * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_q32s_storei)(const ae_q32s& d /*in*/, const ae_q32s * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S32M_IU)(const ae_int64& d /*in*/, ae_q32s ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SQ32F_IU)(const ae_q56s& d /*in*/, ae_q32s ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_q32s_storeiu)(const ae_q32s& d /*in*/, ae_q32s ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S32M_X)(const ae_int64& d /*in*/, const ae_q32s * a /*in*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SQ32F_X)(const ae_q56s& d /*in*/, const ae_q32s * a /*in*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_q32s_storex)(const ae_q32s& d /*in*/, const ae_q32s * a /*in*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S32M_XU)(const ae_int64& d /*in*/, ae_q32s ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SQ32F_XU)(const ae_q56s& d /*in*/, ae_q32s ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_q32s_storexu)(const ae_q32s& d /*in*/, ae_q32s ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SA24_IC)(const ae_int24x2& d /*in*/, ae_valign& su /*inout*/, void ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SA24_IP)(const ae_int24x2& d /*in*/, ae_valign& su /*inout*/, void ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SA24_RIP)(const ae_int24x2& d /*in*/, ae_valign& su /*inout*/, void ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SA24_RIC)(const ae_int24x2& d /*in*/, ae_valign& su /*inout*/, void ** a /*inout*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_ae_p16s_mtor_ae_p24x2s)(const ae_p16s * a /*in*/, immediate i /*in*/);
CSTUB_EXTERN ae_p24x2f CSTUB_(_TIE_xt_hifi2_ae_p16s_mtor_ae_p24x2f)(const ae_p16s * a /*in*/, immediate i /*in*/);
CSTUB_EXTERN ae_p24s CSTUB_(_TIE_xt_hifi2_ae_p16s_mtor_ae_p24s)(const ae_p16s * a /*in*/, immediate i /*in*/);
CSTUB_EXTERN ae_p24f CSTUB_(_TIE_xt_hifi2_ae_p16s_mtor_ae_p24f)(const ae_p16s * a /*in*/, immediate i /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_ae_p24s_mtor_ae_p24x2s)(const ae_p24s * a /*in*/, immediate i /*in*/);
CSTUB_EXTERN ae_p24x2f CSTUB_(_TIE_xt_hifi2_ae_p24s_mtor_ae_p24x2f)(const ae_p24s * a /*in*/, immediate i /*in*/);
CSTUB_EXTERN ae_p24f CSTUB_(_TIE_xt_hifi2_ae_p24s_mtor_ae_p24f)(const ae_p24s * a /*in*/, immediate i /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_ae_p24f_mtor_ae_p24x2s)(const ae_p24f * a /*in*/, immediate i /*in*/);
CSTUB_EXTERN ae_p24x2f CSTUB_(_TIE_xt_hifi2_ae_p24f_mtor_ae_p24x2f)(const ae_p24f * a /*in*/, immediate i /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_ae_p24x2f_mtor_ae_p24x2s)(const ae_p24x2f * a /*in*/, immediate i /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_ae_p16x2s_mtor_ae_p24x2s)(const ae_p16x2s * a /*in*/, immediate i /*in*/);
CSTUB_EXTERN ae_p24x2f CSTUB_(_TIE_xt_hifi2_ae_p16x2s_mtor_ae_p24x2f)(const ae_p16x2s * a /*in*/, immediate i /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_p24x2s_rtom_ae_p16x2s)(const ae_p24x2s& d /*in*/, const ae_p16x2s * a /*in*/, immediate i /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_p24x2f_rtom_ae_p16x2s)(const ae_p24x2f& d /*in*/, const ae_p16x2s * a /*in*/, immediate i /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_p24x2s_rtom_ae_p24x2f)(const ae_p24x2s& d /*in*/, const ae_p24x2f * a /*in*/, immediate i /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_p24x2f_rtom_ae_p24x2s)(const ae_p24x2f& d /*in*/, const ae_p24x2s * a /*in*/, immediate i /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_p24x2s_rtom_ae_p16s)(const ae_p24x2s& d /*in*/, const ae_p16s * a /*in*/, immediate i /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_p24x2f_rtom_ae_p16s)(const ae_p24x2f& d /*in*/, const ae_p16s * a /*in*/, immediate i /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_p24s_rtom_ae_p16s)(const ae_p24s& d /*in*/, const ae_p16s * a /*in*/, immediate i /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_p24f_rtom_ae_p16s)(const ae_p24f& d /*in*/, const ae_p16s * a /*in*/, immediate i /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_p24x2s_rtom_ae_p24s)(const ae_p24x2s& d /*in*/, const ae_p24s * a /*in*/, immediate i /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_p24x2f_rtom_ae_p24s)(const ae_p24x2f& d /*in*/, const ae_p24s * a /*in*/, immediate i /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_p24f_rtom_ae_p24s)(const ae_p24f& d /*in*/, const ae_p24s * a /*in*/, immediate i /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_p24x2s_rtom_ae_p24f)(const ae_p24x2s& d /*in*/, const ae_p24f * a /*in*/, immediate i /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_p24x2f_rtom_ae_p24f)(const ae_p24x2f& d /*in*/, const ae_p24f * a /*in*/, immediate i /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_p24s_rtom_ae_p24f)(const ae_p24s& d /*in*/, const ae_p24f * a /*in*/, immediate i /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_ae_q32s_mtor_ae_q56s)(const ae_q32s * a /*in*/, immediate i /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_q56s_rtom_ae_q32s)(const ae_q56s& d /*in*/, const ae_q32s * a /*in*/, immediate i /*in*/);
CSTUB_EXTERN ae_valign CSTUB_(_TIE_xt_hifi2_ae_valign_loadi)(const ae_valign * a /*in*/, immediate imm /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_valign_storei)(const ae_valign& su /*in*/, const ae_valign * a /*in*/, immediate imm /*in*/);
CSTUB_EXTERN ae_valign CSTUB_(_TIE_xt_hifi2_ae_valign_move)(const ae_valign& v /*in*/);
CSTUB_EXTERN ae_valign CSTUB_(_TIE_xt_hifi2_AE_LA64_PP)(const void * a /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_LA24POS_PC)(ae_valign& uu /*out*/, const void ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_LA24X2POS_PC)(ae_valign& uu /*out*/, const void ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_LA32X2POS_PC)(ae_valign& uu /*out*/, const ae_int32x2 ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_LA16X4POS_PC)(ae_valign& uu /*out*/, const ae_int16x4 ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_LA24NEG_PC)(ae_valign& uu /*out*/, const void ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_LA24X2NEG_PC)(ae_valign& uu /*out*/, const void ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_LA32X2NEG_PC)(ae_valign& uu /*out*/, const ae_int32x2 ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_LA16X4NEG_PC)(ae_valign& uu /*out*/, const ae_int16x4 ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_LA32X2F24POS_PC)(ae_valign& uu /*out*/, const ae_f24x2 ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_LA32X2F24NEG_PC)(ae_valign& uu /*out*/, const ae_f24x2 ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SA64POS_FP)(ae_valign& su /*inout*/, const void * a /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SA64POS_FC)(ae_valign& su /*inout*/, const void * a /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SA64NEG_FP)(ae_valign& su /*inout*/, const void * a /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SA64NEG_FC)(ae_valign& su /*inout*/, const void * a /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_LA32X2_IC)(ae_int32x2& d /*out*/, ae_valign& uu /*inout*/, const ae_int32x2 ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_LA32X2_IP)(ae_int32x2& d /*out*/, ae_valign& uu /*inout*/, const ae_int32x2 ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_LA32X2_RIP)(ae_int32x2& d /*out*/, ae_valign& uu /*inout*/, const ae_int32x2 ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_LA32X2_RIC)(ae_int32x2& d /*out*/, ae_valign& uu /*inout*/, const ae_int32x2 ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_LA16X4_IC)(ae_int16x4& d /*out*/, ae_valign& uu /*inout*/, const ae_int16x4 ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_LA16X4_IP)(ae_int16x4& d /*out*/, ae_valign& uu /*inout*/, const ae_int16x4 ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_LA16X4_RIP)(ae_int16x4& d /*out*/, ae_valign& uu /*inout*/, const ae_int16x4 ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_LA16X4_RIC)(ae_int16x4& d /*out*/, ae_valign& uu /*inout*/, const ae_int16x4 ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_LA32X2F24_IC)(ae_f24x2& d /*out*/, ae_valign& uu /*inout*/, const ae_f24x2 ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_LA32X2F24_IP)(ae_f24x2& d /*out*/, ae_valign& uu /*inout*/, const ae_f24x2 ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_LA32X2F24_RIP)(ae_f24x2& d /*out*/, ae_valign& uu /*inout*/, const ae_f24x2 ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_LA32X2F24_RIC)(ae_f24x2& d /*out*/, ae_valign& uu /*inout*/, const ae_f24x2 ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_LA24_IC)(ae_int24x2& d /*out*/, ae_valign& uu /*inout*/, const void ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_LA24_IP)(ae_int24x2& d /*out*/, ae_valign& uu /*inout*/, const void ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_LA24_RIP)(ae_int24x2& d /*out*/, ae_valign& uu /*inout*/, const void ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_LA24_RIC)(ae_int24x2& d /*out*/, ae_valign& uu /*inout*/, const void ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_LA24X2_IC)(ae_int24x2& d /*out*/, ae_valign& uu /*inout*/, const void ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_LA24X2_IP)(ae_int24x2& d /*out*/, ae_valign& uu /*inout*/, const void ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_LA24X2_RIP)(ae_int24x2& d /*out*/, ae_valign& uu /*inout*/, const void ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_LA24X2_RIC)(ae_int24x2& d /*out*/, ae_valign& uu /*inout*/, const void ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SA32X2_IC)(const ae_int32x2& d /*in*/, ae_valign& su /*inout*/, ae_int32x2 ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SA32X2_IP)(const ae_int32x2& d /*in*/, ae_valign& su /*inout*/, ae_int32x2 ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SA32X2_RIP)(const ae_int32x2& d /*in*/, ae_valign& su /*inout*/, ae_int32x2 ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SA32X2_RIC)(const ae_int32x2& d /*in*/, ae_valign& su /*inout*/, ae_int32x2 ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SA16X4_IC)(const ae_int16x4& d /*in*/, ae_valign& su /*inout*/, ae_int16x4 ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SA16X4_IP)(const ae_int16x4& d /*in*/, ae_valign& su /*inout*/, ae_int16x4 ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SA16X4_RIP)(const ae_int16x4& d /*in*/, ae_valign& su /*inout*/, ae_int16x4 ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SA16X4_RIC)(const ae_int16x4& d /*in*/, ae_valign& su /*inout*/, ae_int16x4 ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SA32X2F24_IC)(const ae_f24x2& d /*in*/, ae_valign& su /*inout*/, ae_f24x2 ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SA32X2F24_IP)(const ae_f24x2& d /*in*/, ae_valign& su /*inout*/, ae_f24x2 ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SA32X2F24_RIP)(const ae_f24x2& d /*in*/, ae_valign& su /*inout*/, ae_f24x2 ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SA32X2F24_RIC)(const ae_f24x2& d /*in*/, ae_valign& su /*inout*/, ae_f24x2 ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SA24_L_IC)(const ae_int24x2& d /*in*/, ae_valign& su /*inout*/, void ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SA24_L_IP)(const ae_int24x2& d /*in*/, ae_valign& su /*inout*/, void ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SA24_L_RIP)(const ae_int24x2& d /*in*/, ae_valign& su /*inout*/, void ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SA24_L_RIC)(const ae_int24x2& d /*in*/, ae_valign& su /*inout*/, void ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SA24X2_IC)(const ae_int24x2& d /*in*/, ae_valign& su /*inout*/, void ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SA24X2_IP)(const ae_int24x2& d /*in*/, ae_valign& su /*inout*/, void ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SA24X2_RIP)(const ae_int24x2& d /*in*/, ae_valign& su /*inout*/, void ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SA24X2_RIC)(const ae_int24x2& d /*in*/, ae_valign& su /*inout*/, void ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S32RA64S_I)(const ae_f64& d /*in*/, const ae_f32 * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S32RA64S_IP)(const ae_f64& d /*in*/, ae_f32 ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S32RA64S_X)(const ae_f64& d /*in*/, const ae_f32 * a /*in*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S32RA64S_XP)(const ae_f64& d /*in*/, ae_f32 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S32RA64S_XC)(const ae_f64& d /*in*/, ae_f32 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S24RA64S_I)(const ae_f64& d /*in*/, const ae_f24 * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S24RA64S_IP)(const ae_f64& d /*in*/, ae_f24 ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S24RA64S_X)(const ae_f64& d /*in*/, const ae_f24 * a /*in*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S24RA64S_XP)(const ae_f64& d /*in*/, ae_f24 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S24RA64S_XC)(const ae_f64& d /*in*/, ae_f24 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S32X2RA64S_IP)(const ae_f64& d2 /*in*/, const ae_f64& d1 /*in*/, ae_f32x2 ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S24X2RA64S_IP)(const ae_f64& d2 /*in*/, const ae_f64& d1 /*in*/, ae_f24x2 ** a /*inout*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_ZERO)(void);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_ZERO64)(void);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_ZERO32)(void);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_ZERO24)(void);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_ZERO16)(void);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_ZEROP48)(void);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MOV)(const ae_int64& d0 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MOV64)(const ae_int64& d0 /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_MOV16)(const ae_int16x4& d0 /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_MOV24)(const ae_int24x2& d0 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_MOV32)(const ae_int32x2& d0 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_MOVP48)(const ae_p24x2s& d0 /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_SEL16I_N)(const ae_int16x4& d0 /*in*/, const ae_int16x4& d1 /*in*/, immediate i /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_SEL16I)(const ae_int16x4& d0 /*in*/, const ae_int16x4& d1 /*in*/, immediate i /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_SEL32I)(const ae_int32x2& d0 /*in*/, const ae_int32x2& d1 /*in*/, immediate i /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_SEL16_5432)(const ae_int16x4& d0 /*in*/, const ae_int16x4& d1 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_SEL32_LH)(const ae_int32x2& d0 /*in*/, const ae_int32x2& d1 /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_SEL24_LH)(const ae_int32x2& d0 /*in*/, const ae_int32x2& d1 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_SELP24_LH)(const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_SEL16_7520)(const ae_int16x4& d0 /*in*/, const ae_int16x4& d1 /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_SEL16_7610)(const ae_int16x4& d0 /*in*/, const ae_int16x4& d1 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_SEL32_HL)(const ae_int32x2& d0 /*in*/, const ae_int32x2& d1 /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_SEL24_HL)(const ae_int32x2& d0 /*in*/, const ae_int32x2& d1 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_SELP24_HL)(const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_SEL16_4321)(const ae_int16x4& d0 /*in*/, const ae_int16x4& d1 /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_SEL16_6543)(const ae_int16x4& d0 /*in*/, const ae_int16x4& d1 /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_SEL16_7632)(const ae_int16x4& d0 /*in*/, const ae_int16x4& d1 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_SEL32_HH)(const ae_int32x2& d0 /*in*/, const ae_int32x2& d1 /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_SEL24_HH)(const ae_int32x2& d0 /*in*/, const ae_int32x2& d1 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_SELP24_HH)(const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_SEL16_5410)(const ae_int16x4& d0 /*in*/, const ae_int16x4& d1 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_SEL32_LL)(const ae_int32x2& d0 /*in*/, const ae_int32x2& d1 /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_SEL24_LL)(const ae_int32x2& d0 /*in*/, const ae_int32x2& d1 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_SELP24_LL)(const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_SEL16_6420)(const ae_int16x4& d0 /*in*/, const ae_int16x4& d1 /*in*/);
CSTUB_EXTERN ae_f16x4 CSTUB_(_TIE_xt_hifi2_AE_CVT16X4)(const ae_f32x2& dl /*in*/, const ae_f32x2& dh /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_SEL16_7362)(const ae_int16x4& d0 /*in*/, const ae_int16x4& d1 /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_SEL16_5146)(const ae_int16x4& d0 /*in*/, const ae_int16x4& d1 /*in*/);
CSTUB_EXTERN ae_f16x4 CSTUB_(_TIE_xt_hifi2_AE_TRUNC16X4F32)(const ae_f32x2& dl /*in*/, const ae_f32x2& dh /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_SHORTSWAP)(const ae_int16x4& d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MOVT16X4)(ae_int16x4& d /*inout*/, const ae_int16x4& d0 /*in*/, const xtbool4 bhl /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MOVF16X4)(ae_int16x4& d /*inout*/, const ae_int16x4& d0 /*in*/, const xtbool4 bhl /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MOVT32X2)(ae_int32x2& d /*inout*/, const ae_int32x2& d0 /*in*/, const xtbool2 bhl /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MOVTP24X2)(ae_p24x2s& d /*inout*/, const ae_p24x2s& d0 /*in*/, const xtbool2 bhl /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MOVF32X2)(ae_int32x2& d /*inout*/, const ae_int32x2& d0 /*in*/, const xtbool2 bhl /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MOVFP24X2)(ae_p24x2s& d /*inout*/, const ae_p24x2s& d0 /*in*/, const xtbool2 bhl /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MOVT64)(ae_int64& d /*inout*/, const ae_int64& d0 /*in*/, const xtbool bi /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MOVTP48)(ae_p24x2s& d /*inout*/, const ae_p24x2s& d0 /*in*/, const xtbool bi /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MOVF64)(ae_int64& d /*inout*/, const ae_int64& d0 /*in*/, const xtbool bi /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MOVFP48)(ae_p24x2s& d /*inout*/, const ae_p24x2s& d0 /*in*/, const xtbool bi /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_MOVDA32X2)(const unsigned int a0 /*in*/, const unsigned int a1 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_MOVPA24X2)(const unsigned int ah /*in*/, const unsigned int al /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_MOVDA32)(const unsigned int a /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_MOVDA16X2)(const unsigned int ah /*in*/, const unsigned int al /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_MOVDA16)(const unsigned int a /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_MOVI)(immediate i /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_TRUNCP24A32X2)(const unsigned int ah /*in*/, const unsigned int al /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_SAT16X4)(const ae_int32x2& d0 /*in*/, const ae_int32x2& d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_CVT32X2F16_32)(const ae_f16x4& d0 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_CVT32X2F16_10)(const ae_f16x4& d0 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_SEXT32X2D16_32)(const ae_int16x4& d0 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_SEXT32X2D16_10)(const ae_int16x4& d0 /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_AE_CVTA32F24S_L)(const ae_int24x2& d0 /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_AE_CVTA32P24_L)(const ae_p24x2s& d0 /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_AE_CVTA32F24S_H)(const ae_int24x2& d0 /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_AE_CVTA32P24_H)(const ae_p24x2s& d0 /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_CVTP24A16X2_LL)(const unsigned int ah /*in*/, const unsigned int al /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_CVTP24A16X2_LH)(const unsigned int ah /*in*/, const unsigned int al /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_CVTP24A16X2_HL)(const unsigned int ah /*in*/, const unsigned int al /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_CVTP24A16X2_HH)(const unsigned int ah /*in*/, const unsigned int al /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_TRUNCP24Q48X2)(const ae_q56s& d0 /*in*/, const ae_q56s& d1 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_TRUNCA32X2F64S)(const ae_int64& d0 /*in*/, const ae_int64& d1 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_TRUNCI32X2F64S)(const ae_int64& d0 /*in*/, const ae_int64& d1 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_TRUNCA32F64S_L)(const ae_int32x2& d0 /*in*/, const ae_int64& d1 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_TRUNCI32F64S_L)(const ae_int32x2& d0 /*in*/, const ae_int64& d1 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_TRUNCP16)(const ae_int24x2& d0 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_ROUND32X2F64SSYM)(const ae_f64& d0 /*in*/, const ae_f64& d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_ROUND32F64SSYM)(const ae_f64& d0 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_ROUND32X2F64SASYM)(const ae_f64& d0 /*in*/, const ae_f64& d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_ROUND32F64SASYM)(const ae_f64& d0 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_ROUND32X2F48SSYM)(const ae_f64& d0 /*in*/, const ae_f64& d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_ROUND32F48SSYM)(const ae_f64& d0 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_ROUND32X2F48SASYM)(const ae_f64& d0 /*in*/, const ae_f64& d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_ROUND32F48SASYM)(const ae_f64& d0 /*in*/);
CSTUB_EXTERN ae_f16x4 CSTUB_(_TIE_xt_hifi2_AE_ROUND16X4F32SSYM)(const ae_f32x2& d1 /*in*/, const ae_f32x2& d0 /*in*/);
CSTUB_EXTERN ae_f16x4 CSTUB_(_TIE_xt_hifi2_AE_ROUND16X4F32SASYM)(const ae_f32x2& d1 /*in*/, const ae_f32x2& d0 /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_AE_ROUND24X2F48SSYM)(const ae_f64& d0 /*in*/, const ae_f64& d1 /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_AE_ROUND24F48SSYM)(const ae_f64& d0 /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_AE_ROUND24X2F48SASYM)(const ae_f64& d0 /*in*/, const ae_f64& d1 /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_AE_ROUND24F48SASYM)(const ae_f64& d0 /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_AE_ROUNDSP16Q48X2SYM)(const ae_f64& d0 /*in*/, const ae_f64& d1 /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_AE_ROUNDSP16Q48SYM)(const ae_f64& d0 /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_AE_ROUNDSP16Q48X2ASYM)(const ae_f64& d0 /*in*/, const ae_f64& d1 /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_AE_ROUNDSP16Q48ASYM)(const ae_f64& d0 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_ROUNDSP24Q48ASYM)(const ae_q56s& d0 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_ROUNDSP24Q48SYM)(const ae_q56s& d0 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_MINABS32S)(const ae_f32x2& d0 /*in*/, const ae_f32x2& d1 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_MINABSSP24S)(const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_MAXABS32S)(const ae_f32x2& d0 /*in*/, const ae_f32x2& d1 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_MAXABSSP24S)(const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_ROUNDSP16F24SYM)(const ae_f32x2& d0 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_ROUNDSP16SYM)(const ae_p24x2s& d0 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_ROUNDSP16F24ASYM)(const ae_f32x2& d0 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_ROUNDSP16ASYM)(const ae_p24x2s& d0 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_ZEROQ56)(void);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MOVQ56)(const ae_q56s& d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MOVTQ56)(ae_q56s& d /*inout*/, const ae_q56s& d0 /*in*/, const xtbool bi /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MOVFQ56)(ae_q56s& d /*inout*/, const ae_q56s& d0 /*in*/, const xtbool bi /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_CVTQ56A32S)(const unsigned int a0 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_CVT48A32)(const unsigned int a0 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_CVT64A32)(const unsigned int a0 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_CVTQ48A32S)(const unsigned int a /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_CVTQ56P32S_L)(const ae_int32x2& d0 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_CVTQ48P24S_L)(const ae_p24x2s& d0 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_CVTQ56P32S_H)(const ae_int32x2& d0 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_CVTQ48P24S_H)(const ae_p24x2s& d0 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_CVT64F32_H)(const ae_int32x2& d0 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_CVT64F32_L)(const ae_int32x2& d0 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_SAT48S)(const ae_f64& d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_SATQ48S)(const ae_q56s& d1 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_SATQ56S)(const ae_f64& d1 /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_AE_SAT24S)(const ae_f32x2& d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_TRUNCQ32)(const ae_q56s& d0 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MINABS64S)(const ae_f64& d0 /*in*/, const ae_f64& d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MINABSSQ56S)(const ae_q56s& d0 /*in*/, const ae_q56s& d1 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MAXABS64S)(const ae_f64& d0 /*in*/, const ae_f64& d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MAXABSSQ56S)(const ae_q56s& d0 /*in*/, const ae_q56s& d1 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_ROUNDSQ32F48SYM)(const ae_int64& d0 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_ROUNDSQ32SYM)(const ae_q56s& d0 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_ROUNDSQ32F48ASYM)(const ae_int64& d0 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_ROUNDSQ32ASYM)(const ae_q56s& d0 /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_AE_TRUNCA32Q48)(const ae_q56s& d0 /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_AE_TRUNCA32Q64)(const ae_int64& d0 /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_AE_MOVAD32_L)(const ae_int32x2& d0 /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_AE_MOVAP24S_L)(const ae_int24x2& d0 /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_AE_MOVAD32_H)(const ae_int32x2& d0 /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_AE_MOVAP24S_H)(const ae_int24x2& d0 /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_AE_MOVAD16_3)(const ae_int16x4& d0 /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_AE_MOVAD16_2)(const ae_int16x4& d0 /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_AE_MOVAD16_1)(const ae_int16x4& d0 /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_AE_MOVAD16_0)(const ae_int16x4& d0 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_SRA64_32)(const ae_int32x2& s /*in*/, const unsigned int sa /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_PKSR24)(ae_f24x2& d /*inout*/, const ae_f64& ps /*in*/, immediate pos /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_PKSR32)(ae_f32x2& d /*inout*/, const ae_f64& ps /*in*/, immediate pos /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_AE_TRUNCA16P24S_L)(const ae_int24x2& d0 /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_AE_TRUNCA16P24S_H)(const ae_int24x2& d0 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_ADD32)(const ae_int32x2& d0 /*in*/, const ae_int32x2& d1 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_ADDP24)(const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_SUB32)(const ae_int32x2& d0 /*in*/, const ae_int32x2& d1 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_SUBP24)(const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_ADDSUB32)(const ae_int32x2& d0 /*in*/, const ae_int32x2& d1 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_SUBADD32)(const ae_int32x2& d0 /*in*/, const ae_int32x2& d1 /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_ADD16)(const ae_int16x4& d0 /*in*/, const ae_int16x4& d1 /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_SUB16)(const ae_int16x4& d0 /*in*/, const ae_int16x4& d1 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_ADD32_HL_LH)(const ae_int32x2& d0 /*in*/, const ae_int32x2& d1 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_NEG32)(const ae_int32x2& d0 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_NEGP24)(const ae_p24x2s& d0 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_ABS32)(const ae_int32x2& d0 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_ABSP24)(const ae_p24x2s& d0 /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_AE_ADD24S)(const ae_f32x2& d0 /*in*/, const ae_f32x2& d1 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_ADDSP24S)(const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_AE_SUB24S)(const ae_f32x2& d0 /*in*/, const ae_f32x2& d1 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_SUBSP24S)(const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_ADD32S)(const ae_f32x2& d0 /*in*/, const ae_f32x2& d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_SUB32S)(const ae_f32x2& d0 /*in*/, const ae_f32x2& d1 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_ADDSUB32S)(const ae_int32x2& d0 /*in*/, const ae_int32x2& d1 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_SUBADD32S)(const ae_int32x2& d0 /*in*/, const ae_int32x2& d1 /*in*/);
CSTUB_EXTERN ae_f16x4 CSTUB_(_TIE_xt_hifi2_AE_ADD16S)(const ae_f16x4& d0 /*in*/, const ae_f16x4& d1 /*in*/);
CSTUB_EXTERN ae_f16x4 CSTUB_(_TIE_xt_hifi2_AE_SUB16S)(const ae_f16x4& d0 /*in*/, const ae_f16x4& d1 /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_AE_NEG24S)(const ae_f32x2& d0 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_NEGSP24S)(const ae_p24x2s& d0 /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_AE_ABS24S)(const ae_f32x2& d0 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_ABSSP24S)(const ae_p24x2s& d0 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_NEG32S)(const ae_f32x2& d0 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_ABS32S)(const ae_f32x2& d0 /*in*/);
CSTUB_EXTERN ae_f16x4 CSTUB_(_TIE_xt_hifi2_AE_NEG16S)(const ae_f16x4& d0 /*in*/);
CSTUB_EXTERN ae_f16x4 CSTUB_(_TIE_xt_hifi2_AE_ABS16S)(const ae_f16x4& d0 /*in*/);
CSTUB_EXTERN xtbool4 CSTUB_(_TIE_xt_hifi2_AE_LT16)(const ae_int16x4& d0 /*in*/, const ae_int16x4& d1 /*in*/);
CSTUB_EXTERN xtbool4 CSTUB_(_TIE_xt_hifi2_AE_LE16)(const ae_int16x4& d0 /*in*/, const ae_int16x4& d1 /*in*/);
CSTUB_EXTERN xtbool4 CSTUB_(_TIE_xt_hifi2_AE_EQ16)(const ae_int16x4& d0 /*in*/, const ae_int16x4& d1 /*in*/);
CSTUB_EXTERN xtbool2 CSTUB_(_TIE_xt_hifi2_AE_LT32)(const ae_int32x2& d0 /*in*/, const ae_int32x2& d1 /*in*/);
CSTUB_EXTERN xtbool2 CSTUB_(_TIE_xt_hifi2_AE_LTP24S)(const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN xtbool2 CSTUB_(_TIE_xt_hifi2_AE_LE32)(const ae_int32x2& d0 /*in*/, const ae_int32x2& d1 /*in*/);
CSTUB_EXTERN xtbool2 CSTUB_(_TIE_xt_hifi2_AE_LEP24S)(const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN xtbool2 CSTUB_(_TIE_xt_hifi2_AE_EQ32)(const ae_int32x2& d0 /*in*/, const ae_int32x2& d1 /*in*/);
CSTUB_EXTERN xtbool2 CSTUB_(_TIE_xt_hifi2_AE_EQP24)(const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_MIN32)(const ae_int32x2& d0 /*in*/, const ae_int32x2& d1 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_MINP24S)(const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MINB32)(ae_int32x2& d /*out*/, const ae_int32x2& d0 /*in*/, const ae_int32x2& d1 /*in*/, xtbool2& bhl /*out*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MINBP24S)(ae_p24x2s& d /*out*/, const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/, xtbool2& bhl /*out*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_MAX32)(const ae_int32x2& d0 /*in*/, const ae_int32x2& d1 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_MAXP24S)(const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MAXB32)(ae_int32x2& d /*out*/, const ae_int32x2& d0 /*in*/, const ae_int32x2& d1 /*in*/, xtbool2& bhl /*out*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MAXBP24S)(ae_p24x2s& d /*out*/, const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/, xtbool2& bhl /*out*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_ADD64)(const ae_int64& d0 /*in*/, const ae_int64& d1 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_SUB64)(const ae_int64& d0 /*in*/, const ae_int64& d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_ADDQ56)(const ae_q56s& d0 /*in*/, const ae_q56s& d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_SUBQ56)(const ae_q56s& d0 /*in*/, const ae_q56s& d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_NEGQ56)(const ae_q56s& d0 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_ABSQ56)(const ae_q56s& d0 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_NEG64)(const ae_int64& d0 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_ABS64)(const ae_int64& d0 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_ADDSQ56S)(const ae_q56s& d0 /*in*/, const ae_q56s& d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_SUBSQ56S)(const ae_q56s& d0 /*in*/, const ae_q56s& d1 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_ADD64S)(const ae_f64& d0 /*in*/, const ae_f64& d1 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_SUB64S)(const ae_f64& d0 /*in*/, const ae_f64& d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_NEGSQ56S)(const ae_q56s& d0 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_ABSSQ56S)(const ae_q56s& d0 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_NEG64S)(const ae_f64& d0 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_ABS64S)(const ae_f64& d0 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_AND)(const ae_int64& d0 /*in*/, const ae_int64& d1 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_AND64)(const ae_int64& d0 /*in*/, const ae_int64& d1 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_AND32)(const ae_int32x2& d0 /*in*/, const ae_int32x2& d1 /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_AND24)(const ae_int24x2& d0 /*in*/, const ae_int24x2& d1 /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_AND16)(const ae_int16x4& d0 /*in*/, const ae_int16x4& d1 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_ANDP48)(const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_ANDQ56)(const ae_q56s& d0 /*in*/, const ae_q56s& d1 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_NAND)(const ae_int64& d0 /*in*/, const ae_int64& d1 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_NAND64)(const ae_int64& d0 /*in*/, const ae_int64& d1 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_NAND32)(const ae_int32x2& d0 /*in*/, const ae_int32x2& d1 /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_NAND24)(const ae_int24x2& d0 /*in*/, const ae_int24x2& d1 /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_NAND16)(const ae_int16x4& d0 /*in*/, const ae_int16x4& d1 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_NANDP48)(const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_NANDQ56)(const ae_q56s& d0 /*in*/, const ae_q56s& d1 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_OR)(const ae_int64& d0 /*in*/, const ae_int64& d1 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_OR64)(const ae_int64& d0 /*in*/, const ae_int64& d1 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_OR32)(const ae_int32x2& d0 /*in*/, const ae_int32x2& d1 /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_OR24)(const ae_int24x2& d0 /*in*/, const ae_int24x2& d1 /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_OR16)(const ae_int16x4& d0 /*in*/, const ae_int16x4& d1 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_ORP48)(const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_ORQ56)(const ae_q56s& d0 /*in*/, const ae_q56s& d1 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_XOR)(const ae_int64& d0 /*in*/, const ae_int64& d1 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_XOR64)(const ae_int64& d0 /*in*/, const ae_int64& d1 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_XOR32)(const ae_int32x2& d0 /*in*/, const ae_int32x2& d1 /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_XOR24)(const ae_int24x2& d0 /*in*/, const ae_int24x2& d1 /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_XOR16)(const ae_int16x4& d0 /*in*/, const ae_int16x4& d1 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_XORP48)(const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_XORQ56)(const ae_q56s& d0 /*in*/, const ae_q56s& d1 /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_SLAI24)(const ae_int24x2& d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_SLLIP24)(const ae_p24x2s& d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_SLLI24)(const ae_int24x2& d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_SRLI24)(const ae_int24x2& d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_SRLIP24)(const ae_p24x2s& d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_SRAI24)(const ae_int24x2& d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_SRAIP24)(const ae_p24x2s& d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_SLAS24)(const ae_int24x2& d0 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_SLLSP24)(const ae_p24x2s& d0 /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_SRLS24)(const ae_int24x2& d0 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_SRLSP24)(const ae_p24x2s& d0 /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_SRAS24)(const ae_int24x2& d0 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_SRASP24)(const ae_p24x2s& d0 /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_SRAI16)(const ae_int16x4& d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_SRAI16R)(const ae_int16x4& d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_SLAI32)(const ae_int32x2& d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_SLLI32)(const ae_int32x2& d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_SRLI32)(const ae_int32x2& d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_SRAI32)(const ae_int32x2& d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_SRAI32R)(const ae_int32x2& d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_SLAS32)(const ae_int32x2& d0 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_SRLS32)(const ae_int32x2& d0 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_SRAS32)(const ae_int32x2& d0 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_SLAA32)(const ae_int32x2& d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_SRLA32)(const ae_int32x2& d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_SRAA32)(const ae_int32x2& d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_f16x4 CSTUB_(_TIE_xt_hifi2_AE_SLLI16S)(const ae_f16x4& d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_f16x4 CSTUB_(_TIE_xt_hifi2_AE_SLAI16S)(const ae_f16x4& d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_f16x4 CSTUB_(_TIE_xt_hifi2_AE_SLAA16S)(const ae_f16x4& d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_f16x4 CSTUB_(_TIE_xt_hifi2_AE_SRAA16S)(const ae_f16x4& d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_f16x4 CSTUB_(_TIE_xt_hifi2_AE_SRAA16RS)(const ae_f16x4& d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_AE_SLAI24S)(const ae_f24x2& d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_AE_SLLI24S)(const ae_f24x2& d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_SLLISP24S)(const ae_p24x2s& d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_AE_SLAS24S)(const ae_f24x2& d0 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_SLLSSP24S)(const ae_p24x2s& d0 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_SLLI32S)(const ae_f32x2& d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_SLAI32S)(const ae_f32x2& d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_SLAS32S)(const ae_f32x2& d0 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_SLAA32S)(const ae_f32x2& d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_SRAA32S)(const ae_f32x2& d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_SRAA32RS)(const ae_f32x2& d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_SLASQ56)(const ae_q56s& d0 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_SLLSQ56)(const ae_q56s& d0 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_SRLSQ56)(const ae_q56s& d0 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_SRASQ56)(const ae_q56s& d0 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_SLAAQ56)(const ae_q56s& d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_SLAIQ56)(const ae_q56s& d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_SLLAQ56)(const ae_q56s& d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_SLLIQ56)(const ae_q56s& d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_SRLAQ56)(const ae_q56s& d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_SRLIQ56)(const ae_q56s& d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_SRAAQ56)(const ae_q56s& d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_SLAI64)(const ae_int64& d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_SLLI64)(const ae_int64& d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_SRLI64)(const ae_int64& d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_SRAI64)(const ae_int64& d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_SRAIQ56)(const ae_q56s& d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_SLAS64)(const ae_int64& d0 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_SRLS64)(const ae_int64& d0 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_SRAS64)(const ae_int64& d0 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_SLAA64)(const ae_int64& d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_SRLA64)(const ae_int64& d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_SRAA64)(const ae_int64& d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_SLAISQ56S)(const ae_q56s& d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_SLLISQ56S)(const ae_q56s& d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_SLASSQ56S)(const ae_q56s& d0 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_SLLSSQ56S)(const ae_q56s& d0 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_SLAASQ56S)(const ae_q56s& d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_SLLASQ56S)(const ae_q56s& d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_SLAI64S)(const ae_f64& d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_SLLI64S)(const ae_f64& d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_SLAS64S)(const ae_f64& d0 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_SLAA64S)(const ae_f64& d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN xtbool CSTUB_(_TIE_xt_hifi2_AE_LT64)(const ae_int64& d0 /*in*/, const ae_int64& d1 /*in*/);
CSTUB_EXTERN xtbool CSTUB_(_TIE_xt_hifi2_AE_LTQ56S)(const ae_q56s& d0 /*in*/, const ae_q56s& d1 /*in*/);
CSTUB_EXTERN xtbool CSTUB_(_TIE_xt_hifi2_AE_LE64)(const ae_int64& d0 /*in*/, const ae_int64& d1 /*in*/);
CSTUB_EXTERN xtbool CSTUB_(_TIE_xt_hifi2_AE_LEQ56S)(const ae_q56s& d0 /*in*/, const ae_q56s& d1 /*in*/);
CSTUB_EXTERN xtbool CSTUB_(_TIE_xt_hifi2_AE_EQ64)(const ae_int64& d0 /*in*/, const ae_int64& d1 /*in*/);
CSTUB_EXTERN xtbool CSTUB_(_TIE_xt_hifi2_AE_EQQ56)(const ae_q56s& d0 /*in*/, const ae_q56s& d1 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MAX64)(const ae_int64& d0 /*in*/, const ae_int64& d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MAXQ56S)(const ae_q56s& d0 /*in*/, const ae_q56s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MAXB64)(ae_int64& d /*out*/, const ae_int64& d0 /*in*/, const ae_int64& d1 /*in*/, xtbool& bo /*out*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MAXBQ56S)(ae_q56s& d /*out*/, const ae_q56s& d0 /*in*/, const ae_q56s& d1 /*in*/, xtbool& bo /*out*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MIN64)(const ae_int64& d0 /*in*/, const ae_int64& d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MINQ56S)(const ae_q56s& d0 /*in*/, const ae_q56s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MINB64)(ae_int64& d /*out*/, const ae_int64& d0 /*in*/, const ae_int64& d1 /*in*/, xtbool& bo /*out*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MINBQ56S)(ae_q56s& d /*out*/, const ae_q56s& d0 /*in*/, const ae_q56s& d1 /*in*/, xtbool& bo /*out*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_AE_NSA64)(const ae_int64& d0 /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_AE_NSAQ56S)(const ae_q56s& d0 /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_AE_NSAZ16_0)(const ae_int16x4& d0 /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_AE_NSAZ32_L)(const ae_int32x2& d0 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULS32F48P16S_LL)(const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULFS32P16S_LL)(const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULF32S_LL)(const ae_f32x2& d0 /*in*/, const ae_f32x2& d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULFP24S_LL)(const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULF24S_LL)(const ae_f24x2& d0 /*in*/, const ae_f24x2& d1 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MUL32_LL)(const ae_int32x2& d0 /*in*/, const ae_int32x2& d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULP24S_LL)(const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MUL24_LL)(const ae_int24x2& d0 /*in*/, const ae_int24x2& d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULS32F48P16S_LL_S2)(const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULFS32P16S_LL_S2)(const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULF32R_LL)(const ae_f32x2& d0 /*in*/, const ae_f32x2& d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULS32F48P16S_LH)(const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULFS32P16S_LH)(const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULS32F48P16S_HL)(const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULFS32P16S_HL)(const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULF32S_LH)(const ae_f32x2& d0 /*in*/, const ae_f32x2& d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULFP24S_LH)(const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULF24S_LH)(const ae_f24x2& d0 /*in*/, const ae_f24x2& d1 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULF32S_HL)(const ae_f32x2& d0 /*in*/, const ae_f32x2& d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULFP24S_HL)(const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULF24S_HL)(const ae_f24x2& d0 /*in*/, const ae_f24x2& d1 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MUL32_LH)(const ae_int32x2& d0 /*in*/, const ae_int32x2& d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULP24S_LH)(const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MUL24_LH)(const ae_int24x2& d0 /*in*/, const ae_int24x2& d1 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MUL32_HL)(const ae_int32x2& d0 /*in*/, const ae_int32x2& d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULP24S_HL)(const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MUL24_HL)(const ae_int24x2& d0 /*in*/, const ae_int24x2& d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULS32F48P16S_LH_S2)(const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULFS32P16S_LH_S2)(const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULF32R_LH)(const ae_f32x2& d0 /*in*/, const ae_f32x2& d1 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULF32R_HL)(const ae_f32x2& d0 /*in*/, const ae_f32x2& d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULS32F48P16S_HH)(const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULFS32P16S_HH)(const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULF32S_HH)(const ae_f32x2& d0 /*in*/, const ae_f32x2& d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULFP24S_HH)(const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULF24S_HH)(const ae_f24x2& d0 /*in*/, const ae_f24x2& d1 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MUL32_HH)(const ae_int32x2& d0 /*in*/, const ae_int32x2& d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULP24S_HH)(const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MUL24_HH)(const ae_int24x2& d0 /*in*/, const ae_int24x2& d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULS32F48P16S_HH_S2)(const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULFS32P16S_HH_S2)(const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULF32R_HH)(const ae_f32x2& d0 /*in*/, const ae_f32x2& d1 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULF32R_LL_S2)(const ae_f32x2& d0 /*in*/, const ae_f32x2& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAS32F48P16S_LL)(ae_q56s& d /*inout*/, const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAFS32P16S_LL)(ae_q56s& d /*inout*/, const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAF32S_LL)(ae_f64& d /*inout*/, const ae_f32x2& d0 /*in*/, const ae_f32x2& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAFP24S_LL)(ae_q56s& d /*inout*/, const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAF24S_LL)(ae_f64& d /*inout*/, const ae_f24x2& d0 /*in*/, const ae_f24x2& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULA32_LL)(ae_int64& d /*inout*/, const ae_int32x2& d0 /*in*/, const ae_int32x2& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAP24S_LL)(ae_q56s& d /*inout*/, const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULA24_LL)(ae_int64& d /*inout*/, const ae_int24x2& d0 /*in*/, const ae_int24x2& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAS32F48P16S_LL_S2)(ae_q56s& d /*inout*/, const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAFS32P16S_LL_S2)(ae_q56s& d /*inout*/, const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAF32R_LL)(ae_f64& d /*inout*/, const ae_f32x2& d0 /*in*/, const ae_f32x2& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAS32F48P16S_LH)(ae_q56s& d /*inout*/, const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAFS32P16S_LH)(ae_q56s& d /*inout*/, const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAS32F48P16S_HL)(ae_q56s& d /*inout*/, const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAFS32P16S_HL)(ae_q56s& d /*inout*/, const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAF32S_LH)(ae_f64& d /*inout*/, const ae_f32x2& d0 /*in*/, const ae_f32x2& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAFP24S_LH)(ae_q56s& d /*inout*/, const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAF24S_LH)(ae_f64& d /*inout*/, const ae_f24x2& d0 /*in*/, const ae_f24x2& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAF32S_HL)(ae_f64& d /*inout*/, const ae_f32x2& d0 /*in*/, const ae_f32x2& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAFP24S_HL)(ae_q56s& d /*inout*/, const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAF24S_HL)(ae_f64& d /*inout*/, const ae_f24x2& d0 /*in*/, const ae_f24x2& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULA32_LH)(ae_int64& d /*inout*/, const ae_int32x2& d0 /*in*/, const ae_int32x2& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAP24S_LH)(ae_q56s& d /*inout*/, const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULA24_LH)(ae_int64& d /*inout*/, const ae_int24x2& d0 /*in*/, const ae_int24x2& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULA32_HL)(ae_int64& d /*inout*/, const ae_int32x2& d0 /*in*/, const ae_int32x2& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAP24S_HL)(ae_q56s& d /*inout*/, const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULA24_HL)(ae_int64& d /*inout*/, const ae_int24x2& d0 /*in*/, const ae_int24x2& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAS32F48P16S_LH_S2)(ae_q56s& d /*inout*/, const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAFS32P16S_LH_S2)(ae_q56s& d /*inout*/, const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAF32R_LH)(ae_f64& d /*inout*/, const ae_f32x2& d0 /*in*/, const ae_f32x2& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAF32R_HL)(ae_f64& d /*inout*/, const ae_f32x2& d0 /*in*/, const ae_f32x2& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAS32F48P16S_HH)(ae_q56s& d /*inout*/, const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAFS32P16S_HH)(ae_q56s& d /*inout*/, const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAF32S_HH)(ae_f64& d /*inout*/, const ae_f32x2& d0 /*in*/, const ae_f32x2& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAFP24S_HH)(ae_q56s& d /*inout*/, const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAF24S_HH)(ae_f64& d /*inout*/, const ae_f24x2& d0 /*in*/, const ae_f24x2& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULA32_HH)(ae_int64& d /*inout*/, const ae_int32x2& d0 /*in*/, const ae_int32x2& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAP24S_HH)(ae_q56s& d /*inout*/, const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULA24_HH)(ae_int64& d /*inout*/, const ae_int24x2& d0 /*in*/, const ae_int24x2& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAS32F48P16S_HH_S2)(ae_q56s& d /*inout*/, const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAFS32P16S_HH_S2)(ae_q56s& d /*inout*/, const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAF32R_HH)(ae_f64& d /*inout*/, const ae_f32x2& d0 /*in*/, const ae_f32x2& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAF32R_LL_S2)(ae_f64& d /*inout*/, const ae_f32x2& d0 /*in*/, const ae_f32x2& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSS32F48P16S_LL)(ae_q56s& d /*inout*/, const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSFS32P16S_LL)(ae_q56s& d /*inout*/, const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSF32S_LL)(ae_f64& d /*inout*/, const ae_f32x2& d0 /*in*/, const ae_f32x2& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSFP24S_LL)(ae_q56s& d /*inout*/, const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSF24S_LL)(ae_f64& d /*inout*/, const ae_f24x2& d0 /*in*/, const ae_f24x2& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULS32_LL)(ae_int64& d /*inout*/, const ae_int32x2& d0 /*in*/, const ae_int32x2& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSP24S_LL)(ae_q56s& d /*inout*/, const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULS24_LL)(ae_int64& d /*inout*/, const ae_int24x2& d0 /*in*/, const ae_int24x2& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSS32F48P16S_LL_S2)(ae_q56s& d /*inout*/, const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSFS32P16S_LL_S2)(ae_q56s& d /*inout*/, const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSF32R_LL)(ae_f64& d /*inout*/, const ae_f32x2& d0 /*in*/, const ae_f32x2& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSS32F48P16S_LH)(ae_q56s& d /*inout*/, const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSFS32P16S_LH)(ae_q56s& d /*inout*/, const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSS32F48P16S_HL)(ae_q56s& d /*inout*/, const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSFS32P16S_HL)(ae_q56s& d /*inout*/, const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSF32S_LH)(ae_f64& d /*inout*/, const ae_f32x2& d0 /*in*/, const ae_f32x2& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSFP24S_LH)(ae_q56s& d /*inout*/, const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSF24S_LH)(ae_f64& d /*inout*/, const ae_f24x2& d0 /*in*/, const ae_f24x2& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSF32S_HL)(ae_f64& d /*inout*/, const ae_f32x2& d0 /*in*/, const ae_f32x2& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSFP24S_HL)(ae_q56s& d /*inout*/, const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSF24S_HL)(ae_f64& d /*inout*/, const ae_f24x2& d0 /*in*/, const ae_f24x2& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULS32_LH)(ae_int64& d /*inout*/, const ae_int32x2& d0 /*in*/, const ae_int32x2& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSP24S_LH)(ae_q56s& d /*inout*/, const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULS24_LH)(ae_int64& d /*inout*/, const ae_int24x2& d0 /*in*/, const ae_int24x2& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULS32_HL)(ae_int64& d /*inout*/, const ae_int32x2& d0 /*in*/, const ae_int32x2& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSP24S_HL)(ae_q56s& d /*inout*/, const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULS24_HL)(ae_int64& d /*inout*/, const ae_int24x2& d0 /*in*/, const ae_int24x2& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSS32F48P16S_LH_S2)(ae_q56s& d /*inout*/, const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSFS32P16S_LH_S2)(ae_q56s& d /*inout*/, const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSF32R_LH)(ae_f64& d /*inout*/, const ae_f32x2& d0 /*in*/, const ae_f32x2& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSF32R_HL)(ae_f64& d /*inout*/, const ae_f32x2& d0 /*in*/, const ae_f32x2& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSS32F48P16S_HH)(ae_q56s& d /*inout*/, const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSFS32P16S_HH)(ae_q56s& d /*inout*/, const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSF32S_HH)(ae_f64& d /*inout*/, const ae_f32x2& d0 /*in*/, const ae_f32x2& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSFP24S_HH)(ae_q56s& d /*inout*/, const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSF24S_HH)(ae_f64& d /*inout*/, const ae_f24x2& d0 /*in*/, const ae_f24x2& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULS32_HH)(ae_int64& d /*inout*/, const ae_int32x2& d0 /*in*/, const ae_int32x2& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSP24S_HH)(ae_q56s& d /*inout*/, const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULS24_HH)(ae_int64& d /*inout*/, const ae_int24x2& d0 /*in*/, const ae_int24x2& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSS32F48P16S_HH_S2)(ae_q56s& d /*inout*/, const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSFS32P16S_HH_S2)(ae_q56s& d /*inout*/, const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSF32R_HH)(ae_f64& d /*inout*/, const ae_f32x2& d0 /*in*/, const ae_f32x2& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSF32R_LL_S2)(ae_f64& d /*inout*/, const ae_f32x2& d0 /*in*/, const ae_f32x2& d1 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULF32S_LL_S2)(const ae_f32x2& d0 /*in*/, const ae_f32x2& d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULFP24S_LL_S2)(const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULF24S_LL_S2)(const ae_f24x2& d0 /*in*/, const ae_f24x2& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAF32S_LL_S2)(ae_f64& d /*inout*/, const ae_f32x2& d0 /*in*/, const ae_f32x2& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAFP24S_LL_S2)(ae_q56s& d /*inout*/, const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAF24S_LL_S2)(ae_f64& d /*inout*/, const ae_f24x2& d0 /*in*/, const ae_f24x2& d1 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MUL32_LL_S2)(const ae_int32x2& d0 /*in*/, const ae_int32x2& d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULP24S_LL_S2)(const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MUL24_LL_S2)(const ae_int24x2& d0 /*in*/, const ae_int24x2& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULA32_LL_S2)(ae_int64& d /*inout*/, const ae_int32x2& d0 /*in*/, const ae_int32x2& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAP24S_LL_S2)(ae_q56s& d /*inout*/, const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULA24_LL_S2)(ae_int64& d /*inout*/, const ae_int24x2& d0 /*in*/, const ae_int24x2& d1 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MUL32U_LL)(const ae_int32x2& d0 /*in*/, const ae_int32x2& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULA32U_LL)(ae_int64& d /*inout*/, const ae_int32x2& d0 /*in*/, const ae_int32x2& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULS32U_LL)(ae_int64& d /*inout*/, const ae_int32x2& d0 /*in*/, const ae_int32x2& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAFS56P24S_LL)(ae_q56s& d /*inout*/, const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAS56P24S_LL)(ae_q56s& d /*inout*/, const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAFS56P24S_LH)(ae_q56s& d /*inout*/, const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAFS56P24S_HL)(ae_q56s& d /*inout*/, const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAS56P24S_LH)(ae_q56s& d /*inout*/, const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAS56P24S_HL)(ae_q56s& d /*inout*/, const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAFS56P24S_HH)(ae_q56s& d /*inout*/, const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAS56P24S_HH)(ae_q56s& d /*inout*/, const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSFS56P24S_LL)(ae_q56s& d /*inout*/, const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSS56P24S_LL)(ae_q56s& d /*inout*/, const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSFS56P24S_LH)(ae_q56s& d /*inout*/, const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSFS56P24S_HL)(ae_q56s& d /*inout*/, const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSS56P24S_LH)(ae_q56s& d /*inout*/, const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSS56P24S_HL)(ae_q56s& d /*inout*/, const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSFS56P24S_HH)(ae_q56s& d /*inout*/, const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSS56P24S_HH)(ae_q56s& d /*inout*/, const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_MULF16SS_33)(const ae_f16x4& d0 /*in*/, const ae_f16x4& d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_MULF16SS_22)(const ae_f16x4& d0 /*in*/, const ae_f16x4& d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_MULF16SS_32)(const ae_f16x4& d0 /*in*/, const ae_f16x4& d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_MULF16SS_21)(const ae_f16x4& d0 /*in*/, const ae_f16x4& d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_MULF16SS_31)(const ae_f16x4& d0 /*in*/, const ae_f16x4& d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_MULF16SS_30)(const ae_f16x4& d0 /*in*/, const ae_f16x4& d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_MULF16SS_10)(const ae_f16x4& d0 /*in*/, const ae_f16x4& d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_MULF16SS_20)(const ae_f16x4& d0 /*in*/, const ae_f16x4& d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_MULF16SS_11)(const ae_f16x4& d0 /*in*/, const ae_f16x4& d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_MULF16SS_00)(const ae_f16x4& d0 /*in*/, const ae_f16x4& d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_MULF16SS_00_S2)(const ae_f16x4& d0 /*in*/, const ae_f16x4& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSF16SS_33)(ae_f32x2& d /*inout*/, const ae_f16x4& d0 /*in*/, const ae_f16x4& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSF16SS_22)(ae_f32x2& d /*inout*/, const ae_f16x4& d0 /*in*/, const ae_f16x4& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSF16SS_32)(ae_f32x2& d /*inout*/, const ae_f16x4& d0 /*in*/, const ae_f16x4& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSF16SS_21)(ae_f32x2& d /*inout*/, const ae_f16x4& d0 /*in*/, const ae_f16x4& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSF16SS_31)(ae_f32x2& d /*inout*/, const ae_f16x4& d0 /*in*/, const ae_f16x4& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSF16SS_30)(ae_f32x2& d /*inout*/, const ae_f16x4& d0 /*in*/, const ae_f16x4& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSF16SS_10)(ae_f32x2& d /*inout*/, const ae_f16x4& d0 /*in*/, const ae_f16x4& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSF16SS_20)(ae_f32x2& d /*inout*/, const ae_f16x4& d0 /*in*/, const ae_f16x4& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSF16SS_11)(ae_f32x2& d /*inout*/, const ae_f16x4& d0 /*in*/, const ae_f16x4& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSF16SS_00)(ae_f32x2& d /*inout*/, const ae_f16x4& d0 /*in*/, const ae_f16x4& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSF16SS_00_S2)(ae_f32x2& d /*inout*/, const ae_f16x4& d0 /*in*/, const ae_f16x4& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAF16SS_33)(ae_f32x2& d /*inout*/, const ae_f16x4& d0 /*in*/, const ae_f16x4& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAF16SS_22)(ae_f32x2& d /*inout*/, const ae_f16x4& d0 /*in*/, const ae_f16x4& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAF16SS_32)(ae_f32x2& d /*inout*/, const ae_f16x4& d0 /*in*/, const ae_f16x4& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAF16SS_21)(ae_f32x2& d /*inout*/, const ae_f16x4& d0 /*in*/, const ae_f16x4& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAF16SS_31)(ae_f32x2& d /*inout*/, const ae_f16x4& d0 /*in*/, const ae_f16x4& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAF16SS_30)(ae_f32x2& d /*inout*/, const ae_f16x4& d0 /*in*/, const ae_f16x4& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAF16SS_10)(ae_f32x2& d /*inout*/, const ae_f16x4& d0 /*in*/, const ae_f16x4& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAF16SS_20)(ae_f32x2& d /*inout*/, const ae_f16x4& d0 /*in*/, const ae_f16x4& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAF16SS_11)(ae_f32x2& d /*inout*/, const ae_f16x4& d0 /*in*/, const ae_f16x4& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAF16SS_00)(ae_f32x2& d /*inout*/, const ae_f16x4& d0 /*in*/, const ae_f16x4& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAF16SS_00_S2)(ae_f32x2& d /*inout*/, const ae_f16x4& d0 /*in*/, const ae_f16x4& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAAFD16SS_33_22)(ae_f32x2& d /*inout*/, const ae_f16x4& d0 /*in*/, const ae_f16x4& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAAFD16SS_33_22_S2)(ae_f32x2& d /*inout*/, const ae_f16x4& d0 /*in*/, const ae_f16x4& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAAFD16SS_13_02)(ae_f32x2& d /*inout*/, const ae_f16x4& d0 /*in*/, const ae_f16x4& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAAFD16SS_13_02_S2)(ae_f32x2& d /*inout*/, const ae_f16x4& d0 /*in*/, const ae_f16x4& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAAFD16SS_11_00)(ae_f32x2& d /*inout*/, const ae_f16x4& d0 /*in*/, const ae_f16x4& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAAFD16SS_11_00_S2)(ae_f32x2& d /*inout*/, const ae_f16x4& d0 /*in*/, const ae_f16x4& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSSFD16SS_33_22)(ae_f32x2& d /*inout*/, const ae_f16x4& d0 /*in*/, const ae_f16x4& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSSFD16SS_33_22_S2)(ae_f32x2& d /*inout*/, const ae_f16x4& d0 /*in*/, const ae_f16x4& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSSFD16SS_13_02)(ae_f32x2& d /*inout*/, const ae_f16x4& d0 /*in*/, const ae_f16x4& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSSFD16SS_13_02_S2)(ae_f32x2& d /*inout*/, const ae_f16x4& d0 /*in*/, const ae_f16x4& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSSFD16SS_11_00)(ae_f32x2& d /*inout*/, const ae_f16x4& d0 /*in*/, const ae_f16x4& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSSFD16SS_11_00_S2)(ae_f32x2& d /*inout*/, const ae_f16x4& d0 /*in*/, const ae_f16x4& d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_MULZAAFD16SS_33_22)(const ae_f16x4& d0 /*in*/, const ae_f16x4& d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_MULZAAFD16SS_33_22_S2)(const ae_f16x4& d0 /*in*/, const ae_f16x4& d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_MULZAAFD16SS_13_02)(const ae_f16x4& d0 /*in*/, const ae_f16x4& d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_MULZAAFD16SS_13_02_S2)(const ae_f16x4& d0 /*in*/, const ae_f16x4& d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_MULZAAFD16SS_11_00)(const ae_f16x4& d0 /*in*/, const ae_f16x4& d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_MULZAAFD16SS_11_00_S2)(const ae_f16x4& d0 /*in*/, const ae_f16x4& d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_MULZSSFD16SS_33_22)(const ae_f16x4& d0 /*in*/, const ae_f16x4& d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_MULZSSFD16SS_33_22_S2)(const ae_f16x4& d0 /*in*/, const ae_f16x4& d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_MULZSSFD16SS_13_02)(const ae_f16x4& d0 /*in*/, const ae_f16x4& d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_MULZSSFD16SS_13_02_S2)(const ae_f16x4& d0 /*in*/, const ae_f16x4& d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_MULZSSFD16SS_11_00)(const ae_f16x4& d0 /*in*/, const ae_f16x4& d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_MULZSSFD16SS_11_00_S2)(const ae_f16x4& d0 /*in*/, const ae_f16x4& d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULF48Q32SP16S_L)(const ae_q56s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULFQ32SP16S_L)(const ae_q56s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULF48Q32SP16S_L_S2)(const ae_q56s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULFQ32SP16S_L_S2)(const ae_q56s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULF48Q32SP16U_L)(const ae_q56s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULFQ32SP16U_L)(const ae_q56s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULF48Q32SP16U_L_S2)(const ae_q56s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULFQ32SP16U_L_S2)(const ae_q56s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULQ32SP16S_L)(const ae_q56s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULQ32SP16S_L_S2)(const ae_q56s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULQ32SP16U_L)(const ae_q56s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULQ32SP16U_L_S2)(const ae_q56s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAF48Q32SP16S_L)(ae_q56s& d /*inout*/, const ae_q56s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAFQ32SP16S_L)(ae_q56s& d /*inout*/, const ae_q56s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAF48Q32SP16S_L_S2)(ae_q56s& d /*inout*/, const ae_q56s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAFQ32SP16S_L_S2)(ae_q56s& d /*inout*/, const ae_q56s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAF48Q32SP16U_L)(ae_q56s& d /*inout*/, const ae_q56s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAFQ32SP16U_L)(ae_q56s& d /*inout*/, const ae_q56s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAF48Q32SP16U_L_S2)(ae_q56s& d /*inout*/, const ae_q56s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAFQ32SP16U_L_S2)(ae_q56s& d /*inout*/, const ae_q56s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAQ32SP16S_L)(ae_q56s& d /*inout*/, const ae_q56s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAQ32SP16S_L_S2)(ae_q56s& d /*inout*/, const ae_q56s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAQ32SP16U_L)(ae_q56s& d /*inout*/, const ae_q56s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAQ32SP16U_L_S2)(ae_q56s& d /*inout*/, const ae_q56s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSF48Q32SP16S_L)(ae_q56s& d /*inout*/, const ae_q56s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSFQ32SP16S_L)(ae_q56s& d /*inout*/, const ae_q56s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSF48Q32SP16S_L_S2)(ae_q56s& d /*inout*/, const ae_q56s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSFQ32SP16S_L_S2)(ae_q56s& d /*inout*/, const ae_q56s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSF48Q32SP16U_L)(ae_q56s& d /*inout*/, const ae_q56s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSFQ32SP16U_L)(ae_q56s& d /*inout*/, const ae_q56s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSF48Q32SP16U_L_S2)(ae_q56s& d /*inout*/, const ae_q56s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSFQ32SP16U_L_S2)(ae_q56s& d /*inout*/, const ae_q56s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSQ32SP16S_L)(ae_q56s& d /*inout*/, const ae_q56s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSQ32SP16S_L_S2)(ae_q56s& d /*inout*/, const ae_q56s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSQ32SP16U_L)(ae_q56s& d /*inout*/, const ae_q56s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSQ32SP16U_L_S2)(ae_q56s& d /*inout*/, const ae_q56s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_MULFP24X2RA)(const ae_f24x2& d0 /*in*/, const ae_f24x2& d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_MULFP24X2R)(const ae_f24x2& d0 /*in*/, const ae_f24x2& d1 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_MULP24X2)(const ae_int24x2& d0 /*in*/, const ae_int24x2& d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_MULFP24X2RA_S2)(const ae_f24x2& d0 /*in*/, const ae_f24x2& d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_MULFP24X2R_S2)(const ae_f24x2& d0 /*in*/, const ae_f24x2& d1 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_MULP24X2_S2)(const ae_int24x2& d0 /*in*/, const ae_int24x2& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAFP24X2RA)(ae_f32x2& d /*inout*/, const ae_f24x2& d0 /*in*/, const ae_f24x2& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAFP24X2R)(ae_f32x2& d /*inout*/, const ae_f24x2& d0 /*in*/, const ae_f24x2& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAP24X2)(ae_int32x2& d /*inout*/, const ae_int24x2& d0 /*in*/, const ae_int24x2& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAFP24X2RA_S2)(ae_f32x2& d /*inout*/, const ae_f24x2& d0 /*in*/, const ae_f24x2& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAFP24X2R_S2)(ae_f32x2& d /*inout*/, const ae_f24x2& d0 /*in*/, const ae_f24x2& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAP24X2_S2)(ae_int32x2& d /*inout*/, const ae_int24x2& d0 /*in*/, const ae_int24x2& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSFP24X2RA)(ae_f32x2& d /*inout*/, const ae_f24x2& d0 /*in*/, const ae_f24x2& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSFP24X2R)(ae_f32x2& d /*inout*/, const ae_f24x2& d0 /*in*/, const ae_f24x2& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSP24X2)(ae_int32x2& d /*inout*/, const ae_int24x2& d0 /*in*/, const ae_int24x2& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSFP24X2RA_S2)(ae_f32x2& d /*inout*/, const ae_f24x2& d0 /*in*/, const ae_f24x2& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSFP24X2R_S2)(ae_f32x2& d /*inout*/, const ae_f24x2& d0 /*in*/, const ae_f24x2& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSP24X2_S2)(ae_int32x2& d /*inout*/, const ae_int24x2& d0 /*in*/, const ae_int24x2& d1 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULZAAFD24_HH_LL)(const ae_f24x2& d0 /*in*/, const ae_f24x2& d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZAAFP24S_HH_LL)(const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MULZAAD24_HH_LL)(const ae_int24x2& d0 /*in*/, const ae_int24x2& d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZAAP24S_HH_LL)(const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULZAAFD24_HH_LL_S2)(const ae_f24x2& d0 /*in*/, const ae_f24x2& d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZAAFP24S_HH_LL_S2)(const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MULZAAD24_HH_LL_S2)(const ae_int24x2& d0 /*in*/, const ae_int24x2& d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZAAP24S_HH_LL_S2)(const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULZAAFD24_HL_LH)(const ae_f24x2& d0 /*in*/, const ae_f24x2& d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZAAFP24S_HL_LH)(const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MULZAAD24_HL_LH)(const ae_int24x2& d0 /*in*/, const ae_int24x2& d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZAAP24S_HL_LH)(const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULZAAFD24_HL_LH_S2)(const ae_f24x2& d0 /*in*/, const ae_f24x2& d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZAAFP24S_HL_LH_S2)(const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MULZAAD24_HL_LH_S2)(const ae_int24x2& d0 /*in*/, const ae_int24x2& d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZAAP24S_HL_LH_S2)(const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULZASFD24_HH_LL)(const ae_f24x2& d0 /*in*/, const ae_f24x2& d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZASFP24S_HH_LL)(const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MULZASD24_HH_LL)(const ae_int24x2& d0 /*in*/, const ae_int24x2& d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZASP24S_HH_LL)(const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULZASFD24_HH_LL_S2)(const ae_f24x2& d0 /*in*/, const ae_f24x2& d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZASFP24S_HH_LL_S2)(const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MULZASD24_HH_LL_S2)(const ae_int24x2& d0 /*in*/, const ae_int24x2& d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZASP24S_HH_LL_S2)(const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULZASFD24_HL_LH)(const ae_f24x2& d0 /*in*/, const ae_f24x2& d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZASFP24S_HL_LH)(const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULZSAF48P24S_HL_LH)(const ae_f24x2& d0 /*in*/, const ae_f24x2& d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSAFP24S_HL_LH)(const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MULZASD24_HL_LH)(const ae_int24x2& d0 /*in*/, const ae_int24x2& d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZASP24S_HL_LH)(const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MULZSA64P24S_HL_LH)(const ae_int24x2& d0 /*in*/, const ae_int24x2& d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSAP24S_HL_LH)(const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULZASFD24_HL_LH_S2)(const ae_f24x2& d0 /*in*/, const ae_f24x2& d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZASFP24S_HL_LH_S2)(const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULZSAF48P24S_HL_LH_S2)(const ae_f24x2& d0 /*in*/, const ae_f24x2& d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSAFP24S_HL_LH_S2)(const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MULZASD24_HL_LH_S2)(const ae_int24x2& d0 /*in*/, const ae_int24x2& d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZASP24S_HL_LH_S2)(const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MULZSA64P24S_HL_LH_S2)(const ae_int24x2& d0 /*in*/, const ae_int24x2& d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSAP24S_HL_LH_S2)(const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULZSAFD24_HH_LL)(const ae_f24x2& d0 /*in*/, const ae_f24x2& d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSAFP24S_HH_LL)(const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MULZSAD24_HH_LL)(const ae_int24x2& d0 /*in*/, const ae_int24x2& d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSAP24S_HH_LL)(const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULZSAFD24_HH_LL_S2)(const ae_f24x2& d0 /*in*/, const ae_f24x2& d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSAFP24S_HH_LL_S2)(const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MULZSAD24_HH_LL_S2)(const ae_int24x2& d0 /*in*/, const ae_int24x2& d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSAP24S_HH_LL_S2)(const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULZSSFD24_HH_LL)(const ae_f24x2& d0 /*in*/, const ae_f24x2& d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSSFP24S_HH_LL)(const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MULZSSD24_HH_LL)(const ae_int24x2& d0 /*in*/, const ae_int24x2& d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSSP24S_HH_LL)(const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULZSSFD24_HH_LL_S2)(const ae_f24x2& d0 /*in*/, const ae_f24x2& d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSSFP24S_HH_LL_S2)(const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MULZSSD24_HH_LL_S2)(const ae_int24x2& d0 /*in*/, const ae_int24x2& d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSSP24S_HH_LL_S2)(const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULZSSFD24_HL_LH)(const ae_f24x2& d0 /*in*/, const ae_f24x2& d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSSFP24S_HL_LH)(const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MULZSSD24_HL_LH)(const ae_int24x2& d0 /*in*/, const ae_int24x2& d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSSP24S_HL_LH)(const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULZSSFD24_HL_LH_S2)(const ae_f24x2& d0 /*in*/, const ae_f24x2& d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSSFP24S_HL_LH_S2)(const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MULZSSD24_HL_LH_S2)(const ae_int24x2& d0 /*in*/, const ae_int24x2& d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSSP24S_HL_LH_S2)(const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAAFD24_HH_LL)(ae_f64& d /*inout*/, const ae_f24x2& d0 /*in*/, const ae_f24x2& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAAFP24S_HH_LL)(ae_q56s& d /*inout*/, const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAAD24_HH_LL)(ae_int64& d /*inout*/, const ae_int24x2& d0 /*in*/, const ae_int24x2& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAAP24S_HH_LL)(ae_q56s& d /*inout*/, const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAAFD24_HH_LL_S2)(ae_f64& d /*inout*/, const ae_f24x2& d0 /*in*/, const ae_f24x2& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAAFP24S_HH_LL_S2)(ae_q56s& d /*inout*/, const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAAD24_HH_LL_S2)(ae_int64& d /*inout*/, const ae_int24x2& d0 /*in*/, const ae_int24x2& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAAP24S_HH_LL_S2)(ae_q56s& d /*inout*/, const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAAFD24_HL_LH)(ae_f64& d /*inout*/, const ae_f24x2& d0 /*in*/, const ae_f24x2& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAAFP24S_HL_LH)(ae_q56s& d /*inout*/, const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAAD24_HL_LH)(ae_int64& d /*inout*/, const ae_int24x2& d0 /*in*/, const ae_int24x2& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAAP24S_HL_LH)(ae_q56s& d /*inout*/, const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAAFD24_HL_LH_S2)(ae_f64& d /*inout*/, const ae_f24x2& d0 /*in*/, const ae_f24x2& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAAFP24S_HL_LH_S2)(ae_q56s& d /*inout*/, const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAAD24_HL_LH_S2)(ae_int64& d /*inout*/, const ae_int24x2& d0 /*in*/, const ae_int24x2& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAAP24S_HL_LH_S2)(ae_q56s& d /*inout*/, const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULASFD24_HH_LL)(ae_f64& d /*inout*/, const ae_f24x2& d0 /*in*/, const ae_f24x2& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULASFP24S_HH_LL)(ae_q56s& d /*inout*/, const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULASD24_HH_LL)(ae_int64& d /*inout*/, const ae_int24x2& d0 /*in*/, const ae_int24x2& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULASP24S_HH_LL)(ae_q56s& d /*inout*/, const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULASFD24_HH_LL_S2)(ae_f64& d /*inout*/, const ae_f24x2& d0 /*in*/, const ae_f24x2& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULASFP24S_HH_LL_S2)(ae_q56s& d /*inout*/, const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULASD24_HH_LL_S2)(ae_int64& d /*inout*/, const ae_int24x2& d0 /*in*/, const ae_int24x2& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULASP24S_HH_LL_S2)(ae_q56s& d /*inout*/, const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULASFD24_HL_LH)(ae_f64& d /*inout*/, const ae_f24x2& d0 /*in*/, const ae_f24x2& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULASFP24S_HL_LH)(ae_q56s& d /*inout*/, const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSAF48P24S_HL_LH)(ae_f64& d /*inout*/, const ae_f24x2& d0 /*in*/, const ae_f24x2& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSAFP24S_HL_LH)(ae_q56s& d /*inout*/, const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULASD24_HL_LH)(ae_int64& d /*inout*/, const ae_int24x2& d0 /*in*/, const ae_int24x2& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULASP24S_HL_LH)(ae_q56s& d /*inout*/, const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSA64P24S_HL_LH)(ae_int64& d /*inout*/, const ae_int24x2& d0 /*in*/, const ae_int24x2& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSAP24S_HL_LH)(ae_q56s& d /*inout*/, const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULASFD24_HL_LH_S2)(ae_f64& d /*inout*/, const ae_f24x2& d0 /*in*/, const ae_f24x2& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULASFP24S_HL_LH_S2)(ae_q56s& d /*inout*/, const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSAF48P24S_HL_LH_S2)(ae_f64& d /*inout*/, const ae_f24x2& d0 /*in*/, const ae_f24x2& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSAFP24S_HL_LH_S2)(ae_q56s& d /*inout*/, const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULASD24_HL_LH_S2)(ae_int64& d /*inout*/, const ae_int24x2& d0 /*in*/, const ae_int24x2& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULASP24S_HL_LH_S2)(ae_q56s& d /*inout*/, const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSA64P24S_HL_LH_S2)(ae_int64& d /*inout*/, const ae_int24x2& d0 /*in*/, const ae_int24x2& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSAP24S_HL_LH_S2)(ae_q56s& d /*inout*/, const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSAFD24_HH_LL)(ae_f64& d /*inout*/, const ae_f24x2& d0 /*in*/, const ae_f24x2& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSAFP24S_HH_LL)(ae_q56s& d /*inout*/, const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSAD24_HH_LL)(ae_int64& d /*inout*/, const ae_int24x2& d0 /*in*/, const ae_int24x2& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSAP24S_HH_LL)(ae_q56s& d /*inout*/, const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSAFD24_HH_LL_S2)(ae_f64& d /*inout*/, const ae_f24x2& d0 /*in*/, const ae_f24x2& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSAFP24S_HH_LL_S2)(ae_q56s& d /*inout*/, const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSAD24_HH_LL_S2)(ae_int64& d /*inout*/, const ae_int24x2& d0 /*in*/, const ae_int24x2& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSAP24S_HH_LL_S2)(ae_q56s& d /*inout*/, const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSSFD24_HH_LL)(ae_f64& d /*inout*/, const ae_f24x2& d0 /*in*/, const ae_f24x2& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSSFP24S_HH_LL)(ae_q56s& d /*inout*/, const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSSD24_HH_LL)(ae_int64& d /*inout*/, const ae_int24x2& d0 /*in*/, const ae_int24x2& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSSP24S_HH_LL)(ae_q56s& d /*inout*/, const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSSFD24_HH_LL_S2)(ae_f64& d /*inout*/, const ae_f24x2& d0 /*in*/, const ae_f24x2& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSSFP24S_HH_LL_S2)(ae_q56s& d /*inout*/, const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSSD24_HH_LL_S2)(ae_int64& d /*inout*/, const ae_int24x2& d0 /*in*/, const ae_int24x2& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSSP24S_HH_LL_S2)(ae_q56s& d /*inout*/, const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSSFD24_HL_LH)(ae_f64& d /*inout*/, const ae_f24x2& d0 /*in*/, const ae_f24x2& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSSFP24S_HL_LH)(ae_q56s& d /*inout*/, const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSSD24_HL_LH)(ae_int64& d /*inout*/, const ae_int24x2& d0 /*in*/, const ae_int24x2& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSSP24S_HL_LH)(ae_q56s& d /*inout*/, const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSSFD24_HL_LH_S2)(ae_f64& d /*inout*/, const ae_f24x2& d0 /*in*/, const ae_f24x2& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSSFP24S_HL_LH_S2)(ae_q56s& d /*inout*/, const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSSD24_HL_LH_S2)(ae_int64& d /*inout*/, const ae_int24x2& d0 /*in*/, const ae_int24x2& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSSP24S_HL_LH_S2)(ae_q56s& d /*inout*/, const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSRFQ32SP24S_H)(ae_q56s& d /*inout*/, const ae_q56s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSRFQ32SP24S_L)(ae_q56s& d /*inout*/, const ae_q56s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSRFQ32SP24S_H_S2)(ae_q56s& d /*inout*/, const ae_q56s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSRFQ32SP24S_L_S2)(ae_q56s& d /*inout*/, const ae_q56s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULARFQ32SP24S_H)(ae_q56s& d /*inout*/, const ae_q56s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULARFQ32SP24S_L)(ae_q56s& d /*inout*/, const ae_q56s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULARFQ32SP24S_H_S2)(ae_q56s& d /*inout*/, const ae_q56s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULARFQ32SP24S_L_S2)(ae_q56s& d /*inout*/, const ae_q56s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULRFQ32SP24S_H)(const ae_q56s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULRFQ32SP24S_L)(const ae_q56s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULRFQ32SP24S_H_S2)(const ae_q56s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULRFQ32SP24S_L_S2)(const ae_q56s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSFQ32SP24S_H)(ae_q56s& d /*inout*/, const ae_q56s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSFQ32SP24S_L)(ae_q56s& d /*inout*/, const ae_q56s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSFQ32SP24S_H_S2)(ae_q56s& d /*inout*/, const ae_q56s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSFQ32SP24S_L_S2)(ae_q56s& d /*inout*/, const ae_q56s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAFQ32SP24S_H)(ae_q56s& d /*inout*/, const ae_q56s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAFQ32SP24S_L)(ae_q56s& d /*inout*/, const ae_q56s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAFQ32SP24S_H_S2)(ae_q56s& d /*inout*/, const ae_q56s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAFQ32SP24S_L_S2)(ae_q56s& d /*inout*/, const ae_q56s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULFQ32SP24S_H)(const ae_q56s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULFQ32SP24S_L)(const ae_q56s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULFQ32SP24S_H_S2)(const ae_q56s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULFQ32SP24S_L_S2)(const ae_q56s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULF32X16_L0)(const ae_f32x2& d1 /*in*/, const ae_f16x4& d0 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MUL32X16_L0)(const ae_int32x2& d1 /*in*/, const ae_int16x4& d0 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULF32X16_L0_S2)(const ae_f32x2& d1 /*in*/, const ae_f16x4& d0 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MUL32X16_L0_S2)(const ae_int32x2& d1 /*in*/, const ae_int16x4& d0 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULF32X16_L1)(const ae_f32x2& d1 /*in*/, const ae_f16x4& d0 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MUL32X16_L1)(const ae_int32x2& d1 /*in*/, const ae_int16x4& d0 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULF32X16_L1_S2)(const ae_f32x2& d1 /*in*/, const ae_f16x4& d0 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MUL32X16_L1_S2)(const ae_int32x2& d1 /*in*/, const ae_int16x4& d0 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULF32X16_L2)(const ae_f32x2& d1 /*in*/, const ae_f16x4& d0 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MUL32X16_L2)(const ae_int32x2& d1 /*in*/, const ae_int16x4& d0 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULF32X16_L2_S2)(const ae_f32x2& d1 /*in*/, const ae_f16x4& d0 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MUL32X16_L2_S2)(const ae_int32x2& d1 /*in*/, const ae_int16x4& d0 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULF32X16_L3)(const ae_f32x2& d1 /*in*/, const ae_f16x4& d0 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MUL32X16_L3)(const ae_int32x2& d1 /*in*/, const ae_int16x4& d0 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULF32X16_L3_S2)(const ae_f32x2& d1 /*in*/, const ae_f16x4& d0 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MUL32X16_L3_S2)(const ae_int32x2& d1 /*in*/, const ae_int16x4& d0 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULF32X16_H0)(const ae_f32x2& d1 /*in*/, const ae_f16x4& d0 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MUL32X16_H0)(const ae_int32x2& d1 /*in*/, const ae_int16x4& d0 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULF32X16_H0_S2)(const ae_f32x2& d1 /*in*/, const ae_f16x4& d0 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MUL32X16_H0_S2)(const ae_int32x2& d1 /*in*/, const ae_int16x4& d0 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULF32X16_H1)(const ae_f32x2& d1 /*in*/, const ae_f16x4& d0 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MUL32X16_H1)(const ae_int32x2& d1 /*in*/, const ae_int16x4& d0 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULF32X16_H1_S2)(const ae_f32x2& d1 /*in*/, const ae_f16x4& d0 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MUL32X16_H1_S2)(const ae_int32x2& d1 /*in*/, const ae_int16x4& d0 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULF32X16_H2)(const ae_f32x2& d1 /*in*/, const ae_f16x4& d0 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MUL32X16_H2)(const ae_int32x2& d1 /*in*/, const ae_int16x4& d0 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULF32X16_H2_S2)(const ae_f32x2& d1 /*in*/, const ae_f16x4& d0 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MUL32X16_H2_S2)(const ae_int32x2& d1 /*in*/, const ae_int16x4& d0 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULF32X16_H3)(const ae_f32x2& d1 /*in*/, const ae_f16x4& d0 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MUL32X16_H3)(const ae_int32x2& d1 /*in*/, const ae_int16x4& d0 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULF32X16_H3_S2)(const ae_f32x2& d1 /*in*/, const ae_f16x4& d0 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MUL32X16_H3_S2)(const ae_int32x2& d1 /*in*/, const ae_int16x4& d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAF32X16_L0)(ae_f64& d /*inout*/, const ae_f32x2& d1 /*in*/, const ae_f16x4& d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULA32X16_L0)(ae_int64& d /*inout*/, const ae_int32x2& d1 /*in*/, const ae_int16x4& d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAF32X16_L0_S2)(ae_f64& d /*inout*/, const ae_f32x2& d1 /*in*/, const ae_f16x4& d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULA32X16_L0_S2)(ae_int64& d /*inout*/, const ae_int32x2& d1 /*in*/, const ae_int16x4& d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAF32X16_L1)(ae_f64& d /*inout*/, const ae_f32x2& d1 /*in*/, const ae_f16x4& d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULA32X16_L1)(ae_int64& d /*inout*/, const ae_int32x2& d1 /*in*/, const ae_int16x4& d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAF32X16_L1_S2)(ae_f64& d /*inout*/, const ae_f32x2& d1 /*in*/, const ae_f16x4& d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULA32X16_L1_S2)(ae_int64& d /*inout*/, const ae_int32x2& d1 /*in*/, const ae_int16x4& d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAF32X16_L2)(ae_f64& d /*inout*/, const ae_f32x2& d1 /*in*/, const ae_f16x4& d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULA32X16_L2)(ae_int64& d /*inout*/, const ae_int32x2& d1 /*in*/, const ae_int16x4& d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAF32X16_L2_S2)(ae_f64& d /*inout*/, const ae_f32x2& d1 /*in*/, const ae_f16x4& d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULA32X16_L2_S2)(ae_int64& d /*inout*/, const ae_int32x2& d1 /*in*/, const ae_int16x4& d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAF32X16_L3)(ae_f64& d /*inout*/, const ae_f32x2& d1 /*in*/, const ae_f16x4& d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULA32X16_L3)(ae_int64& d /*inout*/, const ae_int32x2& d1 /*in*/, const ae_int16x4& d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAF32X16_L3_S2)(ae_f64& d /*inout*/, const ae_f32x2& d1 /*in*/, const ae_f16x4& d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULA32X16_L3_S2)(ae_int64& d /*inout*/, const ae_int32x2& d1 /*in*/, const ae_int16x4& d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAF32X16_H0)(ae_f64& d /*inout*/, const ae_f32x2& d1 /*in*/, const ae_f16x4& d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULA32X16_H0)(ae_int64& d /*inout*/, const ae_int32x2& d1 /*in*/, const ae_int16x4& d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAF32X16_H0_S2)(ae_f64& d /*inout*/, const ae_f32x2& d1 /*in*/, const ae_f16x4& d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULA32X16_H0_S2)(ae_int64& d /*inout*/, const ae_int32x2& d1 /*in*/, const ae_int16x4& d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAF32X16_H1)(ae_f64& d /*inout*/, const ae_f32x2& d1 /*in*/, const ae_f16x4& d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULA32X16_H1)(ae_int64& d /*inout*/, const ae_int32x2& d1 /*in*/, const ae_int16x4& d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAF32X16_H1_S2)(ae_f64& d /*inout*/, const ae_f32x2& d1 /*in*/, const ae_f16x4& d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULA32X16_H1_S2)(ae_int64& d /*inout*/, const ae_int32x2& d1 /*in*/, const ae_int16x4& d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAF32X16_H2)(ae_f64& d /*inout*/, const ae_f32x2& d1 /*in*/, const ae_f16x4& d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULA32X16_H2)(ae_int64& d /*inout*/, const ae_int32x2& d1 /*in*/, const ae_int16x4& d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAF32X16_H2_S2)(ae_f64& d /*inout*/, const ae_f32x2& d1 /*in*/, const ae_f16x4& d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULA32X16_H2_S2)(ae_int64& d /*inout*/, const ae_int32x2& d1 /*in*/, const ae_int16x4& d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAF32X16_H3)(ae_f64& d /*inout*/, const ae_f32x2& d1 /*in*/, const ae_f16x4& d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULA32X16_H3)(ae_int64& d /*inout*/, const ae_int32x2& d1 /*in*/, const ae_int16x4& d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAF32X16_H3_S2)(ae_f64& d /*inout*/, const ae_f32x2& d1 /*in*/, const ae_f16x4& d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULA32X16_H3_S2)(ae_int64& d /*inout*/, const ae_int32x2& d1 /*in*/, const ae_int16x4& d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSF32X16_L0)(ae_f64& d /*inout*/, const ae_f32x2& d1 /*in*/, const ae_f16x4& d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULS32X16_L0)(ae_int64& d /*inout*/, const ae_int32x2& d1 /*in*/, const ae_int16x4& d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSF32X16_L0_S2)(ae_f64& d /*inout*/, const ae_f32x2& d1 /*in*/, const ae_f16x4& d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULS32X16_L0_S2)(ae_int64& d /*inout*/, const ae_int32x2& d1 /*in*/, const ae_int16x4& d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSF32X16_L1)(ae_f64& d /*inout*/, const ae_f32x2& d1 /*in*/, const ae_f16x4& d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULS32X16_L1)(ae_int64& d /*inout*/, const ae_int32x2& d1 /*in*/, const ae_int16x4& d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSF32X16_L1_S2)(ae_f64& d /*inout*/, const ae_f32x2& d1 /*in*/, const ae_f16x4& d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULS32X16_L1_S2)(ae_int64& d /*inout*/, const ae_int32x2& d1 /*in*/, const ae_int16x4& d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSF32X16_L2)(ae_f64& d /*inout*/, const ae_f32x2& d1 /*in*/, const ae_f16x4& d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULS32X16_L2)(ae_int64& d /*inout*/, const ae_int32x2& d1 /*in*/, const ae_int16x4& d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSF32X16_L2_S2)(ae_f64& d /*inout*/, const ae_f32x2& d1 /*in*/, const ae_f16x4& d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULS32X16_L2_S2)(ae_int64& d /*inout*/, const ae_int32x2& d1 /*in*/, const ae_int16x4& d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSF32X16_L3)(ae_f64& d /*inout*/, const ae_f32x2& d1 /*in*/, const ae_f16x4& d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULS32X16_L3)(ae_int64& d /*inout*/, const ae_int32x2& d1 /*in*/, const ae_int16x4& d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSF32X16_L3_S2)(ae_f64& d /*inout*/, const ae_f32x2& d1 /*in*/, const ae_f16x4& d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULS32X16_L3_S2)(ae_int64& d /*inout*/, const ae_int32x2& d1 /*in*/, const ae_int16x4& d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSF32X16_H0)(ae_f64& d /*inout*/, const ae_f32x2& d1 /*in*/, const ae_f16x4& d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULS32X16_H0)(ae_int64& d /*inout*/, const ae_int32x2& d1 /*in*/, const ae_int16x4& d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSF32X16_H0_S2)(ae_f64& d /*inout*/, const ae_f32x2& d1 /*in*/, const ae_f16x4& d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULS32X16_H0_S2)(ae_int64& d /*inout*/, const ae_int32x2& d1 /*in*/, const ae_int16x4& d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSF32X16_H1)(ae_f64& d /*inout*/, const ae_f32x2& d1 /*in*/, const ae_f16x4& d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULS32X16_H1)(ae_int64& d /*inout*/, const ae_int32x2& d1 /*in*/, const ae_int16x4& d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSF32X16_H1_S2)(ae_f64& d /*inout*/, const ae_f32x2& d1 /*in*/, const ae_f16x4& d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULS32X16_H1_S2)(ae_int64& d /*inout*/, const ae_int32x2& d1 /*in*/, const ae_int16x4& d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSF32X16_H2)(ae_f64& d /*inout*/, const ae_f32x2& d1 /*in*/, const ae_f16x4& d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULS32X16_H2)(ae_int64& d /*inout*/, const ae_int32x2& d1 /*in*/, const ae_int16x4& d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSF32X16_H2_S2)(ae_f64& d /*inout*/, const ae_f32x2& d1 /*in*/, const ae_f16x4& d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULS32X16_H2_S2)(ae_int64& d /*inout*/, const ae_int32x2& d1 /*in*/, const ae_int16x4& d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSF32X16_H3)(ae_f64& d /*inout*/, const ae_f32x2& d1 /*in*/, const ae_f16x4& d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULS32X16_H3)(ae_int64& d /*inout*/, const ae_int32x2& d1 /*in*/, const ae_int16x4& d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSF32X16_H3_S2)(ae_f64& d /*inout*/, const ae_f32x2& d1 /*in*/, const ae_f16x4& d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULS32X16_H3_S2)(ae_int64& d /*inout*/, const ae_int32x2& d1 /*in*/, const ae_int16x4& d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAAFD32X16_H3_L2)(ae_f64& d /*inout*/, const ae_f32x2& d1 /*in*/, const ae_f16x4& d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAAD32X16_H3_L2)(ae_int64& d /*inout*/, const ae_int32x2& d1 /*in*/, const ae_int16x4& d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAAFD32X16_H3_L2_S2)(ae_f64& d /*inout*/, const ae_f32x2& d1 /*in*/, const ae_f16x4& d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAAD32X16_H3_L2_S2)(ae_int64& d /*inout*/, const ae_int32x2& d1 /*in*/, const ae_int16x4& d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAAFD32X16_H1_L0)(ae_f64& d /*inout*/, const ae_f32x2& d1 /*in*/, const ae_f16x4& d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAAD32X16_H1_L0)(ae_int64& d /*inout*/, const ae_int32x2& d1 /*in*/, const ae_int16x4& d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAAFD32X16_H1_L0_S2)(ae_f64& d /*inout*/, const ae_f32x2& d1 /*in*/, const ae_f16x4& d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAAD32X16_H1_L0_S2)(ae_int64& d /*inout*/, const ae_int32x2& d1 /*in*/, const ae_int16x4& d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULASFD32X16_H3_L2)(ae_f64& d /*inout*/, const ae_f32x2& d1 /*in*/, const ae_f16x4& d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULASD32X16_H3_L2)(ae_int64& d /*inout*/, const ae_int32x2& d1 /*in*/, const ae_int16x4& d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULASFD32X16_H3_L2_S2)(ae_f64& d /*inout*/, const ae_f32x2& d1 /*in*/, const ae_f16x4& d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULASD32X16_H3_L2_S2)(ae_int64& d /*inout*/, const ae_int32x2& d1 /*in*/, const ae_int16x4& d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULASFD32X16_H1_L0)(ae_f64& d /*inout*/, const ae_f32x2& d1 /*in*/, const ae_f16x4& d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULASD32X16_H1_L0)(ae_int64& d /*inout*/, const ae_int32x2& d1 /*in*/, const ae_int16x4& d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULASFD32X16_H1_L0_S2)(ae_f64& d /*inout*/, const ae_f32x2& d1 /*in*/, const ae_f16x4& d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULASD32X16_H1_L0_S2)(ae_int64& d /*inout*/, const ae_int32x2& d1 /*in*/, const ae_int16x4& d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSAFD32X16_H3_L2)(ae_f64& d /*inout*/, const ae_f32x2& d1 /*in*/, const ae_f16x4& d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSAD32X16_H3_L2)(ae_int64& d /*inout*/, const ae_int32x2& d1 /*in*/, const ae_int16x4& d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSAFD32X16_H3_L2_S2)(ae_f64& d /*inout*/, const ae_f32x2& d1 /*in*/, const ae_f16x4& d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSAD32X16_H3_L2_S2)(ae_int64& d /*inout*/, const ae_int32x2& d1 /*in*/, const ae_int16x4& d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSAFD32X16_H1_L0)(ae_f64& d /*inout*/, const ae_f32x2& d1 /*in*/, const ae_f16x4& d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSAD32X16_H1_L0)(ae_int64& d /*inout*/, const ae_int32x2& d1 /*in*/, const ae_int16x4& d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSAFD32X16_H1_L0_S2)(ae_f64& d /*inout*/, const ae_f32x2& d1 /*in*/, const ae_f16x4& d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSAD32X16_H1_L0_S2)(ae_int64& d /*inout*/, const ae_int32x2& d1 /*in*/, const ae_int16x4& d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSSFD32X16_H3_L2)(ae_f64& d /*inout*/, const ae_f32x2& d1 /*in*/, const ae_f16x4& d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSSD32X16_H3_L2)(ae_int64& d /*inout*/, const ae_int32x2& d1 /*in*/, const ae_int16x4& d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSSFD32X16_H3_L2_S2)(ae_f64& d /*inout*/, const ae_f32x2& d1 /*in*/, const ae_f16x4& d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSSD32X16_H3_L2_S2)(ae_int64& d /*inout*/, const ae_int32x2& d1 /*in*/, const ae_int16x4& d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSSFD32X16_H1_L0)(ae_f64& d /*inout*/, const ae_f32x2& d1 /*in*/, const ae_f16x4& d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSSD32X16_H1_L0)(ae_int64& d /*inout*/, const ae_int32x2& d1 /*in*/, const ae_int16x4& d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSSFD32X16_H1_L0_S2)(ae_f64& d /*inout*/, const ae_f32x2& d1 /*in*/, const ae_f16x4& d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSSD32X16_H1_L0_S2)(ae_int64& d /*inout*/, const ae_int32x2& d1 /*in*/, const ae_int16x4& d0 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULZAAFD32X16_H3_L2)(const ae_f32x2& d1 /*in*/, const ae_f16x4& d0 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MULZAAD32X16_H3_L2)(const ae_int32x2& d1 /*in*/, const ae_int16x4& d0 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULZAAFD32X16_H3_L2_S2)(const ae_f32x2& d1 /*in*/, const ae_f16x4& d0 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MULZAAD32X16_H3_L2_S2)(const ae_int32x2& d1 /*in*/, const ae_int16x4& d0 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULZAAFD32X16_H1_L0)(const ae_f32x2& d1 /*in*/, const ae_f16x4& d0 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MULZAAD32X16_H1_L0)(const ae_int32x2& d1 /*in*/, const ae_int16x4& d0 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULZAAFD32X16_H1_L0_S2)(const ae_f32x2& d1 /*in*/, const ae_f16x4& d0 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MULZAAD32X16_H1_L0_S2)(const ae_int32x2& d1 /*in*/, const ae_int16x4& d0 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULZASFD32X16_H3_L2)(const ae_f32x2& d1 /*in*/, const ae_f16x4& d0 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MULZASD32X16_H3_L2)(const ae_int32x2& d1 /*in*/, const ae_int16x4& d0 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULZASFD32X16_H3_L2_S2)(const ae_f32x2& d1 /*in*/, const ae_f16x4& d0 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MULZASD32X16_H3_L2_S2)(const ae_int32x2& d1 /*in*/, const ae_int16x4& d0 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULZASFD32X16_H1_L0)(const ae_f32x2& d1 /*in*/, const ae_f16x4& d0 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MULZASD32X16_H1_L0)(const ae_int32x2& d1 /*in*/, const ae_int16x4& d0 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULZASFD32X16_H1_L0_S2)(const ae_f32x2& d1 /*in*/, const ae_f16x4& d0 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MULZASD32X16_H1_L0_S2)(const ae_int32x2& d1 /*in*/, const ae_int16x4& d0 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULZSAFD32X16_H3_L2)(const ae_f32x2& d1 /*in*/, const ae_f16x4& d0 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MULZSAD32X16_H3_L2)(const ae_int32x2& d1 /*in*/, const ae_int16x4& d0 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULZSAFD32X16_H3_L2_S2)(const ae_f32x2& d1 /*in*/, const ae_f16x4& d0 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MULZSAD32X16_H3_L2_S2)(const ae_int32x2& d1 /*in*/, const ae_int16x4& d0 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULZSAFD32X16_H1_L0)(const ae_f32x2& d1 /*in*/, const ae_f16x4& d0 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MULZSAD32X16_H1_L0)(const ae_int32x2& d1 /*in*/, const ae_int16x4& d0 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULZSAFD32X16_H1_L0_S2)(const ae_f32x2& d1 /*in*/, const ae_f16x4& d0 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MULZSAD32X16_H1_L0_S2)(const ae_int32x2& d1 /*in*/, const ae_int16x4& d0 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULZSSFD32X16_H3_L2)(const ae_f32x2& d1 /*in*/, const ae_f16x4& d0 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MULZSSD32X16_H3_L2)(const ae_int32x2& d1 /*in*/, const ae_int16x4& d0 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULZSSFD32X16_H3_L2_S2)(const ae_f32x2& d1 /*in*/, const ae_f16x4& d0 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MULZSSD32X16_H3_L2_S2)(const ae_int32x2& d1 /*in*/, const ae_int16x4& d0 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULZSSFD32X16_H1_L0)(const ae_f32x2& d1 /*in*/, const ae_f16x4& d0 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MULZSSD32X16_H1_L0)(const ae_int32x2& d1 /*in*/, const ae_int16x4& d0 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULZSSFD32X16_H1_L0_S2)(const ae_f32x2& d1 /*in*/, const ae_f16x4& d0 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MULZSSD32X16_H1_L0_S2)(const ae_int32x2& d1 /*in*/, const ae_int16x4& d0 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULZAAFD32X16_H2_L3)(const ae_f32x2& d1 /*in*/, const ae_f16x4& d0 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULZAAFD32X16_H0_L1)(const ae_f32x2& d1 /*in*/, const ae_f16x4& d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAAFD32X16_H2_L3)(ae_f64& d /*inout*/, const ae_f32x2& d1 /*in*/, const ae_f16x4& d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAAFD32X16_H0_L1)(ae_f64& d /*inout*/, const ae_f32x2& d1 /*in*/, const ae_f16x4& d0 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MULZAAD32X16_H2_L3)(const ae_int32x2& d1 /*in*/, const ae_int16x4& d0 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MULZAAD32X16_H0_L1)(const ae_int32x2& d1 /*in*/, const ae_int16x4& d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAAD32X16_H2_L3)(ae_int64& d /*inout*/, const ae_int32x2& d1 /*in*/, const ae_int16x4& d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAAD32X16_H0_L1)(ae_int64& d /*inout*/, const ae_int32x2& d1 /*in*/, const ae_int16x4& d0 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULZAAFD32X16_H2_L3_S2)(const ae_f32x2& d1 /*in*/, const ae_f16x4& d0 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULZAAFD32X16_H0_L1_S2)(const ae_f32x2& d1 /*in*/, const ae_f16x4& d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAAFD32X16_H2_L3_S2)(ae_f64& d /*inout*/, const ae_f32x2& d1 /*in*/, const ae_f16x4& d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAAFD32X16_H0_L1_S2)(ae_f64& d /*inout*/, const ae_f32x2& d1 /*in*/, const ae_f16x4& d0 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MULZAAD32X16_H2_L3_S2)(const ae_int32x2& d1 /*in*/, const ae_int16x4& d0 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MULZAAD32X16_H0_L1_S2)(const ae_int32x2& d1 /*in*/, const ae_int16x4& d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAAD32X16_H2_L3_S2)(ae_int64& d /*inout*/, const ae_int32x2& d1 /*in*/, const ae_int16x4& d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAAD32X16_H0_L1_S2)(ae_int64& d /*inout*/, const ae_int32x2& d1 /*in*/, const ae_int16x4& d0 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_MULP32X16X2_H)(const ae_int32x2& d0 /*in*/, const ae_int16x4& d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_MULFP32X16X2RS_H)(const ae_f32x2& d0 /*in*/, const ae_f16x4& d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_MULFP32X16X2RAS_H)(const ae_f32x2& d0 /*in*/, const ae_f16x4& d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_MULFP32X16X2RS_H_S2)(const ae_f32x2& d0 /*in*/, const ae_f16x4& d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_MULFP32X16X2RAS_H_S2)(const ae_f32x2& d0 /*in*/, const ae_f16x4& d1 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_MULP32X16X2_L)(const ae_int32x2& d0 /*in*/, const ae_int16x4& d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_MULFP32X16X2RS_L)(const ae_f32x2& d0 /*in*/, const ae_f16x4& d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_MULFP32X16X2RAS_L)(const ae_f32x2& d0 /*in*/, const ae_f16x4& d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_MULFP32X16X2RS_L_S2)(const ae_f32x2& d0 /*in*/, const ae_f16x4& d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_MULFP32X16X2RAS_L_S2)(const ae_f32x2& d0 /*in*/, const ae_f16x4& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAP32X16X2_H)(ae_int32x2& d /*inout*/, const ae_int32x2& d0 /*in*/, const ae_int16x4& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAFP32X16X2RS_H)(ae_f32x2& d /*inout*/, const ae_f32x2& d0 /*in*/, const ae_f16x4& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAFP32X16X2RAS_H)(ae_f32x2& d /*inout*/, const ae_f32x2& d0 /*in*/, const ae_f16x4& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAFP32X16X2RS_H_S2)(ae_f32x2& d /*inout*/, const ae_f32x2& d0 /*in*/, const ae_f16x4& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAFP32X16X2RAS_H_S2)(ae_f32x2& d /*inout*/, const ae_f32x2& d0 /*in*/, const ae_f16x4& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAP32X16X2_L)(ae_int32x2& d /*inout*/, const ae_int32x2& d0 /*in*/, const ae_int16x4& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAFP32X16X2RS_L)(ae_f32x2& d /*inout*/, const ae_f32x2& d0 /*in*/, const ae_f16x4& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAFP32X16X2RAS_L)(ae_f32x2& d /*inout*/, const ae_f32x2& d0 /*in*/, const ae_f16x4& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAFP32X16X2RS_L_S2)(ae_f32x2& d /*inout*/, const ae_f32x2& d0 /*in*/, const ae_f16x4& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAFP32X16X2RAS_L_S2)(ae_f32x2& d /*inout*/, const ae_f32x2& d0 /*in*/, const ae_f16x4& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSP32X16X2_H)(ae_int32x2& d /*inout*/, const ae_int32x2& d0 /*in*/, const ae_int16x4& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSFP32X16X2RS_H)(ae_f32x2& d /*inout*/, const ae_f32x2& d0 /*in*/, const ae_f16x4& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSFP32X16X2RAS_H)(ae_f32x2& d /*inout*/, const ae_f32x2& d0 /*in*/, const ae_f16x4& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSFP32X16X2RS_H_S2)(ae_f32x2& d /*inout*/, const ae_f32x2& d0 /*in*/, const ae_f16x4& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSFP32X16X2RAS_H_S2)(ae_f32x2& d /*inout*/, const ae_f32x2& d0 /*in*/, const ae_f16x4& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSP32X16X2_L)(ae_int32x2& d /*inout*/, const ae_int32x2& d0 /*in*/, const ae_int16x4& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSFP32X16X2RS_L)(ae_f32x2& d /*inout*/, const ae_f32x2& d0 /*in*/, const ae_f16x4& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSFP32X16X2RAS_L)(ae_f32x2& d /*inout*/, const ae_f32x2& d0 /*in*/, const ae_f16x4& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSFP32X16X2RS_L_S2)(ae_f32x2& d /*inout*/, const ae_f32x2& d0 /*in*/, const ae_f16x4& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSFP32X16X2RAS_L_S2)(ae_f32x2& d /*inout*/, const ae_f32x2& d0 /*in*/, const ae_f16x4& d1 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_MULP32X2)(const ae_int32x2& d0 /*in*/, const ae_int32x2& d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_MULFP32X2RS)(const ae_f32x2& d0 /*in*/, const ae_f32x2& d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_MULFP32X2RAS)(const ae_f32x2& d0 /*in*/, const ae_f32x2& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAP32X2)(ae_int32x2& d /*inout*/, const ae_int32x2& d0 /*in*/, const ae_int32x2& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAFP32X2RS)(ae_f32x2& d /*inout*/, const ae_f32x2& d0 /*in*/, const ae_f32x2& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAFP32X2RAS)(ae_f32x2& d /*inout*/, const ae_f32x2& d0 /*in*/, const ae_f32x2& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSP32X2)(ae_int32x2& d /*inout*/, const ae_int32x2& d0 /*in*/, const ae_int32x2& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSFP32X2RS)(ae_f32x2& d /*inout*/, const ae_f32x2& d0 /*in*/, const ae_f32x2& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSFP32X2RAS)(ae_f32x2& d /*inout*/, const ae_f32x2& d0 /*in*/, const ae_f32x2& d1 /*in*/);
CSTUB_EXTERN ae_f16x4 CSTUB_(_TIE_xt_hifi2_AE_MULFP16X4S)(const ae_f16x4& d0 /*in*/, const ae_f16x4& d1 /*in*/);
CSTUB_EXTERN ae_f16x4 CSTUB_(_TIE_xt_hifi2_AE_MULFP16X4RAS)(const ae_f16x4& d0 /*in*/, const ae_f16x4& d1 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_MULC24)(const ae_int24x2& d0 /*in*/, const ae_int24x2& d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_MULFC24RA)(const ae_f24x2& d0 /*in*/, const ae_f24x2& d1 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_MULC32X16_L)(const ae_int32x2& d0 /*in*/, const ae_int16x4& d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_MULFC32X16RAS_L)(const ae_f32x2& d0 /*in*/, const ae_f16x4& d1 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_MULC32X16_H)(const ae_int32x2& d0 /*in*/, const ae_int16x4& d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_MULFC32X16RAS_H)(const ae_f32x2& d0 /*in*/, const ae_f16x4& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAC24)(ae_int32x2& d /*inout*/, const ae_int24x2& d0 /*in*/, const ae_int24x2& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAFC24RA)(ae_f32x2& d /*inout*/, const ae_f24x2& d0 /*in*/, const ae_f24x2& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAC32X16_L)(ae_int32x2& d /*inout*/, const ae_int32x2& d0 /*in*/, const ae_int16x4& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAFC32X16RAS_L)(ae_f32x2& d /*inout*/, const ae_f32x2& d0 /*in*/, const ae_f16x4& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAC32X16_H)(ae_int32x2& d /*inout*/, const ae_int32x2& d0 /*in*/, const ae_int16x4& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAFC32X16RAS_H)(ae_f32x2& d /*inout*/, const ae_f32x2& d0 /*in*/, const ae_f16x4& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULF16X4SS)(ae_f32x2& d0 /*out*/, ae_f32x2& d1 /*out*/, const ae_f16x4& d2 /*in*/, const ae_f16x4& d3 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAF16X4SS)(ae_f32x2& d0 /*inout*/, ae_f32x2& d1 /*inout*/, const ae_f16x4& d2 /*in*/, const ae_f16x4& d3 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSF16X4SS)(ae_f32x2& d0 /*inout*/, ae_f32x2& d1 /*inout*/, const ae_f16x4& d2 /*in*/, const ae_f16x4& d3 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MUL16X4)(ae_int32x2& d0 /*out*/, ae_int32x2& d1 /*out*/, const ae_int16x4& d2 /*in*/, const ae_int16x4& d3 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULA16X4)(ae_int32x2& d0 /*inout*/, ae_int32x2& d1 /*inout*/, const ae_int16x4& d2 /*in*/, const ae_int16x4& d3 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULS16X4)(ae_int32x2& d0 /*inout*/, ae_int32x2& d1 /*inout*/, const ae_int16x4& d2 /*in*/, const ae_int16x4& d3 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULFD24X2_FIR_H)(ae_f64& q0 /*out*/, ae_f64& q1 /*out*/, const ae_f24x2& d0 /*in*/, const ae_f24x2& d1 /*in*/, const ae_f24x2& c /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULFD24X2_FIR_L)(ae_f64& q0 /*out*/, ae_f64& q1 /*out*/, const ae_f24x2& d0 /*in*/, const ae_f24x2& d1 /*in*/, const ae_f24x2& c /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULFD32X16X2_FIR_HH)(ae_f64& q0 /*out*/, ae_f64& q1 /*out*/, const ae_f32x2& d0 /*in*/, const ae_f32x2& d1 /*in*/, const ae_f16x4& c /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULFD32X16X2_FIR_HL)(ae_f64& q0 /*out*/, ae_f64& q1 /*out*/, const ae_f32x2& d0 /*in*/, const ae_f32x2& d1 /*in*/, const ae_f16x4& c /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULFD32X16X2_FIR_LH)(ae_f64& q0 /*out*/, ae_f64& q1 /*out*/, const ae_f32x2& d0 /*in*/, const ae_f32x2& d1 /*in*/, const ae_f16x4& c /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULFD32X16X2_FIR_LL)(ae_f64& q0 /*out*/, ae_f64& q1 /*out*/, const ae_f32x2& d0 /*in*/, const ae_f32x2& d1 /*in*/, const ae_f16x4& c /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAFD24X2_FIR_H)(ae_f64& q0 /*inout*/, ae_f64& q1 /*inout*/, const ae_f24x2& d0 /*in*/, const ae_f24x2& d1 /*in*/, const ae_f24x2& c /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAFD24X2_FIR_L)(ae_f64& q0 /*inout*/, ae_f64& q1 /*inout*/, const ae_f24x2& d0 /*in*/, const ae_f24x2& d1 /*in*/, const ae_f24x2& c /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAFD32X16X2_FIR_HH)(ae_f64& q0 /*inout*/, ae_f64& q1 /*inout*/, const ae_f32x2& d0 /*in*/, const ae_f32x2& d1 /*in*/, const ae_f16x4& c /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAFD32X16X2_FIR_HL)(ae_f64& q0 /*inout*/, ae_f64& q1 /*inout*/, const ae_f32x2& d0 /*in*/, const ae_f32x2& d1 /*in*/, const ae_f16x4& c /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAFD32X16X2_FIR_LH)(ae_f64& q0 /*inout*/, ae_f64& q1 /*inout*/, const ae_f32x2& d0 /*in*/, const ae_f32x2& d1 /*in*/, const ae_f16x4& c /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAFD32X16X2_FIR_LL)(ae_f64& q0 /*inout*/, ae_f64& q1 /*inout*/, const ae_f32x2& d0 /*in*/, const ae_f32x2& d1 /*in*/, const ae_f16x4& c /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_DIV64D32_H)(ae_int64& d /*inout*/, const ae_int32x2& d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_DIV64D32_L)(ae_int64& d /*inout*/, const ae_int32x2& d0 /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_xt_hifi2_AE_LB)(const unsigned int ba /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_xt_hifi2_AE_LBI)(immediate ba /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_xt_hifi2_AE_LBK)(const unsigned int a0 /*in*/, const unsigned int ba /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_xt_hifi2_AE_LBKI)(const unsigned int a0 /*in*/, immediate ba /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_AE_LBS)(const unsigned int ba /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_AE_LBSI)(immediate ba /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_DB)(const unsigned short ** a /*inout*/, const unsigned int count /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_DBI)(const unsigned short ** a /*inout*/, immediate count /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_DB_IC)(const unsigned short ** a /*inout*/, const unsigned int count /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_DB_XC)(const unsigned short ** a /*inout*/, const unsigned int count /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_DBI_IC)(const unsigned short ** a /*inout*/, immediate count /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_DBI_XC)(const unsigned short ** a /*inout*/, immediate count /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_DB_IP)(const unsigned short ** a /*inout*/, const unsigned int count /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_DBI_IP)(const unsigned short ** a /*inout*/, immediate count /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_SEXT32)(const ae_int32x2& d0 /*in*/, immediate bit /*in*/);
CSTUB_EXTERN ae_p16s CSTUB_(_TIE_xt_hifi2_ae_p16s_move)(const ae_p16s& d0 /*in*/);
CSTUB_EXTERN ae_p16x2s CSTUB_(_TIE_xt_hifi2_ae_p16x2s_move)(const ae_p16x2s& d0 /*in*/);
CSTUB_EXTERN ae_int24 CSTUB_(_TIE_xt_hifi2_ae_int24_move)(const ae_int24& d0 /*in*/);
CSTUB_EXTERN ae_p24s CSTUB_(_TIE_xt_hifi2_ae_p24s_move)(const ae_p24s& d0 /*in*/);
CSTUB_EXTERN ae_int16 CSTUB_(_TIE_xt_hifi2_ae_int16_move)(const ae_int16& d0 /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_ae_int16x4_move)(const ae_int16x4& d0 /*in*/);
CSTUB_EXTERN ae_f16 CSTUB_(_TIE_xt_hifi2_ae_f16_move)(const ae_f16& d0 /*in*/);
CSTUB_EXTERN ae_f16x4 CSTUB_(_TIE_xt_hifi2_ae_f16x4_move)(const ae_f16x4& d0 /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_ae_int32_move)(const ae_int32& d0 /*in*/);
CSTUB_EXTERN ae_f32 CSTUB_(_TIE_xt_hifi2_ae_f32_move)(const ae_f32& d0 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_ae_p24x2s_move)(const ae_p24x2s& d0 /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_ae_int24x2_move)(const ae_int24x2& d0 /*in*/);
CSTUB_EXTERN ae_f24 CSTUB_(_TIE_xt_hifi2_ae_f24_move)(const ae_f24& d0 /*in*/);
CSTUB_EXTERN ae_p24f CSTUB_(_TIE_xt_hifi2_ae_p24f_move)(const ae_p24f& d0 /*in*/);
CSTUB_EXTERN ae_p24x2f CSTUB_(_TIE_xt_hifi2_ae_p24x2f_move)(const ae_p24x2f& d0 /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_ae_f24x2_move)(const ae_f24x2& d0 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_ae_int32x2_move)(const ae_int32x2& d0 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_ae_f32x2_move)(const ae_f32x2& d0 /*in*/);
CSTUB_EXTERN ae_q32s CSTUB_(_TIE_xt_hifi2_ae_q32s_move)(const ae_q32s& d0 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_ae_q56s_move)(const ae_q56s& d0 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_ae_int64_move)(const ae_int64& d0 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_ae_f64_move)(const ae_f64& d0 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_ae_p24x2f_rtor_ae_p24x2s)(const ae_p24x2f& d0 /*in*/);
CSTUB_EXTERN ae_p16x2s CSTUB_(_TIE_xt_hifi2_ae_p24x2f_rtor_ae_p16x2s)(const ae_p24x2f& d0 /*in*/);
CSTUB_EXTERN ae_p16s CSTUB_(_TIE_xt_hifi2_ae_p24x2f_rtor_ae_p16s)(const ae_p24x2f& d0 /*in*/);
CSTUB_EXTERN ae_p24s CSTUB_(_TIE_xt_hifi2_ae_p24x2f_rtor_ae_p24s)(const ae_p24x2f& d0 /*in*/);
CSTUB_EXTERN ae_p24f CSTUB_(_TIE_xt_hifi2_ae_p24x2f_rtor_ae_p24f)(const ae_p24x2f& d0 /*in*/);
CSTUB_EXTERN ae_p24x2f CSTUB_(_TIE_xt_hifi2_ae_p24x2s_rtor_ae_p24x2f)(const ae_p24x2s& d0 /*in*/);
CSTUB_EXTERN ae_p16x2s CSTUB_(_TIE_xt_hifi2_ae_p24x2s_rtor_ae_p16x2s)(const ae_p24x2s& d0 /*in*/);
CSTUB_EXTERN ae_p16s CSTUB_(_TIE_xt_hifi2_ae_p24x2s_rtor_ae_p16s)(const ae_p24x2s& d0 /*in*/);
CSTUB_EXTERN ae_p24s CSTUB_(_TIE_xt_hifi2_ae_p24x2s_rtor_ae_p24s)(const ae_p24x2s& d0 /*in*/);
CSTUB_EXTERN ae_p24f CSTUB_(_TIE_xt_hifi2_ae_p24x2s_rtor_ae_p24f)(const ae_p24x2s& d0 /*in*/);
CSTUB_EXTERN ae_p24x2f CSTUB_(_TIE_xt_hifi2_ae_p24s_rtor_ae_p24x2f)(const ae_p24s& d0 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_ae_p24s_rtor_ae_p24x2s)(const ae_p24s& d0 /*in*/);
CSTUB_EXTERN ae_p24x2f CSTUB_(_TIE_xt_hifi2_ae_p24f_rtor_ae_p24x2f)(const ae_p24f& d0 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_ae_p24f_rtor_ae_p24x2s)(const ae_p24f& d0 /*in*/);
CSTUB_EXTERN ae_q32s CSTUB_(_TIE_xt_hifi2_ae_q56s_rtor_ae_q32s)(const ae_q56s& d0 /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_CVTP24A16)(const unsigned int ai /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_CVTP24A16X2)(const unsigned int ah /*in*/, const unsigned int al /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_MOVPA24)(const unsigned int ai /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_TRUNCP24Q48)(const ae_q56s& d0 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_TRUNCI32F64S)(const ae_int64& d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_TRUNCA32F64S)(const ae_int64& d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_NOTP48)(const ae_int24x2& d0 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_NOT32)(const ae_int32x2& d0 /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_NOT16)(const ae_int16x4& d0 /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_NOT24)(const ae_int24x2& d0 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_NOTQ56)(const ae_q56s& d0 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_NOT64)(const ae_int64& d0 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_NOT)(const ae_int64& d0 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MULF48Q32SP16S_H)(const ae_int64& d0 /*in*/, const ae_int32x2& d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULFQ32SP16S_H)(const ae_q56s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MULF48Q32SP16U_H)(const ae_int64& d0 /*in*/, const ae_int32x2& d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULFQ32SP16U_H)(const ae_q56s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULQ32SP16S_H)(const ae_q56s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULQ32SP16U_H)(const ae_q56s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAF48Q32SP16S_H)(ae_int64& d /*inout*/, const ae_int64& d0 /*in*/, const ae_int32x2& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAFQ32SP16S_H)(ae_q56s& d /*inout*/, const ae_q56s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAF48Q32SP16U_H)(ae_int64& d /*inout*/, const ae_int64& d0 /*in*/, const ae_int32x2& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAFQ32SP16U_H)(ae_q56s& d /*inout*/, const ae_q56s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAQ32SP16S_H)(ae_q56s& d /*inout*/, const ae_q56s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAQ32SP16U_H)(ae_q56s& d /*inout*/, const ae_q56s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSF48Q32SP16S_H)(ae_int64& d /*inout*/, const ae_int64& d0 /*in*/, const ae_int32x2& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSFQ32SP16S_H)(ae_q56s& d /*inout*/, const ae_q56s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSF48Q32SP16U_H)(ae_int64& d /*inout*/, const ae_int64& d0 /*in*/, const ae_int32x2& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSFQ32SP16U_H)(ae_q56s& d /*inout*/, const ae_q56s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSQ32SP16S_H)(ae_q56s& d /*inout*/, const ae_q56s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSQ32SP16U_H)(ae_q56s& d /*inout*/, const ae_q56s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZAAFQ32SP16S_LL)(const ae_q56s& d0 /*in*/, const ae_int24x2& d1 /*in*/, const ae_q56s& d2 /*in*/, const ae_int24x2& d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZAAFQ32SP16S_LL_S2)(const ae_q56s& d0 /*in*/, const ae_int24x2& d1 /*in*/, const ae_q56s& d2 /*in*/, const ae_int24x2& d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZAAQ32SP16S_LL)(const ae_q56s& d0 /*in*/, const ae_int24x2& d1 /*in*/, const ae_q56s& d2 /*in*/, const ae_int24x2& d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZAAQ32SP16S_LL_S2)(const ae_q56s& d0 /*in*/, const ae_int24x2& d1 /*in*/, const ae_q56s& d2 /*in*/, const ae_int24x2& d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZAAFQ32SP16U_LL)(const ae_q56s& d0 /*in*/, const ae_int24x2& d1 /*in*/, const ae_q56s& d2 /*in*/, const ae_int24x2& d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZAAFQ32SP16U_LL_S2)(const ae_q56s& d0 /*in*/, const ae_int24x2& d1 /*in*/, const ae_q56s& d2 /*in*/, const ae_int24x2& d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZAAQ32SP16U_LL)(const ae_q56s& d0 /*in*/, const ae_int24x2& d1 /*in*/, const ae_q56s& d2 /*in*/, const ae_int24x2& d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZAAQ32SP16U_LL_S2)(const ae_q56s& d0 /*in*/, const ae_int24x2& d1 /*in*/, const ae_q56s& d2 /*in*/, const ae_int24x2& d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZAAFQ32SP16S_HH)(const ae_q56s& d0 /*in*/, const ae_int24x2& d1 /*in*/, const ae_q56s& d2 /*in*/, const ae_int24x2& d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZAAFQ32SP16S_HH_S2)(const ae_q56s& d0 /*in*/, const ae_int24x2& d1 /*in*/, const ae_q56s& d2 /*in*/, const ae_int24x2& d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZAAQ32SP16S_HH)(const ae_q56s& d0 /*in*/, const ae_int24x2& d1 /*in*/, const ae_q56s& d2 /*in*/, const ae_int24x2& d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZAAQ32SP16S_HH_S2)(const ae_q56s& d0 /*in*/, const ae_int24x2& d1 /*in*/, const ae_q56s& d2 /*in*/, const ae_int24x2& d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZAAFQ32SP16U_HH)(const ae_q56s& d0 /*in*/, const ae_int24x2& d1 /*in*/, const ae_q56s& d2 /*in*/, const ae_int24x2& d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZAAFQ32SP16U_HH_S2)(const ae_q56s& d0 /*in*/, const ae_int24x2& d1 /*in*/, const ae_q56s& d2 /*in*/, const ae_int24x2& d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZAAQ32SP16U_HH)(const ae_q56s& d0 /*in*/, const ae_int24x2& d1 /*in*/, const ae_q56s& d2 /*in*/, const ae_int24x2& d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZAAQ32SP16U_HH_S2)(const ae_q56s& d0 /*in*/, const ae_int24x2& d1 /*in*/, const ae_q56s& d2 /*in*/, const ae_int24x2& d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZAAFQ32SP16S_LH)(const ae_q56s& d0 /*in*/, const ae_int24x2& d1 /*in*/, const ae_q56s& d2 /*in*/, const ae_int24x2& d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZAAFQ32SP16S_LH_S2)(const ae_q56s& d0 /*in*/, const ae_int24x2& d1 /*in*/, const ae_q56s& d2 /*in*/, const ae_int24x2& d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZAAQ32SP16S_LH)(const ae_q56s& d0 /*in*/, const ae_int24x2& d1 /*in*/, const ae_q56s& d2 /*in*/, const ae_int24x2& d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZAAQ32SP16S_LH_S2)(const ae_q56s& d0 /*in*/, const ae_int24x2& d1 /*in*/, const ae_q56s& d2 /*in*/, const ae_int24x2& d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZAAFQ32SP16U_LH)(const ae_q56s& d0 /*in*/, const ae_int24x2& d1 /*in*/, const ae_q56s& d2 /*in*/, const ae_int24x2& d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZAAFQ32SP16U_LH_S2)(const ae_q56s& d0 /*in*/, const ae_int24x2& d1 /*in*/, const ae_q56s& d2 /*in*/, const ae_int24x2& d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZAAQ32SP16U_LH)(const ae_q56s& d0 /*in*/, const ae_int24x2& d1 /*in*/, const ae_q56s& d2 /*in*/, const ae_int24x2& d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZAAQ32SP16U_LH_S2)(const ae_q56s& d0 /*in*/, const ae_int24x2& d1 /*in*/, const ae_q56s& d2 /*in*/, const ae_int24x2& d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZASFQ32SP16S_LL)(const ae_q56s& d0 /*in*/, const ae_int24x2& d1 /*in*/, const ae_q56s& d2 /*in*/, const ae_int24x2& d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZASFQ32SP16S_LL_S2)(const ae_q56s& d0 /*in*/, const ae_int24x2& d1 /*in*/, const ae_q56s& d2 /*in*/, const ae_int24x2& d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZASQ32SP16S_LL)(const ae_q56s& d0 /*in*/, const ae_int24x2& d1 /*in*/, const ae_q56s& d2 /*in*/, const ae_int24x2& d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZASQ32SP16S_LL_S2)(const ae_q56s& d0 /*in*/, const ae_int24x2& d1 /*in*/, const ae_q56s& d2 /*in*/, const ae_int24x2& d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZASFQ32SP16U_LL)(const ae_q56s& d0 /*in*/, const ae_int24x2& d1 /*in*/, const ae_q56s& d2 /*in*/, const ae_int24x2& d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZASFQ32SP16U_LL_S2)(const ae_q56s& d0 /*in*/, const ae_int24x2& d1 /*in*/, const ae_q56s& d2 /*in*/, const ae_int24x2& d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZASQ32SP16U_LL)(const ae_q56s& d0 /*in*/, const ae_int24x2& d1 /*in*/, const ae_q56s& d2 /*in*/, const ae_int24x2& d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZASQ32SP16U_LL_S2)(const ae_q56s& d0 /*in*/, const ae_int24x2& d1 /*in*/, const ae_q56s& d2 /*in*/, const ae_int24x2& d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZASFQ32SP16S_HH)(const ae_q56s& d0 /*in*/, const ae_int24x2& d1 /*in*/, const ae_q56s& d2 /*in*/, const ae_int24x2& d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZASFQ32SP16S_HH_S2)(const ae_q56s& d0 /*in*/, const ae_int24x2& d1 /*in*/, const ae_q56s& d2 /*in*/, const ae_int24x2& d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZASQ32SP16S_HH)(const ae_q56s& d0 /*in*/, const ae_int24x2& d1 /*in*/, const ae_q56s& d2 /*in*/, const ae_int24x2& d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZASQ32SP16S_HH_S2)(const ae_q56s& d0 /*in*/, const ae_int24x2& d1 /*in*/, const ae_q56s& d2 /*in*/, const ae_int24x2& d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZASFQ32SP16U_HH)(const ae_q56s& d0 /*in*/, const ae_int24x2& d1 /*in*/, const ae_q56s& d2 /*in*/, const ae_int24x2& d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZASFQ32SP16U_HH_S2)(const ae_q56s& d0 /*in*/, const ae_int24x2& d1 /*in*/, const ae_q56s& d2 /*in*/, const ae_int24x2& d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZASQ32SP16U_HH)(const ae_q56s& d0 /*in*/, const ae_int24x2& d1 /*in*/, const ae_q56s& d2 /*in*/, const ae_int24x2& d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZASQ32SP16U_HH_S2)(const ae_q56s& d0 /*in*/, const ae_int24x2& d1 /*in*/, const ae_q56s& d2 /*in*/, const ae_int24x2& d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZASFQ32SP16S_LH)(const ae_q56s& d0 /*in*/, const ae_int24x2& d1 /*in*/, const ae_q56s& d2 /*in*/, const ae_int24x2& d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZASFQ32SP16S_LH_S2)(const ae_q56s& d0 /*in*/, const ae_int24x2& d1 /*in*/, const ae_q56s& d2 /*in*/, const ae_int24x2& d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZASQ32SP16S_LH)(const ae_q56s& d0 /*in*/, const ae_int24x2& d1 /*in*/, const ae_q56s& d2 /*in*/, const ae_int24x2& d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZASQ32SP16S_LH_S2)(const ae_q56s& d0 /*in*/, const ae_int24x2& d1 /*in*/, const ae_q56s& d2 /*in*/, const ae_int24x2& d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZASFQ32SP16U_LH)(const ae_q56s& d0 /*in*/, const ae_int24x2& d1 /*in*/, const ae_q56s& d2 /*in*/, const ae_int24x2& d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZASFQ32SP16U_LH_S2)(const ae_q56s& d0 /*in*/, const ae_int24x2& d1 /*in*/, const ae_q56s& d2 /*in*/, const ae_int24x2& d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZASQ32SP16U_LH)(const ae_q56s& d0 /*in*/, const ae_int24x2& d1 /*in*/, const ae_q56s& d2 /*in*/, const ae_int24x2& d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZASQ32SP16U_LH_S2)(const ae_q56s& d0 /*in*/, const ae_int24x2& d1 /*in*/, const ae_q56s& d2 /*in*/, const ae_int24x2& d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSAFQ32SP16S_LL)(const ae_q56s& d0 /*in*/, const ae_int24x2& d1 /*in*/, const ae_q56s& d2 /*in*/, const ae_int24x2& d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSAFQ32SP16S_LL_S2)(const ae_q56s& d0 /*in*/, const ae_int24x2& d1 /*in*/, const ae_q56s& d2 /*in*/, const ae_int24x2& d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSAQ32SP16S_LL)(const ae_q56s& d0 /*in*/, const ae_int24x2& d1 /*in*/, const ae_q56s& d2 /*in*/, const ae_int24x2& d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSAQ32SP16S_LL_S2)(const ae_q56s& d0 /*in*/, const ae_int24x2& d1 /*in*/, const ae_q56s& d2 /*in*/, const ae_int24x2& d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSAFQ32SP16U_LL)(const ae_q56s& d0 /*in*/, const ae_int24x2& d1 /*in*/, const ae_q56s& d2 /*in*/, const ae_int24x2& d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSAFQ32SP16U_LL_S2)(const ae_q56s& d0 /*in*/, const ae_int24x2& d1 /*in*/, const ae_q56s& d2 /*in*/, const ae_int24x2& d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSAQ32SP16U_LL)(const ae_q56s& d0 /*in*/, const ae_int24x2& d1 /*in*/, const ae_q56s& d2 /*in*/, const ae_int24x2& d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSAQ32SP16U_LL_S2)(const ae_q56s& d0 /*in*/, const ae_int24x2& d1 /*in*/, const ae_q56s& d2 /*in*/, const ae_int24x2& d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSAFQ32SP16S_HH)(const ae_q56s& d0 /*in*/, const ae_int24x2& d1 /*in*/, const ae_q56s& d2 /*in*/, const ae_int24x2& d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSAFQ32SP16S_HH_S2)(const ae_q56s& d0 /*in*/, const ae_int24x2& d1 /*in*/, const ae_q56s& d2 /*in*/, const ae_int24x2& d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSAQ32SP16S_HH)(const ae_q56s& d0 /*in*/, const ae_int24x2& d1 /*in*/, const ae_q56s& d2 /*in*/, const ae_int24x2& d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSAQ32SP16S_HH_S2)(const ae_q56s& d0 /*in*/, const ae_int24x2& d1 /*in*/, const ae_q56s& d2 /*in*/, const ae_int24x2& d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSAFQ32SP16U_HH)(const ae_q56s& d0 /*in*/, const ae_int24x2& d1 /*in*/, const ae_q56s& d2 /*in*/, const ae_int24x2& d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSAFQ32SP16U_HH_S2)(const ae_q56s& d0 /*in*/, const ae_int24x2& d1 /*in*/, const ae_q56s& d2 /*in*/, const ae_int24x2& d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSAQ32SP16U_HH)(const ae_q56s& d0 /*in*/, const ae_int24x2& d1 /*in*/, const ae_q56s& d2 /*in*/, const ae_int24x2& d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSAQ32SP16U_HH_S2)(const ae_q56s& d0 /*in*/, const ae_int24x2& d1 /*in*/, const ae_q56s& d2 /*in*/, const ae_int24x2& d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSAFQ32SP16S_LH)(const ae_q56s& d0 /*in*/, const ae_int24x2& d1 /*in*/, const ae_q56s& d2 /*in*/, const ae_int24x2& d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSAFQ32SP16S_LH_S2)(const ae_q56s& d0 /*in*/, const ae_int24x2& d1 /*in*/, const ae_q56s& d2 /*in*/, const ae_int24x2& d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSAQ32SP16S_LH)(const ae_q56s& d0 /*in*/, const ae_int24x2& d1 /*in*/, const ae_q56s& d2 /*in*/, const ae_int24x2& d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSAQ32SP16S_LH_S2)(const ae_q56s& d0 /*in*/, const ae_int24x2& d1 /*in*/, const ae_q56s& d2 /*in*/, const ae_int24x2& d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSAFQ32SP16U_LH)(const ae_q56s& d0 /*in*/, const ae_int24x2& d1 /*in*/, const ae_q56s& d2 /*in*/, const ae_int24x2& d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSAFQ32SP16U_LH_S2)(const ae_q56s& d0 /*in*/, const ae_int24x2& d1 /*in*/, const ae_q56s& d2 /*in*/, const ae_int24x2& d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSAQ32SP16U_LH)(const ae_q56s& d0 /*in*/, const ae_int24x2& d1 /*in*/, const ae_q56s& d2 /*in*/, const ae_int24x2& d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSAQ32SP16U_LH_S2)(const ae_q56s& d0 /*in*/, const ae_int24x2& d1 /*in*/, const ae_q56s& d2 /*in*/, const ae_int24x2& d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSSFQ32SP16S_LL)(const ae_q56s& d0 /*in*/, const ae_int24x2& d1 /*in*/, const ae_q56s& d2 /*in*/, const ae_int24x2& d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSSFQ32SP16S_LL_S2)(const ae_q56s& d0 /*in*/, const ae_int24x2& d1 /*in*/, const ae_q56s& d2 /*in*/, const ae_int24x2& d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSSQ32SP16S_LL)(const ae_q56s& d0 /*in*/, const ae_int24x2& d1 /*in*/, const ae_q56s& d2 /*in*/, const ae_int24x2& d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSSQ32SP16S_LL_S2)(const ae_q56s& d0 /*in*/, const ae_int24x2& d1 /*in*/, const ae_q56s& d2 /*in*/, const ae_int24x2& d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSSFQ32SP16U_LL)(const ae_q56s& d0 /*in*/, const ae_int24x2& d1 /*in*/, const ae_q56s& d2 /*in*/, const ae_int24x2& d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSSFQ32SP16U_LL_S2)(const ae_q56s& d0 /*in*/, const ae_int24x2& d1 /*in*/, const ae_q56s& d2 /*in*/, const ae_int24x2& d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSSQ32SP16U_LL)(const ae_q56s& d0 /*in*/, const ae_int24x2& d1 /*in*/, const ae_q56s& d2 /*in*/, const ae_int24x2& d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSSQ32SP16U_LL_S2)(const ae_q56s& d0 /*in*/, const ae_int24x2& d1 /*in*/, const ae_q56s& d2 /*in*/, const ae_int24x2& d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSSFQ32SP16S_HH)(const ae_q56s& d0 /*in*/, const ae_int24x2& d1 /*in*/, const ae_q56s& d2 /*in*/, const ae_int24x2& d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSSFQ32SP16S_HH_S2)(const ae_q56s& d0 /*in*/, const ae_int24x2& d1 /*in*/, const ae_q56s& d2 /*in*/, const ae_int24x2& d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSSQ32SP16S_HH)(const ae_q56s& d0 /*in*/, const ae_int24x2& d1 /*in*/, const ae_q56s& d2 /*in*/, const ae_int24x2& d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSSQ32SP16S_HH_S2)(const ae_q56s& d0 /*in*/, const ae_int24x2& d1 /*in*/, const ae_q56s& d2 /*in*/, const ae_int24x2& d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSSFQ32SP16U_HH)(const ae_q56s& d0 /*in*/, const ae_int24x2& d1 /*in*/, const ae_q56s& d2 /*in*/, const ae_int24x2& d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSSFQ32SP16U_HH_S2)(const ae_q56s& d0 /*in*/, const ae_int24x2& d1 /*in*/, const ae_q56s& d2 /*in*/, const ae_int24x2& d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSSQ32SP16U_HH)(const ae_q56s& d0 /*in*/, const ae_int24x2& d1 /*in*/, const ae_q56s& d2 /*in*/, const ae_int24x2& d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSSQ32SP16U_HH_S2)(const ae_q56s& d0 /*in*/, const ae_int24x2& d1 /*in*/, const ae_q56s& d2 /*in*/, const ae_int24x2& d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSSFQ32SP16S_LH)(const ae_q56s& d0 /*in*/, const ae_int24x2& d1 /*in*/, const ae_q56s& d2 /*in*/, const ae_int24x2& d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSSFQ32SP16S_LH_S2)(const ae_q56s& d0 /*in*/, const ae_int24x2& d1 /*in*/, const ae_q56s& d2 /*in*/, const ae_int24x2& d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSSQ32SP16S_LH)(const ae_q56s& d0 /*in*/, const ae_int24x2& d1 /*in*/, const ae_q56s& d2 /*in*/, const ae_int24x2& d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSSQ32SP16S_LH_S2)(const ae_q56s& d0 /*in*/, const ae_int24x2& d1 /*in*/, const ae_q56s& d2 /*in*/, const ae_int24x2& d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSSFQ32SP16U_LH)(const ae_q56s& d0 /*in*/, const ae_int24x2& d1 /*in*/, const ae_q56s& d2 /*in*/, const ae_int24x2& d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSSFQ32SP16U_LH_S2)(const ae_q56s& d0 /*in*/, const ae_int24x2& d1 /*in*/, const ae_q56s& d2 /*in*/, const ae_int24x2& d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSSQ32SP16U_LH)(const ae_q56s& d0 /*in*/, const ae_int24x2& d1 /*in*/, const ae_q56s& d2 /*in*/, const ae_int24x2& d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSSQ32SP16U_LH_S2)(const ae_q56s& d0 /*in*/, const ae_int24x2& d1 /*in*/, const ae_q56s& d2 /*in*/, const ae_int24x2& d3 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_VLDL16T)(xtbool& done /*out*/, unsigned int& symbol /*out*/, const unsigned short * a /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_VLDL16C)(const unsigned short ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_VLDL16C_XC)(const unsigned short ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_VLDL16C_IC)(const unsigned short ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_VLDL16C_IP)(const unsigned short ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_VLEL16T)(xtbool& done /*out*/, unsigned int& symbol /*inout*/, const unsigned short * a /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_VLES16C)(unsigned short ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_VLES16C_IC)(unsigned short ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_VLES16C_XC)(unsigned short ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_VLES16C_IP)(unsigned short ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_VLDL32T)(xtbool& done /*out*/, unsigned int& symbol /*out*/, const unsigned int * a /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_VLEL32T)(xtbool& done /*out*/, unsigned int& symbol /*inout*/, const unsigned int * a /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SB)(unsigned short ** a /*inout*/, const unsigned int bits /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SB_IC)(unsigned short ** a /*inout*/, const unsigned int bits /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SB_XC)(unsigned short ** a /*inout*/, const unsigned int bits /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SB_IP)(unsigned short ** a /*inout*/, const unsigned int bits /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SBI)(unsigned short ** a /*inout*/, const unsigned int bits /*in*/, immediate count /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SBI_IC)(unsigned short ** a /*inout*/, const unsigned int bits /*in*/, immediate count /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SBI_XC)(unsigned short ** a /*inout*/, const unsigned int bits /*in*/, immediate count /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SBI_IP)(unsigned short ** a /*inout*/, const unsigned int bits /*in*/, immediate count /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SBF)(unsigned short ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SBF_IC)(unsigned short ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SBF_XC)(unsigned short ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SBF_IP)(unsigned short ** a /*inout*/);
CSTUB_EXTERN ae_f32x4 CSTUB_(_TIE_xt_hifi2_AE_F16X4_MULF_F16X4)(const ae_f16x4& d0 /*in*/, const ae_f16x4& d1 /*in*/);
CSTUB_EXTERN ae_int32x4 CSTUB_(_TIE_xt_hifi2_AE_INT16X4_MUL_INT16X4)(const ae_int16x4& d0 /*in*/, const ae_int16x4& d1 /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_INT24X2_ADD_INT24X2)(const ae_int24x2& d0 /*in*/, const ae_int24x2& d1 /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_INT24X2_SUB_INT24X2)(const ae_int24x2& d0 /*in*/, const ae_int24x2& d1 /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_INT24X2_AND_INT24X2)(const ae_int24x2& d0 /*in*/, const ae_int24x2& d1 /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_INT24X2_XOR_INT24X2)(const ae_int24x2& d0 /*in*/, const ae_int24x2& d1 /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_INT24X2_OR_INT24X2)(const ae_int24x2& d0 /*in*/, const ae_int24x2& d1 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_INT24X2_MUL_INT24X2)(const ae_int24x2& d0 /*in*/, const ae_int24x2& d1 /*in*/);
CSTUB_EXTERN xtbool2 CSTUB_(_TIE_xt_hifi2_AE_INT24X2_EQ_INT24X2)(const ae_int24x2& d0 /*in*/, const ae_int24x2& d1 /*in*/);
CSTUB_EXTERN xtbool2 CSTUB_(_TIE_xt_hifi2_AE_INT24X2_LT_INT24X2)(const ae_int24x2& d0 /*in*/, const ae_int24x2& d1 /*in*/);
CSTUB_EXTERN xtbool2 CSTUB_(_TIE_xt_hifi2_AE_INT24X2_LE_INT24X2)(const ae_int24x2& d0 /*in*/, const ae_int24x2& d1 /*in*/);
CSTUB_EXTERN xtbool2 CSTUB_(_TIE_xt_hifi2_AE_INT24X2_GT_INT24X2)(const ae_int24x2& d0 /*in*/, const ae_int24x2& d1 /*in*/);
CSTUB_EXTERN xtbool2 CSTUB_(_TIE_xt_hifi2_AE_INT24X2_GE_INT24X2)(const ae_int24x2& d0 /*in*/, const ae_int24x2& d1 /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_INT24X2_ADD_INT24)(const ae_int24x2& d0 /*in*/, const ae_int24& d1 /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_INT24X2_SUB_INT24)(const ae_int24x2& d0 /*in*/, const ae_int24& d1 /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_INT24X2_AND_INT24)(const ae_int24x2& d0 /*in*/, const ae_int24& d1 /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_INT24X2_XOR_INT24)(const ae_int24x2& d0 /*in*/, const ae_int24& d1 /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_INT24X2_OR_INT24)(const ae_int24x2& d0 /*in*/, const ae_int24& d1 /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_INT24X2_NEG)(const ae_int24x2& d0 /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_INT24X2_BNOT)(const ae_int24x2& d0 /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_INT24X2_SLA)(const ae_int24x2& d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_INT24X2_SRA)(const ae_int24x2& d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_INT24X2_SLAI)(const ae_int24x2& d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_INT24X2_SRAI)(const ae_int24x2& d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_INT24_ADD_INT24X2)(const ae_int24& d0 /*in*/, const ae_int24x2& d1 /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_INT24_SUB_INT24X2)(const ae_int24& d0 /*in*/, const ae_int24x2& d1 /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_INT24_AND_INT24X2)(const ae_int24& d0 /*in*/, const ae_int24x2& d1 /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_INT24_XOR_INT24X2)(const ae_int24& d0 /*in*/, const ae_int24x2& d1 /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_INT24_OR_INT24X2)(const ae_int24& d0 /*in*/, const ae_int24x2& d1 /*in*/);
CSTUB_EXTERN ae_int24 CSTUB_(_TIE_xt_hifi2_AE_INT24_ADD_INT24)(const ae_int24& d0 /*in*/, const ae_int24& d1 /*in*/);
CSTUB_EXTERN ae_int24 CSTUB_(_TIE_xt_hifi2_AE_INT24_SUB_INT24)(const ae_int24& d0 /*in*/, const ae_int24& d1 /*in*/);
CSTUB_EXTERN ae_int24 CSTUB_(_TIE_xt_hifi2_AE_INT24_AND_INT24)(const ae_int24& d0 /*in*/, const ae_int24& d1 /*in*/);
CSTUB_EXTERN ae_int24 CSTUB_(_TIE_xt_hifi2_AE_INT24_XOR_INT24)(const ae_int24& d0 /*in*/, const ae_int24& d1 /*in*/);
CSTUB_EXTERN ae_int24 CSTUB_(_TIE_xt_hifi2_AE_INT24_OR_INT24)(const ae_int24& d0 /*in*/, const ae_int24& d1 /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_INT24_MUL_INT24)(const ae_int24& d0 /*in*/, const ae_int24& d1 /*in*/);
CSTUB_EXTERN ae_int24 CSTUB_(_TIE_xt_hifi2_AE_INT24_NEG)(const ae_int24& d0 /*in*/);
CSTUB_EXTERN ae_int24 CSTUB_(_TIE_xt_hifi2_AE_INT24_BNOT)(const ae_int24& d0 /*in*/);
CSTUB_EXTERN ae_int24 CSTUB_(_TIE_xt_hifi2_AE_INT24_SLA)(const ae_int24& d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_int24 CSTUB_(_TIE_xt_hifi2_AE_INT24_SRA)(const ae_int24& d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_int24 CSTUB_(_TIE_xt_hifi2_AE_INT24_SLAI)(const ae_int24& d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_int24 CSTUB_(_TIE_xt_hifi2_AE_INT24_SRAI)(const ae_int24& d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_AE_F24X2_ADDS_F24X2)(const ae_f24x2& d0 /*in*/, const ae_f24x2& d1 /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_AE_F24X2_SUBS_F24X2)(const ae_f24x2& d0 /*in*/, const ae_f24x2& d1 /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_AE_F24X2_AND_F24X2)(const ae_f24x2& d0 /*in*/, const ae_f24x2& d1 /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_AE_F24X2_XOR_F24X2)(const ae_f24x2& d0 /*in*/, const ae_f24x2& d1 /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_AE_F24X2_OR_F24X2)(const ae_f24x2& d0 /*in*/, const ae_f24x2& d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_F24X2_MULF_F24X2)(const ae_f24x2& d0 /*in*/, const ae_f24x2& d1 /*in*/);
CSTUB_EXTERN xtbool2 CSTUB_(_TIE_xt_hifi2_AE_F24X2_EQ_F24X2)(const ae_f24x2& d0 /*in*/, const ae_f24x2& d1 /*in*/);
CSTUB_EXTERN xtbool2 CSTUB_(_TIE_xt_hifi2_AE_F24X2_LT_F24X2)(const ae_f24x2& d0 /*in*/, const ae_f24x2& d1 /*in*/);
CSTUB_EXTERN xtbool2 CSTUB_(_TIE_xt_hifi2_AE_F24X2_LE_F24X2)(const ae_f24x2& d0 /*in*/, const ae_f24x2& d1 /*in*/);
CSTUB_EXTERN xtbool2 CSTUB_(_TIE_xt_hifi2_AE_F24X2_GT_F24X2)(const ae_f24x2& d0 /*in*/, const ae_f24x2& d1 /*in*/);
CSTUB_EXTERN xtbool2 CSTUB_(_TIE_xt_hifi2_AE_F24X2_GE_F24X2)(const ae_f24x2& d0 /*in*/, const ae_f24x2& d1 /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_AE_F24X2_ADDS_F24)(const ae_f24x2& d0 /*in*/, const ae_f24& d1 /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_AE_F24X2_SUBS_F24)(const ae_f24x2& d0 /*in*/, const ae_f24& d1 /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_AE_F24X2_AND_F24)(const ae_f24x2& d0 /*in*/, const ae_f24& d1 /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_AE_F24X2_XOR_F24)(const ae_f24x2& d0 /*in*/, const ae_f24& d1 /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_AE_F24X2_OR_F24)(const ae_f24x2& d0 /*in*/, const ae_f24& d1 /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_AE_F24X2_NEGS)(const ae_f24x2& d0 /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_AE_F24X2_BNOT)(const ae_f24x2& d0 /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_AE_F24X2_SLA)(const ae_f24x2& d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_AE_F24X2_SRA)(const ae_f24x2& d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_AE_F24X2_SLAI)(const ae_f24x2& d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_AE_F24X2_SRAI)(const ae_f24x2& d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_AE_F24_ADDS_F24X2)(const ae_f24& d0 /*in*/, const ae_f24x2& d1 /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_AE_F24_SUBS_F24X2)(const ae_f24& d0 /*in*/, const ae_f24x2& d1 /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_AE_F24_AND_F24X2)(const ae_f24& d0 /*in*/, const ae_f24x2& d1 /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_AE_F24_XOR_F24X2)(const ae_f24& d0 /*in*/, const ae_f24x2& d1 /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_AE_F24_OR_F24X2)(const ae_f24& d0 /*in*/, const ae_f24x2& d1 /*in*/);
CSTUB_EXTERN ae_f24 CSTUB_(_TIE_xt_hifi2_AE_F24_ADDS_F24)(const ae_f24& d0 /*in*/, const ae_f24& d1 /*in*/);
CSTUB_EXTERN ae_f24 CSTUB_(_TIE_xt_hifi2_AE_F24_SUBS_F24)(const ae_f24& d0 /*in*/, const ae_f24& d1 /*in*/);
CSTUB_EXTERN ae_f24 CSTUB_(_TIE_xt_hifi2_AE_F24_AND_F24)(const ae_f24& d0 /*in*/, const ae_f24& d1 /*in*/);
CSTUB_EXTERN ae_f24 CSTUB_(_TIE_xt_hifi2_AE_F24_XOR_F24)(const ae_f24& d0 /*in*/, const ae_f24& d1 /*in*/);
CSTUB_EXTERN ae_f24 CSTUB_(_TIE_xt_hifi2_AE_F24_OR_F24)(const ae_f24& d0 /*in*/, const ae_f24& d1 /*in*/);
CSTUB_EXTERN ae_f32 CSTUB_(_TIE_xt_hifi2_AE_F24_MULF_F24)(const ae_f24& d0 /*in*/, const ae_f24& d1 /*in*/);
CSTUB_EXTERN ae_f24 CSTUB_(_TIE_xt_hifi2_AE_F24_NEGS)(const ae_f24& d0 /*in*/);
CSTUB_EXTERN ae_f24 CSTUB_(_TIE_xt_hifi2_AE_F24_BNOT)(const ae_f24& d0 /*in*/);
CSTUB_EXTERN ae_f24 CSTUB_(_TIE_xt_hifi2_AE_F24_SLA)(const ae_f24& d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_f24 CSTUB_(_TIE_xt_hifi2_AE_F24_SRA)(const ae_f24& d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_f24 CSTUB_(_TIE_xt_hifi2_AE_F24_SLAI)(const ae_f24& d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_f24 CSTUB_(_TIE_xt_hifi2_AE_F24_SRAI)(const ae_f24& d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_INT16X4_ADD_INT16X4)(const ae_int16x4& d0 /*in*/, const ae_int16x4& d1 /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_INT16X4_SUB_INT16X4)(const ae_int16x4& d0 /*in*/, const ae_int16x4& d1 /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_INT16X4_AND_INT16X4)(const ae_int16x4& d0 /*in*/, const ae_int16x4& d1 /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_INT16X4_XOR_INT16X4)(const ae_int16x4& d0 /*in*/, const ae_int16x4& d1 /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_INT16X4_OR_INT16X4)(const ae_int16x4& d0 /*in*/, const ae_int16x4& d1 /*in*/);
CSTUB_EXTERN xtbool4 CSTUB_(_TIE_xt_hifi2_AE_INT16X4_EQ_INT16X4)(const ae_int16x4& d0 /*in*/, const ae_int16x4& d1 /*in*/);
CSTUB_EXTERN xtbool4 CSTUB_(_TIE_xt_hifi2_AE_INT16X4_LT_INT16X4)(const ae_int16x4& d0 /*in*/, const ae_int16x4& d1 /*in*/);
CSTUB_EXTERN xtbool4 CSTUB_(_TIE_xt_hifi2_AE_INT16X4_LE_INT16X4)(const ae_int16x4& d0 /*in*/, const ae_int16x4& d1 /*in*/);
CSTUB_EXTERN xtbool4 CSTUB_(_TIE_xt_hifi2_AE_INT16X4_GT_INT16X4)(const ae_int16x4& d0 /*in*/, const ae_int16x4& d1 /*in*/);
CSTUB_EXTERN xtbool4 CSTUB_(_TIE_xt_hifi2_AE_INT16X4_GE_INT16X4)(const ae_int16x4& d0 /*in*/, const ae_int16x4& d1 /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_INT16X4_ADD_INT16)(const ae_int16x4& d0 /*in*/, const ae_int16& d1 /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_INT16X4_SUB_INT16)(const ae_int16x4& d0 /*in*/, const ae_int16& d1 /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_INT16X4_AND_INT16)(const ae_int16x4& d0 /*in*/, const ae_int16& d1 /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_INT16X4_XOR_INT16)(const ae_int16x4& d0 /*in*/, const ae_int16& d1 /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_INT16X4_OR_INT16)(const ae_int16x4& d0 /*in*/, const ae_int16& d1 /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_INT16X4_NEG)(const ae_int16x4& d0 /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_INT16X4_BNOT)(const ae_int16x4& d0 /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_INT16X4_SRA)(const ae_int16x4& d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_INT16X4_SRAI)(const ae_int16x4& d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_INT16_ADD_INT16X4)(const ae_int16& d0 /*in*/, const ae_int16x4& d1 /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_INT16_SUB_INT16X4)(const ae_int16& d0 /*in*/, const ae_int16x4& d1 /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_INT16_AND_INT16X4)(const ae_int16& d0 /*in*/, const ae_int16x4& d1 /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_INT16_XOR_INT16X4)(const ae_int16& d0 /*in*/, const ae_int16x4& d1 /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_INT16_OR_INT16X4)(const ae_int16& d0 /*in*/, const ae_int16x4& d1 /*in*/);
CSTUB_EXTERN ae_int16 CSTUB_(_TIE_xt_hifi2_AE_INT16_ADD_INT16)(const ae_int16& d0 /*in*/, const ae_int16& d1 /*in*/);
CSTUB_EXTERN ae_int16 CSTUB_(_TIE_xt_hifi2_AE_INT16_SUB_INT16)(const ae_int16& d0 /*in*/, const ae_int16& d1 /*in*/);
CSTUB_EXTERN ae_int16 CSTUB_(_TIE_xt_hifi2_AE_INT16_AND_INT16)(const ae_int16& d0 /*in*/, const ae_int16& d1 /*in*/);
CSTUB_EXTERN ae_int16 CSTUB_(_TIE_xt_hifi2_AE_INT16_XOR_INT16)(const ae_int16& d0 /*in*/, const ae_int16& d1 /*in*/);
CSTUB_EXTERN ae_int16 CSTUB_(_TIE_xt_hifi2_AE_INT16_OR_INT16)(const ae_int16& d0 /*in*/, const ae_int16& d1 /*in*/);
CSTUB_EXTERN ae_int16 CSTUB_(_TIE_xt_hifi2_AE_INT16_NEG)(const ae_int16& d0 /*in*/);
CSTUB_EXTERN ae_int16 CSTUB_(_TIE_xt_hifi2_AE_INT16_BNOT)(const ae_int16& d0 /*in*/);
CSTUB_EXTERN ae_int16 CSTUB_(_TIE_xt_hifi2_AE_INT16_SRA)(const ae_int16& d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_int16 CSTUB_(_TIE_xt_hifi2_AE_INT16_SRAI)(const ae_int16& d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_f16x4 CSTUB_(_TIE_xt_hifi2_AE_F16X4_ADDS_F16X4)(const ae_f16x4& d0 /*in*/, const ae_f16x4& d1 /*in*/);
CSTUB_EXTERN ae_f16x4 CSTUB_(_TIE_xt_hifi2_AE_F16X4_SUBS_F16X4)(const ae_f16x4& d0 /*in*/, const ae_f16x4& d1 /*in*/);
CSTUB_EXTERN ae_f16x4 CSTUB_(_TIE_xt_hifi2_AE_F16X4_AND_F16X4)(const ae_f16x4& d0 /*in*/, const ae_f16x4& d1 /*in*/);
CSTUB_EXTERN ae_f16x4 CSTUB_(_TIE_xt_hifi2_AE_F16X4_XOR_F16X4)(const ae_f16x4& d0 /*in*/, const ae_f16x4& d1 /*in*/);
CSTUB_EXTERN ae_f16x4 CSTUB_(_TIE_xt_hifi2_AE_F16X4_OR_F16X4)(const ae_f16x4& d0 /*in*/, const ae_f16x4& d1 /*in*/);
CSTUB_EXTERN xtbool4 CSTUB_(_TIE_xt_hifi2_AE_F16X4_EQ_F16X4)(const ae_f16x4& d0 /*in*/, const ae_f16x4& d1 /*in*/);
CSTUB_EXTERN xtbool4 CSTUB_(_TIE_xt_hifi2_AE_F16X4_LT_F16X4)(const ae_f16x4& d0 /*in*/, const ae_f16x4& d1 /*in*/);
CSTUB_EXTERN xtbool4 CSTUB_(_TIE_xt_hifi2_AE_F16X4_LE_F16X4)(const ae_f16x4& d0 /*in*/, const ae_f16x4& d1 /*in*/);
CSTUB_EXTERN xtbool4 CSTUB_(_TIE_xt_hifi2_AE_F16X4_GT_F16X4)(const ae_f16x4& d0 /*in*/, const ae_f16x4& d1 /*in*/);
CSTUB_EXTERN xtbool4 CSTUB_(_TIE_xt_hifi2_AE_F16X4_GE_F16X4)(const ae_f16x4& d0 /*in*/, const ae_f16x4& d1 /*in*/);
CSTUB_EXTERN ae_f16x4 CSTUB_(_TIE_xt_hifi2_AE_F16X4_ADDS_F16)(const ae_f16x4& d0 /*in*/, const ae_f16& d1 /*in*/);
CSTUB_EXTERN ae_f16x4 CSTUB_(_TIE_xt_hifi2_AE_F16X4_SUBS_F16)(const ae_f16x4& d0 /*in*/, const ae_f16& d1 /*in*/);
CSTUB_EXTERN ae_f16x4 CSTUB_(_TIE_xt_hifi2_AE_F16X4_AND_F16)(const ae_f16x4& d0 /*in*/, const ae_f16& d1 /*in*/);
CSTUB_EXTERN ae_f16x4 CSTUB_(_TIE_xt_hifi2_AE_F16X4_XOR_F16)(const ae_f16x4& d0 /*in*/, const ae_f16& d1 /*in*/);
CSTUB_EXTERN ae_f16x4 CSTUB_(_TIE_xt_hifi2_AE_F16X4_OR_F16)(const ae_f16x4& d0 /*in*/, const ae_f16& d1 /*in*/);
CSTUB_EXTERN ae_f16x4 CSTUB_(_TIE_xt_hifi2_AE_F16X4_NEGS)(const ae_f16x4& d0 /*in*/);
CSTUB_EXTERN ae_f16x4 CSTUB_(_TIE_xt_hifi2_AE_F16X4_BNOT)(const ae_f16x4& d0 /*in*/);
CSTUB_EXTERN ae_f16x4 CSTUB_(_TIE_xt_hifi2_AE_F16X4_SLAS)(const ae_f16x4& d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_f16x4 CSTUB_(_TIE_xt_hifi2_AE_F16X4_SRA)(const ae_f16x4& d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_f16x4 CSTUB_(_TIE_xt_hifi2_AE_F16X4_SLAIS)(const ae_f16x4& d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_f16x4 CSTUB_(_TIE_xt_hifi2_AE_F16X4_SRAI)(const ae_f16x4& d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_f16x4 CSTUB_(_TIE_xt_hifi2_AE_F16_ADDS_F16X4)(const ae_f16& d0 /*in*/, const ae_f16x4& d1 /*in*/);
CSTUB_EXTERN ae_f16x4 CSTUB_(_TIE_xt_hifi2_AE_F16_SUBS_F16X4)(const ae_f16& d0 /*in*/, const ae_f16x4& d1 /*in*/);
CSTUB_EXTERN ae_f16x4 CSTUB_(_TIE_xt_hifi2_AE_F16_AND_F16X4)(const ae_f16& d0 /*in*/, const ae_f16x4& d1 /*in*/);
CSTUB_EXTERN ae_f16x4 CSTUB_(_TIE_xt_hifi2_AE_F16_XOR_F16X4)(const ae_f16& d0 /*in*/, const ae_f16x4& d1 /*in*/);
CSTUB_EXTERN ae_f16x4 CSTUB_(_TIE_xt_hifi2_AE_F16_OR_F16X4)(const ae_f16& d0 /*in*/, const ae_f16x4& d1 /*in*/);
CSTUB_EXTERN ae_f16 CSTUB_(_TIE_xt_hifi2_AE_F16_ADDS_F16)(const ae_f16& d0 /*in*/, const ae_f16& d1 /*in*/);
CSTUB_EXTERN ae_f16 CSTUB_(_TIE_xt_hifi2_AE_F16_SUBS_F16)(const ae_f16& d0 /*in*/, const ae_f16& d1 /*in*/);
CSTUB_EXTERN ae_f16 CSTUB_(_TIE_xt_hifi2_AE_F16_AND_F16)(const ae_f16& d0 /*in*/, const ae_f16& d1 /*in*/);
CSTUB_EXTERN ae_f16 CSTUB_(_TIE_xt_hifi2_AE_F16_XOR_F16)(const ae_f16& d0 /*in*/, const ae_f16& d1 /*in*/);
CSTUB_EXTERN ae_f16 CSTUB_(_TIE_xt_hifi2_AE_F16_OR_F16)(const ae_f16& d0 /*in*/, const ae_f16& d1 /*in*/);
CSTUB_EXTERN ae_f16 CSTUB_(_TIE_xt_hifi2_AE_F16_NEGS)(const ae_f16& d0 /*in*/);
CSTUB_EXTERN ae_f16 CSTUB_(_TIE_xt_hifi2_AE_F16_BNOT)(const ae_f16& d0 /*in*/);
CSTUB_EXTERN ae_f16 CSTUB_(_TIE_xt_hifi2_AE_F16_SLAS)(const ae_f16& d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_f16 CSTUB_(_TIE_xt_hifi2_AE_F16_SRA)(const ae_f16& d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_f16 CSTUB_(_TIE_xt_hifi2_AE_F16_SLAIS)(const ae_f16& d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_f16 CSTUB_(_TIE_xt_hifi2_AE_F16_SRAI)(const ae_f16& d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_INT32X2_ADD_INT32X2)(const ae_int32x2& d0 /*in*/, const ae_int32x2& d1 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_INT32X2_SUB_INT32X2)(const ae_int32x2& d0 /*in*/, const ae_int32x2& d1 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_INT32X2_AND_INT32X2)(const ae_int32x2& d0 /*in*/, const ae_int32x2& d1 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_INT32X2_XOR_INT32X2)(const ae_int32x2& d0 /*in*/, const ae_int32x2& d1 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_INT32X2_OR_INT32X2)(const ae_int32x2& d0 /*in*/, const ae_int32x2& d1 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_INT32X2_MUL_INT32X2)(const ae_int32x2& d0 /*in*/, const ae_int32x2& d1 /*in*/);
CSTUB_EXTERN xtbool2 CSTUB_(_TIE_xt_hifi2_AE_INT32X2_EQ_INT32X2)(const ae_int32x2& d0 /*in*/, const ae_int32x2& d1 /*in*/);
CSTUB_EXTERN xtbool2 CSTUB_(_TIE_xt_hifi2_AE_INT32X2_LT_INT32X2)(const ae_int32x2& d0 /*in*/, const ae_int32x2& d1 /*in*/);
CSTUB_EXTERN xtbool2 CSTUB_(_TIE_xt_hifi2_AE_INT32X2_LE_INT32X2)(const ae_int32x2& d0 /*in*/, const ae_int32x2& d1 /*in*/);
CSTUB_EXTERN xtbool2 CSTUB_(_TIE_xt_hifi2_AE_INT32X2_GT_INT32X2)(const ae_int32x2& d0 /*in*/, const ae_int32x2& d1 /*in*/);
CSTUB_EXTERN xtbool2 CSTUB_(_TIE_xt_hifi2_AE_INT32X2_GE_INT32X2)(const ae_int32x2& d0 /*in*/, const ae_int32x2& d1 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_INT32X2_ADD_INT32)(const ae_int32x2& d0 /*in*/, const ae_int32& d1 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_INT32X2_SUB_INT32)(const ae_int32x2& d0 /*in*/, const ae_int32& d1 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_INT32X2_AND_INT32)(const ae_int32x2& d0 /*in*/, const ae_int32& d1 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_INT32X2_XOR_INT32)(const ae_int32x2& d0 /*in*/, const ae_int32& d1 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_INT32X2_OR_INT32)(const ae_int32x2& d0 /*in*/, const ae_int32& d1 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_INT32X2_NEG)(const ae_int32x2& d0 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_INT32X2_BNOT)(const ae_int32x2& d0 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_INT32X2_SLA)(const ae_int32x2& d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_INT32X2_SRA)(const ae_int32x2& d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_INT32X2_SLAI)(const ae_int32x2& d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_INT32X2_SRAI)(const ae_int32x2& d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_INT32_ADD_INT32X2)(const ae_int32& d0 /*in*/, const ae_int32x2& d1 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_INT32_SUB_INT32X2)(const ae_int32& d0 /*in*/, const ae_int32x2& d1 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_INT32_AND_INT32X2)(const ae_int32& d0 /*in*/, const ae_int32x2& d1 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_INT32_XOR_INT32X2)(const ae_int32& d0 /*in*/, const ae_int32x2& d1 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_INT32_OR_INT32X2)(const ae_int32& d0 /*in*/, const ae_int32x2& d1 /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_INT32_ADD_INT32)(const ae_int32& d0 /*in*/, const ae_int32& d1 /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_INT32_SUB_INT32)(const ae_int32& d0 /*in*/, const ae_int32& d1 /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_INT32_AND_INT32)(const ae_int32& d0 /*in*/, const ae_int32& d1 /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_INT32_XOR_INT32)(const ae_int32& d0 /*in*/, const ae_int32& d1 /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_INT32_OR_INT32)(const ae_int32& d0 /*in*/, const ae_int32& d1 /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_INT32_MUL_INT32)(const ae_int32& d0 /*in*/, const ae_int32& d1 /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_INT32_NEG)(const ae_int32& d0 /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_INT32_BNOT)(const ae_int32& d0 /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_INT32_SLA)(const ae_int32& d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_INT32_SRA)(const ae_int32& d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_INT32_SLAI)(const ae_int32& d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_INT32_SRAI)(const ae_int32& d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_F32X2_ADDS_F32X2)(const ae_f32x2& d0 /*in*/, const ae_f32x2& d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_F32X2_SUBS_F32X2)(const ae_f32x2& d0 /*in*/, const ae_f32x2& d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_F32X2_AND_F32X2)(const ae_f32x2& d0 /*in*/, const ae_f32x2& d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_F32X2_XOR_F32X2)(const ae_f32x2& d0 /*in*/, const ae_f32x2& d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_F32X2_OR_F32X2)(const ae_f32x2& d0 /*in*/, const ae_f32x2& d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_F32X2_MULF_F32X2)(const ae_f32x2& d0 /*in*/, const ae_f32x2& d1 /*in*/);
CSTUB_EXTERN xtbool2 CSTUB_(_TIE_xt_hifi2_AE_F32X2_EQ_F32X2)(const ae_f32x2& d0 /*in*/, const ae_f32x2& d1 /*in*/);
CSTUB_EXTERN xtbool2 CSTUB_(_TIE_xt_hifi2_AE_F32X2_LT_F32X2)(const ae_f32x2& d0 /*in*/, const ae_f32x2& d1 /*in*/);
CSTUB_EXTERN xtbool2 CSTUB_(_TIE_xt_hifi2_AE_F32X2_LE_F32X2)(const ae_f32x2& d0 /*in*/, const ae_f32x2& d1 /*in*/);
CSTUB_EXTERN xtbool2 CSTUB_(_TIE_xt_hifi2_AE_F32X2_GT_F32X2)(const ae_f32x2& d0 /*in*/, const ae_f32x2& d1 /*in*/);
CSTUB_EXTERN xtbool2 CSTUB_(_TIE_xt_hifi2_AE_F32X2_GE_F32X2)(const ae_f32x2& d0 /*in*/, const ae_f32x2& d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_F32X2_ADDS_F32)(const ae_f32x2& d0 /*in*/, const ae_f32& d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_F32X2_SUBS_F32)(const ae_f32x2& d0 /*in*/, const ae_f32& d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_F32X2_AND_F32)(const ae_f32x2& d0 /*in*/, const ae_f32& d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_F32X2_XOR_F32)(const ae_f32x2& d0 /*in*/, const ae_f32& d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_F32X2_OR_F32)(const ae_f32x2& d0 /*in*/, const ae_f32& d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_F32X2_NEGS)(const ae_f32x2& d0 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_F32X2_BNOT)(const ae_f32x2& d0 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_F32X2_SLAS)(const ae_f32x2& d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_F32X2_SRA)(const ae_f32x2& d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_F32X2_SLAIS)(const ae_f32x2& d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_F32X2_SRAI)(const ae_f32x2& d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_F32_ADDS_F32X2)(const ae_f32& d0 /*in*/, const ae_f32x2& d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_F32_SUBS_F32X2)(const ae_f32& d0 /*in*/, const ae_f32x2& d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_F32_AND_F32X2)(const ae_f32& d0 /*in*/, const ae_f32x2& d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_F32_XOR_F32X2)(const ae_f32& d0 /*in*/, const ae_f32x2& d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_F32_OR_F32X2)(const ae_f32& d0 /*in*/, const ae_f32x2& d1 /*in*/);
CSTUB_EXTERN ae_f32 CSTUB_(_TIE_xt_hifi2_AE_F32_ADDS_F32)(const ae_f32& d0 /*in*/, const ae_f32& d1 /*in*/);
CSTUB_EXTERN ae_f32 CSTUB_(_TIE_xt_hifi2_AE_F32_SUBS_F32)(const ae_f32& d0 /*in*/, const ae_f32& d1 /*in*/);
CSTUB_EXTERN ae_f32 CSTUB_(_TIE_xt_hifi2_AE_F32_AND_F32)(const ae_f32& d0 /*in*/, const ae_f32& d1 /*in*/);
CSTUB_EXTERN ae_f32 CSTUB_(_TIE_xt_hifi2_AE_F32_XOR_F32)(const ae_f32& d0 /*in*/, const ae_f32& d1 /*in*/);
CSTUB_EXTERN ae_f32 CSTUB_(_TIE_xt_hifi2_AE_F32_OR_F32)(const ae_f32& d0 /*in*/, const ae_f32& d1 /*in*/);
CSTUB_EXTERN ae_f32 CSTUB_(_TIE_xt_hifi2_AE_F32_MULF_F32)(const ae_f32& d0 /*in*/, const ae_f32& d1 /*in*/);
CSTUB_EXTERN ae_f32 CSTUB_(_TIE_xt_hifi2_AE_F32_NEGS)(const ae_f32& d0 /*in*/);
CSTUB_EXTERN ae_f32 CSTUB_(_TIE_xt_hifi2_AE_F32_BNOT)(const ae_f32& d0 /*in*/);
CSTUB_EXTERN ae_f32 CSTUB_(_TIE_xt_hifi2_AE_F32_SLAS)(const ae_f32& d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_f32 CSTUB_(_TIE_xt_hifi2_AE_F32_SRA)(const ae_f32& d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_f32 CSTUB_(_TIE_xt_hifi2_AE_F32_SLAIS)(const ae_f32& d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_f32 CSTUB_(_TIE_xt_hifi2_AE_F32_SRAI)(const ae_f32& d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_INT64_ADD)(const ae_int64& d0 /*in*/, const ae_int64& d1 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_INT64_SUB)(const ae_int64& d0 /*in*/, const ae_int64& d1 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_INT64_AND)(const ae_int64& d0 /*in*/, const ae_int64& d1 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_INT64_XOR)(const ae_int64& d0 /*in*/, const ae_int64& d1 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_INT64_OR)(const ae_int64& d0 /*in*/, const ae_int64& d1 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_INT64_NEG)(const ae_int64& d0 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_INT64_BNOT)(const ae_int64& d0 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_INT64_SLA)(const ae_int64& d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_INT64_SRA)(const ae_int64& d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_INT64_SLAI)(const ae_int64& d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_INT64_SRAI)(const ae_int64& d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN xtbool CSTUB_(_TIE_xt_hifi2_AE_INT64_EQ)(const ae_int64& d0 /*in*/, const ae_int64& d1 /*in*/);
CSTUB_EXTERN xtbool CSTUB_(_TIE_xt_hifi2_AE_INT64_LT)(const ae_int64& d0 /*in*/, const ae_int64& d1 /*in*/);
CSTUB_EXTERN xtbool CSTUB_(_TIE_xt_hifi2_AE_INT64_LE)(const ae_int64& d0 /*in*/, const ae_int64& d1 /*in*/);
CSTUB_EXTERN xtbool CSTUB_(_TIE_xt_hifi2_AE_INT64_GT)(const ae_int64& d0 /*in*/, const ae_int64& d1 /*in*/);
CSTUB_EXTERN xtbool CSTUB_(_TIE_xt_hifi2_AE_INT64_GE)(const ae_int64& d0 /*in*/, const ae_int64& d1 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_F64_ADDS)(const ae_f64& d0 /*in*/, const ae_f64& d1 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_F64_SUBS)(const ae_f64& d0 /*in*/, const ae_f64& d1 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_F64_AND)(const ae_f64& d0 /*in*/, const ae_f64& d1 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_F64_XOR)(const ae_f64& d0 /*in*/, const ae_f64& d1 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_F64_OR)(const ae_f64& d0 /*in*/, const ae_f64& d1 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_F64_NEGS)(const ae_f64& d0 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_F64_BNOT)(const ae_f64& d0 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_F64_SLAS)(const ae_f64& d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_F64_SRA)(const ae_f64& d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_F64_SLAIS)(const ae_f64& d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_F64_SRAI)(const ae_f64& d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN xtbool CSTUB_(_TIE_xt_hifi2_AE_F64_EQ)(const ae_f64& d0 /*in*/, const ae_f64& d1 /*in*/);
CSTUB_EXTERN xtbool CSTUB_(_TIE_xt_hifi2_AE_F64_LT)(const ae_f64& d0 /*in*/, const ae_f64& d1 /*in*/);
CSTUB_EXTERN xtbool CSTUB_(_TIE_xt_hifi2_AE_F64_LE)(const ae_f64& d0 /*in*/, const ae_f64& d1 /*in*/);
CSTUB_EXTERN xtbool CSTUB_(_TIE_xt_hifi2_AE_F64_GT)(const ae_f64& d0 /*in*/, const ae_f64& d1 /*in*/);
CSTUB_EXTERN xtbool CSTUB_(_TIE_xt_hifi2_AE_F64_GE)(const ae_f64& d0 /*in*/, const ae_f64& d1 /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_INT32_MUL_INT16)(const ae_int32& d0 /*in*/, const ae_int16& d1 /*in*/);
CSTUB_EXTERN ae_f32 CSTUB_(_TIE_xt_hifi2_AE_F32_MUL_F16)(const ae_f32& d0 /*in*/, const ae_f16& d1 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_P24X2S_ADDS_P24X2S)(const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_P24X2S_SUBS_P24X2S)(const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_P24X2S_AND_P24X2S)(const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_P24X2S_XOR_P24X2S)(const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_P24X2S_OR_P24X2S)(const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_P24X2S_MULF_P24X2S)(const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN xtbool2 CSTUB_(_TIE_xt_hifi2_AE_P24X2S_EQ_P24X2S)(const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN xtbool2 CSTUB_(_TIE_xt_hifi2_AE_P24X2S_LT_P24X2S)(const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN xtbool2 CSTUB_(_TIE_xt_hifi2_AE_P24X2S_LE_P24X2S)(const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN xtbool2 CSTUB_(_TIE_xt_hifi2_AE_P24X2S_GT_P24X2S)(const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN xtbool2 CSTUB_(_TIE_xt_hifi2_AE_P24X2S_GE_P24X2S)(const ae_p24x2s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_P24X2S_ADDS_P24X2F)(const ae_p24x2s& d0 /*in*/, const ae_p24x2f& d1 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_P24X2S_SUBS_P24X2F)(const ae_p24x2s& d0 /*in*/, const ae_p24x2f& d1 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_P24X2S_AND_P24X2F)(const ae_p24x2s& d0 /*in*/, const ae_p24x2f& d1 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_P24X2S_XOR_P24X2F)(const ae_p24x2s& d0 /*in*/, const ae_p24x2f& d1 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_P24X2S_OR_P24X2F)(const ae_p24x2s& d0 /*in*/, const ae_p24x2f& d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_P24X2S_MULF_P24X2F)(const ae_p24x2s& d0 /*in*/, const ae_p24x2f& d1 /*in*/);
CSTUB_EXTERN xtbool2 CSTUB_(_TIE_xt_hifi2_AE_P24X2S_EQ_P24X2F)(const ae_p24x2s& d0 /*in*/, const ae_p24x2f& d1 /*in*/);
CSTUB_EXTERN xtbool2 CSTUB_(_TIE_xt_hifi2_AE_P24X2S_LT_P24X2F)(const ae_p24x2s& d0 /*in*/, const ae_p24x2f& d1 /*in*/);
CSTUB_EXTERN xtbool2 CSTUB_(_TIE_xt_hifi2_AE_P24X2S_LE_P24X2F)(const ae_p24x2s& d0 /*in*/, const ae_p24x2f& d1 /*in*/);
CSTUB_EXTERN xtbool2 CSTUB_(_TIE_xt_hifi2_AE_P24X2S_GT_P24X2F)(const ae_p24x2s& d0 /*in*/, const ae_p24x2f& d1 /*in*/);
CSTUB_EXTERN xtbool2 CSTUB_(_TIE_xt_hifi2_AE_P24X2S_GE_P24X2F)(const ae_p24x2s& d0 /*in*/, const ae_p24x2f& d1 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_P24X2S_ADDS_P24S)(const ae_p24x2s& d0 /*in*/, const ae_p24s& d1 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_P24X2S_SUBS_P24S)(const ae_p24x2s& d0 /*in*/, const ae_p24s& d1 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_P24X2S_AND_P24S)(const ae_p24x2s& d0 /*in*/, const ae_p24s& d1 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_P24X2S_XOR_P24S)(const ae_p24x2s& d0 /*in*/, const ae_p24s& d1 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_P24X2S_OR_P24S)(const ae_p24x2s& d0 /*in*/, const ae_p24s& d1 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_P24X2S_ADDS_P24F)(const ae_p24x2s& d0 /*in*/, const ae_p24f& d1 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_P24X2S_SUBS_P24F)(const ae_p24x2s& d0 /*in*/, const ae_p24f& d1 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_P24X2S_AND_P24F)(const ae_p24x2s& d0 /*in*/, const ae_p24f& d1 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_P24X2S_XOR_P24F)(const ae_p24x2s& d0 /*in*/, const ae_p24f& d1 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_P24X2S_OR_P24F)(const ae_p24x2s& d0 /*in*/, const ae_p24f& d1 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_P24X2S_NEGS)(const ae_p24x2s& d0 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_P24X2S_BNOT)(const ae_p24x2s& d0 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_P24X2S_SLAS)(const ae_p24x2s& d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_P24X2S_SRA)(const ae_p24x2s& d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_P24X2S_SLAIS)(const ae_p24x2s& d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_P24X2S_SRAI)(const ae_p24x2s& d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_P24X2F_ADDS_P24X2S)(const ae_p24x2f& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_P24X2F_SUBS_P24X2S)(const ae_p24x2f& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_P24X2F_AND_P24X2S)(const ae_p24x2f& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_P24X2F_XOR_P24X2S)(const ae_p24x2f& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_P24X2F_OR_P24X2S)(const ae_p24x2f& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_P24X2F_MULF_P24X2S)(const ae_p24x2f& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN xtbool2 CSTUB_(_TIE_xt_hifi2_AE_P24X2F_EQ_P24X2S)(const ae_p24x2f& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN xtbool2 CSTUB_(_TIE_xt_hifi2_AE_P24X2F_LT_P24X2S)(const ae_p24x2f& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN xtbool2 CSTUB_(_TIE_xt_hifi2_AE_P24X2F_LE_P24X2S)(const ae_p24x2f& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN xtbool2 CSTUB_(_TIE_xt_hifi2_AE_P24X2F_GT_P24X2S)(const ae_p24x2f& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN xtbool2 CSTUB_(_TIE_xt_hifi2_AE_P24X2F_GE_P24X2S)(const ae_p24x2f& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_p24x2f CSTUB_(_TIE_xt_hifi2_AE_P24X2F_ADDS_P24X2F)(const ae_p24x2f& d0 /*in*/, const ae_p24x2f& d1 /*in*/);
CSTUB_EXTERN ae_p24x2f CSTUB_(_TIE_xt_hifi2_AE_P24X2F_SUBS_P24X2F)(const ae_p24x2f& d0 /*in*/, const ae_p24x2f& d1 /*in*/);
CSTUB_EXTERN ae_p24x2f CSTUB_(_TIE_xt_hifi2_AE_P24X2F_AND_P24X2F)(const ae_p24x2f& d0 /*in*/, const ae_p24x2f& d1 /*in*/);
CSTUB_EXTERN ae_p24x2f CSTUB_(_TIE_xt_hifi2_AE_P24X2F_XOR_P24X2F)(const ae_p24x2f& d0 /*in*/, const ae_p24x2f& d1 /*in*/);
CSTUB_EXTERN ae_p24x2f CSTUB_(_TIE_xt_hifi2_AE_P24X2F_OR_P24X2F)(const ae_p24x2f& d0 /*in*/, const ae_p24x2f& d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_P24X2F_MULF_P24X2F)(const ae_p24x2f& d0 /*in*/, const ae_p24x2f& d1 /*in*/);
CSTUB_EXTERN xtbool2 CSTUB_(_TIE_xt_hifi2_AE_P24X2F_EQ_P24X2F)(const ae_p24x2f& d0 /*in*/, const ae_p24x2f& d1 /*in*/);
CSTUB_EXTERN xtbool2 CSTUB_(_TIE_xt_hifi2_AE_P24X2F_LT_P24X2F)(const ae_p24x2f& d0 /*in*/, const ae_p24x2f& d1 /*in*/);
CSTUB_EXTERN xtbool2 CSTUB_(_TIE_xt_hifi2_AE_P24X2F_LE_P24X2F)(const ae_p24x2f& d0 /*in*/, const ae_p24x2f& d1 /*in*/);
CSTUB_EXTERN xtbool2 CSTUB_(_TIE_xt_hifi2_AE_P24X2F_GT_P24X2F)(const ae_p24x2f& d0 /*in*/, const ae_p24x2f& d1 /*in*/);
CSTUB_EXTERN xtbool2 CSTUB_(_TIE_xt_hifi2_AE_P24X2F_GE_P24X2F)(const ae_p24x2f& d0 /*in*/, const ae_p24x2f& d1 /*in*/);
CSTUB_EXTERN ae_p24x2f CSTUB_(_TIE_xt_hifi2_AE_P24X2F_ADDS_P24S)(const ae_p24x2f& d0 /*in*/, const ae_p24s& d1 /*in*/);
CSTUB_EXTERN ae_p24x2f CSTUB_(_TIE_xt_hifi2_AE_P24X2F_SUBS_P24S)(const ae_p24x2f& d0 /*in*/, const ae_p24s& d1 /*in*/);
CSTUB_EXTERN ae_p24x2f CSTUB_(_TIE_xt_hifi2_AE_P24X2F_AND_P24S)(const ae_p24x2f& d0 /*in*/, const ae_p24s& d1 /*in*/);
CSTUB_EXTERN ae_p24x2f CSTUB_(_TIE_xt_hifi2_AE_P24X2F_XOR_P24S)(const ae_p24x2f& d0 /*in*/, const ae_p24s& d1 /*in*/);
CSTUB_EXTERN ae_p24x2f CSTUB_(_TIE_xt_hifi2_AE_P24X2F_OR_P24S)(const ae_p24x2f& d0 /*in*/, const ae_p24s& d1 /*in*/);
CSTUB_EXTERN ae_p24x2f CSTUB_(_TIE_xt_hifi2_AE_P24X2F_ADDS_P24F)(const ae_p24x2f& d0 /*in*/, const ae_p24f& d1 /*in*/);
CSTUB_EXTERN ae_p24x2f CSTUB_(_TIE_xt_hifi2_AE_P24X2F_SUBS_P24F)(const ae_p24x2f& d0 /*in*/, const ae_p24f& d1 /*in*/);
CSTUB_EXTERN ae_p24x2f CSTUB_(_TIE_xt_hifi2_AE_P24X2F_AND_P24F)(const ae_p24x2f& d0 /*in*/, const ae_p24f& d1 /*in*/);
CSTUB_EXTERN ae_p24x2f CSTUB_(_TIE_xt_hifi2_AE_P24X2F_XOR_P24F)(const ae_p24x2f& d0 /*in*/, const ae_p24f& d1 /*in*/);
CSTUB_EXTERN ae_p24x2f CSTUB_(_TIE_xt_hifi2_AE_P24X2F_OR_P24F)(const ae_p24x2f& d0 /*in*/, const ae_p24f& d1 /*in*/);
CSTUB_EXTERN ae_p24x2f CSTUB_(_TIE_xt_hifi2_AE_P24X2F_NEGS)(const ae_p24x2f& d0 /*in*/);
CSTUB_EXTERN ae_p24x2f CSTUB_(_TIE_xt_hifi2_AE_P24X2F_BNOT)(const ae_p24x2f& d0 /*in*/);
CSTUB_EXTERN ae_p24x2f CSTUB_(_TIE_xt_hifi2_AE_P24X2F_SLAS)(const ae_p24x2f& d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_p24x2f CSTUB_(_TIE_xt_hifi2_AE_P24X2F_SRA)(const ae_p24x2f& d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_p24x2f CSTUB_(_TIE_xt_hifi2_AE_P24X2F_SLAIS)(const ae_p24x2f& d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_p24x2f CSTUB_(_TIE_xt_hifi2_AE_P24X2F_SRAI)(const ae_p24x2f& d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_P24S_ADDS_P24X2S)(const ae_p24s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_P24S_SUBS_P24X2S)(const ae_p24s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_P24S_AND_P24X2S)(const ae_p24s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_P24S_XOR_P24X2S)(const ae_p24s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_P24S_OR_P24X2S)(const ae_p24s& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_p24x2f CSTUB_(_TIE_xt_hifi2_AE_P24S_ADDS_P24X2F)(const ae_p24s& d0 /*in*/, const ae_p24x2f& d1 /*in*/);
CSTUB_EXTERN ae_p24x2f CSTUB_(_TIE_xt_hifi2_AE_P24S_SUBS_P24X2F)(const ae_p24s& d0 /*in*/, const ae_p24x2f& d1 /*in*/);
CSTUB_EXTERN ae_p24x2f CSTUB_(_TIE_xt_hifi2_AE_P24S_AND_P24X2F)(const ae_p24s& d0 /*in*/, const ae_p24x2f& d1 /*in*/);
CSTUB_EXTERN ae_p24x2f CSTUB_(_TIE_xt_hifi2_AE_P24S_XOR_P24X2F)(const ae_p24s& d0 /*in*/, const ae_p24x2f& d1 /*in*/);
CSTUB_EXTERN ae_p24x2f CSTUB_(_TIE_xt_hifi2_AE_P24S_OR_P24X2F)(const ae_p24s& d0 /*in*/, const ae_p24x2f& d1 /*in*/);
CSTUB_EXTERN ae_p24s CSTUB_(_TIE_xt_hifi2_AE_P24S_ADDS_P24S)(const ae_p24s& d0 /*in*/, const ae_p24s& d1 /*in*/);
CSTUB_EXTERN ae_p24s CSTUB_(_TIE_xt_hifi2_AE_P24S_SUBS_P24S)(const ae_p24s& d0 /*in*/, const ae_p24s& d1 /*in*/);
CSTUB_EXTERN ae_p24s CSTUB_(_TIE_xt_hifi2_AE_P24S_AND_P24S)(const ae_p24s& d0 /*in*/, const ae_p24s& d1 /*in*/);
CSTUB_EXTERN ae_p24s CSTUB_(_TIE_xt_hifi2_AE_P24S_XOR_P24S)(const ae_p24s& d0 /*in*/, const ae_p24s& d1 /*in*/);
CSTUB_EXTERN ae_p24s CSTUB_(_TIE_xt_hifi2_AE_P24S_OR_P24S)(const ae_p24s& d0 /*in*/, const ae_p24s& d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_P24S_MULF_P24S)(const ae_p24s& d0 /*in*/, const ae_p24s& d1 /*in*/);
CSTUB_EXTERN ae_p24s CSTUB_(_TIE_xt_hifi2_AE_P24S_ADDS_P24F)(const ae_p24s& d0 /*in*/, const ae_p24f& d1 /*in*/);
CSTUB_EXTERN ae_p24s CSTUB_(_TIE_xt_hifi2_AE_P24S_SUBS_P24F)(const ae_p24s& d0 /*in*/, const ae_p24f& d1 /*in*/);
CSTUB_EXTERN ae_p24s CSTUB_(_TIE_xt_hifi2_AE_P24S_AND_P24F)(const ae_p24s& d0 /*in*/, const ae_p24f& d1 /*in*/);
CSTUB_EXTERN ae_p24s CSTUB_(_TIE_xt_hifi2_AE_P24S_XOR_P24F)(const ae_p24s& d0 /*in*/, const ae_p24f& d1 /*in*/);
CSTUB_EXTERN ae_p24s CSTUB_(_TIE_xt_hifi2_AE_P24S_OR_P24F)(const ae_p24s& d0 /*in*/, const ae_p24f& d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_P24S_MULF_P24F)(const ae_p24s& d0 /*in*/, const ae_p24f& d1 /*in*/);
CSTUB_EXTERN ae_p24s CSTUB_(_TIE_xt_hifi2_AE_P24S_NEGS)(const ae_p24s& d0 /*in*/);
CSTUB_EXTERN ae_p24s CSTUB_(_TIE_xt_hifi2_AE_P24S_BNOT)(const ae_p24s& d0 /*in*/);
CSTUB_EXTERN ae_p24s CSTUB_(_TIE_xt_hifi2_AE_P24S_SLAS)(const ae_p24s& d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_p24s CSTUB_(_TIE_xt_hifi2_AE_P24S_SRA)(const ae_p24s& d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_p24s CSTUB_(_TIE_xt_hifi2_AE_P24S_SLAIS)(const ae_p24s& d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_p24s CSTUB_(_TIE_xt_hifi2_AE_P24S_SRAI)(const ae_p24s& d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_P24F_ADDS_P24X2S)(const ae_p24f& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_P24F_SUBS_P24X2S)(const ae_p24f& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_P24F_AND_P24X2S)(const ae_p24f& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_P24F_XOR_P24X2S)(const ae_p24f& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_P24F_OR_P24X2S)(const ae_p24f& d0 /*in*/, const ae_p24x2s& d1 /*in*/);
CSTUB_EXTERN ae_p24x2f CSTUB_(_TIE_xt_hifi2_AE_P24F_ADDS_P24X2F)(const ae_p24f& d0 /*in*/, const ae_p24x2f& d1 /*in*/);
CSTUB_EXTERN ae_p24x2f CSTUB_(_TIE_xt_hifi2_AE_P24F_SUBS_P24X2F)(const ae_p24f& d0 /*in*/, const ae_p24x2f& d1 /*in*/);
CSTUB_EXTERN ae_p24x2f CSTUB_(_TIE_xt_hifi2_AE_P24F_AND_P24X2F)(const ae_p24f& d0 /*in*/, const ae_p24x2f& d1 /*in*/);
CSTUB_EXTERN ae_p24x2f CSTUB_(_TIE_xt_hifi2_AE_P24F_XOR_P24X2F)(const ae_p24f& d0 /*in*/, const ae_p24x2f& d1 /*in*/);
CSTUB_EXTERN ae_p24x2f CSTUB_(_TIE_xt_hifi2_AE_P24F_OR_P24X2F)(const ae_p24f& d0 /*in*/, const ae_p24x2f& d1 /*in*/);
CSTUB_EXTERN ae_p24s CSTUB_(_TIE_xt_hifi2_AE_P24F_ADDS_P24S)(const ae_p24f& d0 /*in*/, const ae_p24s& d1 /*in*/);
CSTUB_EXTERN ae_p24s CSTUB_(_TIE_xt_hifi2_AE_P24F_SUBS_P24S)(const ae_p24f& d0 /*in*/, const ae_p24s& d1 /*in*/);
CSTUB_EXTERN ae_p24s CSTUB_(_TIE_xt_hifi2_AE_P24F_AND_P24S)(const ae_p24f& d0 /*in*/, const ae_p24s& d1 /*in*/);
CSTUB_EXTERN ae_p24s CSTUB_(_TIE_xt_hifi2_AE_P24F_XOR_P24S)(const ae_p24f& d0 /*in*/, const ae_p24s& d1 /*in*/);
CSTUB_EXTERN ae_p24s CSTUB_(_TIE_xt_hifi2_AE_P24F_OR_P24S)(const ae_p24f& d0 /*in*/, const ae_p24s& d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_P24F_MULF_P24S)(const ae_p24f& d0 /*in*/, const ae_p24s& d1 /*in*/);
CSTUB_EXTERN ae_p24f CSTUB_(_TIE_xt_hifi2_AE_P24F_ADDS_P24F)(const ae_p24f& d0 /*in*/, const ae_p24f& d1 /*in*/);
CSTUB_EXTERN ae_p24f CSTUB_(_TIE_xt_hifi2_AE_P24F_SUBS_P24F)(const ae_p24f& d0 /*in*/, const ae_p24f& d1 /*in*/);
CSTUB_EXTERN ae_p24f CSTUB_(_TIE_xt_hifi2_AE_P24F_AND_P24F)(const ae_p24f& d0 /*in*/, const ae_p24f& d1 /*in*/);
CSTUB_EXTERN ae_p24f CSTUB_(_TIE_xt_hifi2_AE_P24F_XOR_P24F)(const ae_p24f& d0 /*in*/, const ae_p24f& d1 /*in*/);
CSTUB_EXTERN ae_p24f CSTUB_(_TIE_xt_hifi2_AE_P24F_OR_P24F)(const ae_p24f& d0 /*in*/, const ae_p24f& d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_P24F_MULF_P24F)(const ae_p24f& d0 /*in*/, const ae_p24f& d1 /*in*/);
CSTUB_EXTERN ae_p24f CSTUB_(_TIE_xt_hifi2_AE_P24F_NEGS)(const ae_p24f& d0 /*in*/);
CSTUB_EXTERN ae_p24f CSTUB_(_TIE_xt_hifi2_AE_P24F_BNOT)(const ae_p24f& d0 /*in*/);
CSTUB_EXTERN ae_p24f CSTUB_(_TIE_xt_hifi2_AE_P24F_SLAS)(const ae_p24f& d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_p24f CSTUB_(_TIE_xt_hifi2_AE_P24F_SRA)(const ae_p24f& d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_p24f CSTUB_(_TIE_xt_hifi2_AE_P24F_SLAIS)(const ae_p24f& d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_p24f CSTUB_(_TIE_xt_hifi2_AE_P24F_SRAI)(const ae_p24f& d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_Q56S_ADD)(const ae_q56s& d0 /*in*/, const ae_q56s& d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_Q56S_SUB)(const ae_q56s& d0 /*in*/, const ae_q56s& d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_Q56S_AND)(const ae_q56s& d0 /*in*/, const ae_q56s& d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_Q56S_XOR)(const ae_q56s& d0 /*in*/, const ae_q56s& d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_Q56S_OR)(const ae_q56s& d0 /*in*/, const ae_q56s& d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_Q56S_NEG)(const ae_q56s& d0 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_Q56S_BNOT)(const ae_q56s& d0 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_Q56S_SLA)(const ae_q56s& d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_Q56S_SRA)(const ae_q56s& d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_Q56S_SRAI)(const ae_q56s& d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN xtbool CSTUB_(_TIE_xt_hifi2_AE_Q56S_EQ)(const ae_q56s& d0 /*in*/, const ae_q56s& d1 /*in*/);
CSTUB_EXTERN xtbool CSTUB_(_TIE_xt_hifi2_AE_Q56S_LT)(const ae_q56s& d0 /*in*/, const ae_q56s& d1 /*in*/);
CSTUB_EXTERN xtbool CSTUB_(_TIE_xt_hifi2_AE_Q56S_LE)(const ae_q56s& d0 /*in*/, const ae_q56s& d1 /*in*/);
CSTUB_EXTERN xtbool CSTUB_(_TIE_xt_hifi2_AE_Q56S_GT)(const ae_q56s& d0 /*in*/, const ae_q56s& d1 /*in*/);
CSTUB_EXTERN xtbool CSTUB_(_TIE_xt_hifi2_AE_Q56S_GE)(const ae_q56s& d0 /*in*/, const ae_q56s& d1 /*in*/);
CSTUB_EXTERN ae_int32x4 CSTUB_(_TIE_xt_hifi2_ae_int32x4_loadi)(const ae_int32x4 * b /*in*/, immediate c /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int32x4_storei)(const ae_int32x4& d /*in*/, const ae_int32x4 * b /*in*/, immediate c /*in*/);
CSTUB_EXTERN ae_int32x4 CSTUB_(_TIE_xt_hifi2_ae_int32x4_move)(const ae_int32x4& b /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_INT32X2_NOT)(const ae_int32x2& d0 /*in*/);
CSTUB_EXTERN ae_f32x4 CSTUB_(_TIE_xt_hifi2_ae_f32x4_loadi)(const ae_f32x4 * b /*in*/, immediate c /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_f32x4_storei)(const ae_f32x4& d /*in*/, const ae_f32x4 * b /*in*/, immediate c /*in*/);
CSTUB_EXTERN ae_f32x4 CSTUB_(_TIE_xt_hifi2_ae_f32x4_move)(const ae_f32x4& b /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_SEL16X4IR)(const ae_int16x4& v0 /*in*/, const ae_int16x4& v1 /*in*/, immediate i /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_SEL32X2IR)(const ae_int32x2& v0 /*in*/, const ae_int32x2& v1 /*in*/, immediate i /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_SELF32X2IR)(const ae_f32x2& v0 /*in*/, const ae_f32x2& v1 /*in*/, immediate i /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_INT32X2_AND_rinit)(const int a /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_INT32X2_AND_rvec)(const ae_int32x2& d0 /*in*/, const ae_int32x2& d1 /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_AE_INT32X2_AND_rfini)(const ae_int32x2& d /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_INT32X2_OR_rinit)(const int a /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_INT32X2_OR_rvec)(const ae_int32x2& d0 /*in*/, const ae_int32x2& d1 /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_AE_INT32X2_OR_rfini)(const ae_int32x2& d /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_INT32X2_XOR_rinit)(const int a /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_INT32X2_XOR_rvec)(const ae_int32x2& d0 /*in*/, const ae_int32x2& d1 /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_AE_INT32X2_XOR_rfini)(const ae_int32x2& d /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_AE_INT32X2_RMIN)(const ae_int32x2& d0 /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_AE_INT32X2_RMAX)(const ae_int32x2& d0 /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_AE_INT32X2_RADD)(const ae_int32x2& d0 /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_AE_F32X2_RADD)(const ae_f32x2& d0 /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_ABS32S_scalar)(const ae_int32& d0 /*in*/);
CSTUB_EXTERN ae_int32x4 CSTUB_(_TIE_xt_hifi2_AE_INT32X4_ABS32S)(const ae_int32x4& d0 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_INT32X2_ABS32S)(const ae_int32x2& d0 /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_AE_ADD32S_scalar)(const int d0 /*in*/, const ae_int32& d1 /*in*/);
CSTUB_EXTERN ae_int32x4 CSTUB_(_TIE_xt_hifi2_AE_INT32X4_ADD32S)(const ae_int32x4& d0 /*in*/, const ae_int32x4& d1 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_INT32X2_ADD32S)(const ae_int32x2& d0 /*in*/, const ae_int32x2& d1 /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_NEG32S_scalar)(const ae_int32& d0 /*in*/);
CSTUB_EXTERN ae_int32x4 CSTUB_(_TIE_xt_hifi2_AE_INT32X4_NEG32S)(const ae_int32x4& d0 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_INT32X2_NEG32S)(const ae_int32x2& d0 /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_AE_SUB32S_scalar)(const int d0 /*in*/, const ae_int32& d1 /*in*/);
CSTUB_EXTERN ae_int32x4 CSTUB_(_TIE_xt_hifi2_AE_INT32X4_SUB32S)(const ae_int32x4& d0 /*in*/, const ae_int32x4& d1 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_INT32X2_SUB32S)(const ae_int32x2& d0 /*in*/, const ae_int32x2& d1 /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_SLAA32S_scalar)(const ae_int32& d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_int32x4 CSTUB_(_TIE_xt_hifi2_AE_SLAA32S_vector)(const ae_int32x4& d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_SRAA32S_scalar)(const ae_int32& d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_int32x4 CSTUB_(_TIE_xt_hifi2_AE_SRAA32S_vector)(const ae_int32x4& d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_SRAA32RS_scalar)(const ae_int32& d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_int32x4 CSTUB_(_TIE_xt_hifi2_AE_SRAA32RS_vector)(const ae_int32x4& d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_INT16X4_NAND_INT16X4)(const ae_int16x4& a /*in*/, const ae_int16x4& b /*in*/);
CSTUB_EXTERN ae_int16 CSTUB_(_TIE_xt_hifi2_AE_ABS16S_scalar)(const ae_int16& d0 /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_ABS16S_vector)(const ae_int16x4& d0 /*in*/);
CSTUB_EXTERN ae_int16 CSTUB_(_TIE_xt_hifi2_AE_ADD16S_scalar)(const ae_int16& d0 /*in*/, const ae_int16& d1 /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_ADD16S_vector)(const ae_int16x4& d0 /*in*/, const ae_int16x4& d1 /*in*/);
CSTUB_EXTERN ae_int16 CSTUB_(_TIE_xt_hifi2_AE_MULFP16X4S_scalar)(const ae_int16& d0 /*in*/, const ae_int16& d1 /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_MULFP16X4S_vector)(const ae_int16x4& d0 /*in*/, const ae_int16x4& d1 /*in*/);
CSTUB_EXTERN ae_int16 CSTUB_(_TIE_xt_hifi2_AE_MULFP16X4RAS_scalar)(const ae_int16& d0 /*in*/, const ae_int16& d1 /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_MULFP16X4RAS_vector)(const ae_int16x4& d0 /*in*/, const ae_int16x4& d1 /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_AE_NSAZ16_0_scalar)(const ae_int16& d0 /*in*/);
CSTUB_EXTERN ae_int16 CSTUB_(_TIE_xt_hifi2_AE_SAT16X4_scalar)(const ae_int32& d0 /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_SAT16X4_vector)(const ae_int32x4& d0 /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_MULF16X4SS_scalar)(const ae_int16& d0 /*in*/, const ae_int16& d1 /*in*/);
CSTUB_EXTERN ae_int32x4 CSTUB_(_TIE_xt_hifi2_AE_MULF16X4SS_vector)(const ae_int16x4& d0 /*in*/, const ae_int16x4& d1 /*in*/);
CSTUB_EXTERN ae_int32x4 CSTUB_(_TIE_xt_hifi2_AE_MUL16X4_vector)(const ae_int16x4& d0 /*in*/, const ae_int16x4& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULA16X4_vector)(ae_int32x4& d /*inout*/, const ae_int16x4& d0 /*in*/, const ae_int16x4& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAAR16P16X4S_vector)(ae_int16x4& d /*inout*/, const ae_int16x4& d0 /*in*/, const ae_int16x4& d1 /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_MULR16P16X4S_vector)(const ae_int16x4& d0 /*in*/, const ae_int16x4& d1 /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_AE_MULAF16X4SS_scalar)(const int ain /*in*/, const ae_int16& d0 /*in*/, const ae_int16& d1 /*in*/);
CSTUB_EXTERN ae_int32x4 CSTUB_(_TIE_xt_hifi2_AE_MULAF16X4SS_vector)(const ae_int32x4& pin /*in*/, const ae_int16x4& d0 /*in*/, const ae_int16x4& d1 /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_AE_MULSF16X4SS_scalar)(const int ain /*in*/, const ae_int16& d0 /*in*/, const ae_int16& d1 /*in*/);
CSTUB_EXTERN ae_int32x4 CSTUB_(_TIE_xt_hifi2_AE_MULSF16X4SS_vector)(const ae_int32x4& pin /*in*/, const ae_int16x4& d0 /*in*/, const ae_int16x4& d1 /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_RLmac_rinit)(const int a /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_RLmac_rvec)(const ae_int32& din /*in*/, const ae_int16x4& d0 /*in*/, const ae_int16x4& d1 /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_AE_RLmac_rfini)(const ae_int32& d /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_RLmsu_rinit)(const int a /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_RLmsu_rvec)(const ae_int32& din /*in*/, const ae_int16x4& d0 /*in*/, const ae_int16x4& d1 /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_AE_RLmsu_rfini)(const ae_int32& d /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_RLadd_rinit)(const int a /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_RLadd_rvec)(const ae_int32& din /*in*/, const ae_int32x2& d0 /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_AE_RLadd_rfini)(const ae_int32& d /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_RLadd4_rinit)(const int a /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_RLadd4_rvec)(const ae_int32& din /*in*/, const ae_int32x4& d0 /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_AE_RLadd4_rfini)(const ae_int32& d /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_RLsub_rinit)(const int a /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_RLsub_rvec)(const ae_int32& din /*in*/, const ae_int32x2& d0 /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_AE_RLsub_rfini)(const ae_int32& d /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_RLsub4_rinit)(const int a /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_RLsub4_rvec)(const ae_int32& din /*in*/, const ae_int32x4& d0 /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_AE_RLsub4_rfini)(const ae_int32& d /*in*/);
CSTUB_EXTERN ae_int16 CSTUB_(_TIE_xt_hifi2_AE_NEG16S_scalar)(const ae_int16& d0 /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_NEG16S_vector)(const ae_int16x4& d0 /*in*/);
CSTUB_EXTERN ae_int16 CSTUB_(_TIE_xt_hifi2_AE_ROUND16X4F32SASYM_scalar)(const ae_int32& d0 /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_ROUND16X4F32SASYM_vector)(const ae_int32x4& d0 /*in*/);
CSTUB_EXTERN ae_int16 CSTUB_(_TIE_xt_hifi2_AE_SUB16S_scalar)(const ae_int16& d0 /*in*/, const ae_int16& d1 /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_SUB16S_vector)(const ae_int16x4& d0 /*in*/, const ae_int16x4& d1 /*in*/);
CSTUB_EXTERN ae_int16 CSTUB_(_TIE_xt_hifi2_AE_SLAA16S_scalar)(const ae_int16& d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_SLAA16S_vector)(const ae_int16x4& d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_int16 CSTUB_(_TIE_xt_hifi2_AE_SRAA16S_scalar)(const ae_int16& d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_SRAA16S_vector)(const ae_int16x4& d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_int16 CSTUB_(_TIE_xt_hifi2_AE_SRAA16RS_scalar)(const ae_int16& d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_SRAA16RS_vector)(const ae_int16x4& d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_int16 CSTUB_(_TIE_xt_hifi2_AE_CVT16X4_scalar)(const ae_int32& d0 /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_CVT16X4_vector)(const ae_int32x4& d0 /*in*/);
CSTUB_EXTERN ae_int16 CSTUB_(_TIE_xt_hifi2_AE_TRUNC16X4F32_scalar)(const ae_int32& d0 /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_TRUNC16X4F32_vector)(const ae_int32x4& d0 /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_SEXT32X2D16_10_scalar)(const ae_int16& p /*in*/);
CSTUB_EXTERN ae_int32x4 CSTUB_(_TIE_xt_hifi2_AE_SEXT32X2D16_10_vector)(const ae_int16x4& p /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_CVT32X2F16_10_scalar)(const ae_int16& p /*in*/);
CSTUB_EXTERN ae_int32x4 CSTUB_(_TIE_xt_hifi2_AE_CVT32X2F16_10_vector)(const ae_int16x4& p /*in*/);
CSTUB_EXTERN ae_int32x4 CSTUB_(_TIE_xt_hifi2_ae_int16x4_rtor_ae_int32x4)(const ae_int16x4& b /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_ae_int32x4_rtor_ae_int16x4)(const ae_int32x4& b /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_SRAA16_VECTOR)(const ae_int16x4& b /*in*/, const int sa /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_AE_F32X4_RADD)(const ae_f32x4& d0 /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_AE_INT32X4_RADD)(const ae_int32x4& d0 /*in*/);
CSTUB_EXTERN ae_int32x4 CSTUB_(_TIE_xt_hifi2_AE_INT32X4_ADD)(const ae_int32x4& d0 /*in*/, const ae_int32x4& d1 /*in*/);
CSTUB_EXTERN ae_int32x4 CSTUB_(_TIE_xt_hifi2_AE_INT32X4_SUB)(const ae_int32x4& d0 /*in*/, const ae_int32x4& d1 /*in*/);
CSTUB_EXTERN ae_int32x4 CSTUB_(_TIE_xt_hifi2_AE_INT32X4_AND)(const ae_int32x4& d0 /*in*/, const ae_int32x4& d1 /*in*/);
CSTUB_EXTERN ae_int32x4 CSTUB_(_TIE_xt_hifi2_AE_INT32X4_OR)(const ae_int32x4& d0 /*in*/, const ae_int32x4& d1 /*in*/);
CSTUB_EXTERN ae_int32x4 CSTUB_(_TIE_xt_hifi2_AE_INT32X4_XOR)(const ae_int32x4& d0 /*in*/, const ae_int32x4& d1 /*in*/);
CSTUB_EXTERN ae_int32x4 CSTUB_(_TIE_xt_hifi2_AE_INT32X4_BNOT)(const ae_int32x4& d0 /*in*/);
CSTUB_EXTERN ae_int32x4 CSTUB_(_TIE_xt_hifi2_AE_INT32X4_INT16X4_MUL)(const ae_int32x4& d0 /*in*/, const ae_int16x4& d1 /*in*/);
CSTUB_EXTERN ae_int32x4 CSTUB_(_TIE_xt_hifi2_AE_INT16X4_INT32X4_MUL)(const ae_int16x4& d0 /*in*/, const ae_int32x4& d1 /*in*/);
CSTUB_EXTERN ae_int32x4 CSTUB_(_TIE_xt_hifi2_AE_INT32X4_SRAI32)(const ae_int32x4& d0 /*in*/, immediate i /*in*/);
CSTUB_EXTERN ae_int32x4 CSTUB_(_TIE_xt_hifi2_AE_INT32X4_SRAA32)(const ae_int32x4& d0 /*in*/, const int a /*in*/);
CSTUB_EXTERN ae_int32x4 CSTUB_(_TIE_xt_hifi2_AE_INT32X4_SLAI32)(const ae_int32x4& d0 /*in*/, immediate i /*in*/);
CSTUB_EXTERN ae_int32x4 CSTUB_(_TIE_xt_hifi2_AE_INT32X4_SLAA32)(const ae_int32x4& d0 /*in*/, const int a /*in*/);
CSTUB_EXTERN ae_int32x4 CSTUB_(_TIE_xt_hifi2_AE_INT32X4_NEG32)(const ae_int32x4& d0 /*in*/);
CSTUB_EXTERN ae_int32x4 CSTUB_(_TIE_xt_hifi2_AE_INT32X4_ABS32)(const ae_int32x4& d0 /*in*/);
CSTUB_EXTERN ae_int32x4 CSTUB_(_TIE_xt_hifi2_AE_INT32X4_MAX)(const ae_int32x4& d0 /*in*/, const ae_int32x4& d1 /*in*/);
CSTUB_EXTERN ae_int32x4 CSTUB_(_TIE_xt_hifi2_AE_INT32X4_MIN)(const ae_int32x4& d0 /*in*/, const ae_int32x4& d1 /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_INT16X4_MIN)(const ae_int16x4& d0 /*in*/, const ae_int16x4& d1 /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_INT16X4_MAX)(const ae_int16x4& d0 /*in*/, const ae_int16x4& d1 /*in*/);
CSTUB_EXTERN short CSTUB_(_TIE_xt_hifi2_AE_INT16X4_RMAX)(const ae_int16x4& d0 /*in*/);
CSTUB_EXTERN short CSTUB_(_TIE_xt_hifi2_AE_INT16X4_RMIN)(const ae_int16x4& d0 /*in*/);
CSTUB_EXTERN short CSTUB_(_TIE_xt_hifi2_AE_INT16X4_RADD)(const ae_int16x4& d0 /*in*/);
CSTUB_EXTERN ae_f32x4 CSTUB_(_TIE_xt_hifi2_AE_F32X4_ADD)(const ae_f32x4& d0 /*in*/, const ae_f32x4& d1 /*in*/);
CSTUB_EXTERN ae_f32x4 CSTUB_(_TIE_xt_hifi2_AE_F32X4_SUB)(const ae_f32x4& d0 /*in*/, const ae_f32x4& d1 /*in*/);
CSTUB_EXTERN ae_f32x4 CSTUB_(_TIE_xt_hifi2_AE_F32X4_NEG32)(const ae_f32x4& d0 /*in*/);
CSTUB_EXTERN ae_f32x4 CSTUB_(_TIE_xt_hifi2_AE_F32X4_F16X4_MUL)(const ae_f32x4& d0 /*in*/, const ae_f16x4& d1 /*in*/);
CSTUB_EXTERN ae_f32x4 CSTUB_(_TIE_xt_hifi2_AE_F16X4_F32X4_MUL)(const ae_f16x4& d0 /*in*/, const ae_f32x4& d1 /*in*/);
CSTUB_EXTERN ae_f32x4 CSTUB_(_TIE_xt_hifi2_AE_F32X4_AND)(const ae_f32x4& d0 /*in*/, const ae_f32x4& d1 /*in*/);
CSTUB_EXTERN ae_f32x4 CSTUB_(_TIE_xt_hifi2_AE_F32X4_OR)(const ae_f32x4& d0 /*in*/, const ae_f32x4& d1 /*in*/);
CSTUB_EXTERN ae_f32x4 CSTUB_(_TIE_xt_hifi2_AE_F32X4_XOR)(const ae_f32x4& d0 /*in*/, const ae_f32x4& d1 /*in*/);
CSTUB_EXTERN ae_f32x4 CSTUB_(_TIE_xt_hifi2_AE_F32X4_BNOT)(const ae_f32x4& d0 /*in*/);
CSTUB_EXTERN ae_f32x4 CSTUB_(_TIE_xt_hifi2_AE_F32X4_SLAI32S)(const ae_f32x4& d0 /*in*/, immediate i /*in*/);
CSTUB_EXTERN ae_f32x4 CSTUB_(_TIE_xt_hifi2_AE_F32X4_SLAA32S)(const ae_f32x4& d0 /*in*/, const int a /*in*/);
CSTUB_EXTERN ae_f32x4 CSTUB_(_TIE_xt_hifi2_AE_F32X4_SRAI32)(const ae_f32x4& d0 /*in*/, immediate i /*in*/);
CSTUB_EXTERN ae_f32x4 CSTUB_(_TIE_xt_hifi2_AE_F32X4_SRAA32)(const ae_f32x4& d0 /*in*/, const int a /*in*/);
CSTUB_EXTERN ae_valign CSTUB_(_TIE_xt_hifi2_ae_int16x4_aligning_load_prime)(const ae_int16x4 * a /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int16x4_aligning_load_post_update_positive)(ae_int16x4& v /*out*/, ae_valign& u /*inout*/, const ae_int16x4 ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int16x4_aligning_load_post_update_negative)(ae_int16x4& v /*out*/, ae_valign& u /*inout*/, const ae_int16x4 ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int16x4_load_post_update_positive)(ae_int16x4& v /*out*/, const ae_int16x4 ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int16x4_load_post_update_negative)(ae_int16x4& v /*out*/, const ae_int16x4 ** a /*inout*/);
CSTUB_EXTERN ae_valign CSTUB_(_TIE_xt_hifi2_ae_int16x4_aligning_store_prime)(void);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int16x4_aligning_store_post_update_positive)(const ae_int16x4& v /*in*/, ae_valign& u /*inout*/, ae_int16x4 ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int16x4_aligning_store_post_update_negative)(const ae_int16x4& v /*in*/, ae_valign& u /*inout*/, ae_int16x4 ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int16x4_store_post_update_positive)(const ae_int16x4& v /*in*/, ae_int16x4 ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int16x4_store_post_update_negative)(const ae_int16x4& v /*in*/, ae_int16x4 ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int16x4_aligning_store_flush_positive)(ae_valign& u /*inout*/, const ae_int16x4 * a /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int16x4_aligning_store_flush_negative)(ae_valign& u /*inout*/, const ae_int16x4 * a /*in*/);
CSTUB_EXTERN ae_valign CSTUB_(_TIE_xt_hifi2_ae_int32x2_aligning_load_prime)(const ae_int32x2 * a /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int32x2_aligning_load_post_update_positive)(ae_int32x2& v /*out*/, ae_valign& u /*inout*/, const ae_int32x2 ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int32x2_aligning_load_post_update_negative)(ae_int32x2& v /*out*/, ae_valign& u /*inout*/, const ae_int32x2 ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int32x2_load_post_update_positive)(ae_int32x2& v /*out*/, const ae_int32x2 ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int32x2_load_post_update_negative)(ae_int32x2& v /*out*/, const ae_int32x2 ** a /*inout*/);
CSTUB_EXTERN ae_valign CSTUB_(_TIE_xt_hifi2_ae_int32x2_aligning_store_prime)(void);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int32x2_aligning_store_post_update_positive)(const ae_int32x2& v /*in*/, ae_valign& u /*inout*/, ae_int32x2 ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int32x2_aligning_store_post_update_negative)(const ae_int32x2& v /*in*/, ae_valign& u /*inout*/, ae_int32x2 ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int32x2_store_post_update_positive)(const ae_int32x2& v /*in*/, ae_int32x2 ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int32x2_store_post_update_negative)(const ae_int32x2& v /*in*/, ae_int32x2 ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int32x2_aligning_store_flush_positive)(ae_valign& u /*inout*/, const ae_int32x2 * a /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int32x2_aligning_store_flush_negative)(ae_valign& u /*inout*/, const ae_int32x2 * a /*in*/);
CSTUB_EXTERN ae_valign CSTUB_(_TIE_xt_hifi2_ae_int32x4_aligning_load_prime)(const ae_int32x4 * a /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int32x4_aligning_load_post_update_positive)(ae_int32x4& v /*out*/, ae_valign& u /*inout*/, const ae_int32x4 ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int32x4_aligning_load_post_update_negative)(ae_int32x4& v /*out*/, ae_valign& u /*inout*/, const ae_int32x4 ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int32x4_load_post_update_positive)(ae_int32x4& v /*out*/, const ae_int32x4 ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int32x4_load_post_update_negative)(ae_int32x4& v /*out*/, const ae_int32x4 ** a /*inout*/);
CSTUB_EXTERN ae_valign CSTUB_(_TIE_xt_hifi2_ae_int32x4_aligning_store_prime)(void);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int32x4_aligning_store_post_update_positive)(const ae_int32x4& v /*in*/, ae_valign& u /*inout*/, ae_int32x4 ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int32x4_aligning_store_post_update_negative)(const ae_int32x4& v /*in*/, ae_valign& u /*inout*/, ae_int32x4 ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int32x4_store_post_update_positive)(const ae_int32x4& v /*in*/, ae_int32x4 ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int32x4_store_post_update_negative)(const ae_int32x4& v /*in*/, ae_int32x4 ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int32x4_aligning_store_flush_positive)(ae_valign& u /*inout*/, const ae_int32x4 * a /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int32x4_aligning_store_flush_negative)(ae_valign& u /*inout*/, const ae_int32x4 * a /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_ae_int32x2_vextract_0_p32s)(const ae_int32x2& d /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_ae_int32x2_vextract_1_p32s)(const ae_int32x2& d /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_ae_int32x2_vpack_p32s)(const int d1 /*in*/, const int d0 /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_ae_int32x2_vextract_0_ae_int32)(const ae_int32x2& d0 /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_ae_int32x2_vextract_1_ae_int32)(const ae_int32x2& d0 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_ae_int32x2_vpack_ae_int32)(const ae_int32& d1 /*in*/, const ae_int32& d0 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_int32_rtor_ae_int64)(const int a /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_int16_rtor_ae_int64)(const short a /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_ae_int32_rtor_ae_int64)(const ae_int32& a /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_ae_int16_rtor_ae_int64)(const ae_int16& a /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_int32_rtor_ae_f64)(const int a /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_int16_rtor_ae_f64)(const short a /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_int64_rtor_ae_f64)(const long long& a /*in*/);
CSTUB_EXTERN long long CSTUB_(_TIE_xt_hifi2_ae_f64_rtor_int64)(const ae_f64& d /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_int64_rtor_ae_int64)(const long long& a /*in*/);
CSTUB_EXTERN long long CSTUB_(_TIE_xt_hifi2_ae_int64_rtor_int64)(const ae_int64& d /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_uint64_rtor_ae_int64)(const unsigned long long& a /*in*/);
CSTUB_EXTERN unsigned long long CSTUB_(_TIE_xt_hifi2_ae_int64_rtor_uint64)(const ae_int64& d /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_int32_rtor_ae_int32)(const int a /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_ae_int32_rtor_int32)(const ae_int32& d /*in*/);
CSTUB_EXTERN ae_f32 CSTUB_(_TIE_xt_hifi2_int32_rtor_ae_f32)(const int a /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_ae_f32_rtor_int32)(const ae_f32& d /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_ae_f24_rtor_int32)(const ae_f24& d /*in*/);
CSTUB_EXTERN ae_f24 CSTUB_(_TIE_xt_hifi2_int32_rtor_ae_f24)(const int a /*in*/);
CSTUB_EXTERN ae_int24 CSTUB_(_TIE_xt_hifi2_int32_rtor_ae_int24)(const int a /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_ae_int24_rtor_int32)(const ae_int24& d /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_uint32_rtor_ae_int32)(const unsigned int a /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_xt_hifi2_ae_int32_rtor_uint32)(const ae_int32& d /*in*/);
CSTUB_EXTERN ae_int32u CSTUB_(_TIE_xt_hifi2_uint32_rtor_ae_int32u)(const unsigned int a /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_xt_hifi2_ae_int32u_rtor_uint32)(const ae_int32u& d /*in*/);
CSTUB_EXTERN ae_int16 CSTUB_(_TIE_xt_hifi2_int32_rtor_ae_int16)(const int a /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_int32_rtor_ae_int16x4)(const int a /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_ae_int16_rtor_int32)(const ae_int16& d /*in*/);
CSTUB_EXTERN ae_f16 CSTUB_(_TIE_xt_hifi2_int32_rtor_ae_f16)(const int a /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_ae_f16_rtor_int32)(const ae_f16& d /*in*/);
CSTUB_EXTERN ae_int16 CSTUB_(_TIE_xt_hifi2_int16_rtor_ae_int16)(const short a /*in*/);
CSTUB_EXTERN short CSTUB_(_TIE_xt_hifi2_ae_int16_rtor_int16)(const ae_int16& d /*in*/);
CSTUB_EXTERN ae_f16 CSTUB_(_TIE_xt_hifi2_int16_rtor_ae_f16)(const short a /*in*/);
CSTUB_EXTERN short CSTUB_(_TIE_xt_hifi2_ae_f16_rtor_int16)(const ae_f16& d /*in*/);
CSTUB_EXTERN ae_f32 CSTUB_(_TIE_xt_hifi2_int16_rtor_ae_f32)(const short a /*in*/);
CSTUB_EXTERN ae_f24 CSTUB_(_TIE_xt_hifi2_int16_rtor_ae_f24)(const short a /*in*/);
CSTUB_EXTERN ae_int24 CSTUB_(_TIE_xt_hifi2_int16_rtor_ae_int24)(const short a /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_int16_rtor_ae_f32x2)(const short a /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_int16_rtor_ae_f24x2)(const short a /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_int16_rtor_ae_int24x2)(const short a /*in*/);
CSTUB_EXTERN unsigned short CSTUB_(_TIE_xt_hifi2_ae_int16u_rtor_uint16)(const ae_int16u& d /*in*/);
CSTUB_EXTERN ae_int16u CSTUB_(_TIE_xt_hifi2_uint16_rtor_ae_int16u)(const unsigned short a /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_int32_rtor_ae_int32x2)(const int a /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_ae_int32x2_rtor_int32)(const ae_int32x2& d /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_int32_rtor_ae_f32x2)(const int a /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_int32_rtor_ae_f24x2)(const int a /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_int32_rtor_ae_int24x2)(const int a /*in*/);
CSTUB_EXTERN ae_int32x4 CSTUB_(_TIE_xt_hifi2_int32_rtor_ae_int32x4)(const int a /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_ae_int32x4_rtor_int32)(const ae_int32x4& d /*in*/);
CSTUB_EXTERN ae_f32x4 CSTUB_(_TIE_xt_hifi2_int32_rtor_ae_f32x4)(const int a /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_ae_f32x4_rtor_int32)(const ae_f32x4& d /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_uint32_rtor_ae_int32x2)(const unsigned int a /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_xt_hifi2_ae_int32x2_rtor_uint32)(const ae_int32x2& d /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_uint32_rtor_ae_f32x2)(const unsigned int a /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_uint32_rtor_ae_f24x2)(const unsigned int a /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_uint32_rtor_ae_int24x2)(const unsigned int a /*in*/);
CSTUB_EXTERN ae_int32x4 CSTUB_(_TIE_xt_hifi2_uint32_rtor_ae_int32x4)(const unsigned int a /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_xt_hifi2_ae_int32x4_rtor_uint32)(const ae_int32x4& d /*in*/);
CSTUB_EXTERN ae_f32x4 CSTUB_(_TIE_xt_hifi2_uint32_rtor_ae_f32x4)(const unsigned int a /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_xt_hifi2_ae_f32x4_rtor_uint32)(const ae_f32x4& d /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_int16_rtor_ae_int32x2)(const short a /*in*/);
CSTUB_EXTERN short CSTUB_(_TIE_xt_hifi2_ae_int32x2_rtor_int16)(const ae_int32x2& d /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_int16_rtor_ae_int32)(const short a /*in*/);
CSTUB_EXTERN short CSTUB_(_TIE_xt_hifi2_ae_int32_rtor_int16)(const ae_int32& d /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_int16_rtor_ae_int16x4)(const short a /*in*/);
CSTUB_EXTERN short CSTUB_(_TIE_xt_hifi2_ae_int16x4_rtor_int16)(const ae_int16x4& d /*in*/);
CSTUB_EXTERN ae_f16x4 CSTUB_(_TIE_xt_hifi2_int16_rtor_ae_f16x4)(const short a /*in*/);
CSTUB_EXTERN short CSTUB_(_TIE_xt_hifi2_ae_f16x4_rtor_int16)(const ae_f16x4& d /*in*/);
CSTUB_EXTERN ae_int16u CSTUB_(_TIE_xt_hifi2_ae_int16_rtor_ae_int16u)(const ae_int16& b /*in*/);
CSTUB_EXTERN ae_int16 CSTUB_(_TIE_xt_hifi2_ae_int16u_rtor_ae_int16)(const ae_int16u& b /*in*/);
CSTUB_EXTERN ae_int32u CSTUB_(_TIE_xt_hifi2_ae_int16u_rtor_ae_int32u)(const ae_int16u& b /*in*/);
CSTUB_EXTERN ae_int16u CSTUB_(_TIE_xt_hifi2_ae_int32u_rtor_ae_int16u)(const ae_int32u& b /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_ae_int16u_rtor_ae_int32)(const ae_int16u& b /*in*/);
CSTUB_EXTERN ae_int16u CSTUB_(_TIE_xt_hifi2_ae_int32_rtor_ae_int16u)(const ae_int32& b /*in*/);
CSTUB_EXTERN ae_int32u CSTUB_(_TIE_xt_hifi2_ae_int16_rtor_ae_int32u)(const ae_int16& b /*in*/);
CSTUB_EXTERN ae_int16 CSTUB_(_TIE_xt_hifi2_ae_int32u_rtor_ae_int16)(const ae_int32u& b /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_ae_int32u_rtor_ae_int32)(const ae_int32u& b /*in*/);
CSTUB_EXTERN ae_int32u CSTUB_(_TIE_xt_hifi2_ae_int32_rtor_ae_int32u)(const ae_int32& b /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_uint16_rtor_ae_int32)(const unsigned short a /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_uint16_rtor_ae_int32x2)(const unsigned short a /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_uint8_rtor_ae_int32)(const unsigned char a /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_int8_rtor_ae_int32)(const signed char a /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_uint8_rtor_ae_int32x2)(const unsigned char a /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_int8_rtor_ae_int32x2)(const signed char a /*in*/);
CSTUB_EXTERN ae_f24 CSTUB_(_TIE_xt_hifi2_ae_int24x2_rtor_ae_f24)(const ae_int24x2& b /*in*/);
CSTUB_EXTERN ae_int24 CSTUB_(_TIE_xt_hifi2_ae_f24x2_rtor_ae_int24)(const ae_f24x2& b /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_ae_int24_rtor_ae_f24x2)(const ae_int24& b /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_ae_f24_rtor_ae_int24x2)(const ae_f24& b /*in*/);
CSTUB_EXTERN ae_f32 CSTUB_(_TIE_xt_hifi2_ae_int32x2_rtor_ae_f32)(const ae_int32x2& b /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_ae_f32x2_rtor_ae_int32)(const ae_f32x2& b /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_ae_int32_rtor_ae_f32x2)(const ae_int32& b /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_ae_f32_rtor_ae_int32x2)(const ae_f32& b /*in*/);
CSTUB_EXTERN ae_f32 CSTUB_(_TIE_xt_hifi2_ae_int24x2_rtor_ae_f32)(const ae_int24x2& b /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_ae_f24x2_rtor_ae_int32)(const ae_f24x2& b /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_ae_int24_rtor_ae_f32x2)(const ae_int24& b /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_ae_f24_rtor_ae_int32x2)(const ae_f24& b /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_ae_f24_rtor_ae_f32x2)(const ae_f24& b /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_ae_int24_rtor_ae_int32x2)(const ae_int24& b /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_int64_mtor_ae_int64)(const long long * a /*in*/, immediate i /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int64_rtom_int64)(const ae_int64& d /*in*/, const long long * a /*in*/, immediate i /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_uint64_mtor_ae_int64)(const unsigned long long * a /*in*/, immediate i /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int64_rtom_uint64)(const ae_int64& d /*in*/, const unsigned long long * a /*in*/, immediate i /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_int32_mtor_ae_int32)(const int * a /*in*/, immediate i /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int32_rtom_int32)(const ae_int32& d /*in*/, const int * a /*in*/, immediate i /*in*/);
CSTUB_EXTERN ae_int32u CSTUB_(_TIE_xt_hifi2_uint32_mtor_ae_int32u)(const unsigned int * a /*in*/, immediate i /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int32u_rtom_uint32)(const ae_int32u& d /*in*/, const unsigned int * a /*in*/, immediate i /*in*/);
CSTUB_EXTERN ae_int16 CSTUB_(_TIE_xt_hifi2_int16_mtor_ae_int16)(const short * a /*in*/, immediate i /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int16_rtom_int16)(const ae_int16& d /*in*/, const short * a /*in*/, immediate i /*in*/);
CSTUB_EXTERN ae_int16u CSTUB_(_TIE_xt_hifi2_uint16_mtor_ae_int16u)(const unsigned short * a /*in*/, immediate i /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int16u_rtom_uint16)(const ae_int16u& d /*in*/, const unsigned short * a /*in*/, immediate i /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_int32_mtor_ae_int32x2)(const int * a /*in*/, immediate i /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int32x2_rtom_int32)(const ae_int32x2& d /*in*/, const int * a /*in*/, immediate i /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int32x2_rtom_ae_int32)(const ae_int32x2& d /*in*/, const ae_int32 * a /*in*/, immediate i /*in*/);
CSTUB_EXTERN ae_int32x4 CSTUB_(_TIE_xt_hifi2_int32_mtor_ae_int32x4)(const int * a /*in*/, immediate i /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int32x4_rtom_int32)(const ae_int32x4& d /*in*/, const int * a /*in*/, immediate i /*in*/);
CSTUB_EXTERN ae_f32x4 CSTUB_(_TIE_xt_hifi2_int32_mtor_ae_f32x4)(const int * a /*in*/, immediate i /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_f32x4_rtom_int32)(const ae_f32x4& d /*in*/, const int * a /*in*/, immediate i /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_ae_p24s_rtor_ae_int24x2)(const ae_p24s& d0 /*in*/);
CSTUB_EXTERN ae_p24s CSTUB_(_TIE_xt_hifi2_ae_int24x2_rtor_ae_p24s)(const ae_int24x2& d0 /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_ae_p24s_rtor_ae_f24x2)(const ae_p24s& d0 /*in*/);
CSTUB_EXTERN ae_p24s CSTUB_(_TIE_xt_hifi2_ae_f24x2_rtor_ae_p24s)(const ae_f24x2& d0 /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_ae_p24f_rtor_ae_int24x2)(const ae_p24f& d0 /*in*/);
CSTUB_EXTERN ae_p24f CSTUB_(_TIE_xt_hifi2_ae_int24x2_rtor_ae_p24f)(const ae_int24x2& d0 /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_ae_p24f_rtor_ae_f24x2)(const ae_p24f& d0 /*in*/);
CSTUB_EXTERN ae_p24f CSTUB_(_TIE_xt_hifi2_ae_f24x2_rtor_ae_p24f)(const ae_f24x2& d0 /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_ae_p24x2s_rtor_ae_int24x2)(const ae_p24x2s& d0 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_ae_int24x2_rtor_ae_p24x2s)(const ae_int24x2& d0 /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_ae_p24x2s_rtor_ae_f24x2)(const ae_p24x2s& d0 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_ae_f24x2_rtor_ae_p24x2s)(const ae_f24x2& d0 /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_ae_p24x2f_rtor_ae_int24x2)(const ae_p24x2f& d0 /*in*/);
CSTUB_EXTERN ae_p24x2f CSTUB_(_TIE_xt_hifi2_ae_int24x2_rtor_ae_p24x2f)(const ae_int24x2& d0 /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_ae_p24x2f_rtor_ae_f24x2)(const ae_p24x2f& d0 /*in*/);
CSTUB_EXTERN ae_p24x2f CSTUB_(_TIE_xt_hifi2_ae_f24x2_rtor_ae_p24x2f)(const ae_f24x2& d0 /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_ae_p16s_rtor_ae_int24x2)(const ae_p16s& d0 /*in*/);
CSTUB_EXTERN ae_p16s CSTUB_(_TIE_xt_hifi2_ae_int24x2_rtor_ae_p16s)(const ae_int24x2& d0 /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_ae_p16s_rtor_ae_f24x2)(const ae_p16s& d0 /*in*/);
CSTUB_EXTERN ae_p16s CSTUB_(_TIE_xt_hifi2_ae_f24x2_rtor_ae_p16s)(const ae_f24x2& d0 /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_ae_p16x2s_rtor_ae_int24x2)(const ae_p16x2s& d0 /*in*/);
CSTUB_EXTERN ae_p16x2s CSTUB_(_TIE_xt_hifi2_ae_int24x2_rtor_ae_p16x2s)(const ae_int24x2& d0 /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_ae_p16x2s_rtor_ae_f24x2)(const ae_p16x2s& d0 /*in*/);
CSTUB_EXTERN ae_p16x2s CSTUB_(_TIE_xt_hifi2_ae_f24x2_rtor_ae_p16x2s)(const ae_f24x2& d0 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_ae_q56s_rtor_ae_int64)(const ae_q56s& d0 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_ae_int64_rtor_ae_q56s)(const ae_int64& d0 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_ae_q56s_rtor_ae_f64)(const ae_q56s& d0 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_ae_f64_rtor_ae_q56s)(const ae_f64& d0 /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_ae_f32_rtor_ae_int32)(const ae_f32& d0 /*in*/);
CSTUB_EXTERN ae_f32 CSTUB_(_TIE_xt_hifi2_ae_int32_rtor_ae_f32)(const ae_int32& d0 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_ae_f32x2_rtor_ae_int32x2)(const ae_f32x2& d0 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_ae_int32x2_rtor_ae_f32x2)(const ae_int32x2& d0 /*in*/);
CSTUB_EXTERN ae_int24 CSTUB_(_TIE_xt_hifi2_ae_f24_rtor_ae_int24)(const ae_f24& d0 /*in*/);
CSTUB_EXTERN ae_f24 CSTUB_(_TIE_xt_hifi2_ae_int24_rtor_ae_f24)(const ae_int24& d0 /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_ae_f24x2_rtor_ae_int24x2)(const ae_f24x2& d0 /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_ae_int24x2_rtor_ae_f24x2)(const ae_int24x2& d0 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_ae_f64_rtor_ae_int64)(const ae_f64& d0 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_ae_int64_rtor_ae_f64)(const ae_int64& d0 /*in*/);
CSTUB_EXTERN ae_int16 CSTUB_(_TIE_xt_hifi2_ae_f16_rtor_ae_int16)(const ae_f16& d0 /*in*/);
CSTUB_EXTERN ae_f16 CSTUB_(_TIE_xt_hifi2_ae_int16_rtor_ae_f16)(const ae_int16& d0 /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_ae_f16x4_rtor_ae_int16x4)(const ae_f16x4& d0 /*in*/);
CSTUB_EXTERN ae_f16x4 CSTUB_(_TIE_xt_hifi2_ae_int16x4_rtor_ae_f16x4)(const ae_int16x4& d0 /*in*/);
CSTUB_EXTERN ae_f32 CSTUB_(_TIE_xt_hifi2_ae_f24_rtor_ae_f32)(const ae_f24& d0 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_ae_f24x2_rtor_ae_f32x2)(const ae_f24x2& d0 /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_ae_int24_rtor_ae_int32)(const ae_int24& d0 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_ae_int24x2_rtor_ae_int32x2)(const ae_int24x2& d0 /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_ae_f24_rtor_ae_int32)(const ae_f24& d0 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_ae_f24x2_rtor_ae_int32x2)(const ae_f24x2& d0 /*in*/);
CSTUB_EXTERN ae_f32 CSTUB_(_TIE_xt_hifi2_ae_int24_rtor_ae_f32)(const ae_int24& d0 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_ae_int24x2_rtor_ae_f32x2)(const ae_int24x2& d0 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_ae_f32_rtor_ae_f32x2)(const ae_f32& d0 /*in*/);
CSTUB_EXTERN ae_f32 CSTUB_(_TIE_xt_hifi2_ae_f32x2_rtor_ae_f32)(const ae_f32x2& d01 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_ae_int32_rtor_ae_int32x2)(const ae_int32& d0 /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_ae_int32x2_rtor_ae_int32)(const ae_int32x2& d01 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_ae_int32u_rtor_ae_int32x2)(const ae_int32u& d0 /*in*/);
CSTUB_EXTERN ae_int32u CSTUB_(_TIE_xt_hifi2_ae_int32x2_rtor_ae_int32u)(const ae_int32x2& d01 /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_ae_f24_rtor_ae_f24x2)(const ae_f24& d0 /*in*/);
CSTUB_EXTERN ae_f24 CSTUB_(_TIE_xt_hifi2_ae_f24x2_rtor_ae_f24)(const ae_f24x2& d01 /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_ae_int24_rtor_ae_int24x2)(const ae_int24& d0 /*in*/);
CSTUB_EXTERN ae_int24 CSTUB_(_TIE_xt_hifi2_ae_int24x2_rtor_ae_int24)(const ae_int24x2& d01 /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_ae_int16_rtor_ae_int16x4)(const ae_int16& d0 /*in*/);
CSTUB_EXTERN ae_f16x4 CSTUB_(_TIE_xt_hifi2_ae_f16_rtor_ae_f16x4)(const ae_f16& d0 /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_ae_f16_rtor_ae_int16x4)(const ae_f16& d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int16x4_rtom_ae_int16)(const ae_int16x4& v /*in*/, const ae_int16 * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_f16x4_rtom_ae_f16)(const ae_f16x4& v /*in*/, const ae_f16 * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int16x4_rtom_ae_f16)(const ae_int16x4& v /*in*/, const ae_f16 * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_f16x4_rtom_ae_int16)(const ae_f16x4& v /*in*/, const ae_int16 * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN ae_int32x4 CSTUB_(_TIE_xt_hifi2_ae_int32_rtor_ae_int32x4)(const ae_int32& b /*in*/);
CSTUB_EXTERN ae_f32x4 CSTUB_(_TIE_xt_hifi2_ae_f32_rtor_ae_f32x4)(const ae_f32& b /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_ae_int16_rtor_ae_int32)(const ae_int16& b /*in*/);
CSTUB_EXTERN ae_int16 CSTUB_(_TIE_xt_hifi2_ae_int32_rtor_ae_int16)(const ae_int32& b /*in*/);
CSTUB_EXTERN ae_f32 CSTUB_(_TIE_xt_hifi2_ae_f16_rtor_ae_f32)(const ae_f16& b /*in*/);
CSTUB_EXTERN ae_f16 CSTUB_(_TIE_xt_hifi2_ae_f32_rtor_ae_f16)(const ae_f32& b /*in*/);
CSTUB_EXTERN ae_int24 CSTUB_(_TIE_xt_hifi2_ae_int16_rtor_ae_int24)(const ae_int16& b /*in*/);
CSTUB_EXTERN ae_int16 CSTUB_(_TIE_xt_hifi2_ae_int24_rtor_ae_int16)(const ae_int24& b /*in*/);
CSTUB_EXTERN ae_f24 CSTUB_(_TIE_xt_hifi2_ae_f16_rtor_ae_f24)(const ae_f16& b /*in*/);
CSTUB_EXTERN ae_f16 CSTUB_(_TIE_xt_hifi2_ae_f24_rtor_ae_f16)(const ae_f24& b /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_MOVINT16X4_FROMINT16)(const ae_int16& i /*in*/);
CSTUB_EXTERN ae_int24 CSTUB_(_TIE_xt_hifi2_AE_MOVINT24_FROMINT16)(const ae_int16& i /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_MOVINT24X2_FROMINT16)(const ae_int16& i /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_MOVINT32_FROMINT16)(const ae_int16& i /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_MOVINT32X2_FROMINT16)(const ae_int16& i /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MOVINT64_FROMINT16)(const ae_int16& i /*in*/);
CSTUB_EXTERN ae_f16 CSTUB_(_TIE_xt_hifi2_AE_MOVF16_FROMINT16)(const ae_int16& i /*in*/);
CSTUB_EXTERN ae_f16x4 CSTUB_(_TIE_xt_hifi2_AE_MOVF16X4_FROMINT16)(const ae_int16& i /*in*/);
CSTUB_EXTERN ae_f24 CSTUB_(_TIE_xt_hifi2_AE_MOVF24_FROMINT16)(const ae_int16& i /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_AE_MOVF24X2_FROMINT16)(const ae_int16& i /*in*/);
CSTUB_EXTERN ae_f32 CSTUB_(_TIE_xt_hifi2_AE_MOVF32_FROMINT16)(const ae_int16& i /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_MOVF32X2_FROMINT16)(const ae_int16& i /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MOVF64_FROMINT16)(const ae_int16& i /*in*/);
CSTUB_EXTERN ae_int16 CSTUB_(_TIE_xt_hifi2_AE_MOVINT16_FROMINT16X4)(const ae_int16x4& i /*in*/);
CSTUB_EXTERN ae_int24 CSTUB_(_TIE_xt_hifi2_AE_MOVINT24_FROMINT16X4)(const ae_int16x4& i /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_MOVINT24X2_FROMINT16X4)(const ae_int16x4& i /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_MOVINT32_FROMINT16X4)(const ae_int16x4& i /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_MOVINT32X2_FROMINT16X4)(const ae_int16x4& i /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MOVINT64_FROMINT16X4)(const ae_int16x4& i /*in*/);
CSTUB_EXTERN ae_f16 CSTUB_(_TIE_xt_hifi2_AE_MOVF16_FROMINT16X4)(const ae_int16x4& i /*in*/);
CSTUB_EXTERN ae_f16x4 CSTUB_(_TIE_xt_hifi2_AE_MOVF16X4_FROMINT16X4)(const ae_int16x4& i /*in*/);
CSTUB_EXTERN ae_f24 CSTUB_(_TIE_xt_hifi2_AE_MOVF24_FROMINT16X4)(const ae_int16x4& i /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_AE_MOVF24X2_FROMINT16X4)(const ae_int16x4& i /*in*/);
CSTUB_EXTERN ae_f32 CSTUB_(_TIE_xt_hifi2_AE_MOVF32_FROMINT16X4)(const ae_int16x4& i /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_MOVF32X2_FROMINT16X4)(const ae_int16x4& i /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MOVF64_FROMINT16X4)(const ae_int16x4& i /*in*/);
CSTUB_EXTERN ae_int16 CSTUB_(_TIE_xt_hifi2_AE_MOVINT16_FROMINT24)(const ae_int24& i /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_MOVINT16X4_FROMINT24)(const ae_int24& i /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_MOVINT24X2_FROMINT24)(const ae_int24& i /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_MOVINT32_FROMINT24)(const ae_int24& i /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_MOVINT32X2_FROMINT24)(const ae_int24& i /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MOVINT64_FROMINT24)(const ae_int24& i /*in*/);
CSTUB_EXTERN ae_f16 CSTUB_(_TIE_xt_hifi2_AE_MOVF16_FROMINT24)(const ae_int24& i /*in*/);
CSTUB_EXTERN ae_f16x4 CSTUB_(_TIE_xt_hifi2_AE_MOVF16X4_FROMINT24)(const ae_int24& i /*in*/);
CSTUB_EXTERN ae_f24 CSTUB_(_TIE_xt_hifi2_AE_MOVF24_FROMINT24)(const ae_int24& i /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_AE_MOVF24X2_FROMINT24)(const ae_int24& i /*in*/);
CSTUB_EXTERN ae_f32 CSTUB_(_TIE_xt_hifi2_AE_MOVF32_FROMINT24)(const ae_int24& i /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_MOVF32X2_FROMINT24)(const ae_int24& i /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MOVF64_FROMINT24)(const ae_int24& i /*in*/);
CSTUB_EXTERN ae_int16 CSTUB_(_TIE_xt_hifi2_AE_MOVINT16_FROMINT24X2)(const ae_int24x2& i /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_MOVINT16X4_FROMINT24X2)(const ae_int24x2& i /*in*/);
CSTUB_EXTERN ae_int24 CSTUB_(_TIE_xt_hifi2_AE_MOVINT24_FROMINT24X2)(const ae_int24x2& i /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_MOVINT32_FROMINT24X2)(const ae_int24x2& i /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_MOVINT32X2_FROMINT24X2)(const ae_int24x2& i /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MOVINT64_FROMINT24X2)(const ae_int24x2& i /*in*/);
CSTUB_EXTERN ae_f16 CSTUB_(_TIE_xt_hifi2_AE_MOVF16_FROMINT24X2)(const ae_int24x2& i /*in*/);
CSTUB_EXTERN ae_f16x4 CSTUB_(_TIE_xt_hifi2_AE_MOVF16X4_FROMINT24X2)(const ae_int24x2& i /*in*/);
CSTUB_EXTERN ae_f24 CSTUB_(_TIE_xt_hifi2_AE_MOVF24_FROMINT24X2)(const ae_int24x2& i /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_AE_MOVF24X2_FROMINT24X2)(const ae_int24x2& i /*in*/);
CSTUB_EXTERN ae_f32 CSTUB_(_TIE_xt_hifi2_AE_MOVF32_FROMINT24X2)(const ae_int24x2& i /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_MOVF32X2_FROMINT24X2)(const ae_int24x2& i /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MOVF64_FROMINT24X2)(const ae_int24x2& i /*in*/);
CSTUB_EXTERN ae_int16 CSTUB_(_TIE_xt_hifi2_AE_MOVINT16_FROMINT32)(const ae_int32& i /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_MOVINT16X4_FROMINT32)(const ae_int32& i /*in*/);
CSTUB_EXTERN ae_int24 CSTUB_(_TIE_xt_hifi2_AE_MOVINT24_FROMINT32)(const ae_int32& i /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_MOVINT24X2_FROMINT32)(const ae_int32& i /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_MOVINT32X2_FROMINT32)(const ae_int32& i /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MOVINT64_FROMINT32)(const ae_int32& i /*in*/);
CSTUB_EXTERN ae_f16 CSTUB_(_TIE_xt_hifi2_AE_MOVF16_FROMINT32)(const ae_int32& i /*in*/);
CSTUB_EXTERN ae_f16x4 CSTUB_(_TIE_xt_hifi2_AE_MOVF16X4_FROMINT32)(const ae_int32& i /*in*/);
CSTUB_EXTERN ae_f24 CSTUB_(_TIE_xt_hifi2_AE_MOVF24_FROMINT32)(const ae_int32& i /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_AE_MOVF24X2_FROMINT32)(const ae_int32& i /*in*/);
CSTUB_EXTERN ae_f32 CSTUB_(_TIE_xt_hifi2_AE_MOVF32_FROMINT32)(const ae_int32& i /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_MOVF32X2_FROMINT32)(const ae_int32& i /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MOVF64_FROMINT32)(const ae_int32& i /*in*/);
CSTUB_EXTERN ae_int16 CSTUB_(_TIE_xt_hifi2_AE_MOVINT16_FROMINT32X2)(const ae_int32x2& i /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_MOVINT16X4_FROMINT32X2)(const ae_int32x2& i /*in*/);
CSTUB_EXTERN ae_int24 CSTUB_(_TIE_xt_hifi2_AE_MOVINT24_FROMINT32X2)(const ae_int32x2& i /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_MOVINT24X2_FROMINT32X2)(const ae_int32x2& i /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_MOVINT32_FROMINT32X2)(const ae_int32x2& i /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MOVINT64_FROMINT32X2)(const ae_int32x2& i /*in*/);
CSTUB_EXTERN ae_f16 CSTUB_(_TIE_xt_hifi2_AE_MOVF16_FROMINT32X2)(const ae_int32x2& i /*in*/);
CSTUB_EXTERN ae_f16x4 CSTUB_(_TIE_xt_hifi2_AE_MOVF16X4_FROMINT32X2)(const ae_int32x2& i /*in*/);
CSTUB_EXTERN ae_f24 CSTUB_(_TIE_xt_hifi2_AE_MOVF24_FROMINT32X2)(const ae_int32x2& i /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_AE_MOVF24X2_FROMINT32X2)(const ae_int32x2& i /*in*/);
CSTUB_EXTERN ae_f32 CSTUB_(_TIE_xt_hifi2_AE_MOVF32_FROMINT32X2)(const ae_int32x2& i /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_MOVF32X2_FROMINT32X2)(const ae_int32x2& i /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MOVF64_FROMINT32X2)(const ae_int32x2& i /*in*/);
CSTUB_EXTERN ae_int16 CSTUB_(_TIE_xt_hifi2_AE_MOVINT16_FROMINT64)(const ae_int64& i /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_MOVINT16X4_FROMINT64)(const ae_int64& i /*in*/);
CSTUB_EXTERN ae_int24 CSTUB_(_TIE_xt_hifi2_AE_MOVINT24_FROMINT64)(const ae_int64& i /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_MOVINT24X2_FROMINT64)(const ae_int64& i /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_MOVINT32_FROMINT64)(const ae_int64& i /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_MOVINT32X2_FROMINT64)(const ae_int64& i /*in*/);
CSTUB_EXTERN ae_f16 CSTUB_(_TIE_xt_hifi2_AE_MOVF16_FROMINT64)(const ae_int64& i /*in*/);
CSTUB_EXTERN ae_f16x4 CSTUB_(_TIE_xt_hifi2_AE_MOVF16X4_FROMINT64)(const ae_int64& i /*in*/);
CSTUB_EXTERN ae_f24 CSTUB_(_TIE_xt_hifi2_AE_MOVF24_FROMINT64)(const ae_int64& i /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_AE_MOVF24X2_FROMINT64)(const ae_int64& i /*in*/);
CSTUB_EXTERN ae_f32 CSTUB_(_TIE_xt_hifi2_AE_MOVF32_FROMINT64)(const ae_int64& i /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_MOVF32X2_FROMINT64)(const ae_int64& i /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MOVF64_FROMINT64)(const ae_int64& i /*in*/);
CSTUB_EXTERN ae_int16 CSTUB_(_TIE_xt_hifi2_AE_MOVINT16_FROMF16)(const ae_f16& i /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_MOVINT16X4_FROMF16)(const ae_f16& i /*in*/);
CSTUB_EXTERN ae_int24 CSTUB_(_TIE_xt_hifi2_AE_MOVINT24_FROMF16)(const ae_f16& i /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_MOVINT24X2_FROMF16)(const ae_f16& i /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_MOVINT32_FROMF16)(const ae_f16& i /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_MOVINT32X2_FROMF16)(const ae_f16& i /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MOVINT64_FROMF16)(const ae_f16& i /*in*/);
CSTUB_EXTERN ae_f16x4 CSTUB_(_TIE_xt_hifi2_AE_MOVF16X4_FROMF16)(const ae_f16& i /*in*/);
CSTUB_EXTERN ae_f24 CSTUB_(_TIE_xt_hifi2_AE_MOVF24_FROMF16)(const ae_f16& i /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_AE_MOVF24X2_FROMF16)(const ae_f16& i /*in*/);
CSTUB_EXTERN ae_f32 CSTUB_(_TIE_xt_hifi2_AE_MOVF32_FROMF16)(const ae_f16& i /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_MOVF32X2_FROMF16)(const ae_f16& i /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MOVF64_FROMF16)(const ae_f16& i /*in*/);
CSTUB_EXTERN ae_int16 CSTUB_(_TIE_xt_hifi2_AE_MOVINT16_FROMF16X4)(const ae_f16x4& i /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_MOVINT16X4_FROMF16X4)(const ae_f16x4& i /*in*/);
CSTUB_EXTERN ae_int24 CSTUB_(_TIE_xt_hifi2_AE_MOVINT24_FROMF16X4)(const ae_f16x4& i /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_MOVINT24X2_FROMF16X4)(const ae_f16x4& i /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_MOVINT32_FROMF16X4)(const ae_f16x4& i /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_MOVINT32X2_FROMF16X4)(const ae_f16x4& i /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MOVINT64_FROMF16X4)(const ae_f16x4& i /*in*/);
CSTUB_EXTERN ae_f16 CSTUB_(_TIE_xt_hifi2_AE_MOVF16_FROMF16X4)(const ae_f16x4& i /*in*/);
CSTUB_EXTERN ae_f24 CSTUB_(_TIE_xt_hifi2_AE_MOVF24_FROMF16X4)(const ae_f16x4& i /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_AE_MOVF24X2_FROMF16X4)(const ae_f16x4& i /*in*/);
CSTUB_EXTERN ae_f32 CSTUB_(_TIE_xt_hifi2_AE_MOVF32_FROMF16X4)(const ae_f16x4& i /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_MOVF32X2_FROMF16X4)(const ae_f16x4& i /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MOVF64_FROMF16X4)(const ae_f16x4& i /*in*/);
CSTUB_EXTERN ae_int16 CSTUB_(_TIE_xt_hifi2_AE_MOVINT16_FROMF24)(const ae_f24& i /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_MOVINT16X4_FROMF24)(const ae_f24& i /*in*/);
CSTUB_EXTERN ae_int24 CSTUB_(_TIE_xt_hifi2_AE_MOVINT24_FROMF24)(const ae_f24& i /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_MOVINT24X2_FROMF24)(const ae_f24& i /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_MOVINT32_FROMF24)(const ae_f24& i /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_MOVINT32X2_FROMF24)(const ae_f24& i /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MOVINT64_FROMF24)(const ae_f24& i /*in*/);
CSTUB_EXTERN ae_f16 CSTUB_(_TIE_xt_hifi2_AE_MOVF16_FROMF24)(const ae_f24& i /*in*/);
CSTUB_EXTERN ae_f16x4 CSTUB_(_TIE_xt_hifi2_AE_MOVF16X4_FROMF24)(const ae_f24& i /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_AE_MOVF24X2_FROMF24)(const ae_f24& i /*in*/);
CSTUB_EXTERN ae_f32 CSTUB_(_TIE_xt_hifi2_AE_MOVF32_FROMF24)(const ae_f24& i /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_MOVF32X2_FROMF24)(const ae_f24& i /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MOVF64_FROMF24)(const ae_f24& i /*in*/);
CSTUB_EXTERN ae_int16 CSTUB_(_TIE_xt_hifi2_AE_MOVINT16_FROMF24X2)(const ae_f24x2& i /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_MOVINT16X4_FROMF24X2)(const ae_f24x2& i /*in*/);
CSTUB_EXTERN ae_int24 CSTUB_(_TIE_xt_hifi2_AE_MOVINT24_FROMF24X2)(const ae_f24x2& i /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_MOVINT24X2_FROMF24X2)(const ae_f24x2& i /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_MOVINT32_FROMF24X2)(const ae_f24x2& i /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_MOVINT32X2_FROMF24X2)(const ae_f24x2& i /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MOVINT64_FROMF24X2)(const ae_f24x2& i /*in*/);
CSTUB_EXTERN ae_f16 CSTUB_(_TIE_xt_hifi2_AE_MOVF16_FROMF24X2)(const ae_f24x2& i /*in*/);
CSTUB_EXTERN ae_f16x4 CSTUB_(_TIE_xt_hifi2_AE_MOVF16X4_FROMF24X2)(const ae_f24x2& i /*in*/);
CSTUB_EXTERN ae_f24 CSTUB_(_TIE_xt_hifi2_AE_MOVF24_FROMF24X2)(const ae_f24x2& i /*in*/);
CSTUB_EXTERN ae_f32 CSTUB_(_TIE_xt_hifi2_AE_MOVF32_FROMF24X2)(const ae_f24x2& i /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_MOVF32X2_FROMF24X2)(const ae_f24x2& i /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MOVF64_FROMF24X2)(const ae_f24x2& i /*in*/);
CSTUB_EXTERN ae_int16 CSTUB_(_TIE_xt_hifi2_AE_MOVINT16_FROMF32)(const ae_f32& i /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_MOVINT16X4_FROMF32)(const ae_f32& i /*in*/);
CSTUB_EXTERN ae_int24 CSTUB_(_TIE_xt_hifi2_AE_MOVINT24_FROMF32)(const ae_f32& i /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_MOVINT24X2_FROMF32)(const ae_f32& i /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_MOVINT32_FROMF32)(const ae_f32& i /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_MOVINT32X2_FROMF32)(const ae_f32& i /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MOVINT64_FROMF32)(const ae_f32& i /*in*/);
CSTUB_EXTERN ae_f16 CSTUB_(_TIE_xt_hifi2_AE_MOVF16_FROMF32)(const ae_f32& i /*in*/);
CSTUB_EXTERN ae_f16x4 CSTUB_(_TIE_xt_hifi2_AE_MOVF16X4_FROMF32)(const ae_f32& i /*in*/);
CSTUB_EXTERN ae_f24 CSTUB_(_TIE_xt_hifi2_AE_MOVF24_FROMF32)(const ae_f32& i /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_AE_MOVF24X2_FROMF32)(const ae_f32& i /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_MOVF32X2_FROMF32)(const ae_f32& i /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MOVF64_FROMF32)(const ae_f32& i /*in*/);
CSTUB_EXTERN ae_int16 CSTUB_(_TIE_xt_hifi2_AE_MOVINT16_FROMF32X2)(const ae_f32x2& i /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_MOVINT16X4_FROMF32X2)(const ae_f32x2& i /*in*/);
CSTUB_EXTERN ae_int24 CSTUB_(_TIE_xt_hifi2_AE_MOVINT24_FROMF32X2)(const ae_f32x2& i /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_MOVINT24X2_FROMF32X2)(const ae_f32x2& i /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_MOVINT32_FROMF32X2)(const ae_f32x2& i /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_MOVINT32X2_FROMF32X2)(const ae_f32x2& i /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MOVINT64_FROMF32X2)(const ae_f32x2& i /*in*/);
CSTUB_EXTERN ae_f16 CSTUB_(_TIE_xt_hifi2_AE_MOVF16_FROMF32X2)(const ae_f32x2& i /*in*/);
CSTUB_EXTERN ae_f16x4 CSTUB_(_TIE_xt_hifi2_AE_MOVF16X4_FROMF32X2)(const ae_f32x2& i /*in*/);
CSTUB_EXTERN ae_f24 CSTUB_(_TIE_xt_hifi2_AE_MOVF24_FROMF32X2)(const ae_f32x2& i /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_AE_MOVF24X2_FROMF32X2)(const ae_f32x2& i /*in*/);
CSTUB_EXTERN ae_f32 CSTUB_(_TIE_xt_hifi2_AE_MOVF32_FROMF32X2)(const ae_f32x2& i /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MOVF64_FROMF32X2)(const ae_f32x2& i /*in*/);
CSTUB_EXTERN ae_int16 CSTUB_(_TIE_xt_hifi2_AE_MOVINT16_FROMF64)(const ae_f64& i /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_MOVINT16X4_FROMF64)(const ae_f64& i /*in*/);
CSTUB_EXTERN ae_int24 CSTUB_(_TIE_xt_hifi2_AE_MOVINT24_FROMF64)(const ae_f64& i /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_MOVINT24X2_FROMF64)(const ae_f64& i /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_MOVINT32_FROMF64)(const ae_f64& i /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_MOVINT32X2_FROMF64)(const ae_f64& i /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MOVINT64_FROMF64)(const ae_f64& i /*in*/);
CSTUB_EXTERN ae_f16 CSTUB_(_TIE_xt_hifi2_AE_MOVF16_FROMF64)(const ae_f64& i /*in*/);
CSTUB_EXTERN ae_f16x4 CSTUB_(_TIE_xt_hifi2_AE_MOVF16X4_FROMF64)(const ae_f64& i /*in*/);
CSTUB_EXTERN ae_f24 CSTUB_(_TIE_xt_hifi2_AE_MOVF24_FROMF64)(const ae_f64& i /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_AE_MOVF24X2_FROMF64)(const ae_f64& i /*in*/);
CSTUB_EXTERN ae_f32 CSTUB_(_TIE_xt_hifi2_AE_MOVF32_FROMF64)(const ae_f64& i /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_MOVF32X2_FROMF64)(const ae_f64& i /*in*/);
CSTUB_EXTERN ae_int32u CSTUB_(_TIE_xt_hifi2_ae_int32u_loadi)(const ae_int32u * base /*in*/, immediate c /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int32u_storei)(const ae_int32u& a /*in*/, const ae_int32u * base /*in*/, immediate c /*in*/);
CSTUB_EXTERN ae_int32u CSTUB_(_TIE_xt_hifi2_ae_int32u_move)(const ae_int32u& b /*in*/);
CSTUB_EXTERN ae_int16u CSTUB_(_TIE_xt_hifi2_ae_int16u_loadi)(const ae_int16u * base /*in*/, immediate c /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int16u_storei)(const ae_int16u& a /*in*/, const ae_int16u * base /*in*/, immediate c /*in*/);
CSTUB_EXTERN ae_int16u CSTUB_(_TIE_xt_hifi2_ae_int16u_move)(const ae_int16u& b /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_ABS_32)(const ae_int32& b /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_MOV_32)(const ae_int32& b /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_NEG_32)(const ae_int32& b /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_ADD_32)(const ae_int32& b /*in*/, const ae_int32& c /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_ADDI_32)(const ae_int32& b /*in*/, immediate c /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_ADDMI_32)(const ae_int32& b /*in*/, immediate c /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_ADDX2_32)(const ae_int32& b /*in*/, const ae_int32& c /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_ADDX4_32)(const ae_int32& b /*in*/, const ae_int32& c /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_ADDX8_32)(const ae_int32& b /*in*/, const ae_int32& c /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_SUBX2_32)(const ae_int32& b /*in*/, const ae_int32& c /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_SUBX4_32)(const ae_int32& b /*in*/, const ae_int32& c /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_SUBX8_32)(const ae_int32& b /*in*/, const ae_int32& c /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_SUB_32)(const ae_int32& b /*in*/, const ae_int32& c /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_SEXT_32)(const ae_int32& b /*in*/, immediate c /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_SRAI_32)(const ae_int32& b /*in*/, immediate c /*in*/);
CSTUB_EXTERN ae_int32u CSTUB_(_TIE_xt_hifi2_AE_SRLI_32)(const ae_int32u& b /*in*/, immediate c /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_SLLI_32)(const ae_int32& b /*in*/, immediate c /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_L_32)(const ae_int32 * base /*in*/, immediate c /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S_32)(const ae_int32& a /*in*/, const ae_int32 * base /*in*/, immediate c /*in*/);
CSTUB_EXTERN ae_int16 CSTUB_(_TIE_xt_hifi2_AE_L_16)(const ae_int16 * base /*in*/, immediate c /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_MAX_32_signed)(const ae_int32& b /*in*/, const ae_int32& c /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_MIN_32_signed)(const ae_int32& b /*in*/, const ae_int32& c /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_AND_32)(const ae_int32& b /*in*/, const ae_int32& c /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAF16SS_00_scalar)(ae_int32& a /*inout*/, const ae_f16x4& b /*in*/, const ae_f16x4& c /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAF16SS_30_scalar)(ae_int32& a /*inout*/, const ae_f16x4& b /*in*/, const ae_f16x4& c /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_MULF16SS_30_scalar)(const ae_f16x4& b /*in*/, const ae_f16x4& c /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_OR_32)(const ae_int32& b /*in*/, const ae_int32& c /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_XOR_32)(const ae_int32& b /*in*/, const ae_int32& c /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_NAND_32)(const ae_int32& b /*in*/, const ae_int32& c /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MOVLTZ_32)(ae_int32& a /*inout*/, const ae_int32& b /*in*/, const ae_int32& test_value /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MOVGEZ_32)(ae_int32& a /*inout*/, const ae_int32& b /*in*/, const ae_int32& test_value /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MOVEQZ_32)(ae_int32& a /*inout*/, const ae_int32& b /*in*/, const ae_int32& test_value /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MOVNEZ_32)(ae_int32& a /*inout*/, const ae_int32& b /*in*/, const ae_int32& test_value /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MOVT_32)(ae_int32& a /*inout*/, const ae_int32& b /*in*/, const xtbool cond /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_MOVI_32)(immediate i /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MOVT_32_unsigned)(ae_int32u& a /*inout*/, const ae_int32u& b /*in*/, const xtbool cond /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MOVF_32)(ae_int32& a /*inout*/, const ae_int32& b /*in*/, const xtbool cond /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MOVF_32_unsigned)(ae_int32u& a /*inout*/, const ae_int32u& b /*in*/, const xtbool cond /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S_16)(const ae_int16& a /*in*/, const ae_int16 * base /*in*/, immediate c /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_MUL16S)(const ae_int16& b /*in*/, const ae_int16& c /*in*/);
CSTUB_EXTERN ae_int16u CSTUB_(_TIE_xt_hifi2_AE_L_16U)(const ae_int16u * base /*in*/, immediate c /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_MUL32)(const ae_int32& b /*in*/, const ae_int32& c /*in*/);
CSTUB_EXTERN xtbool2 CSTUB_(_TIE_xt_hifi2_xtbool_join_xtbool2)(const xtbool src0 /*in*/, const xtbool src1 /*in*/);
CSTUB_EXTERN xtbool4 CSTUB_(_TIE_xt_hifi2_xtbool_join_xtbool4)(const xtbool src0 /*in*/, const xtbool src1 /*in*/, const xtbool src2 /*in*/, const xtbool src3 /*in*/);
CSTUB_EXTERN xtbool CSTUB_(_TIE_xt_hifi2_xtbool2_extract_0)(const xtbool2 src /*in*/);
CSTUB_EXTERN xtbool CSTUB_(_TIE_xt_hifi2_xtbool2_extract_1)(const xtbool2 src /*in*/);
CSTUB_EXTERN xtbool CSTUB_(_TIE_xt_hifi2_xtbool4_extract_0)(const xtbool4 src /*in*/);
CSTUB_EXTERN xtbool CSTUB_(_TIE_xt_hifi2_xtbool4_extract_1)(const xtbool4 src /*in*/);
CSTUB_EXTERN xtbool CSTUB_(_TIE_xt_hifi2_xtbool4_extract_2)(const xtbool4 src /*in*/);
CSTUB_EXTERN xtbool CSTUB_(_TIE_xt_hifi2_xtbool4_extract_3)(const xtbool4 src /*in*/);
CSTUB_EXTERN ae_int64x2 CSTUB_(_TIE_xt_hifi2_ae_int64x2_loadi)(const ae_int64x2 * b /*in*/, immediate c /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int64x2_storei)(const ae_int64x2& d /*in*/, const ae_int64x2 * b /*in*/, immediate c /*in*/);
CSTUB_EXTERN ae_int64x2 CSTUB_(_TIE_xt_hifi2_ae_int64x2_move)(const ae_int64x2& b /*in*/);
CSTUB_EXTERN ae_int64x2 CSTUB_(_TIE_xt_hifi2_AE_SLAA64X2_vector)(const ae_int64x2& d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_int64x2 CSTUB_(_TIE_xt_hifi2_AE_SLAI64X2_vector)(const ae_int64x2& d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_int64x2 CSTUB_(_TIE_xt_hifi2_AE_SRAA64X2_vector)(const ae_int64x2& d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_int64x2 CSTUB_(_TIE_xt_hifi2_AE_SRAI64X2_vector)(const ae_int64x2& d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_int64x2 CSTUB_(_TIE_xt_hifi2_AE_NEG64X2_vector)(const ae_int64x2& d0 /*in*/);
CSTUB_EXTERN ae_int64x2 CSTUB_(_TIE_xt_hifi2_AE_ADD64X2_vector)(const ae_int64x2& d0 /*in*/, const ae_int64x2& d1 /*in*/);
CSTUB_EXTERN ae_int64x2 CSTUB_(_TIE_xt_hifi2_AE_SUB64X2_vector)(const ae_int64x2& d0 /*in*/, const ae_int64x2& d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULA32X2_vector)(ae_int64x2& d /*inout*/, const ae_int32x2& d0 /*in*/, const ae_int32x2& d1 /*in*/);
CSTUB_EXTERN ae_int64x2 CSTUB_(_TIE_xt_hifi2_AE_MUL32X2_vector)(const ae_int32x2& d0 /*in*/, const ae_int32x2& d1 /*in*/);
CSTUB_EXTERN ae_int64x2 CSTUB_(_TIE_xt_hifi2_ae_int32x2_rtor_ae_int64x2)(const ae_int32x2& b /*in*/);
CSTUB_EXTERN long long CSTUB_(_TIE_xt_hifi2_AE_INT64X2_RADD)(const ae_int64x2& d0 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_SRLA32_vector)(const ae_int32x2& var1 /*in*/, const int var2 /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_AE_SRLA32_scalar)(const int var1 /*in*/, const int var2 /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_SRLA16_vector)(const ae_int16x4& var1 /*in*/, const int var2 /*in*/);
CSTUB_EXTERN short CSTUB_(_TIE_xt_hifi2_AE_SRLA16_scalar)(const short var1 /*in*/, const int var2 /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_AE_MULA16S_scalar)(const int ain /*in*/, const ae_int16& var1 /*in*/, const ae_int16& var2 /*in*/);
CSTUB_EXTERN ae_int32x4 CSTUB_(_TIE_xt_hifi2_AE_MULA16S_vector)(const ae_int32x4& ain /*in*/, const ae_int16x4& var1 /*in*/, const ae_int16x4& var2 /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_AE_MULS16S_scalar)(const int ain /*in*/, const short var1 /*in*/, const short var2 /*in*/);
CSTUB_EXTERN ae_int32x4 CSTUB_(_TIE_xt_hifi2_AE_MULS16S_vector)(const ae_int32x4& ain /*in*/, const ae_int16x4& var1 /*in*/, const ae_int16x4& var2 /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_RLmula0_rinit)(const int a /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_RLmula0_rvec)(const ae_int32& din /*in*/, const ae_int16x4& d0 /*in*/, const ae_int16x4& d1 /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_AE_RLmula0_rfini)(const ae_int32& d /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_RLmuls0_rinit)(const int a /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_RLmuls0_rvec)(const ae_int32& din /*in*/, const ae_int16x4& d0 /*in*/, const ae_int16x4& d1 /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_AE_RLmuls0_rfini)(const ae_int32& d /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_xt_ioports_READ_IPQ)(void);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_xt_ioports_CHECK_IPQ)(void);
CSTUB_EXTERN void CSTUB_(_TIE_xt_ioports_WRITE_OPQ)(const unsigned int a /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_xt_ioports_CHECK_OPQ)(void);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_xt_ioports_RUR_EXPSTATE)(void);
CSTUB_EXTERN void CSTUB_(_TIE_xt_ioports_WUR_EXPSTATE)(const unsigned int v /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_st_BBR)(const atbool& a /*in*/, const atbool * b /*in*/, immediate c /*in*/);
CSTUB_EXTERN atbool CSTUB_(_TIE_hmd1a_common_tie_ld_BBR)(const atbool * b /*in*/, immediate c /*in*/);
CSTUB_EXTERN atbool CSTUB_(_TIE_hmd1a_common_tie_mv_BBR)(const atbool& b /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_st_ULSR)(const ulsr32 a /*in*/, const ulsr32 * b /*in*/, immediate c /*in*/);
CSTUB_EXTERN ulsr32 CSTUB_(_TIE_hmd1a_common_tie_ld_ULSR)(const ulsr32 * b /*in*/, immediate c /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_st_MIR)(const mir18& a /*in*/, const mir18 * b /*in*/, immediate c /*in*/);
CSTUB_EXTERN mir18 CSTUB_(_TIE_hmd1a_common_tie_ld_MIR)(const mir18 * b /*in*/, immediate c /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_st_CR)(const cr64& a /*in*/, const cr64 * b /*in*/, immediate c /*in*/);
CSTUB_EXTERN cr64 CSTUB_(_TIE_hmd1a_common_tie_ld_CR)(const cr64 * b /*in*/, immediate c /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_dma_ld)(const unsigned int * src /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_dma_align_ld)(const unsigned int ** src /*inout*/, const unsigned int * dst /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_dma_ldu)(const unsigned int ** src /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_dma_flush_ld)(const unsigned int ** src /*inout*/, const unsigned int * dst /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_dma_st)(const unsigned int * src /*in*/, const unsigned int * dst /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_dma_align_st)(const unsigned int * src /*in*/, unsigned int ** dst /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_dma_stu)(const unsigned int * src /*in*/, unsigned int ** dst /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_dma_flush_st)(const unsigned int * src /*in*/, const unsigned int * dst /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_dma_buf_save)(unsigned int ** dst /*inout*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_load32x2_vr_idxR)(const unsigned int * ptr /*in*/, const unsigned int ofst /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_load32x2_vr_idxI)(const unsigned int * ptr /*in*/, immediate ofst2 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_load32x2_vr_postR)(vr64& z /*out*/, const unsigned int ** ptr /*inout*/, const unsigned int ofst /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_load32x2_vr_postI)(vr64& z /*out*/, const unsigned int ** ptr /*inout*/, immediate ofst2 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_load32x2_vr_circI)(vr64& z /*out*/, const unsigned int ** ptr /*inout*/, immediate ofst1 /*in*/, const cr64& c /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_load32x1_vr_idxR)(vr64& z /*inout*/, const unsigned int * ptr /*in*/, const unsigned int ofst /*in*/, immediate sel1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_load32x1_vr_idxI)(vr64& z /*inout*/, const unsigned int * ptr /*in*/, immediate ofst2 /*in*/, immediate sel1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_load32x1_vr_postR)(vr64& z /*inout*/, const unsigned int ** ptr /*inout*/, const unsigned int ofst /*in*/, immediate sel1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_load32x1_vr_postI)(vr64& z /*inout*/, const unsigned int ** ptr /*inout*/, immediate ofst2 /*in*/, immediate sel1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_load32x1_vr_circI)(vr64& z /*inout*/, const unsigned int ** ptr /*inout*/, immediate ofst1 /*in*/, const cr64& c /*in*/, immediate sel1 /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_load32x2_vr_bdir)(const unsigned int * ptr /*in*/, const unsigned int ofst /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_load32x2_vr_brev)(const unsigned int * ptr /*in*/, const unsigned int ofst /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_load32x2_vr_idxR_perm)(vr64& z /*inout*/, const unsigned int * ptr /*in*/, const unsigned int ofst /*in*/, immediate perm /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_load32x2_vr_idxI_perm_vr)(const vr64& z /*in*/, const unsigned int * ptr /*in*/, immediate ofst2 /*in*/, immediate perm /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_load32x2_vr_postR_perm)(vr64& z /*inout*/, const unsigned int ** ptr /*inout*/, const unsigned int ofst /*in*/, immediate perm /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_load32x2_vr_postI_perm_vr)(vr64& r /*out*/, const vr64& z /*in*/, const unsigned int ** ptr /*inout*/, immediate ofst2 /*in*/, immediate perm /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_load32x2_vr_circI_perm)(vr64& z /*inout*/, const unsigned int ** ptr /*inout*/, immediate ofst1 /*in*/, const cr64& c /*in*/, immediate perm /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_load32x1_vr_idxR_perm)(vr64& z /*inout*/, const unsigned int * ptr /*in*/, const unsigned int ofst /*in*/, immediate perm /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_load32x1_vr_idxI_perm_vr)(const vr64& z /*in*/, const unsigned int * ptr /*in*/, immediate ofst2 /*in*/, immediate perm /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_load32x1_vr_postR_perm)(vr64& z /*inout*/, const unsigned int ** ptr /*inout*/, const unsigned int ofst /*in*/, immediate perm /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_load32x1_vr_postI_perm_vr)(vr64& r /*out*/, const vr64& z /*in*/, const unsigned int ** ptr /*inout*/, immediate ofst2 /*in*/, immediate perm /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_load32x1_vr_circI_perm)(vr64& z /*inout*/, const unsigned int ** ptr /*inout*/, immediate ofst1 /*in*/, const cr64& c /*in*/, immediate perm /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_load16x2_vr_idxR)(const unsigned int * ptr /*in*/, const unsigned int ofst /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_load16x2_vr_idxI)(const unsigned int * ptr /*in*/, immediate ofst2 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_load16x2_vr_postR)(vr64& z /*out*/, const unsigned int ** ptr /*inout*/, const unsigned int ofst /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_load16x2_vr_postI)(vr64& z /*out*/, const unsigned int ** ptr /*inout*/, immediate ofst2 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_load16x2_vr_circI)(vr64& z /*out*/, const unsigned int ** ptr /*inout*/, immediate ofst1 /*in*/, const cr64& c /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_load16x1_vr_idxR)(vr64& z /*inout*/, const unsigned int * ptr /*in*/, const unsigned int ofst /*in*/, immediate sel1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_load16x1_vr_idxI)(vr64& z /*inout*/, const unsigned int * ptr /*in*/, immediate ofst2 /*in*/, immediate sel1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_load16x1_vr_postR)(vr64& z /*inout*/, const unsigned int ** ptr /*inout*/, const unsigned int ofst /*in*/, immediate sel1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_load16x1_vr_postI)(vr64& z /*inout*/, const unsigned int ** ptr /*inout*/, immediate ofst2 /*in*/, immediate sel1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_load16x1_vr_circI)(vr64& z /*inout*/, const unsigned int ** ptr /*inout*/, immediate ofst1 /*in*/, const cr64& c /*in*/, immediate sel1 /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_load8x2_vr_idxR)(const unsigned int * ptr /*in*/, const unsigned int ofst /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_load8x2_vr_idxI)(const unsigned int * ptr /*in*/, immediate ofst2 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_load8x2_vr_postR)(vr64& z /*out*/, const unsigned int ** ptr /*inout*/, const unsigned int ofst /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_load8x2_vr_postI)(vr64& z /*out*/, const unsigned int ** ptr /*inout*/, immediate ofst2 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_load8x2_vr_circI)(vr64& z /*out*/, const unsigned int ** ptr /*inout*/, immediate ofst1 /*in*/, const cr64& c /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_load8x1_vr_idxR)(vr64& z /*inout*/, const unsigned int * ptr /*in*/, const unsigned int ofst /*in*/, immediate sel1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_load8x1_vr_idxI)(vr64& z /*inout*/, const unsigned int * ptr /*in*/, immediate ofst2 /*in*/, immediate sel1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_load8x1_vr_postR)(vr64& z /*inout*/, const unsigned int ** ptr /*inout*/, const unsigned int ofst /*in*/, immediate sel1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_load8x1_vr_postI)(vr64& z /*inout*/, const unsigned int ** ptr /*inout*/, immediate ofst2 /*in*/, immediate sel1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_load8x1_vr_circI)(vr64& z /*inout*/, const unsigned int ** ptr /*inout*/, immediate ofst1 /*in*/, const cr64& c /*in*/, immediate sel1 /*in*/);
CSTUB_EXTERN ulsr32 CSTUB_(_TIE_hmd1a_common_tie_align_32x2_load)(const unsigned int * ptr /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_load_32x2_vr_a)(vr64& z /*out*/, ulsr32& buf /*inout*/, const unsigned int ** ptr /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_load_24x2_vr_a)(vr64& z /*out*/, ulsr32& buf /*inout*/, const unsigned int ** ptr /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_load_32x2_vr_a_circ)(vr64& z /*out*/, ulsr32& buf /*inout*/, const unsigned int ** ptr /*inout*/, const cr64& c /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store32x2_vr_idxR)(const vr64& z /*in*/, const unsigned int * ptr /*in*/, const unsigned int ofst /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store32x2_vr_idxI)(const vr64& z /*in*/, const unsigned int * ptr /*in*/, immediate ofst2 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store32x2_vr_postR)(const vr64& z /*in*/, unsigned int ** ptr /*inout*/, const unsigned int ofst /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store32x2_vr_postI)(const vr64& z /*in*/, unsigned int ** ptr /*inout*/, immediate ofst2 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store32x2_vr_circI)(const vr64& z /*in*/, unsigned int ** ptr /*inout*/, immediate ofst1 /*in*/, const cr64& c /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store32x1_vr_idxR)(const vr64& z /*in*/, const unsigned int * ptr /*in*/, const unsigned int ofst /*in*/, immediate sel1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store32x1_vr_idxI)(const vr64& z /*in*/, const unsigned int * ptr /*in*/, immediate ofst2 /*in*/, immediate sel1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store32x1_vr_postR)(const vr64& z /*in*/, unsigned int ** ptr /*inout*/, const unsigned int ofst /*in*/, immediate sel1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store32x1_vr_postI)(const vr64& z /*in*/, unsigned int ** ptr /*inout*/, immediate ofst2 /*in*/, immediate sel1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store32x1_vr_circI)(const vr64& z /*in*/, unsigned int ** ptr /*inout*/, immediate ofst1 /*in*/, const cr64& c /*in*/, immediate sel1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store32x2_vr_br_idxR)(const vr64& z /*in*/, const atbool& gate /*in*/, const unsigned int * ptr /*in*/, const unsigned int ofst /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store32x2_vr_br_idxI)(const vr64& z /*in*/, const atbool& gate /*in*/, const unsigned int * ptr /*in*/, immediate ofst2 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store32x2_vr_br_postR)(const vr64& z /*in*/, const atbool& gate /*in*/, unsigned int ** ptr /*inout*/, const unsigned int ofst /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store32x2_vr_br_postI)(const vr64& z /*in*/, const atbool& gate /*in*/, unsigned int ** ptr /*inout*/, immediate ofst2 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store32x2_vr_br_circI)(const vr64& z /*in*/, const atbool& gate /*in*/, unsigned int ** ptr /*inout*/, immediate ofst1 /*in*/, const cr64& c /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store32x1_vr_br_idxR)(const vr64& z /*in*/, const atbool& gate /*in*/, const unsigned int * ptr /*in*/, const unsigned int ofst /*in*/, immediate sel1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store32x1_vr_br_idxI)(const vr64& z /*in*/, const atbool& gate /*in*/, const unsigned int * ptr /*in*/, immediate ofst2 /*in*/, immediate sel1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store32x1_vr_br_postR)(const vr64& z /*in*/, const atbool& gate /*in*/, unsigned int ** ptr /*inout*/, const unsigned int ofst /*in*/, immediate sel1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store32x1_vr_br_postI)(const vr64& z /*in*/, const atbool& gate /*in*/, unsigned int ** ptr /*inout*/, immediate ofst2 /*in*/, immediate sel1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store32x1_vr_br_circI)(const vr64& z /*in*/, const atbool& gate /*in*/, unsigned int ** ptr /*inout*/, immediate ofst1 /*in*/, const cr64& c /*in*/, immediate sel1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store32x2_vr_br_bdir)(const vr64& z /*in*/, const atbool& gate /*in*/, const unsigned int * ptr /*in*/, const unsigned int ofst /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store32x2_vr_br_brev)(const vr64& z /*in*/, const atbool& gate /*in*/, const unsigned int * ptr /*in*/, const unsigned int ofst /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store16x2_vr_idxR)(const vr64& z /*in*/, const unsigned int * ptr /*in*/, const unsigned int ofst /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store16x2_vr_idxI)(const vr64& z /*in*/, const unsigned int * ptr /*in*/, immediate ofst2 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store16x2_vr_postR)(const vr64& z /*in*/, unsigned int ** ptr /*inout*/, const unsigned int ofst /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store16x2_vr_postI)(const vr64& z /*in*/, unsigned int ** ptr /*inout*/, immediate ofst2 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store16x2_vr_circI)(const vr64& z /*in*/, unsigned int ** ptr /*inout*/, immediate ofst1 /*in*/, const cr64& c /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store16x1_vr_idxR)(const vr64& z /*in*/, const unsigned int * ptr /*in*/, const unsigned int ofst /*in*/, immediate sel1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store16x1_vr_idxI)(const vr64& z /*in*/, const unsigned int * ptr /*in*/, immediate ofst2 /*in*/, immediate sel1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store16x1_vr_postR)(const vr64& z /*in*/, unsigned int ** ptr /*inout*/, const unsigned int ofst /*in*/, immediate sel1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store16x1_vr_postI)(const vr64& z /*in*/, unsigned int ** ptr /*inout*/, immediate ofst2 /*in*/, immediate sel1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store16x1_vr_circI)(const vr64& z /*in*/, unsigned int ** ptr /*inout*/, immediate ofst1 /*in*/, const cr64& c /*in*/, immediate sel1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store8x2_vr_idxR)(const vr64& z /*in*/, const unsigned int * ptr /*in*/, const unsigned int ofst /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store8x2_vr_idxI)(const vr64& z /*in*/, const unsigned int * ptr /*in*/, immediate ofst2 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store8x2_vr_postR)(const vr64& z /*in*/, unsigned int ** ptr /*inout*/, const unsigned int ofst /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store8x2_vr_postI)(const vr64& z /*in*/, unsigned int ** ptr /*inout*/, immediate ofst2 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store8x2_vr_circI)(const vr64& z /*in*/, unsigned int ** ptr /*inout*/, immediate ofst1 /*in*/, const cr64& c /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store8x1_vr_idxR)(const vr64& z /*in*/, const unsigned int * ptr /*in*/, const unsigned int ofst /*in*/, immediate sel1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store8x1_vr_idxI)(const vr64& z /*in*/, const unsigned int * ptr /*in*/, immediate ofst2 /*in*/, immediate sel1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store8x1_vr_postR)(const vr64& z /*in*/, unsigned int ** ptr /*inout*/, const unsigned int ofst /*in*/, immediate sel1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store8x1_vr_postI)(const vr64& z /*in*/, unsigned int ** ptr /*inout*/, immediate ofst2 /*in*/, immediate sel1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store8x1_vr_circI)(const vr64& z /*in*/, unsigned int ** ptr /*inout*/, immediate ofst1 /*in*/, const cr64& c /*in*/, immediate sel1 /*in*/);
CSTUB_EXTERN ulsr32 CSTUB_(_TIE_hmd1a_common_tie_align_32x2_store)(const unsigned int * ptr /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store_32x2_vr_a)(const vr64& z /*in*/, ulsr32& buf /*inout*/, unsigned int ** ptr /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store_24x2_vr_a)(const vr64& z /*in*/, ulsr32& buf /*inout*/, unsigned int ** ptr /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store_32x2_vr_a_circ)(const vr64& z /*in*/, ulsr32& buf /*inout*/, unsigned int ** ptr /*inout*/, const cr64& c /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_flush_32x2)(const ulsr32 buf /*in*/, const unsigned int * ptr /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_load_fr_postI)(fr32& fx /*out*/, const unsigned int ** ptr /*inout*/, immediate ofst2 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store_fr_postI)(const fr32 fx /*in*/, unsigned int ** ptr /*inout*/, immediate ofst2 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_brev_upd)(atbool& gate /*out*/, unsigned int& idx_out /*out*/, const unsigned int idx_in /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_brev_upd_ext)(atbool& gate /*inout*/, unsigned int& idx_out /*inout*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_move32_ar_vr)(const vr64& x /*in*/, immediate sel1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_move32_vr_ar)(vr64& z /*inout*/, immediate sel1 /*in*/, const unsigned int a /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_move32_ar_vr_idx)(const vr64& x /*in*/, const unsigned int idx /*in*/);
CSTUB_EXTERN fr32 CSTUB_(_TIE_hmd1a_common_tie_move32_fr_vr_idx)(const vr64& x /*in*/, const unsigned int idx /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_move_fr_eqz)(fr32& z /*inout*/, const fr32 x /*in*/, const fr32 y /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_move_fr_gez)(fr32& z /*inout*/, const fr32 x /*in*/, const fr32 y /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_move_fr_gtz)(fr32& z /*inout*/, const fr32 x /*in*/, const fr32 y /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_move_fr_lez)(fr32& z /*inout*/, const fr32 x /*in*/, const fr32 y /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_move_fr_ltz)(fr32& z /*inout*/, const fr32 x /*in*/, const fr32 y /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_move_fr_nez)(fr32& z /*inout*/, const fr32 x /*in*/, const fr32 y /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_move_fr_sat)(fr32& z /*inout*/, const fr32 x /*in*/, const fr32 y /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_move_fr_arnz)(fr32& z /*inout*/, const fr32 x /*in*/, const unsigned int ax /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_vmove_vr_eqz)(vr64& z /*inout*/, const vr64& x /*in*/, const vr64& y /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_vmove_vr_gez)(vr64& z /*inout*/, const vr64& x /*in*/, const vr64& y /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_vmove_vr_gtz)(vr64& z /*inout*/, const vr64& x /*in*/, const vr64& y /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_vmove_vr_lez)(vr64& z /*inout*/, const vr64& x /*in*/, const vr64& y /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_vmove_vr_ltz)(vr64& z /*inout*/, const vr64& x /*in*/, const vr64& y /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_vmove_vr_nez)(vr64& z /*inout*/, const vr64& x /*in*/, const vr64& y /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_vmove_vr_sat)(vr64& z /*inout*/, const vr64& x /*in*/, const vr64& y /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_replicate)(vr64& z /*inout*/, immediate sel_code /*in*/, const vr64& x /*in*/, immediate el_x /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_replicate_ar)(vr64& z /*inout*/, immediate sel_code /*in*/, const unsigned int ar /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_vreplicate)(const vr64& x /*in*/, immediate el_x /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_vreplicate_fr)(const fr32 fx /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_convert_16I_to_32F_x1)(vr64& z /*inout*/, const unsigned int exp_fxp /*in*/, immediate el /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_convert_16I_to_32F_x2)(vr64& z /*inout*/, const unsigned int exp_fxp /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_convert_32F_to_16I_x1)(vr64& z /*inout*/, const unsigned int exp_fxp /*in*/, immediate rnd /*in*/, immediate el /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_convert_32F_to_16I_x2)(vr64& z /*inout*/, const unsigned int exp_fxp /*in*/, immediate rnd /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_convert_32F_to_16F_x1)(vr64& z /*inout*/, immediate is_signed /*in*/, immediate exp_bits /*in*/, const unsigned int bias /*in*/, immediate round /*in*/, immediate el /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_convert_32F_to_16F_x2)(vr64& z /*inout*/, immediate is_signed /*in*/, immediate exp_bits /*in*/, const unsigned int bias /*in*/, immediate round /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_convert_16F_to_32F_x1)(vr64& z /*inout*/, immediate is_signed /*in*/, immediate exp_bits /*in*/, const unsigned int bias /*in*/, immediate el /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_convert_16F_to_32F_x2)(vr64& z /*inout*/, immediate is_signed /*in*/, immediate exp_bits /*in*/, const unsigned int bias /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_convert_32I_to_32F_x1)(vr64& z /*inout*/, const unsigned int exp_fxp /*in*/, immediate el /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_convert_32F_to_32I_x1)(vr64& z /*inout*/, const unsigned int exp_fxp /*in*/, immediate rnd /*in*/, immediate el /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_convert_IEEE_float_to_32F_x2)(vr64& z /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_convert_32F_to_IEEE_float_x2)(vr64& z /*inout*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_convert_32I_to_64F)(const unsigned int x /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_convert_64F_to_32I)(const vr64& x /*in*/, immediate rnd /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_convert_32F_to_64F)(const fr32 fx /*in*/);
CSTUB_EXTERN fr32 CSTUB_(_TIE_hmd1a_common_tie_convert_64F_to_32F)(const vr64& x /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_convert_IEEE_double_to_64F)(vr64& z /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_convert_64F_to_IEEE_double)(vr64& z /*inout*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_vadd_perm)(const vr64& x /*in*/, const vr64& y /*in*/, immediate selin_h /*in*/, immediate selin_l /*in*/, immediate signs4 /*in*/, immediate div_by_2_op /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_vsum_perm)(const vr64& z /*in*/, const vr64& x /*in*/, const vr64& y /*in*/, immediate selin_h /*in*/, immediate selin_l /*in*/, immediate signs4 /*in*/, immediate sign_z /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_vmul_perm)(const vr64& x /*in*/, const vr64& y /*in*/, immediate selin_h /*in*/, immediate selin_l /*in*/, immediate signs2 /*in*/, immediate div_by_2_op /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_vmac_perm)(const vr64& z /*in*/, const vr64& x /*in*/, const vr64& y /*in*/, immediate selin_h /*in*/, immediate selin_l /*in*/, immediate signs2 /*in*/, immediate sign_z /*in*/, immediate swap_z /*in*/, immediate div_by_2_op /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_vmac_boost)(const vr64& z /*in*/, const vr64& x /*in*/, const vr64& y /*in*/, immediate selin_h /*in*/, immediate selin_l /*in*/, immediate signs2 /*in*/, immediate boost /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_vblend)(const vr64& x /*in*/, const vr64& y /*in*/, immediate selin_h /*in*/, immediate selin_l /*in*/, immediate signs4 /*in*/, immediate div_by_2_op /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_vblend_add)(const vr64& z /*in*/, const vr64& x /*in*/, const vr64& y /*in*/, immediate selin_h /*in*/, immediate selin_l /*in*/, immediate signs4 /*in*/, immediate sign_z /*in*/, immediate swap_z /*in*/, immediate div_by_2_op /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_vblend_boost)(const vr64& z /*in*/, const vr64& x /*in*/, const vr64& y /*in*/, immediate selin_h /*in*/, immediate selin_l /*in*/, immediate signs4 /*in*/, immediate boost /*in*/);
CSTUB_EXTERN fr32 CSTUB_(_TIE_hmd1a_common_tie_fadds)(const fr32 fx /*in*/, const fr32 fy /*in*/, immediate signs2 /*in*/);
CSTUB_EXTERN fr32 CSTUB_(_TIE_hmd1a_common_tie_fmuls)(const fr32 fx /*in*/, const fr32 fy /*in*/, immediate signs2 /*in*/);
CSTUB_EXTERN fr32 CSTUB_(_TIE_hmd1a_common_tie_fmacs)(const fr32 fz /*in*/, const fr32 fx /*in*/, const fr32 fy /*in*/, immediate signs2 /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_dadds)(const vr64& z /*in*/, const vr64& x /*in*/, immediate signs2 /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_dmuls)(const vr64& x /*in*/, const vr64& y /*in*/, immediate signs2 /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_dmacs)(const vr64& z /*in*/, const vr64& x /*in*/, const vr64& y /*in*/, immediate signs2 /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_vadds)(const vr64& x /*in*/, const vr64& y /*in*/, immediate signs4 /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_vmuls)(const vr64& x /*in*/, const vr64& y /*in*/, immediate signs2 /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_vmacs)(const vr64& z /*in*/, const vr64& x /*in*/, const vr64& y /*in*/, immediate signs2 /*in*/, immediate sign_z /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_cmul)(const vr64& x /*in*/, const vr64& y /*in*/, immediate conj /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_cmac)(const vr64& z /*in*/, const vr64& x /*in*/, const vr64& y /*in*/, immediate conj /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_cmas)(const vr64& z /*in*/, const vr64& x /*in*/, const vr64& y /*in*/, immediate conj /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_vmulf)(const vr64& x /*in*/, const fr32 fy /*in*/, immediate signs2 /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_vmacf)(const vr64& z /*in*/, const vr64& x /*in*/, const fr32 fy /*in*/, immediate signs2 /*in*/, immediate sign_z /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_vabs)(const vr64& x /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_vexp_adj)(const vr64& x /*in*/, const unsigned int exp_adj_ar /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_vexp_adji)(const vr64& x /*in*/, immediate exp_adj_imm /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_vpermi)(const vr64& x /*in*/, const vr64& y /*in*/, immediate sel4 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_seta_vr)(vr64& z /*inout*/, immediate sel_code /*in*/, immediate const_idx /*in*/, immediate exp_adj_const /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_vseta_vr)(immediate const_idx /*in*/, immediate exp_adj_const /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_seta_ar)(immediate const_idx /*in*/, immediate exp_adj_const /*in*/);
CSTUB_EXTERN fr32 CSTUB_(_TIE_hmd1a_common_tie_seta_fr)(immediate const_idx /*in*/, immediate exp_adj_const /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_load_AccExtend_postI)(const unsigned int ** ptr /*inout*/, immediate ofst2 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_load32x1_vr_idx16vr)(vr64& z /*inout*/, const unsigned int * ptr /*in*/, const vr64& vidx16 /*in*/, immediate ptr_sel /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_load_BB0_postI)(const unsigned int ** ptr /*inout*/, immediate ofst2 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_load_BB1_postI)(const unsigned int ** ptr /*inout*/, immediate ofst2 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_load_BB2_postI)(const unsigned int ** ptr /*inout*/, immediate ofst2 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_load_BB3_postI)(const unsigned int ** ptr /*inout*/, immediate ofst2 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_load_VB1_postI)(const unsigned int ** ptr /*inout*/, immediate ofst2 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_load_VB2_postI)(const unsigned int ** ptr /*inout*/, immediate ofst2 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_load_VB3_postI)(const unsigned int ** ptr /*inout*/, immediate ofst2 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_load_VB4_postI)(const unsigned int ** ptr /*inout*/, immediate ofst2 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_load_VB5_postI)(const unsigned int ** ptr /*inout*/, immediate ofst2 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_load_VB6_postI)(const unsigned int ** ptr /*inout*/, immediate ofst2 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_load_VB7_postI)(const unsigned int ** ptr /*inout*/, immediate ofst2 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_load_32x2_vr_a_bounded)(vr64& z /*out*/, ulsr32& buf /*inout*/, const unsigned int ** ptr /*inout*/, mir18& count /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_load_BBx_VB67_a_bounded)(ulsr32& buf /*inout*/, const unsigned int ** ptr /*inout*/, mir18& count /*inout*/, const unsigned int sel /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_flush_32x2_bounded)(const ulsr32 buf /*in*/, unsigned int ** ptr /*inout*/, mir18& count /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store_32x2_vr_a_bounded)(const vr64& z /*in*/, ulsr32& buf /*inout*/, unsigned int ** ptr /*inout*/, mir18& count /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store_AccExtend_postI)(unsigned int ** ptr /*inout*/, immediate ofst2 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store_BB0_postI)(unsigned int ** ptr /*inout*/, immediate ofst2 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store_BB1_postI)(unsigned int ** ptr /*inout*/, immediate ofst2 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store_BB2_postI)(unsigned int ** ptr /*inout*/, immediate ofst2 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store_BB3_postI)(unsigned int ** ptr /*inout*/, immediate ofst2 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store_VB1_postI)(unsigned int ** ptr /*inout*/, immediate ofst2 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store_VB2_postI)(unsigned int ** ptr /*inout*/, immediate ofst2 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store_VB3_postI)(unsigned int ** ptr /*inout*/, immediate ofst2 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store_VB4_postI)(unsigned int ** ptr /*inout*/, immediate ofst2 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store_VB5_postI)(unsigned int ** ptr /*inout*/, immediate ofst2 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store_VB6_postI)(unsigned int ** ptr /*inout*/, immediate ofst2 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store_VB7_postI)(unsigned int ** ptr /*inout*/, immediate ofst2 /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_afloat_exp_extract)(const vr64& x /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_mov_AccExtend_vr)(const vr64& x /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_mov_vr_AccExtend)(void);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_mov_BB_VB67_to_vrVB_VB45)(void);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_mov_vrVB_VB45_to_BB_VB67)(const vr64& x /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_precess_16bits)(const vr64& x /*in*/, const vr64& y /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_set_BB_vrVB67_zero)(void);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_exp_shift_amount)(const vr64& input1 /*in*/, const vr64& input2 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_rnd_sat_pack)(vr64& z /*inout*/, immediate el32 /*in*/, const vr64& x /*in*/, const vr64& y /*in*/, const atbool& sgn /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_rectify32_into8)(vr64& z /*inout*/, const vr64& x /*in*/, const unsigned int shift /*in*/, immediate rnd /*in*/, immediate el32 /*in*/, immediate half /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_shift8_into32_arith)(const vr64& x /*in*/, const unsigned int shift /*in*/, immediate rnd /*in*/, immediate el32 /*in*/, immediate half /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_shift32_arith)(const vr64& x /*in*/, const unsigned int shift /*in*/, immediate rnd /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_mac8bx8b)(vr64& z /*inout*/, const vr64& x /*in*/, const vr64& y /*in*/, const atbool& signed_xy /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_mac8bx8b_sparse)(vr64& z /*inout*/, const vr64& x /*in*/, const vr64& y /*in*/, const atbool& signed_xy /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_mac8bx8b_conv)(vr64& z /*inout*/, const vr64& x /*in*/, const atbool& signed_xy /*in*/, immediate shift_in /*in*/);
CSTUB_EXTERN mir18 CSTUB_(_TIE_hmd1a_common_tie_mir_init)(const unsigned int low /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_f_abs)(vr64& z /*inout*/, immediate el_z /*in*/, const vr64& x /*in*/, immediate el_x /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_fclamp)(vr64& z /*inout*/, immediate el_z /*in*/, const vr64& x /*in*/, immediate el_x /*in*/, const vr64& y /*in*/, immediate el_y /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_fclamp_bp)(vr64& z /*inout*/, immediate el_z /*in*/, const vr64& x /*in*/, immediate el_x /*in*/, const vr64& y /*in*/, immediate el_y /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_fclamp_one)(vr64& z /*inout*/, immediate el_z /*in*/, const vr64& x /*in*/, immediate el_x /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_fmax)(vr64& z /*inout*/, immediate el_z /*in*/, const vr64& x /*in*/, immediate el_x /*in*/, const vr64& y /*in*/, immediate el_y /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_fmin)(vr64& z /*inout*/, immediate el_z /*in*/, const vr64& x /*in*/, immediate el_x /*in*/, const vr64& y /*in*/, immediate el_y /*in*/);
CSTUB_EXTERN fr32 CSTUB_(_TIE_hmd1a_common_tie_max_fr)(const fr32 fx /*in*/, const fr32 fy /*in*/);
CSTUB_EXTERN fr32 CSTUB_(_TIE_hmd1a_common_tie_min_fr)(const fr32 fx /*in*/, const fr32 fy /*in*/);
CSTUB_EXTERN fr32 CSTUB_(_TIE_hmd1a_common_tie_log2)(const fr32 x /*in*/);
CSTUB_EXTERN fr32 CSTUB_(_TIE_hmd1a_common_tie_pow2)(const fr32 x /*in*/);
CSTUB_EXTERN fr32 CSTUB_(_TIE_hmd1a_common_tie_sigmoid)(const fr32 x /*in*/);
CSTUB_EXTERN fr32 CSTUB_(_TIE_hmd1a_common_tie_inv)(const fr32 x /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_ratio)(fr32& z /*out*/, const fr32 x /*in*/, const fr32 y /*in*/, atbool& bz /*out*/);
CSTUB_EXTERN fr32 CSTUB_(_TIE_hmd1a_common_tie_atanratio)(const fr32 x /*in*/, const atbool& bx /*in*/);
CSTUB_EXTERN fr32 CSTUB_(_TIE_hmd1a_common_tie_invsqrt)(const fr32 x /*in*/);
CSTUB_EXTERN fr32 CSTUB_(_TIE_hmd1a_common_tie_sine)(const fr32 x /*in*/);
CSTUB_EXTERN fr32 CSTUB_(_TIE_hmd1a_common_tie_cosine)(const fr32 x /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_log2mul)(fr32& z /*out*/, const fr32 x /*in*/, const fr32 y /*in*/, atbool& bz /*out*/);
CSTUB_EXTERN fr32 CSTUB_(_TIE_hmd1a_common_tie_cspow2)(const fr32 x /*in*/, const atbool& bx /*in*/);
CSTUB_EXTERN atbool CSTUB_(_TIE_hmd1a_common_tie_comp)(const vr64& x /*in*/, immediate el_x /*in*/, const vr64& y /*in*/, immediate el_y /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_eq)(const vr64& x /*in*/, immediate el_x /*in*/, const vr64& y /*in*/, immediate el_y /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_ge)(const vr64& x /*in*/, immediate el_x /*in*/, const vr64& y /*in*/, immediate el_y /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_gt)(const vr64& x /*in*/, immediate el_x /*in*/, const vr64& y /*in*/, immediate el_y /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_le)(const vr64& x /*in*/, immediate el_x /*in*/, const vr64& y /*in*/, immediate el_y /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_lt)(const vr64& x /*in*/, immediate el_x /*in*/, const vr64& y /*in*/, immediate el_y /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_ne)(const vr64& x /*in*/, immediate el_x /*in*/, const vr64& y /*in*/, immediate el_y /*in*/);
CSTUB_EXTERN atbool CSTUB_(_TIE_hmd1a_common_tie_comp_const)(const vr64& x /*in*/, immediate el_x /*in*/, immediate const_idx /*in*/, immediate exp_adj_const /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_eq_const)(const vr64& x /*in*/, immediate el_x /*in*/, immediate const_idx /*in*/, immediate exp_adj_const /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_ge_const)(const vr64& x /*in*/, immediate el_x /*in*/, immediate const_idx /*in*/, immediate exp_adj_const /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_gt_const)(const vr64& x /*in*/, immediate el_x /*in*/, immediate const_idx /*in*/, immediate exp_adj_const /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_le_const)(const vr64& x /*in*/, immediate el_x /*in*/, immediate const_idx /*in*/, immediate exp_adj_const /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_lt_const)(const vr64& x /*in*/, immediate el_x /*in*/, immediate const_idx /*in*/, immediate exp_adj_const /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_ne_const)(const vr64& x /*in*/, immediate el_x /*in*/, immediate const_idx /*in*/, immediate exp_adj_const /*in*/);
CSTUB_EXTERN atbool CSTUB_(_TIE_hmd1a_common_tie_comp_fr)(const fr32 fx /*in*/, const fr32 fy /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_eq_fr)(const fr32 fx /*in*/, const fr32 fy /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_ge_fr)(const fr32 fx /*in*/, const fr32 fy /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_gt_fr)(const fr32 fx /*in*/, const fr32 fy /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_le_fr)(const fr32 fx /*in*/, const fr32 fy /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_lt_fr)(const fr32 fx /*in*/, const fr32 fy /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_ne_fr)(const fr32 fx /*in*/, const fr32 fy /*in*/);
CSTUB_EXTERN fr32 CSTUB_(_TIE_hmd1a_common_tie_neg_fr)(const fr32 fx /*in*/);
CSTUB_EXTERN fr32 CSTUB_(_TIE_hmd1a_common_tie_abs_fr)(const fr32 fx /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_deqz)(const vr64& x /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_dgez)(const vr64& x /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_dgtz)(const vr64& x /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_dlez)(const vr64& x /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_dltz)(const vr64& x /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_dnez)(const vr64& x /*in*/);
CSTUB_EXTERN atbool CSTUB_(_TIE_hmd1a_common_tie_veq)(const vr64& x /*in*/, const vr64& y /*in*/);
CSTUB_EXTERN atbool CSTUB_(_TIE_hmd1a_common_tie_vge)(const vr64& x /*in*/, const vr64& y /*in*/);
CSTUB_EXTERN atbool CSTUB_(_TIE_hmd1a_common_tie_vgt)(const vr64& x /*in*/, const vr64& y /*in*/);
CSTUB_EXTERN atbool CSTUB_(_TIE_hmd1a_common_tie_vle)(const vr64& x /*in*/, const vr64& y /*in*/);
CSTUB_EXTERN atbool CSTUB_(_TIE_hmd1a_common_tie_vlt)(const vr64& x /*in*/, const vr64& y /*in*/);
CSTUB_EXTERN atbool CSTUB_(_TIE_hmd1a_common_tie_vne)(const vr64& x /*in*/, const vr64& y /*in*/);
CSTUB_EXTERN atbool CSTUB_(_TIE_hmd1a_common_tie_veq_const)(const vr64& x /*in*/, immediate const_idx /*in*/, immediate exp_adj_const /*in*/);
CSTUB_EXTERN atbool CSTUB_(_TIE_hmd1a_common_tie_vge_const)(const vr64& x /*in*/, immediate const_idx /*in*/, immediate exp_adj_const /*in*/);
CSTUB_EXTERN atbool CSTUB_(_TIE_hmd1a_common_tie_vgt_const)(const vr64& x /*in*/, immediate const_idx /*in*/, immediate exp_adj_const /*in*/);
CSTUB_EXTERN atbool CSTUB_(_TIE_hmd1a_common_tie_vle_const)(const vr64& x /*in*/, immediate const_idx /*in*/, immediate exp_adj_const /*in*/);
CSTUB_EXTERN atbool CSTUB_(_TIE_hmd1a_common_tie_vlt_const)(const vr64& x /*in*/, immediate const_idx /*in*/, immediate exp_adj_const /*in*/);
CSTUB_EXTERN atbool CSTUB_(_TIE_hmd1a_common_tie_vne_const)(const vr64& x /*in*/, immediate const_idx /*in*/, immediate exp_adj_const /*in*/);
CSTUB_EXTERN fr32 CSTUB_(_TIE_hmd1a_common_tie_sel_1b2)(const fr32 fx /*in*/, const fr32 fy /*in*/, const atbool& bx /*in*/, immediate el_bx1 /*in*/);
CSTUB_EXTERN fr32 CSTUB_(_TIE_hmd1a_common_tie_sel_eq)(const fr32 fx /*in*/, const fr32 fy /*in*/, const atbool& bx /*in*/);
CSTUB_EXTERN fr32 CSTUB_(_TIE_hmd1a_common_tie_sel_ge)(const fr32 fx /*in*/, const fr32 fy /*in*/, const atbool& bx /*in*/);
CSTUB_EXTERN fr32 CSTUB_(_TIE_hmd1a_common_tie_sel_gt)(const fr32 fx /*in*/, const fr32 fy /*in*/, const atbool& bx /*in*/);
CSTUB_EXTERN fr32 CSTUB_(_TIE_hmd1a_common_tie_sel_le)(const fr32 fx /*in*/, const fr32 fy /*in*/, const atbool& bx /*in*/);
CSTUB_EXTERN fr32 CSTUB_(_TIE_hmd1a_common_tie_sel_lt)(const fr32 fx /*in*/, const fr32 fy /*in*/, const atbool& bx /*in*/);
CSTUB_EXTERN fr32 CSTUB_(_TIE_hmd1a_common_tie_sel_ne)(const fr32 fx /*in*/, const fr32 fy /*in*/, const atbool& bx /*in*/);
CSTUB_EXTERN fr32 CSTUB_(_TIE_hmd1a_common_tie_sel_ar)(const fr32 fx /*in*/, const fr32 fy /*in*/, const unsigned int sel /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_vsel)(const vr64& x /*in*/, const vr64& y /*in*/, const atbool& bx /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_vsel_ar)(const vr64& x /*in*/, const vr64& y /*in*/, const unsigned int sel /*in*/);
CSTUB_EXTERN atbool CSTUB_(_TIE_hmd1a_common_tie_andb2)(const atbool& bx /*in*/, const atbool& by /*in*/);
CSTUB_EXTERN atbool CSTUB_(_TIE_hmd1a_common_tie_andbc2)(const atbool& bx /*in*/, const atbool& by /*in*/);
CSTUB_EXTERN atbool CSTUB_(_TIE_hmd1a_common_tie_orb2)(const atbool& bx /*in*/, const atbool& by /*in*/);
CSTUB_EXTERN atbool CSTUB_(_TIE_hmd1a_common_tie_orbc2)(const atbool& bx /*in*/, const atbool& by /*in*/);
CSTUB_EXTERN atbool CSTUB_(_TIE_hmd1a_common_tie_xorb2)(const atbool& bx /*in*/, const atbool& by /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_bcount0_maskI)(const atbool& bx /*in*/, immediate imask /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_bcount0_maskR)(const atbool& bx /*in*/, const atbool& by /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_bcount1_maskI)(const atbool& bx /*in*/, immediate imask /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_bcount1_maskR)(const atbool& bx /*in*/, const atbool& by /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_bfirst0_maskI)(const atbool& bx /*in*/, immediate imask /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_bfirst0_maskR)(const atbool& bx /*in*/, const atbool& by /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_bfirst1_maskI)(const atbool& bx /*in*/, immediate imask /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_bfirst1_maskR)(const atbool& bx /*in*/, const atbool& by /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_blast0_maskI)(const atbool& bx /*in*/, immediate imask /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_blast0_maskR)(const atbool& bx /*in*/, const atbool& by /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_blast1_maskI)(const atbool& bx /*in*/, immediate imask /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_blast1_maskR)(const atbool& bx /*in*/, const atbool& by /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_bgetI)(const atbool& bx /*in*/, immediate ipos /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_bgetR)(const atbool& bx /*in*/, const unsigned int rpos /*in*/);
CSTUB_EXTERN atbool CSTUB_(_TIE_hmd1a_common_tie_bsetI)(const atbool& bx /*in*/, const unsigned int rpos /*in*/, immediate ibit /*in*/);
CSTUB_EXTERN atbool CSTUB_(_TIE_hmd1a_common_tie_bsetR)(const atbool& bx /*in*/, const unsigned int rpos /*in*/, const unsigned int by /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_exp_adj)(vr64& z /*inout*/, immediate el_z /*in*/, const vr64& x /*in*/, immediate el_x /*in*/, const unsigned int exp_adj_ar /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_exp_adji)(vr64& z /*inout*/, immediate el_z /*in*/, const vr64& x /*in*/, immediate el_x /*in*/, immediate exp_adj_imm /*in*/);
CSTUB_EXTERN fr32 CSTUB_(_TIE_hmd1a_common_tie_exp_adj_fr)(const fr32 fx /*in*/, const unsigned int exp_adj_ar /*in*/);
CSTUB_EXTERN fr32 CSTUB_(_TIE_hmd1a_common_tie_exp_adji_fr)(const fr32 fx /*in*/, immediate exp_adj_imm /*in*/);
CSTUB_EXTERN fr32 CSTUB_(_TIE_hmd1a_common_tie_s_neg)(const fr32 fx /*in*/);
CSTUB_EXTERN fr32 CSTUB_(_TIE_hmd1a_common_tie_s_copy)(const fr32 fx /*in*/, const fr32 fy /*in*/);
CSTUB_EXTERN fr32 CSTUB_(_TIE_hmd1a_common_tie_s_and)(const fr32 fx /*in*/, const fr32 fy /*in*/);
CSTUB_EXTERN fr32 CSTUB_(_TIE_hmd1a_common_tie_s_andc)(const fr32 fx /*in*/, const fr32 fy /*in*/);
CSTUB_EXTERN fr32 CSTUB_(_TIE_hmd1a_common_tie_s_or)(const fr32 fx /*in*/, const fr32 fy /*in*/);
CSTUB_EXTERN fr32 CSTUB_(_TIE_hmd1a_common_tie_s_orc)(const fr32 fx /*in*/, const fr32 fy /*in*/);
CSTUB_EXTERN fr32 CSTUB_(_TIE_hmd1a_common_tie_s_xor)(const fr32 fx /*in*/, const fr32 fy /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_s_vneg)(const vr64& x /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_s_vcopy)(const vr64& x /*in*/, const vr64& y /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_s_vand)(const vr64& x /*in*/, const vr64& y /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_s_vandc)(const vr64& x /*in*/, const vr64& y /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_s_vor)(const vr64& x /*in*/, const vr64& y /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_s_vorc)(const vr64& x /*in*/, const vr64& y /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_s_vxor)(const vr64& x /*in*/, const vr64& y /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_floorp_frac)(unsigned int& floor /*out*/, vr64& z /*inout*/, immediate el_z /*in*/, const vr64& x /*in*/, immediate el_x /*in*/, immediate nbits /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_idx_frac)(unsigned int& floor /*out*/, vr64& z /*inout*/, immediate el_z /*in*/, const unsigned int input /*in*/, immediate nbits /*in*/);
CSTUB_EXTERN fr32 CSTUB_(_TIE_hmd1a_common_tie_truncate_fr)(const fr32 x /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_rmax_idx)(unsigned int& a /*out*/, fr32& fz /*out*/, const vr64& x /*in*/, const mir18& idx /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_rmin_idx)(unsigned int& a /*out*/, fr32& fz /*out*/, const vr64& x /*in*/, const mir18& idx /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_vmaxmin_init)(vr64& z /*out*/, const vr64& x /*in*/, mir18& idx /*out*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_vmax_idx)(vr64& z /*inout*/, const vr64& x /*in*/, mir18& idx /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_vmin_idx)(vr64& z /*inout*/, const vr64& x /*in*/, mir18& idx /*inout*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_vmax)(const vr64& x /*in*/, const vr64& y /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_vmin)(const vr64& x /*in*/, const vr64& y /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_sortupd_asc_vr)(unsigned int& a /*out*/, vr64& z /*out*/, const vr64& x /*in*/, const vr64& y /*in*/, immediate el_y /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_sortupd_des_vr)(unsigned int& a /*out*/, vr64& z /*out*/, const vr64& x /*in*/, const vr64& y /*in*/, immediate el_y /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_sortupd_asc_ar)(unsigned int& a /*inout*/, vr64& z /*out*/, const vr64& x /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_sortupd_des_ar)(unsigned int& a /*inout*/, vr64& z /*out*/, const vr64& x /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_vbool)(const vr64& x /*in*/, const vr64& y /*in*/, immediate op /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_align_up)(const unsigned int val /*in*/, const unsigned int option /*in*/);
CSTUB_EXTERN mir18 CSTUB_(_TIE_hmd1a_common_tie_mv_MIR)(const mir18& b /*in*/);
CSTUB_EXTERN ulsr32 CSTUB_(_TIE_hmd1a_common_tie_mv_ULSR)(const ulsr32 b /*in*/);
CSTUB_EXTERN cr64 CSTUB_(_TIE_hmd1a_common_tie_mv_CR)(const cr64& b /*in*/);
CSTUB_EXTERN fr32 CSTUB_(_TIE_hmd1a_common_tie_ld_FR)(const fr32 * addr /*in*/, immediate fimm /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_st_FR)(const fr32 fregin /*in*/, const fr32 * addr /*in*/, immediate fimm /*in*/);
CSTUB_EXTERN fr32 CSTUB_(_TIE_hmd1a_common_tie_ld_FR_idxR)(const fr32 * addr /*in*/, const unsigned int x /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_st_FR_idxR)(const fr32 fregin /*in*/, const fr32 * addr /*in*/, const unsigned int x /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_ld_FR_postI)(fr32& fregout /*out*/, const fr32 ** addr /*inout*/, immediate fimm /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_st_FR_postI)(const fr32 fregin /*in*/, fr32 ** addr /*inout*/, immediate fimm /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_ld_FR_postR)(fr32& fregout /*out*/, const fr32 ** addr /*inout*/, const unsigned int x /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_st_FR_postR)(const fr32 fregin /*in*/, fr32 ** addr /*inout*/, const unsigned int x /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_ld_VR)(const vr64 * addr /*in*/, immediate vimm /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_st_VR)(const vr64& vregin /*in*/, const vr64 * addr /*in*/, immediate vimm /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_ld_VR_idxR)(const vr64 * addr /*in*/, const unsigned int x /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_st_VR_idxR)(const vr64& vregin /*in*/, const vr64 * addr /*in*/, const unsigned int x /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_ld_VR_postI)(vr64& vregout /*out*/, const vr64 ** addr /*inout*/, immediate vimm /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_st_VR_postI)(const vr64& vregin /*in*/, vr64 ** addr /*inout*/, immediate vimm /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_ld_VR_postR)(vr64& vregout /*out*/, const vr64 ** addr /*inout*/, const unsigned int x /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_st_VR_postR)(const vr64& vregin /*in*/, vr64 ** addr /*inout*/, const unsigned int x /*in*/);
CSTUB_EXTERN fr32 CSTUB_(_TIE_hmd1a_common_tie_mv_FR)(const fr32 b /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_move_ar_fr)(const fr32 b /*in*/);
CSTUB_EXTERN fr32 CSTUB_(_TIE_hmd1a_common_tie_move_fr_ar)(const unsigned int b /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_mv_VR)(const vr64& b /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_move_ar_bbr)(const atbool& b /*in*/);
CSTUB_EXTERN atbool CSTUB_(_TIE_hmd1a_common_tie_move_bbr_ar)(const unsigned int a /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_shift_from_bbr)(unsigned int& a /*inout*/, const atbool& x /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_shift_to_bbr)(unsigned int& a /*inout*/, atbool& z /*out*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_ld_ar_x2)(unsigned int& a1_out /*out*/, unsigned int& a0_out /*out*/, const void * ptr /*in*/, immediate idx /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_st_ar_x2)(const void * ptr /*in*/, immediate idx /*in*/, const unsigned int a1_in /*in*/, const unsigned int a0_in /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_atbool_storei)(const atbool& a /*in*/, const atbool * b /*in*/, immediate c /*in*/);
CSTUB_EXTERN atbool CSTUB_(_TIE_hmd1a_common_tie_atbool_loadi)(const atbool * b /*in*/, immediate c /*in*/);
CSTUB_EXTERN atbool CSTUB_(_TIE_hmd1a_common_tie_atbool_move)(const atbool& b /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_ulsr32_storei)(const ulsr32 a /*in*/, const ulsr32 * b /*in*/, immediate c /*in*/);
CSTUB_EXTERN ulsr32 CSTUB_(_TIE_hmd1a_common_tie_ulsr32_loadi)(const ulsr32 * b /*in*/, immediate c /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_mir18_storei)(const mir18& a /*in*/, const mir18 * b /*in*/, immediate c /*in*/);
CSTUB_EXTERN mir18 CSTUB_(_TIE_hmd1a_common_tie_mir18_loadi)(const mir18 * b /*in*/, immediate c /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_cr64_storei)(const cr64& a /*in*/, const cr64 * b /*in*/, immediate c /*in*/);
CSTUB_EXTERN cr64 CSTUB_(_TIE_hmd1a_common_tie_cr64_loadi)(const cr64 * b /*in*/, immediate c /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_RUR_JammingBit)(void);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_WUR_JammingBit)(const unsigned int v /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_RUR_AccExtend_0)(void);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_WUR_AccExtend_0)(const unsigned int v /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_RUR_AccExtend_1)(void);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_WUR_AccExtend_1)(const unsigned int v /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_RUR_BB0_0)(void);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_WUR_BB0_0)(const unsigned int v /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_RUR_BB0_1)(void);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_WUR_BB0_1)(const unsigned int v /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_RUR_BB1_0)(void);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_WUR_BB1_0)(const unsigned int v /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_RUR_BB1_1)(void);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_WUR_BB1_1)(const unsigned int v /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_RUR_BB2_0)(void);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_WUR_BB2_0)(const unsigned int v /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_RUR_BB2_1)(void);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_WUR_BB2_1)(const unsigned int v /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_RUR_BB3_0)(void);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_WUR_BB3_0)(const unsigned int v /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_RUR_BB3_1)(void);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_WUR_BB3_1)(const unsigned int v /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_RUR_MvmAux)(void);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_WUR_MvmAux)(const unsigned int v /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_RUR_VB1_0)(void);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_WUR_VB1_0)(const unsigned int v /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_RUR_VB1_1)(void);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_WUR_VB1_1)(const unsigned int v /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_RUR_VB2_0)(void);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_WUR_VB2_0)(const unsigned int v /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_RUR_VB2_1)(void);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_WUR_VB2_1)(const unsigned int v /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_RUR_VB3_0)(void);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_WUR_VB3_0)(const unsigned int v /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_RUR_VB3_1)(void);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_WUR_VB3_1)(const unsigned int v /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_RUR_VB4_0)(void);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_WUR_VB4_0)(const unsigned int v /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_RUR_VB4_1)(void);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_WUR_VB4_1)(const unsigned int v /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_RUR_VB5_0)(void);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_WUR_VB5_0)(const unsigned int v /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_RUR_VB5_1)(void);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_WUR_VB5_1)(const unsigned int v /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_RUR_VB6_0)(void);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_WUR_VB6_0)(const unsigned int v /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_RUR_VB6_1)(void);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_WUR_VB6_1)(const unsigned int v /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_RUR_VB7_0)(void);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_WUR_VB7_0)(const unsigned int v /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_RUR_VB7_1)(void);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_WUR_VB7_1)(const unsigned int v /*in*/);
CSTUB_EXTERN mir18 CSTUB_(_TIE_hmd1a_common_tie_mir18_move)(const mir18& b /*in*/);
CSTUB_EXTERN ulsr32 CSTUB_(_TIE_hmd1a_common_tie_ulsr32_move)(const ulsr32 b /*in*/);
CSTUB_EXTERN cr64 CSTUB_(_TIE_hmd1a_common_tie_cr64_move)(const cr64& b /*in*/);
CSTUB_EXTERN fr32 CSTUB_(_TIE_hmd1a_common_tie_fr32_move)(const fr32 b /*in*/);
CSTUB_EXTERN fr32 CSTUB_(_TIE_hmd1a_common_tie_fr32_loadi)(const fr32 * p /*in*/, immediate o /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_fr32_storei)(const fr32 v /*in*/, const fr32 * p /*in*/, immediate o /*in*/);
CSTUB_EXTERN fr32 CSTUB_(_TIE_hmd1a_common_tie_fr32_loadx)(const fr32 * p /*in*/, const unsigned int x /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_fr32_storex)(const fr32 v /*in*/, const fr32 * p /*in*/, const unsigned int x /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_fr32_loadip)(fr32& v /*out*/, const fr32 ** p /*inout*/, immediate o /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_fr32_storeip)(const fr32 v /*in*/, fr32 ** p /*inout*/, immediate o /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_fr32_loadxp)(fr32& v /*out*/, const fr32 ** p /*inout*/, const unsigned int x /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_fr32_storexp)(const fr32 v /*in*/, fr32 ** p /*inout*/, const unsigned int x /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_hmd1a_common_tie_fr32_rtor_int32)(const fr32 b /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_fr32_rtor_uint32)(const fr32 b /*in*/);
CSTUB_EXTERN fr32 CSTUB_(_TIE_hmd1a_common_tie_int32_rtor_fr32)(const int a /*in*/);
CSTUB_EXTERN fr32 CSTUB_(_TIE_hmd1a_common_tie_uint32_rtor_fr32)(const unsigned int a /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_vr64_move)(const vr64& b /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_vr64_loadi)(const vr64 * p /*in*/, immediate o /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_vr64_storei)(const vr64& v /*in*/, const vr64 * p /*in*/, immediate o /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_vr64_loadx)(const vr64 * p /*in*/, const unsigned int x /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_vr64_storex)(const vr64& v /*in*/, const vr64 * p /*in*/, const unsigned int x /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_vr64_loadip)(vr64& v /*out*/, const vr64 ** p /*inout*/, immediate o /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_vr64_storeip)(const vr64& v /*in*/, vr64 ** p /*inout*/, immediate o /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_vr64_loadxp)(vr64& v /*out*/, const vr64 ** p /*inout*/, const unsigned int x /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_vr64_storexp)(const vr64& v /*in*/, vr64 ** p /*inout*/, const unsigned int x /*in*/);
CSTUB_EXTERN fr32 CSTUB_(_TIE_hmd1a_common_tie_get_VRH)(const vr64& b /*in*/);
CSTUB_EXTERN fr32 CSTUB_(_TIE_hmd1a_common_tie_get_VRL)(const vr64& b /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_set_VRH)(vr64& a /*inout*/, const fr32 b /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_set_VRL)(vr64& a /*inout*/, const fr32 b /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_vr64_pair)(const fr32 hi /*in*/, const fr32 lo /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_hmd1a_common_tie_atbool_rtor_int32)(const atbool& b /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_atbool_rtor_uint32)(const atbool& b /*in*/);
CSTUB_EXTERN atbool CSTUB_(_TIE_hmd1a_common_tie_int32_rtor_atbool)(const int a /*in*/);
CSTUB_EXTERN atbool CSTUB_(_TIE_hmd1a_common_tie_uint32_rtor_atbool)(const unsigned int a /*in*/);

CSTUB_EXTERN unsigned CSTUB_(_TIE_xt_core_RSR_SAR)(void);
CSTUB_EXTERN void CSTUB_(_TIE_xt_core_WSR_SAR)(unsigned t);
CSTUB_EXTERN void CSTUB_(_TIE_xt_core_XSR_SAR)(unsigned& t /*inout*/);
/* Ctype convertion functions */
namespace xtbool_space {

}

namespace xtbool2_space {

}

namespace xtbool4_space {

}

namespace xtbool8_space {

}

namespace xtbool16_space {

}

namespace ae_p24x2s_space {
inline ae_p24x2s& ae_p24x2s::operator= (const ae_p24x2s &src) {
  if (this != &src) {
    CSTUB_(_TIE_xt_hifi2_ae_p24x2s_storei)(src, this, 0);
  }
  return *this;
}
inline ae_p24x2s::ae_p24x2s_(const ae_p24x2f &src) {
  CSTUB_(_TIE_xt_hifi2_ae_p24x2f_rtom_ae_p24x2s)(src, this, 0);
}
inline ae_p24x2s& ae_p24x2s::operator= (const ae_p24x2f &src) {
  CSTUB_(_TIE_xt_hifi2_ae_p24x2f_rtom_ae_p24x2s)(src, this, 0);
  return *this;
}
inline ae_p24x2s::ae_p24x2s_(const ae_p16x2s &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_p16x2s_mtor_ae_p24x2s)(&src, 0);
}
inline ae_p24x2s& ae_p24x2s::operator= (const ae_p16x2s &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_p16x2s_mtor_ae_p24x2s)(&src, 0);
  return *this;
}
inline ae_p24x2s::ae_p24x2s_(const ae_p24s &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_p24s_mtor_ae_p24x2s)(&src, 0);
}
inline ae_p24x2s& ae_p24x2s::operator= (const ae_p24s &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_p24s_mtor_ae_p24x2s)(&src, 0);
  return *this;
}
inline ae_p24x2s::ae_p24x2s_(const ae_p24f &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_p24f_mtor_ae_p24x2s)(&src, 0);
}
inline ae_p24x2s& ae_p24x2s::operator= (const ae_p24f &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_p24f_mtor_ae_p24x2s)(&src, 0);
  return *this;
}
inline ae_p24x2s::ae_p24x2s_(const ae_p16s &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_p16s_mtor_ae_p24x2s)(&src, 0);
}
inline ae_p24x2s& ae_p24x2s::operator= (const ae_p16s &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_p16s_mtor_ae_p24x2s)(&src, 0);
  return *this;
}
inline ae_p24x2s::ae_p24x2s_(const ae_int24x2 &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_int24x2_rtor_ae_p24x2s)(src);
}
inline ae_p24x2s& ae_p24x2s::operator= (const ae_int24x2 &src_in) {
  ae_int24x2 src = (ae_int24x2) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_ae_int24x2_rtor_ae_p24x2s)(src);
  return *this;
}
inline ae_p24x2s::ae_p24x2s_(const ae_f24x2 &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_f24x2_rtor_ae_p24x2s)(src);
}
inline ae_p24x2s& ae_p24x2s::operator= (const ae_f24x2 &src_in) {
  ae_f24x2 src = (ae_f24x2) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_ae_f24x2_rtor_ae_p24x2s)(src);
  return *this;
}
inline ae_p24x2s::operator ae_p24x2f () const {
  ae_p24x2f res;
  CSTUB_(_TIE_xt_hifi2_ae_p24x2s_rtom_ae_p24x2f) (*this, &res, 0);
  return res;
}
inline ae_p24x2s::operator ae_p16x2s () const {
  ae_p16x2s res;
  CSTUB_(_TIE_xt_hifi2_ae_p24x2s_rtom_ae_p16x2s) (*this, &res, 0);
  return res;
}
inline ae_p24x2s::operator ae_p24s () const {
  ae_p24s res;
  CSTUB_(_TIE_xt_hifi2_ae_p24x2s_rtom_ae_p24s) (*this, &res, 0);
  return res;
}
inline ae_p24x2s::operator ae_p24f () const {
  ae_p24f res;
  CSTUB_(_TIE_xt_hifi2_ae_p24x2s_rtom_ae_p24f) (*this, &res, 0);
  return res;
}
inline ae_p24x2s::operator ae_p16s () const {
  ae_p16s res;
  CSTUB_(_TIE_xt_hifi2_ae_p24x2s_rtom_ae_p16s) (*this, &res, 0);
  return res;
}
inline ae_p24x2s::operator ae_int24x2 () const {
  return CSTUB_(_TIE_xt_hifi2_ae_p24x2s_rtor_ae_int24x2) (*this);
}
inline ae_p24x2s::operator ae_f24x2 () const {
  return CSTUB_(_TIE_xt_hifi2_ae_p24x2s_rtor_ae_f24x2) (*this);
}

}

namespace ae_p24x2f_space {
inline ae_p24x2f& ae_p24x2f::operator= (const ae_p24x2f &src) {
  if (this != &src) {
    CSTUB_(_TIE_xt_hifi2_ae_p24x2f_storei)(src, this, 0);
  }
  return *this;
}
inline ae_p24x2f::ae_p24x2f_(const ae_p24x2s &src) {
  CSTUB_(_TIE_xt_hifi2_ae_p24x2s_rtom_ae_p24x2f)(src, this, 0);
}
inline ae_p24x2f& ae_p24x2f::operator= (const ae_p24x2s &src) {
  CSTUB_(_TIE_xt_hifi2_ae_p24x2s_rtom_ae_p24x2f)(src, this, 0);
  return *this;
}
inline ae_p24x2f::ae_p24x2f_(const ae_p16x2s &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_p16x2s_mtor_ae_p24x2f)(&src, 0);
}
inline ae_p24x2f& ae_p24x2f::operator= (const ae_p16x2s &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_p16x2s_mtor_ae_p24x2f)(&src, 0);
  return *this;
}
inline ae_p24x2f::ae_p24x2f_(const ae_p24s &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_p24s_mtor_ae_p24x2f)(&src, 0);
}
inline ae_p24x2f& ae_p24x2f::operator= (const ae_p24s &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_p24s_mtor_ae_p24x2f)(&src, 0);
  return *this;
}
inline ae_p24x2f::ae_p24x2f_(const ae_p24f &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_p24f_mtor_ae_p24x2f)(&src, 0);
}
inline ae_p24x2f& ae_p24x2f::operator= (const ae_p24f &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_p24f_mtor_ae_p24x2f)(&src, 0);
  return *this;
}
inline ae_p24x2f::ae_p24x2f_(const ae_p16s &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_p16s_mtor_ae_p24x2f)(&src, 0);
}
inline ae_p24x2f& ae_p24x2f::operator= (const ae_p16s &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_p16s_mtor_ae_p24x2f)(&src, 0);
  return *this;
}
inline ae_p24x2f::ae_p24x2f_(const ae_int24x2 &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_int24x2_rtor_ae_p24x2f)(src);
}
inline ae_p24x2f& ae_p24x2f::operator= (const ae_int24x2 &src_in) {
  ae_int24x2 src = (ae_int24x2) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_ae_int24x2_rtor_ae_p24x2f)(src);
  return *this;
}
inline ae_p24x2f::ae_p24x2f_(const ae_f24x2 &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_f24x2_rtor_ae_p24x2f)(src);
}
inline ae_p24x2f& ae_p24x2f::operator= (const ae_f24x2 &src_in) {
  ae_f24x2 src = (ae_f24x2) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_ae_f24x2_rtor_ae_p24x2f)(src);
  return *this;
}
inline ae_p24x2f::operator ae_p24x2s () const {
  ae_p24x2s res;
  CSTUB_(_TIE_xt_hifi2_ae_p24x2f_rtom_ae_p24x2s) (*this, &res, 0);
  return res;
}
inline ae_p24x2f::operator ae_p16x2s () const {
  ae_p16x2s res;
  CSTUB_(_TIE_xt_hifi2_ae_p24x2f_rtom_ae_p16x2s) (*this, &res, 0);
  return res;
}
inline ae_p24x2f::operator ae_p24s () const {
  ae_p24s res;
  CSTUB_(_TIE_xt_hifi2_ae_p24x2f_rtom_ae_p24s) (*this, &res, 0);
  return res;
}
inline ae_p24x2f::operator ae_p24f () const {
  ae_p24f res;
  CSTUB_(_TIE_xt_hifi2_ae_p24x2f_rtom_ae_p24f) (*this, &res, 0);
  return res;
}
inline ae_p24x2f::operator ae_p16s () const {
  ae_p16s res;
  CSTUB_(_TIE_xt_hifi2_ae_p24x2f_rtom_ae_p16s) (*this, &res, 0);
  return res;
}
inline ae_p24x2f::operator ae_int24x2 () const {
  return CSTUB_(_TIE_xt_hifi2_ae_p24x2f_rtor_ae_int24x2) (*this);
}
inline ae_p24x2f::operator ae_f24x2 () const {
  return CSTUB_(_TIE_xt_hifi2_ae_p24x2f_rtor_ae_f24x2) (*this);
}

}

namespace ae_p16x2s_space {
inline ae_p16x2s& ae_p16x2s::operator= (const ae_p16x2s &src) {
  if (this != &src) {
    CSTUB_(_TIE_xt_hifi2_ae_p16x2s_storei)(src, this, 0);
  }
  return *this;
}
inline ae_p16x2s::ae_p16x2s_(const ae_p24x2s &src) {
  CSTUB_(_TIE_xt_hifi2_ae_p24x2s_rtom_ae_p16x2s)(src, this, 0);
}
inline ae_p16x2s& ae_p16x2s::operator= (const ae_p24x2s &src) {
  CSTUB_(_TIE_xt_hifi2_ae_p24x2s_rtom_ae_p16x2s)(src, this, 0);
  return *this;
}
inline ae_p16x2s::ae_p16x2s_(const ae_p24x2f &src) {
  CSTUB_(_TIE_xt_hifi2_ae_p24x2f_rtom_ae_p16x2s)(src, this, 0);
}
inline ae_p16x2s& ae_p16x2s::operator= (const ae_p24x2f &src) {
  CSTUB_(_TIE_xt_hifi2_ae_p24x2f_rtom_ae_p16x2s)(src, this, 0);
  return *this;
}
inline ae_p16x2s::ae_p16x2s_(const ae_int24x2 &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_int24x2_rtor_ae_p16x2s)(src);
}
inline ae_p16x2s& ae_p16x2s::operator= (const ae_int24x2 &src_in) {
  ae_int24x2 src = (ae_int24x2) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_ae_int24x2_rtor_ae_p16x2s)(src);
  return *this;
}
inline ae_p16x2s::ae_p16x2s_(const ae_f24x2 &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_f24x2_rtor_ae_p16x2s)(src);
}
inline ae_p16x2s& ae_p16x2s::operator= (const ae_f24x2 &src_in) {
  ae_f24x2 src = (ae_f24x2) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_ae_f24x2_rtor_ae_p16x2s)(src);
  return *this;
}
inline ae_p16x2s::operator ae_p24x2s () const {
  return CSTUB_(_TIE_xt_hifi2_ae_p16x2s_mtor_ae_p24x2s) (this, 0);
}
inline ae_p16x2s::operator ae_p24x2f () const {
  return CSTUB_(_TIE_xt_hifi2_ae_p16x2s_mtor_ae_p24x2f) (this, 0);
}
inline ae_p16x2s::operator ae_int24x2 () const {
  return CSTUB_(_TIE_xt_hifi2_ae_p16x2s_rtor_ae_int24x2) (*this);
}
inline ae_p16x2s::operator ae_f24x2 () const {
  return CSTUB_(_TIE_xt_hifi2_ae_p16x2s_rtor_ae_f24x2) (*this);
}

}

namespace ae_p24s_space {
inline ae_p24s& ae_p24s::operator= (const ae_p24s &src) {
  if (this != &src) {
    CSTUB_(_TIE_xt_hifi2_ae_p24s_storei)(src, this, 0);
  }
  return *this;
}
inline ae_p24s::ae_p24s_(const ae_p24x2s &src) {
  CSTUB_(_TIE_xt_hifi2_ae_p24x2s_rtom_ae_p24s)(src, this, 0);
}
inline ae_p24s& ae_p24s::operator= (const ae_p24x2s &src) {
  CSTUB_(_TIE_xt_hifi2_ae_p24x2s_rtom_ae_p24s)(src, this, 0);
  return *this;
}
inline ae_p24s::ae_p24s_(const ae_p24x2f &src) {
  CSTUB_(_TIE_xt_hifi2_ae_p24x2f_rtom_ae_p24s)(src, this, 0);
}
inline ae_p24s& ae_p24s::operator= (const ae_p24x2f &src) {
  CSTUB_(_TIE_xt_hifi2_ae_p24x2f_rtom_ae_p24s)(src, this, 0);
  return *this;
}
inline ae_p24s::ae_p24s_(const ae_p24f &src) {
  CSTUB_(_TIE_xt_hifi2_ae_p24f_rtom_ae_p24s)(src, this, 0);
}
inline ae_p24s& ae_p24s::operator= (const ae_p24f &src) {
  CSTUB_(_TIE_xt_hifi2_ae_p24f_rtom_ae_p24s)(src, this, 0);
  return *this;
}
inline ae_p24s::ae_p24s_(const ae_p16s &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_p16s_mtor_ae_p24s)(&src, 0);
}
inline ae_p24s& ae_p24s::operator= (const ae_p16s &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_p16s_mtor_ae_p24s)(&src, 0);
  return *this;
}
inline ae_p24s::ae_p24s_(const ae_int24x2 &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_int24x2_rtor_ae_p24s)(src);
}
inline ae_p24s& ae_p24s::operator= (const ae_int24x2 &src_in) {
  ae_int24x2 src = (ae_int24x2) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_ae_int24x2_rtor_ae_p24s)(src);
  return *this;
}
inline ae_p24s::ae_p24s_(const ae_f24x2 &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_f24x2_rtor_ae_p24s)(src);
}
inline ae_p24s& ae_p24s::operator= (const ae_f24x2 &src_in) {
  ae_f24x2 src = (ae_f24x2) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_ae_f24x2_rtor_ae_p24s)(src);
  return *this;
}
inline ae_p24s::operator ae_p24x2s () const {
  return CSTUB_(_TIE_xt_hifi2_ae_p24s_mtor_ae_p24x2s) (this, 0);
}
inline ae_p24s::operator ae_p24x2f () const {
  return CSTUB_(_TIE_xt_hifi2_ae_p24s_mtor_ae_p24x2f) (this, 0);
}
inline ae_p24s::operator ae_p24f () const {
  ae_p24f res;
  CSTUB_(_TIE_xt_hifi2_ae_p24s_rtom_ae_p24f) (*this, &res, 0);
  return res;
}
inline ae_p24s::operator ae_p16s () const {
  ae_p16s res;
  CSTUB_(_TIE_xt_hifi2_ae_p24s_rtom_ae_p16s) (*this, &res, 0);
  return res;
}
inline ae_p24s::operator ae_int24x2 () const {
  return CSTUB_(_TIE_xt_hifi2_ae_p24s_rtor_ae_int24x2) (*this);
}
inline ae_p24s::operator ae_f24x2 () const {
  return CSTUB_(_TIE_xt_hifi2_ae_p24s_rtor_ae_f24x2) (*this);
}

}

namespace ae_p24f_space {
inline ae_p24f& ae_p24f::operator= (const ae_p24f &src) {
  if (this != &src) {
    CSTUB_(_TIE_xt_hifi2_ae_p24f_storei)(src, this, 0);
  }
  return *this;
}
inline ae_p24f::ae_p24f_(const ae_p24x2s &src) {
  CSTUB_(_TIE_xt_hifi2_ae_p24x2s_rtom_ae_p24f)(src, this, 0);
}
inline ae_p24f& ae_p24f::operator= (const ae_p24x2s &src) {
  CSTUB_(_TIE_xt_hifi2_ae_p24x2s_rtom_ae_p24f)(src, this, 0);
  return *this;
}
inline ae_p24f::ae_p24f_(const ae_p24x2f &src) {
  CSTUB_(_TIE_xt_hifi2_ae_p24x2f_rtom_ae_p24f)(src, this, 0);
}
inline ae_p24f& ae_p24f::operator= (const ae_p24x2f &src) {
  CSTUB_(_TIE_xt_hifi2_ae_p24x2f_rtom_ae_p24f)(src, this, 0);
  return *this;
}
inline ae_p24f::ae_p24f_(const ae_p24s &src) {
  CSTUB_(_TIE_xt_hifi2_ae_p24s_rtom_ae_p24f)(src, this, 0);
}
inline ae_p24f& ae_p24f::operator= (const ae_p24s &src) {
  CSTUB_(_TIE_xt_hifi2_ae_p24s_rtom_ae_p24f)(src, this, 0);
  return *this;
}
inline ae_p24f::ae_p24f_(const ae_p16s &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_p16s_mtor_ae_p24f)(&src, 0);
}
inline ae_p24f& ae_p24f::operator= (const ae_p16s &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_p16s_mtor_ae_p24f)(&src, 0);
  return *this;
}
inline ae_p24f::ae_p24f_(const ae_int24x2 &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_int24x2_rtor_ae_p24f)(src);
}
inline ae_p24f& ae_p24f::operator= (const ae_int24x2 &src_in) {
  ae_int24x2 src = (ae_int24x2) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_ae_int24x2_rtor_ae_p24f)(src);
  return *this;
}
inline ae_p24f::ae_p24f_(const ae_f24x2 &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_f24x2_rtor_ae_p24f)(src);
}
inline ae_p24f& ae_p24f::operator= (const ae_f24x2 &src_in) {
  ae_f24x2 src = (ae_f24x2) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_ae_f24x2_rtor_ae_p24f)(src);
  return *this;
}
inline ae_p24f::operator ae_p24x2s () const {
  return CSTUB_(_TIE_xt_hifi2_ae_p24f_mtor_ae_p24x2s) (this, 0);
}
inline ae_p24f::operator ae_p24x2f () const {
  return CSTUB_(_TIE_xt_hifi2_ae_p24f_mtor_ae_p24x2f) (this, 0);
}
inline ae_p24f::operator ae_p24s () const {
  ae_p24s res;
  CSTUB_(_TIE_xt_hifi2_ae_p24f_rtom_ae_p24s) (*this, &res, 0);
  return res;
}
inline ae_p24f::operator ae_p16s () const {
  ae_p16s res;
  CSTUB_(_TIE_xt_hifi2_ae_p24f_rtom_ae_p16s) (*this, &res, 0);
  return res;
}
inline ae_p24f::operator ae_int24x2 () const {
  return CSTUB_(_TIE_xt_hifi2_ae_p24f_rtor_ae_int24x2) (*this);
}
inline ae_p24f::operator ae_f24x2 () const {
  return CSTUB_(_TIE_xt_hifi2_ae_p24f_rtor_ae_f24x2) (*this);
}

}

namespace ae_p16s_space {
inline ae_p16s& ae_p16s::operator= (const ae_p16s &src) {
  if (this != &src) {
    CSTUB_(_TIE_xt_hifi2_ae_p16s_storei)(src, this, 0);
  }
  return *this;
}
inline ae_p16s::ae_p16s_(const ae_p24x2s &src) {
  CSTUB_(_TIE_xt_hifi2_ae_p24x2s_rtom_ae_p16s)(src, this, 0);
}
inline ae_p16s& ae_p16s::operator= (const ae_p24x2s &src) {
  CSTUB_(_TIE_xt_hifi2_ae_p24x2s_rtom_ae_p16s)(src, this, 0);
  return *this;
}
inline ae_p16s::ae_p16s_(const ae_p24x2f &src) {
  CSTUB_(_TIE_xt_hifi2_ae_p24x2f_rtom_ae_p16s)(src, this, 0);
}
inline ae_p16s& ae_p16s::operator= (const ae_p24x2f &src) {
  CSTUB_(_TIE_xt_hifi2_ae_p24x2f_rtom_ae_p16s)(src, this, 0);
  return *this;
}
inline ae_p16s::ae_p16s_(const ae_p24s &src) {
  CSTUB_(_TIE_xt_hifi2_ae_p24s_rtom_ae_p16s)(src, this, 0);
}
inline ae_p16s& ae_p16s::operator= (const ae_p24s &src) {
  CSTUB_(_TIE_xt_hifi2_ae_p24s_rtom_ae_p16s)(src, this, 0);
  return *this;
}
inline ae_p16s::ae_p16s_(const ae_p24f &src) {
  CSTUB_(_TIE_xt_hifi2_ae_p24f_rtom_ae_p16s)(src, this, 0);
}
inline ae_p16s& ae_p16s::operator= (const ae_p24f &src) {
  CSTUB_(_TIE_xt_hifi2_ae_p24f_rtom_ae_p16s)(src, this, 0);
  return *this;
}
inline ae_p16s::ae_p16s_(const ae_int24x2 &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_int24x2_rtor_ae_p16s)(src);
}
inline ae_p16s& ae_p16s::operator= (const ae_int24x2 &src_in) {
  ae_int24x2 src = (ae_int24x2) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_ae_int24x2_rtor_ae_p16s)(src);
  return *this;
}
inline ae_p16s::ae_p16s_(const ae_f24x2 &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_f24x2_rtor_ae_p16s)(src);
}
inline ae_p16s& ae_p16s::operator= (const ae_f24x2 &src_in) {
  ae_f24x2 src = (ae_f24x2) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_ae_f24x2_rtor_ae_p16s)(src);
  return *this;
}
inline ae_p16s::operator ae_p24x2s () const {
  return CSTUB_(_TIE_xt_hifi2_ae_p16s_mtor_ae_p24x2s) (this, 0);
}
inline ae_p16s::operator ae_p24x2f () const {
  return CSTUB_(_TIE_xt_hifi2_ae_p16s_mtor_ae_p24x2f) (this, 0);
}
inline ae_p16s::operator ae_p24s () const {
  return CSTUB_(_TIE_xt_hifi2_ae_p16s_mtor_ae_p24s) (this, 0);
}
inline ae_p16s::operator ae_p24f () const {
  return CSTUB_(_TIE_xt_hifi2_ae_p16s_mtor_ae_p24f) (this, 0);
}
inline ae_p16s::operator ae_int24x2 () const {
  return CSTUB_(_TIE_xt_hifi2_ae_p16s_rtor_ae_int24x2) (*this);
}
inline ae_p16s::operator ae_f24x2 () const {
  return CSTUB_(_TIE_xt_hifi2_ae_p16s_rtor_ae_f24x2) (*this);
}

}

namespace ae_int16x4_space {
inline ae_int16x4& ae_int16x4::operator= (const ae_int16x4 &src) {
  if (this != &src) {
    CSTUB_(_TIE_xt_hifi2_ae_int16x4_storei)(src, this, 0);
  }
  return *this;
}
inline ae_int16x4::ae_int16x4_(const short &src) {
  *this = CSTUB_(_TIE_xt_hifi2_int16_rtor_ae_int16x4)(src);
}
inline ae_int16x4& ae_int16x4::operator= (const short &src_in) {
  short src = (short) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_int16_rtor_ae_int16x4)(src);
  return *this;
}
inline ae_int16x4::ae_int16x4_(const int &src) {
  *this = CSTUB_(_TIE_xt_hifi2_int32_rtor_ae_int16x4)(src);
}
inline ae_int16x4& ae_int16x4::operator= (const int &src_in) {
  int src = (int) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_int32_rtor_ae_int16x4)(src);
  return *this;
}
inline ae_int16x4::ae_int16x4_(const ae_int16 &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_int16_rtor_ae_int16x4)(src);
}
inline ae_int16x4& ae_int16x4::operator= (const ae_int16 &src_in) {
  ae_int16 src = (ae_int16) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_ae_int16_rtor_ae_int16x4)(src);
  return *this;
}
inline ae_int16x4::ae_int16x4_(const ae_f16x4 &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_f16x4_rtor_ae_int16x4)(src);
}
inline ae_int16x4& ae_int16x4::operator= (const ae_f16x4 &src_in) {
  ae_f16x4 src = (ae_f16x4) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_ae_f16x4_rtor_ae_int16x4)(src);
  return *this;
}
inline ae_int16x4::ae_int16x4_(const ae_f16 &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_f16_rtor_ae_int16x4)(src);
}
inline ae_int16x4& ae_int16x4::operator= (const ae_f16 &src_in) {
  ae_f16 src = (ae_f16) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_ae_f16_rtor_ae_int16x4)(src);
  return *this;
}
inline ae_int16x4::ae_int16x4_(const ae_int32x4 &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_int32x4_rtor_ae_int16x4)(src);
}
inline ae_int16x4& ae_int16x4::operator= (const ae_int32x4 &src_in) {
  ae_int32x4 src = (ae_int32x4) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_ae_int32x4_rtor_ae_int16x4)(src);
  return *this;
}
#ifndef _MSC_VER
template<>
#endif
inline ae_int16x4::operator short () const {
  return CSTUB_(_TIE_xt_hifi2_ae_int16x4_rtor_int16) (*this);
}
inline ae_int16x4::operator ae_int16 () const {
  ae_int16 res;
  CSTUB_(_TIE_xt_hifi2_ae_int16x4_rtom_ae_int16) (*this, &res, 0);
  return res;
}
inline ae_int16x4::operator ae_f16x4 () const {
  return CSTUB_(_TIE_xt_hifi2_ae_int16x4_rtor_ae_f16x4) (*this);
}
inline ae_int16x4::operator ae_f16 () const {
  ae_f16 res;
  CSTUB_(_TIE_xt_hifi2_ae_int16x4_rtom_ae_f16) (*this, &res, 0);
  return res;
}
inline ae_int16x4::operator ae_int32x4 () const {
  return CSTUB_(_TIE_xt_hifi2_ae_int16x4_rtor_ae_int32x4) (*this);
}
template <typename T_>
inline ae_int16x4::operator T_() const {
    return T_((short)(*this));
}


}

namespace ae_int16_space {
inline ae_int16& ae_int16::operator= (const ae_int16 &src) {
  if (this != &src) {
    CSTUB_(_TIE_xt_hifi2_ae_int16_storei)(src, this, 0);
  }
  return *this;
}
inline ae_int16::ae_int16_(const short &src) {
  *this = CSTUB_(_TIE_xt_hifi2_int16_mtor_ae_int16)(&src, 0);
}
inline ae_int16& ae_int16::operator= (const short &src) {
  *this = CSTUB_(_TIE_xt_hifi2_int16_mtor_ae_int16)(&src, 0);
  return *this;
}
inline ae_int16::ae_int16_(const int &src) {
  *this = CSTUB_(_TIE_xt_hifi2_int32_rtor_ae_int16)(src);
}
inline ae_int16& ae_int16::operator= (const int &src_in) {
  int src = (int) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_int32_rtor_ae_int16)(src);
  return *this;
}
inline ae_int16::ae_int16_(const ae_int16x4 &src) {
  CSTUB_(_TIE_xt_hifi2_ae_int16x4_rtom_ae_int16)(src, this, 0);
}
inline ae_int16& ae_int16::operator= (const ae_int16x4 &src) {
  CSTUB_(_TIE_xt_hifi2_ae_int16x4_rtom_ae_int16)(src, this, 0);
  return *this;
}
inline ae_int16::ae_int16_(const ae_f16x4 &src) {
  CSTUB_(_TIE_xt_hifi2_ae_f16x4_rtom_ae_int16)(src, this, 0);
}
inline ae_int16& ae_int16::operator= (const ae_f16x4 &src) {
  CSTUB_(_TIE_xt_hifi2_ae_f16x4_rtom_ae_int16)(src, this, 0);
  return *this;
}
inline ae_int16::ae_int16_(const ae_f16 &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_f16_rtor_ae_int16)(src);
}
inline ae_int16& ae_int16::operator= (const ae_f16 &src_in) {
  ae_f16 src = (ae_f16) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_ae_f16_rtor_ae_int16)(src);
  return *this;
}
inline ae_int16::ae_int16_(const ae_int32 &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_int32_rtor_ae_int16)(src);
}
inline ae_int16& ae_int16::operator= (const ae_int32 &src_in) {
  ae_int32 src = (ae_int32) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_ae_int32_rtor_ae_int16)(src);
  return *this;
}
inline ae_int16::ae_int16_(const ae_int24 &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_int24_rtor_ae_int16)(src);
}
inline ae_int16& ae_int16::operator= (const ae_int24 &src_in) {
  ae_int24 src = (ae_int24) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_ae_int24_rtor_ae_int16)(src);
  return *this;
}
inline ae_int16::ae_int16_(const ae_int32u &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_int32u_rtor_ae_int16)(src);
}
inline ae_int16& ae_int16::operator= (const ae_int32u &src_in) {
  ae_int32u src = (ae_int32u) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_ae_int32u_rtor_ae_int16)(src);
  return *this;
}
inline ae_int16::ae_int16_(const ae_int16u &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_int16u_rtor_ae_int16)(src);
}
inline ae_int16& ae_int16::operator= (const ae_int16u &src_in) {
  ae_int16u src = (ae_int16u) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_ae_int16u_rtor_ae_int16)(src);
  return *this;
}
#ifndef _MSC_VER
template<>
#endif
inline ae_int16::operator short () const {
  CSTUB_MSC_ALIGN(8) short res CSTUB_GCC_ALIGN(8);
  CSTUB_(_TIE_xt_hifi2_ae_int16_rtom_int16) (*this, &res, 0);
  return res;
}
#ifndef _MSC_VER
template<>
#endif
inline ae_int16::operator int () const {
  return CSTUB_(_TIE_xt_hifi2_ae_int16_rtor_int32) (*this);
}
inline ae_int16::operator ae_int16x4 () const {
  return CSTUB_(_TIE_xt_hifi2_ae_int16_rtor_ae_int16x4) (*this);
}
inline ae_int16::operator ae_f16 () const {
  return CSTUB_(_TIE_xt_hifi2_ae_int16_rtor_ae_f16) (*this);
}
inline ae_int16::operator ae_int32 () const {
  return CSTUB_(_TIE_xt_hifi2_ae_int16_rtor_ae_int32) (*this);
}
inline ae_int16::operator ae_int24 () const {
  return CSTUB_(_TIE_xt_hifi2_ae_int16_rtor_ae_int24) (*this);
}
inline ae_int16::operator ae_int64 () const {
  return CSTUB_(_TIE_xt_hifi2_ae_int16_rtor_ae_int64) (*this);
}
inline ae_int16::operator ae_int32u () const {
  return CSTUB_(_TIE_xt_hifi2_ae_int16_rtor_ae_int32u) (*this);
}
inline ae_int16::operator ae_int16u () const {
  return CSTUB_(_TIE_xt_hifi2_ae_int16_rtor_ae_int16u) (*this);
}

}

namespace ae_f16x4_space {
inline ae_f16x4& ae_f16x4::operator= (const ae_f16x4 &src) {
  if (this != &src) {
    CSTUB_(_TIE_xt_hifi2_ae_f16x4_storei)(src, this, 0);
  }
  return *this;
}
inline ae_f16x4::ae_f16x4_(const short &src) {
  *this = CSTUB_(_TIE_xt_hifi2_int16_rtor_ae_f16x4)(src);
}
inline ae_f16x4& ae_f16x4::operator= (const short &src_in) {
  short src = (short) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_int16_rtor_ae_f16x4)(src);
  return *this;
}
inline ae_f16x4::ae_f16x4_(const ae_int16x4 &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_int16x4_rtor_ae_f16x4)(src);
}
inline ae_f16x4& ae_f16x4::operator= (const ae_int16x4 &src_in) {
  ae_int16x4 src = (ae_int16x4) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_ae_int16x4_rtor_ae_f16x4)(src);
  return *this;
}
inline ae_f16x4::ae_f16x4_(const ae_f16 &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_f16_rtor_ae_f16x4)(src);
}
inline ae_f16x4& ae_f16x4::operator= (const ae_f16 &src_in) {
  ae_f16 src = (ae_f16) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_ae_f16_rtor_ae_f16x4)(src);
  return *this;
}
#ifndef _MSC_VER
template<>
#endif
inline ae_f16x4::operator short () const {
  return CSTUB_(_TIE_xt_hifi2_ae_f16x4_rtor_int16) (*this);
}
inline ae_f16x4::operator ae_int16x4 () const {
  return CSTUB_(_TIE_xt_hifi2_ae_f16x4_rtor_ae_int16x4) (*this);
}
inline ae_f16x4::operator ae_int16 () const {
  ae_int16 res;
  CSTUB_(_TIE_xt_hifi2_ae_f16x4_rtom_ae_int16) (*this, &res, 0);
  return res;
}
inline ae_f16x4::operator ae_f16 () const {
  ae_f16 res;
  CSTUB_(_TIE_xt_hifi2_ae_f16x4_rtom_ae_f16) (*this, &res, 0);
  return res;
}
template <typename T_>
inline ae_f16x4::operator T_() const {
    return T_((short)(*this));
}


}

namespace ae_f16_space {
inline ae_f16& ae_f16::operator= (const ae_f16 &src) {
  if (this != &src) {
    CSTUB_(_TIE_xt_hifi2_ae_f16_storei)(src, this, 0);
  }
  return *this;
}
inline ae_f16::ae_f16_(const short &src) {
  *this = CSTUB_(_TIE_xt_hifi2_int16_rtor_ae_f16)(src);
}
inline ae_f16& ae_f16::operator= (const short &src_in) {
  short src = (short) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_int16_rtor_ae_f16)(src);
  return *this;
}
inline ae_f16::ae_f16_(const int &src) {
  *this = CSTUB_(_TIE_xt_hifi2_int32_rtor_ae_f16)(src);
}
inline ae_f16& ae_f16::operator= (const int &src_in) {
  int src = (int) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_int32_rtor_ae_f16)(src);
  return *this;
}
inline ae_f16::ae_f16_(const ae_int16x4 &src) {
  CSTUB_(_TIE_xt_hifi2_ae_int16x4_rtom_ae_f16)(src, this, 0);
}
inline ae_f16& ae_f16::operator= (const ae_int16x4 &src) {
  CSTUB_(_TIE_xt_hifi2_ae_int16x4_rtom_ae_f16)(src, this, 0);
  return *this;
}
inline ae_f16::ae_f16_(const ae_int16 &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_int16_rtor_ae_f16)(src);
}
inline ae_f16& ae_f16::operator= (const ae_int16 &src_in) {
  ae_int16 src = (ae_int16) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_ae_int16_rtor_ae_f16)(src);
  return *this;
}
inline ae_f16::ae_f16_(const ae_f16x4 &src) {
  CSTUB_(_TIE_xt_hifi2_ae_f16x4_rtom_ae_f16)(src, this, 0);
}
inline ae_f16& ae_f16::operator= (const ae_f16x4 &src) {
  CSTUB_(_TIE_xt_hifi2_ae_f16x4_rtom_ae_f16)(src, this, 0);
  return *this;
}
inline ae_f16::ae_f16_(const ae_f32 &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_f32_rtor_ae_f16)(src);
}
inline ae_f16& ae_f16::operator= (const ae_f32 &src_in) {
  ae_f32 src = (ae_f32) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_ae_f32_rtor_ae_f16)(src);
  return *this;
}
inline ae_f16::ae_f16_(const ae_f24 &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_f24_rtor_ae_f16)(src);
}
inline ae_f16& ae_f16::operator= (const ae_f24 &src_in) {
  ae_f24 src = (ae_f24) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_ae_f24_rtor_ae_f16)(src);
  return *this;
}
#ifndef _MSC_VER
template<>
#endif
inline ae_f16::operator short () const {
  return CSTUB_(_TIE_xt_hifi2_ae_f16_rtor_int16) (*this);
}
#ifndef _MSC_VER
template<>
#endif
inline ae_f16::operator int () const {
  return CSTUB_(_TIE_xt_hifi2_ae_f16_rtor_int32) (*this);
}
inline ae_f16::operator ae_int16x4 () const {
  return CSTUB_(_TIE_xt_hifi2_ae_f16_rtor_ae_int16x4) (*this);
}
inline ae_f16::operator ae_int16 () const {
  return CSTUB_(_TIE_xt_hifi2_ae_f16_rtor_ae_int16) (*this);
}
inline ae_f16::operator ae_f16x4 () const {
  return CSTUB_(_TIE_xt_hifi2_ae_f16_rtor_ae_f16x4) (*this);
}
inline ae_f16::operator ae_f32 () const {
  return CSTUB_(_TIE_xt_hifi2_ae_f16_rtor_ae_f32) (*this);
}
inline ae_f16::operator ae_f24 () const {
  return CSTUB_(_TIE_xt_hifi2_ae_f16_rtor_ae_f24) (*this);
}

}

namespace ae_int32x2_space {
inline ae_int32x2& ae_int32x2::operator= (const ae_int32x2 &src) {
  if (this != &src) {
    CSTUB_(_TIE_xt_hifi2_ae_int32x2_storei)(src, this, 0);
  }
  return *this;
}
inline ae_int32x2::ae_int32x2_(const unsigned char &src) {
  *this = CSTUB_(_TIE_xt_hifi2_uint8_rtor_ae_int32x2)(src);
}
inline ae_int32x2& ae_int32x2::operator= (const unsigned char &src_in) {
  unsigned char src = (unsigned char) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_uint8_rtor_ae_int32x2)(src);
  return *this;
}
inline ae_int32x2::ae_int32x2_(const signed char &src) {
  *this = CSTUB_(_TIE_xt_hifi2_int8_rtor_ae_int32x2)(src);
}
inline ae_int32x2& ae_int32x2::operator= (const signed char &src_in) {
  signed char src = (signed char) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_int8_rtor_ae_int32x2)(src);
  return *this;
}
inline ae_int32x2::ae_int32x2_(const unsigned short &src) {
  *this = CSTUB_(_TIE_xt_hifi2_uint16_rtor_ae_int32x2)(src);
}
inline ae_int32x2& ae_int32x2::operator= (const unsigned short &src_in) {
  unsigned short src = (unsigned short) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_uint16_rtor_ae_int32x2)(src);
  return *this;
}
inline ae_int32x2::ae_int32x2_(const short &src) {
  *this = CSTUB_(_TIE_xt_hifi2_int16_rtor_ae_int32x2)(src);
}
inline ae_int32x2& ae_int32x2::operator= (const short &src_in) {
  short src = (short) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_int16_rtor_ae_int32x2)(src);
  return *this;
}
inline ae_int32x2::ae_int32x2_(const unsigned int &src) {
  *this = CSTUB_(_TIE_xt_hifi2_uint32_rtor_ae_int32x2)(src);
}
inline ae_int32x2& ae_int32x2::operator= (const unsigned int &src_in) {
  unsigned int src = (unsigned int) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_uint32_rtor_ae_int32x2)(src);
  return *this;
}
inline ae_int32x2::ae_int32x2_(const int &src) {
  *this = CSTUB_(_TIE_xt_hifi2_int32_mtor_ae_int32x2)(&src, 0);
}
inline ae_int32x2& ae_int32x2::operator= (const int &src) {
  *this = CSTUB_(_TIE_xt_hifi2_int32_mtor_ae_int32x2)(&src, 0);
  return *this;
}
inline ae_int32x2::ae_int32x2_(const ae_int32 &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_int32_rtor_ae_int32x2)(src);
}
inline ae_int32x2& ae_int32x2::operator= (const ae_int32 &src_in) {
  ae_int32 src = (ae_int32) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_ae_int32_rtor_ae_int32x2)(src);
  return *this;
}
inline ae_int32x2::ae_int32x2_(const ae_f32x2 &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_f32x2_rtor_ae_int32x2)(src);
}
inline ae_int32x2& ae_int32x2::operator= (const ae_f32x2 &src_in) {
  ae_f32x2 src = (ae_f32x2) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_ae_f32x2_rtor_ae_int32x2)(src);
  return *this;
}
inline ae_int32x2::ae_int32x2_(const ae_f32 &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_f32_rtor_ae_int32x2)(src);
}
inline ae_int32x2& ae_int32x2::operator= (const ae_f32 &src_in) {
  ae_f32 src = (ae_f32) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_ae_f32_rtor_ae_int32x2)(src);
  return *this;
}
inline ae_int32x2::ae_int32x2_(const ae_int24x2 &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_int24x2_rtor_ae_int32x2)(src);
}
inline ae_int32x2& ae_int32x2::operator= (const ae_int24x2 &src_in) {
  ae_int24x2 src = (ae_int24x2) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_ae_int24x2_rtor_ae_int32x2)(src);
  return *this;
}
inline ae_int32x2::ae_int32x2_(const ae_int24 &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_int24_rtor_ae_int32x2)(src);
}
inline ae_int32x2& ae_int32x2::operator= (const ae_int24 &src_in) {
  ae_int24 src = (ae_int24) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_ae_int24_rtor_ae_int32x2)(src);
  return *this;
}
inline ae_int32x2::ae_int32x2_(const ae_f24x2 &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_f24x2_rtor_ae_int32x2)(src);
}
inline ae_int32x2& ae_int32x2::operator= (const ae_f24x2 &src_in) {
  ae_f24x2 src = (ae_f24x2) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_ae_f24x2_rtor_ae_int32x2)(src);
  return *this;
}
inline ae_int32x2::ae_int32x2_(const ae_f24 &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_f24_rtor_ae_int32x2)(src);
}
inline ae_int32x2& ae_int32x2::operator= (const ae_f24 &src_in) {
  ae_f24 src = (ae_f24) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_ae_f24_rtor_ae_int32x2)(src);
  return *this;
}
inline ae_int32x2::ae_int32x2_(const ae_int32u &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_int32u_rtor_ae_int32x2)(src);
}
inline ae_int32x2& ae_int32x2::operator= (const ae_int32u &src_in) {
  ae_int32u src = (ae_int32u) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_ae_int32u_rtor_ae_int32x2)(src);
  return *this;
}
#ifndef _MSC_VER
template<>
#endif
inline ae_int32x2::operator short () const {
  return CSTUB_(_TIE_xt_hifi2_ae_int32x2_rtor_int16) (*this);
}
#ifndef _MSC_VER
template<>
#endif
inline ae_int32x2::operator unsigned int () const {
  return CSTUB_(_TIE_xt_hifi2_ae_int32x2_rtor_uint32) (*this);
}
#ifndef _MSC_VER
template<>
#endif
inline ae_int32x2::operator int () const {
  CSTUB_MSC_ALIGN(8) int res CSTUB_GCC_ALIGN(8);
  CSTUB_(_TIE_xt_hifi2_ae_int32x2_rtom_int32) (*this, &res, 0);
  return res;
}
inline ae_int32x2::operator ae_int32 () const {
  ae_int32 res;
  CSTUB_(_TIE_xt_hifi2_ae_int32x2_rtom_ae_int32) (*this, &res, 0);
  return res;
}
inline ae_int32x2::operator ae_f32x2 () const {
  return CSTUB_(_TIE_xt_hifi2_ae_int32x2_rtor_ae_f32x2) (*this);
}
inline ae_int32x2::operator ae_f32 () const {
  return CSTUB_(_TIE_xt_hifi2_ae_int32x2_rtor_ae_f32) (*this);
}
inline ae_int32x2::operator ae_int32u () const {
  return CSTUB_(_TIE_xt_hifi2_ae_int32x2_rtor_ae_int32u) (*this);
}
inline ae_int32x2::operator ae_int64x2 () const {
  return CSTUB_(_TIE_xt_hifi2_ae_int32x2_rtor_ae_int64x2) (*this);
}

}

namespace ae_int32_space {
inline ae_int32& ae_int32::operator= (const ae_int32 &src) {
  if (this != &src) {
    CSTUB_(_TIE_xt_hifi2_ae_int32_storei)(src, this, 0);
  }
  return *this;
}
inline ae_int32::ae_int32_(const unsigned char &src) {
  *this = CSTUB_(_TIE_xt_hifi2_uint8_rtor_ae_int32)(src);
}
inline ae_int32& ae_int32::operator= (const unsigned char &src_in) {
  unsigned char src = (unsigned char) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_uint8_rtor_ae_int32)(src);
  return *this;
}
inline ae_int32::ae_int32_(const signed char &src) {
  *this = CSTUB_(_TIE_xt_hifi2_int8_rtor_ae_int32)(src);
}
inline ae_int32& ae_int32::operator= (const signed char &src_in) {
  signed char src = (signed char) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_int8_rtor_ae_int32)(src);
  return *this;
}
inline ae_int32::ae_int32_(const unsigned short &src) {
  *this = CSTUB_(_TIE_xt_hifi2_uint16_rtor_ae_int32)(src);
}
inline ae_int32& ae_int32::operator= (const unsigned short &src_in) {
  unsigned short src = (unsigned short) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_uint16_rtor_ae_int32)(src);
  return *this;
}
inline ae_int32::ae_int32_(const short &src) {
  *this = CSTUB_(_TIE_xt_hifi2_int16_rtor_ae_int32)(src);
}
inline ae_int32& ae_int32::operator= (const short &src_in) {
  short src = (short) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_int16_rtor_ae_int32)(src);
  return *this;
}
inline ae_int32::ae_int32_(const unsigned int &src) {
  *this = CSTUB_(_TIE_xt_hifi2_uint32_rtor_ae_int32)(src);
}
inline ae_int32& ae_int32::operator= (const unsigned int &src_in) {
  unsigned int src = (unsigned int) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_uint32_rtor_ae_int32)(src);
  return *this;
}
inline ae_int32::ae_int32_(const int &src) {
  *this = CSTUB_(_TIE_xt_hifi2_int32_mtor_ae_int32)(&src, 0);
}
inline ae_int32& ae_int32::operator= (const int &src) {
  *this = CSTUB_(_TIE_xt_hifi2_int32_mtor_ae_int32)(&src, 0);
  return *this;
}
inline ae_int32::ae_int32_(const ae_int16 &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_int16_rtor_ae_int32)(src);
}
inline ae_int32& ae_int32::operator= (const ae_int16 &src_in) {
  ae_int16 src = (ae_int16) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_ae_int16_rtor_ae_int32)(src);
  return *this;
}
inline ae_int32::ae_int32_(const ae_int32x2 &src) {
  CSTUB_(_TIE_xt_hifi2_ae_int32x2_rtom_ae_int32)(src, this, 0);
}
inline ae_int32& ae_int32::operator= (const ae_int32x2 &src) {
  CSTUB_(_TIE_xt_hifi2_ae_int32x2_rtom_ae_int32)(src, this, 0);
  return *this;
}
inline ae_int32::ae_int32_(const ae_f32x2 &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_f32x2_rtor_ae_int32)(src);
}
inline ae_int32& ae_int32::operator= (const ae_f32x2 &src_in) {
  ae_f32x2 src = (ae_f32x2) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_ae_f32x2_rtor_ae_int32)(src);
  return *this;
}
inline ae_int32::ae_int32_(const ae_f32 &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_f32_rtor_ae_int32)(src);
}
inline ae_int32& ae_int32::operator= (const ae_f32 &src_in) {
  ae_f32 src = (ae_f32) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_ae_f32_rtor_ae_int32)(src);
  return *this;
}
inline ae_int32::ae_int32_(const ae_int24 &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_int24_rtor_ae_int32)(src);
}
inline ae_int32& ae_int32::operator= (const ae_int24 &src_in) {
  ae_int24 src = (ae_int24) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_ae_int24_rtor_ae_int32)(src);
  return *this;
}
inline ae_int32::ae_int32_(const ae_f24x2 &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_f24x2_rtor_ae_int32)(src);
}
inline ae_int32& ae_int32::operator= (const ae_f24x2 &src_in) {
  ae_f24x2 src = (ae_f24x2) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_ae_f24x2_rtor_ae_int32)(src);
  return *this;
}
inline ae_int32::ae_int32_(const ae_f24 &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_f24_rtor_ae_int32)(src);
}
inline ae_int32& ae_int32::operator= (const ae_f24 &src_in) {
  ae_f24 src = (ae_f24) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_ae_f24_rtor_ae_int32)(src);
  return *this;
}
inline ae_int32::ae_int32_(const ae_int32u &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_int32u_rtor_ae_int32)(src);
}
inline ae_int32& ae_int32::operator= (const ae_int32u &src_in) {
  ae_int32u src = (ae_int32u) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_ae_int32u_rtor_ae_int32)(src);
  return *this;
}
inline ae_int32::ae_int32_(const ae_int16u &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_int16u_rtor_ae_int32)(src);
}
inline ae_int32& ae_int32::operator= (const ae_int16u &src_in) {
  ae_int16u src = (ae_int16u) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_ae_int16u_rtor_ae_int32)(src);
  return *this;
}
#ifndef _MSC_VER
template<>
#endif
inline ae_int32::operator short () const {
  return CSTUB_(_TIE_xt_hifi2_ae_int32_rtor_int16) (*this);
}
#ifndef _MSC_VER
template<>
#endif
inline ae_int32::operator unsigned int () const {
  return CSTUB_(_TIE_xt_hifi2_ae_int32_rtor_uint32) (*this);
}
#ifndef _MSC_VER
template<>
#endif
inline ae_int32::operator int () const {
  CSTUB_MSC_ALIGN(8) int res CSTUB_GCC_ALIGN(8);
  CSTUB_(_TIE_xt_hifi2_ae_int32_rtom_int32) (*this, &res, 0);
  return res;
}
inline ae_int32::operator ae_int16 () const {
  return CSTUB_(_TIE_xt_hifi2_ae_int32_rtor_ae_int16) (*this);
}
inline ae_int32::operator ae_int32x2 () const {
  return CSTUB_(_TIE_xt_hifi2_ae_int32_rtor_ae_int32x2) (*this);
}
inline ae_int32::operator ae_f32x2 () const {
  return CSTUB_(_TIE_xt_hifi2_ae_int32_rtor_ae_f32x2) (*this);
}
inline ae_int32::operator ae_f32 () const {
  return CSTUB_(_TIE_xt_hifi2_ae_int32_rtor_ae_f32) (*this);
}
inline ae_int32::operator ae_int64 () const {
  return CSTUB_(_TIE_xt_hifi2_ae_int32_rtor_ae_int64) (*this);
}
inline ae_int32::operator ae_int32x4 () const {
  return CSTUB_(_TIE_xt_hifi2_ae_int32_rtor_ae_int32x4) (*this);
}
inline ae_int32::operator ae_int32u () const {
  return CSTUB_(_TIE_xt_hifi2_ae_int32_rtor_ae_int32u) (*this);
}
inline ae_int32::operator ae_int16u () const {
  return CSTUB_(_TIE_xt_hifi2_ae_int32_rtor_ae_int16u) (*this);
}

}

namespace ae_f32x2_space {
inline ae_f32x2& ae_f32x2::operator= (const ae_f32x2 &src) {
  if (this != &src) {
    CSTUB_(_TIE_xt_hifi2_ae_f32x2_storei)(src, this, 0);
  }
  return *this;
}
inline ae_f32x2::ae_f32x2_(const short &src) {
  *this = CSTUB_(_TIE_xt_hifi2_int16_rtor_ae_f32x2)(src);
}
inline ae_f32x2& ae_f32x2::operator= (const short &src_in) {
  short src = (short) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_int16_rtor_ae_f32x2)(src);
  return *this;
}
inline ae_f32x2::ae_f32x2_(const unsigned int &src) {
  *this = CSTUB_(_TIE_xt_hifi2_uint32_rtor_ae_f32x2)(src);
}
inline ae_f32x2& ae_f32x2::operator= (const unsigned int &src_in) {
  unsigned int src = (unsigned int) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_uint32_rtor_ae_f32x2)(src);
  return *this;
}
inline ae_f32x2::ae_f32x2_(const int &src) {
  *this = CSTUB_(_TIE_xt_hifi2_int32_rtor_ae_f32x2)(src);
}
inline ae_f32x2& ae_f32x2::operator= (const int &src_in) {
  int src = (int) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_int32_rtor_ae_f32x2)(src);
  return *this;
}
inline ae_f32x2::ae_f32x2_(const ae_int32x2 &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_int32x2_rtor_ae_f32x2)(src);
}
inline ae_f32x2& ae_f32x2::operator= (const ae_int32x2 &src_in) {
  ae_int32x2 src = (ae_int32x2) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_ae_int32x2_rtor_ae_f32x2)(src);
  return *this;
}
inline ae_f32x2::ae_f32x2_(const ae_int32 &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_int32_rtor_ae_f32x2)(src);
}
inline ae_f32x2& ae_f32x2::operator= (const ae_int32 &src_in) {
  ae_int32 src = (ae_int32) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_ae_int32_rtor_ae_f32x2)(src);
  return *this;
}
inline ae_f32x2::ae_f32x2_(const ae_f32 &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_f32_rtor_ae_f32x2)(src);
}
inline ae_f32x2& ae_f32x2::operator= (const ae_f32 &src_in) {
  ae_f32 src = (ae_f32) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_ae_f32_rtor_ae_f32x2)(src);
  return *this;
}
inline ae_f32x2::ae_f32x2_(const ae_int24x2 &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_int24x2_rtor_ae_f32x2)(src);
}
inline ae_f32x2& ae_f32x2::operator= (const ae_int24x2 &src_in) {
  ae_int24x2 src = (ae_int24x2) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_ae_int24x2_rtor_ae_f32x2)(src);
  return *this;
}
inline ae_f32x2::ae_f32x2_(const ae_int24 &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_int24_rtor_ae_f32x2)(src);
}
inline ae_f32x2& ae_f32x2::operator= (const ae_int24 &src_in) {
  ae_int24 src = (ae_int24) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_ae_int24_rtor_ae_f32x2)(src);
  return *this;
}
inline ae_f32x2::ae_f32x2_(const ae_f24x2 &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_f24x2_rtor_ae_f32x2)(src);
}
inline ae_f32x2& ae_f32x2::operator= (const ae_f24x2 &src_in) {
  ae_f24x2 src = (ae_f24x2) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_ae_f24x2_rtor_ae_f32x2)(src);
  return *this;
}
inline ae_f32x2::ae_f32x2_(const ae_f24 &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_f24_rtor_ae_f32x2)(src);
}
inline ae_f32x2& ae_f32x2::operator= (const ae_f24 &src_in) {
  ae_f24 src = (ae_f24) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_ae_f24_rtor_ae_f32x2)(src);
  return *this;
}
inline ae_f32x2::operator ae_int32x2 () const {
  return CSTUB_(_TIE_xt_hifi2_ae_f32x2_rtor_ae_int32x2) (*this);
}
inline ae_f32x2::operator ae_int32 () const {
  return CSTUB_(_TIE_xt_hifi2_ae_f32x2_rtor_ae_int32) (*this);
}
inline ae_f32x2::operator ae_f32 () const {
  return CSTUB_(_TIE_xt_hifi2_ae_f32x2_rtor_ae_f32) (*this);
}

}

namespace ae_f32_space {
inline ae_f32& ae_f32::operator= (const ae_f32 &src) {
  if (this != &src) {
    CSTUB_(_TIE_xt_hifi2_ae_f32_storei)(src, this, 0);
  }
  return *this;
}
inline ae_f32::ae_f32_(const short &src) {
  *this = CSTUB_(_TIE_xt_hifi2_int16_rtor_ae_f32)(src);
}
inline ae_f32& ae_f32::operator= (const short &src_in) {
  short src = (short) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_int16_rtor_ae_f32)(src);
  return *this;
}
inline ae_f32::ae_f32_(const int &src) {
  *this = CSTUB_(_TIE_xt_hifi2_int32_rtor_ae_f32)(src);
}
inline ae_f32& ae_f32::operator= (const int &src_in) {
  int src = (int) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_int32_rtor_ae_f32)(src);
  return *this;
}
inline ae_f32::ae_f32_(const ae_f16 &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_f16_rtor_ae_f32)(src);
}
inline ae_f32& ae_f32::operator= (const ae_f16 &src_in) {
  ae_f16 src = (ae_f16) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_ae_f16_rtor_ae_f32)(src);
  return *this;
}
inline ae_f32::ae_f32_(const ae_int32x2 &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_int32x2_rtor_ae_f32)(src);
}
inline ae_f32& ae_f32::operator= (const ae_int32x2 &src_in) {
  ae_int32x2 src = (ae_int32x2) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_ae_int32x2_rtor_ae_f32)(src);
  return *this;
}
inline ae_f32::ae_f32_(const ae_int32 &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_int32_rtor_ae_f32)(src);
}
inline ae_f32& ae_f32::operator= (const ae_int32 &src_in) {
  ae_int32 src = (ae_int32) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_ae_int32_rtor_ae_f32)(src);
  return *this;
}
inline ae_f32::ae_f32_(const ae_f32x2 &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_f32x2_rtor_ae_f32)(src);
}
inline ae_f32& ae_f32::operator= (const ae_f32x2 &src_in) {
  ae_f32x2 src = (ae_f32x2) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_ae_f32x2_rtor_ae_f32)(src);
  return *this;
}
inline ae_f32::ae_f32_(const ae_int24x2 &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_int24x2_rtor_ae_f32)(src);
}
inline ae_f32& ae_f32::operator= (const ae_int24x2 &src_in) {
  ae_int24x2 src = (ae_int24x2) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_ae_int24x2_rtor_ae_f32)(src);
  return *this;
}
inline ae_f32::ae_f32_(const ae_int24 &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_int24_rtor_ae_f32)(src);
}
inline ae_f32& ae_f32::operator= (const ae_int24 &src_in) {
  ae_int24 src = (ae_int24) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_ae_int24_rtor_ae_f32)(src);
  return *this;
}
inline ae_f32::ae_f32_(const ae_f24 &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_f24_rtor_ae_f32)(src);
}
inline ae_f32& ae_f32::operator= (const ae_f24 &src_in) {
  ae_f24 src = (ae_f24) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_ae_f24_rtor_ae_f32)(src);
  return *this;
}
#ifndef _MSC_VER
template<>
#endif
inline ae_f32::operator int () const {
  return CSTUB_(_TIE_xt_hifi2_ae_f32_rtor_int32) (*this);
}
inline ae_f32::operator ae_f16 () const {
  return CSTUB_(_TIE_xt_hifi2_ae_f32_rtor_ae_f16) (*this);
}
inline ae_f32::operator ae_int32x2 () const {
  return CSTUB_(_TIE_xt_hifi2_ae_f32_rtor_ae_int32x2) (*this);
}
inline ae_f32::operator ae_int32 () const {
  return CSTUB_(_TIE_xt_hifi2_ae_f32_rtor_ae_int32) (*this);
}
inline ae_f32::operator ae_f32x2 () const {
  return CSTUB_(_TIE_xt_hifi2_ae_f32_rtor_ae_f32x2) (*this);
}
inline ae_f32::operator ae_f32x4 () const {
  return CSTUB_(_TIE_xt_hifi2_ae_f32_rtor_ae_f32x4) (*this);
}
template <typename T_>
inline ae_f32::operator T_() const {
    return T_((int)(*this));
}


}

namespace ae_int24x2_space {
inline ae_int24x2& ae_int24x2::operator= (const ae_int24x2 &src) {
  if (this != &src) {
    CSTUB_(_TIE_xt_hifi2_ae_int24x2_storei)(src, this, 0);
  }
  return *this;
}
inline ae_int24x2::ae_int24x2_(const short &src) {
  *this = CSTUB_(_TIE_xt_hifi2_int16_rtor_ae_int24x2)(src);
}
inline ae_int24x2& ae_int24x2::operator= (const short &src_in) {
  short src = (short) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_int16_rtor_ae_int24x2)(src);
  return *this;
}
inline ae_int24x2::ae_int24x2_(const unsigned int &src) {
  *this = CSTUB_(_TIE_xt_hifi2_uint32_rtor_ae_int24x2)(src);
}
inline ae_int24x2& ae_int24x2::operator= (const unsigned int &src_in) {
  unsigned int src = (unsigned int) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_uint32_rtor_ae_int24x2)(src);
  return *this;
}
inline ae_int24x2::ae_int24x2_(const int &src) {
  *this = CSTUB_(_TIE_xt_hifi2_int32_rtor_ae_int24x2)(src);
}
inline ae_int24x2& ae_int24x2::operator= (const int &src_in) {
  int src = (int) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_int32_rtor_ae_int24x2)(src);
  return *this;
}
inline ae_int24x2::ae_int24x2_(const ae_p24x2s &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_p24x2s_rtor_ae_int24x2)(src);
}
inline ae_int24x2& ae_int24x2::operator= (const ae_p24x2s &src_in) {
  ae_p24x2s src = (ae_p24x2s) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_ae_p24x2s_rtor_ae_int24x2)(src);
  return *this;
}
inline ae_int24x2::ae_int24x2_(const ae_p24x2f &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_p24x2f_rtor_ae_int24x2)(src);
}
inline ae_int24x2& ae_int24x2::operator= (const ae_p24x2f &src_in) {
  ae_p24x2f src = (ae_p24x2f) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_ae_p24x2f_rtor_ae_int24x2)(src);
  return *this;
}
inline ae_int24x2::ae_int24x2_(const ae_p16x2s &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_p16x2s_rtor_ae_int24x2)(src);
}
inline ae_int24x2& ae_int24x2::operator= (const ae_p16x2s &src_in) {
  ae_p16x2s src = (ae_p16x2s) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_ae_p16x2s_rtor_ae_int24x2)(src);
  return *this;
}
inline ae_int24x2::ae_int24x2_(const ae_p24s &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_p24s_rtor_ae_int24x2)(src);
}
inline ae_int24x2& ae_int24x2::operator= (const ae_p24s &src_in) {
  ae_p24s src = (ae_p24s) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_ae_p24s_rtor_ae_int24x2)(src);
  return *this;
}
inline ae_int24x2::ae_int24x2_(const ae_p24f &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_p24f_rtor_ae_int24x2)(src);
}
inline ae_int24x2& ae_int24x2::operator= (const ae_p24f &src_in) {
  ae_p24f src = (ae_p24f) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_ae_p24f_rtor_ae_int24x2)(src);
  return *this;
}
inline ae_int24x2::ae_int24x2_(const ae_p16s &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_p16s_rtor_ae_int24x2)(src);
}
inline ae_int24x2& ae_int24x2::operator= (const ae_p16s &src_in) {
  ae_p16s src = (ae_p16s) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_ae_p16s_rtor_ae_int24x2)(src);
  return *this;
}
inline ae_int24x2::ae_int24x2_(const ae_int24 &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_int24_rtor_ae_int24x2)(src);
}
inline ae_int24x2& ae_int24x2::operator= (const ae_int24 &src_in) {
  ae_int24 src = (ae_int24) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_ae_int24_rtor_ae_int24x2)(src);
  return *this;
}
inline ae_int24x2::ae_int24x2_(const ae_f24x2 &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_f24x2_rtor_ae_int24x2)(src);
}
inline ae_int24x2& ae_int24x2::operator= (const ae_f24x2 &src_in) {
  ae_f24x2 src = (ae_f24x2) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_ae_f24x2_rtor_ae_int24x2)(src);
  return *this;
}
inline ae_int24x2::ae_int24x2_(const ae_f24 &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_f24_rtor_ae_int24x2)(src);
}
inline ae_int24x2& ae_int24x2::operator= (const ae_f24 &src_in) {
  ae_f24 src = (ae_f24) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_ae_f24_rtor_ae_int24x2)(src);
  return *this;
}
inline ae_int24x2::operator ae_p24x2s () const {
  return CSTUB_(_TIE_xt_hifi2_ae_int24x2_rtor_ae_p24x2s) (*this);
}
inline ae_int24x2::operator ae_p24x2f () const {
  return CSTUB_(_TIE_xt_hifi2_ae_int24x2_rtor_ae_p24x2f) (*this);
}
inline ae_int24x2::operator ae_p16x2s () const {
  return CSTUB_(_TIE_xt_hifi2_ae_int24x2_rtor_ae_p16x2s) (*this);
}
inline ae_int24x2::operator ae_p24s () const {
  return CSTUB_(_TIE_xt_hifi2_ae_int24x2_rtor_ae_p24s) (*this);
}
inline ae_int24x2::operator ae_p24f () const {
  return CSTUB_(_TIE_xt_hifi2_ae_int24x2_rtor_ae_p24f) (*this);
}
inline ae_int24x2::operator ae_p16s () const {
  return CSTUB_(_TIE_xt_hifi2_ae_int24x2_rtor_ae_p16s) (*this);
}
inline ae_int24x2::operator ae_int32x2 () const {
  return CSTUB_(_TIE_xt_hifi2_ae_int24x2_rtor_ae_int32x2) (*this);
}
inline ae_int24x2::operator ae_f32x2 () const {
  return CSTUB_(_TIE_xt_hifi2_ae_int24x2_rtor_ae_f32x2) (*this);
}
inline ae_int24x2::operator ae_f32 () const {
  return CSTUB_(_TIE_xt_hifi2_ae_int24x2_rtor_ae_f32) (*this);
}
inline ae_int24x2::operator ae_int24 () const {
  return CSTUB_(_TIE_xt_hifi2_ae_int24x2_rtor_ae_int24) (*this);
}
inline ae_int24x2::operator ae_f24x2 () const {
  return CSTUB_(_TIE_xt_hifi2_ae_int24x2_rtor_ae_f24x2) (*this);
}
inline ae_int24x2::operator ae_f24 () const {
  return CSTUB_(_TIE_xt_hifi2_ae_int24x2_rtor_ae_f24) (*this);
}

}

namespace ae_int24_space {
inline ae_int24& ae_int24::operator= (const ae_int24 &src) {
  if (this != &src) {
    CSTUB_(_TIE_xt_hifi2_ae_int24_storei)(src, this, 0);
  }
  return *this;
}
inline ae_int24::ae_int24_(const short &src) {
  *this = CSTUB_(_TIE_xt_hifi2_int16_rtor_ae_int24)(src);
}
inline ae_int24& ae_int24::operator= (const short &src_in) {
  short src = (short) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_int16_rtor_ae_int24)(src);
  return *this;
}
inline ae_int24::ae_int24_(const int &src) {
  *this = CSTUB_(_TIE_xt_hifi2_int32_rtor_ae_int24)(src);
}
inline ae_int24& ae_int24::operator= (const int &src_in) {
  int src = (int) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_int32_rtor_ae_int24)(src);
  return *this;
}
inline ae_int24::ae_int24_(const ae_int16 &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_int16_rtor_ae_int24)(src);
}
inline ae_int24& ae_int24::operator= (const ae_int16 &src_in) {
  ae_int16 src = (ae_int16) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_ae_int16_rtor_ae_int24)(src);
  return *this;
}
inline ae_int24::ae_int24_(const ae_int24x2 &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_int24x2_rtor_ae_int24)(src);
}
inline ae_int24& ae_int24::operator= (const ae_int24x2 &src_in) {
  ae_int24x2 src = (ae_int24x2) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_ae_int24x2_rtor_ae_int24)(src);
  return *this;
}
inline ae_int24::ae_int24_(const ae_f24x2 &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_f24x2_rtor_ae_int24)(src);
}
inline ae_int24& ae_int24::operator= (const ae_f24x2 &src_in) {
  ae_f24x2 src = (ae_f24x2) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_ae_f24x2_rtor_ae_int24)(src);
  return *this;
}
inline ae_int24::ae_int24_(const ae_f24 &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_f24_rtor_ae_int24)(src);
}
inline ae_int24& ae_int24::operator= (const ae_f24 &src_in) {
  ae_f24 src = (ae_f24) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_ae_f24_rtor_ae_int24)(src);
  return *this;
}
#ifndef _MSC_VER
template<>
#endif
inline ae_int24::operator int () const {
  return CSTUB_(_TIE_xt_hifi2_ae_int24_rtor_int32) (*this);
}
inline ae_int24::operator ae_int16 () const {
  return CSTUB_(_TIE_xt_hifi2_ae_int24_rtor_ae_int16) (*this);
}
inline ae_int24::operator ae_int32x2 () const {
  return CSTUB_(_TIE_xt_hifi2_ae_int24_rtor_ae_int32x2) (*this);
}
inline ae_int24::operator ae_int32 () const {
  return CSTUB_(_TIE_xt_hifi2_ae_int24_rtor_ae_int32) (*this);
}
inline ae_int24::operator ae_f32x2 () const {
  return CSTUB_(_TIE_xt_hifi2_ae_int24_rtor_ae_f32x2) (*this);
}
inline ae_int24::operator ae_f32 () const {
  return CSTUB_(_TIE_xt_hifi2_ae_int24_rtor_ae_f32) (*this);
}
inline ae_int24::operator ae_int24x2 () const {
  return CSTUB_(_TIE_xt_hifi2_ae_int24_rtor_ae_int24x2) (*this);
}
inline ae_int24::operator ae_f24x2 () const {
  return CSTUB_(_TIE_xt_hifi2_ae_int24_rtor_ae_f24x2) (*this);
}
inline ae_int24::operator ae_f24 () const {
  return CSTUB_(_TIE_xt_hifi2_ae_int24_rtor_ae_f24) (*this);
}
template <typename T_>
inline ae_int24::operator T_() const {
    return T_((int)(*this));
}


}

namespace ae_f24x2_space {
inline ae_f24x2& ae_f24x2::operator= (const ae_f24x2 &src) {
  if (this != &src) {
    CSTUB_(_TIE_xt_hifi2_ae_f24x2_storei)(src, this, 0);
  }
  return *this;
}
inline ae_f24x2::ae_f24x2_(const short &src) {
  *this = CSTUB_(_TIE_xt_hifi2_int16_rtor_ae_f24x2)(src);
}
inline ae_f24x2& ae_f24x2::operator= (const short &src_in) {
  short src = (short) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_int16_rtor_ae_f24x2)(src);
  return *this;
}
inline ae_f24x2::ae_f24x2_(const unsigned int &src) {
  *this = CSTUB_(_TIE_xt_hifi2_uint32_rtor_ae_f24x2)(src);
}
inline ae_f24x2& ae_f24x2::operator= (const unsigned int &src_in) {
  unsigned int src = (unsigned int) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_uint32_rtor_ae_f24x2)(src);
  return *this;
}
inline ae_f24x2::ae_f24x2_(const int &src) {
  *this = CSTUB_(_TIE_xt_hifi2_int32_rtor_ae_f24x2)(src);
}
inline ae_f24x2& ae_f24x2::operator= (const int &src_in) {
  int src = (int) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_int32_rtor_ae_f24x2)(src);
  return *this;
}
inline ae_f24x2::ae_f24x2_(const ae_p24x2s &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_p24x2s_rtor_ae_f24x2)(src);
}
inline ae_f24x2& ae_f24x2::operator= (const ae_p24x2s &src_in) {
  ae_p24x2s src = (ae_p24x2s) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_ae_p24x2s_rtor_ae_f24x2)(src);
  return *this;
}
inline ae_f24x2::ae_f24x2_(const ae_p24x2f &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_p24x2f_rtor_ae_f24x2)(src);
}
inline ae_f24x2& ae_f24x2::operator= (const ae_p24x2f &src_in) {
  ae_p24x2f src = (ae_p24x2f) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_ae_p24x2f_rtor_ae_f24x2)(src);
  return *this;
}
inline ae_f24x2::ae_f24x2_(const ae_p16x2s &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_p16x2s_rtor_ae_f24x2)(src);
}
inline ae_f24x2& ae_f24x2::operator= (const ae_p16x2s &src_in) {
  ae_p16x2s src = (ae_p16x2s) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_ae_p16x2s_rtor_ae_f24x2)(src);
  return *this;
}
inline ae_f24x2::ae_f24x2_(const ae_p24s &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_p24s_rtor_ae_f24x2)(src);
}
inline ae_f24x2& ae_f24x2::operator= (const ae_p24s &src_in) {
  ae_p24s src = (ae_p24s) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_ae_p24s_rtor_ae_f24x2)(src);
  return *this;
}
inline ae_f24x2::ae_f24x2_(const ae_p24f &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_p24f_rtor_ae_f24x2)(src);
}
inline ae_f24x2& ae_f24x2::operator= (const ae_p24f &src_in) {
  ae_p24f src = (ae_p24f) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_ae_p24f_rtor_ae_f24x2)(src);
  return *this;
}
inline ae_f24x2::ae_f24x2_(const ae_p16s &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_p16s_rtor_ae_f24x2)(src);
}
inline ae_f24x2& ae_f24x2::operator= (const ae_p16s &src_in) {
  ae_p16s src = (ae_p16s) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_ae_p16s_rtor_ae_f24x2)(src);
  return *this;
}
inline ae_f24x2::ae_f24x2_(const ae_int24x2 &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_int24x2_rtor_ae_f24x2)(src);
}
inline ae_f24x2& ae_f24x2::operator= (const ae_int24x2 &src_in) {
  ae_int24x2 src = (ae_int24x2) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_ae_int24x2_rtor_ae_f24x2)(src);
  return *this;
}
inline ae_f24x2::ae_f24x2_(const ae_int24 &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_int24_rtor_ae_f24x2)(src);
}
inline ae_f24x2& ae_f24x2::operator= (const ae_int24 &src_in) {
  ae_int24 src = (ae_int24) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_ae_int24_rtor_ae_f24x2)(src);
  return *this;
}
inline ae_f24x2::ae_f24x2_(const ae_f24 &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_f24_rtor_ae_f24x2)(src);
}
inline ae_f24x2& ae_f24x2::operator= (const ae_f24 &src_in) {
  ae_f24 src = (ae_f24) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_ae_f24_rtor_ae_f24x2)(src);
  return *this;
}
inline ae_f24x2::operator ae_p24x2s () const {
  return CSTUB_(_TIE_xt_hifi2_ae_f24x2_rtor_ae_p24x2s) (*this);
}
inline ae_f24x2::operator ae_p24x2f () const {
  return CSTUB_(_TIE_xt_hifi2_ae_f24x2_rtor_ae_p24x2f) (*this);
}
inline ae_f24x2::operator ae_p16x2s () const {
  return CSTUB_(_TIE_xt_hifi2_ae_f24x2_rtor_ae_p16x2s) (*this);
}
inline ae_f24x2::operator ae_p24s () const {
  return CSTUB_(_TIE_xt_hifi2_ae_f24x2_rtor_ae_p24s) (*this);
}
inline ae_f24x2::operator ae_p24f () const {
  return CSTUB_(_TIE_xt_hifi2_ae_f24x2_rtor_ae_p24f) (*this);
}
inline ae_f24x2::operator ae_p16s () const {
  return CSTUB_(_TIE_xt_hifi2_ae_f24x2_rtor_ae_p16s) (*this);
}
inline ae_f24x2::operator ae_int32x2 () const {
  return CSTUB_(_TIE_xt_hifi2_ae_f24x2_rtor_ae_int32x2) (*this);
}
inline ae_f24x2::operator ae_int32 () const {
  return CSTUB_(_TIE_xt_hifi2_ae_f24x2_rtor_ae_int32) (*this);
}
inline ae_f24x2::operator ae_f32x2 () const {
  return CSTUB_(_TIE_xt_hifi2_ae_f24x2_rtor_ae_f32x2) (*this);
}
inline ae_f24x2::operator ae_int24x2 () const {
  return CSTUB_(_TIE_xt_hifi2_ae_f24x2_rtor_ae_int24x2) (*this);
}
inline ae_f24x2::operator ae_int24 () const {
  return CSTUB_(_TIE_xt_hifi2_ae_f24x2_rtor_ae_int24) (*this);
}
inline ae_f24x2::operator ae_f24 () const {
  return CSTUB_(_TIE_xt_hifi2_ae_f24x2_rtor_ae_f24) (*this);
}

}

namespace ae_f24_space {
inline ae_f24& ae_f24::operator= (const ae_f24 &src) {
  if (this != &src) {
    CSTUB_(_TIE_xt_hifi2_ae_f24_storei)(src, this, 0);
  }
  return *this;
}
inline ae_f24::ae_f24_(const short &src) {
  *this = CSTUB_(_TIE_xt_hifi2_int16_rtor_ae_f24)(src);
}
inline ae_f24& ae_f24::operator= (const short &src_in) {
  short src = (short) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_int16_rtor_ae_f24)(src);
  return *this;
}
inline ae_f24::ae_f24_(const int &src) {
  *this = CSTUB_(_TIE_xt_hifi2_int32_rtor_ae_f24)(src);
}
inline ae_f24& ae_f24::operator= (const int &src_in) {
  int src = (int) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_int32_rtor_ae_f24)(src);
  return *this;
}
inline ae_f24::ae_f24_(const ae_f16 &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_f16_rtor_ae_f24)(src);
}
inline ae_f24& ae_f24::operator= (const ae_f16 &src_in) {
  ae_f16 src = (ae_f16) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_ae_f16_rtor_ae_f24)(src);
  return *this;
}
inline ae_f24::ae_f24_(const ae_int24x2 &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_int24x2_rtor_ae_f24)(src);
}
inline ae_f24& ae_f24::operator= (const ae_int24x2 &src_in) {
  ae_int24x2 src = (ae_int24x2) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_ae_int24x2_rtor_ae_f24)(src);
  return *this;
}
inline ae_f24::ae_f24_(const ae_int24 &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_int24_rtor_ae_f24)(src);
}
inline ae_f24& ae_f24::operator= (const ae_int24 &src_in) {
  ae_int24 src = (ae_int24) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_ae_int24_rtor_ae_f24)(src);
  return *this;
}
inline ae_f24::ae_f24_(const ae_f24x2 &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_f24x2_rtor_ae_f24)(src);
}
inline ae_f24& ae_f24::operator= (const ae_f24x2 &src_in) {
  ae_f24x2 src = (ae_f24x2) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_ae_f24x2_rtor_ae_f24)(src);
  return *this;
}
#ifndef _MSC_VER
template<>
#endif
inline ae_f24::operator int () const {
  return CSTUB_(_TIE_xt_hifi2_ae_f24_rtor_int32) (*this);
}
inline ae_f24::operator ae_f16 () const {
  return CSTUB_(_TIE_xt_hifi2_ae_f24_rtor_ae_f16) (*this);
}
inline ae_f24::operator ae_int32x2 () const {
  return CSTUB_(_TIE_xt_hifi2_ae_f24_rtor_ae_int32x2) (*this);
}
inline ae_f24::operator ae_int32 () const {
  return CSTUB_(_TIE_xt_hifi2_ae_f24_rtor_ae_int32) (*this);
}
inline ae_f24::operator ae_f32x2 () const {
  return CSTUB_(_TIE_xt_hifi2_ae_f24_rtor_ae_f32x2) (*this);
}
inline ae_f24::operator ae_f32 () const {
  return CSTUB_(_TIE_xt_hifi2_ae_f24_rtor_ae_f32) (*this);
}
inline ae_f24::operator ae_int24x2 () const {
  return CSTUB_(_TIE_xt_hifi2_ae_f24_rtor_ae_int24x2) (*this);
}
inline ae_f24::operator ae_int24 () const {
  return CSTUB_(_TIE_xt_hifi2_ae_f24_rtor_ae_int24) (*this);
}
inline ae_f24::operator ae_f24x2 () const {
  return CSTUB_(_TIE_xt_hifi2_ae_f24_rtor_ae_f24x2) (*this);
}
template <typename T_>
inline ae_f24::operator T_() const {
    return T_((int)(*this));
}


}

namespace ae_int64_space {
inline ae_int64& ae_int64::operator= (const ae_int64 &src) {
  if (this != &src) {
    CSTUB_(_TIE_xt_hifi2_ae_int64_storei)(src, this, 0);
  }
  return *this;
}
inline ae_int64::ae_int64_(const short &src) {
  *this = CSTUB_(_TIE_xt_hifi2_int16_rtor_ae_int64)(src);
}
inline ae_int64& ae_int64::operator= (const short &src_in) {
  short src = (short) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_int16_rtor_ae_int64)(src);
  return *this;
}
inline ae_int64::ae_int64_(const int &src) {
  *this = CSTUB_(_TIE_xt_hifi2_int32_rtor_ae_int64)(src);
}
inline ae_int64& ae_int64::operator= (const int &src_in) {
  int src = (int) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_int32_rtor_ae_int64)(src);
  return *this;
}
inline ae_int64::ae_int64_(const unsigned long long &src) {
  *this = CSTUB_(_TIE_xt_hifi2_uint64_mtor_ae_int64)(&src, 0);
}
inline ae_int64& ae_int64::operator= (const unsigned long long &src) {
  *this = CSTUB_(_TIE_xt_hifi2_uint64_mtor_ae_int64)(&src, 0);
  return *this;
}
inline ae_int64::ae_int64_(const long long &src) {
  *this = CSTUB_(_TIE_xt_hifi2_int64_mtor_ae_int64)(&src, 0);
}
inline ae_int64& ae_int64::operator= (const long long &src) {
  *this = CSTUB_(_TIE_xt_hifi2_int64_mtor_ae_int64)(&src, 0);
  return *this;
}
inline ae_int64::ae_int64_(const ae_int16 &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_int16_rtor_ae_int64)(src);
}
inline ae_int64& ae_int64::operator= (const ae_int16 &src_in) {
  ae_int16 src = (ae_int16) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_ae_int16_rtor_ae_int64)(src);
  return *this;
}
inline ae_int64::ae_int64_(const ae_int32 &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_int32_rtor_ae_int64)(src);
}
inline ae_int64& ae_int64::operator= (const ae_int32 &src_in) {
  ae_int32 src = (ae_int32) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_ae_int32_rtor_ae_int64)(src);
  return *this;
}
inline ae_int64::ae_int64_(const ae_f64 &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_f64_rtor_ae_int64)(src);
}
inline ae_int64& ae_int64::operator= (const ae_f64 &src_in) {
  ae_f64 src = (ae_f64) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_ae_f64_rtor_ae_int64)(src);
  return *this;
}
inline ae_int64::ae_int64_(const ae_q56s &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_q56s_rtor_ae_int64)(src);
}
inline ae_int64& ae_int64::operator= (const ae_q56s &src_in) {
  ae_q56s src = (ae_q56s) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_ae_q56s_rtor_ae_int64)(src);
  return *this;
}
#ifndef _MSC_VER
template<>
#endif
inline ae_int64::operator unsigned long long () const {
  CSTUB_MSC_ALIGN(8) unsigned long long res CSTUB_GCC_ALIGN(8);
  CSTUB_(_TIE_xt_hifi2_ae_int64_rtom_uint64) (*this, &res, 0);
  return res;
}
#ifndef _MSC_VER
template<>
#endif
inline ae_int64::operator long long () const {
  CSTUB_MSC_ALIGN(8) long long res CSTUB_GCC_ALIGN(8);
  CSTUB_(_TIE_xt_hifi2_ae_int64_rtom_int64) (*this, &res, 0);
  return res;
}
inline ae_int64::operator ae_f64 () const {
  return CSTUB_(_TIE_xt_hifi2_ae_int64_rtor_ae_f64) (*this);
}
inline ae_int64::operator ae_q56s () const {
  return CSTUB_(_TIE_xt_hifi2_ae_int64_rtor_ae_q56s) (*this);
}

}

namespace ae_f64_space {
inline ae_f64& ae_f64::operator= (const ae_f64 &src) {
  if (this != &src) {
    CSTUB_(_TIE_xt_hifi2_ae_f64_storei)(src, this, 0);
  }
  return *this;
}
inline ae_f64::ae_f64_(const short &src) {
  *this = CSTUB_(_TIE_xt_hifi2_int16_rtor_ae_f64)(src);
}
inline ae_f64& ae_f64::operator= (const short &src_in) {
  short src = (short) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_int16_rtor_ae_f64)(src);
  return *this;
}
inline ae_f64::ae_f64_(const int &src) {
  *this = CSTUB_(_TIE_xt_hifi2_int32_rtor_ae_f64)(src);
}
inline ae_f64& ae_f64::operator= (const int &src_in) {
  int src = (int) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_int32_rtor_ae_f64)(src);
  return *this;
}
inline ae_f64::ae_f64_(const long long &src) {
  *this = CSTUB_(_TIE_xt_hifi2_int64_rtor_ae_f64)(src);
}
inline ae_f64& ae_f64::operator= (const long long &src_in) {
  long long src = (long long) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_int64_rtor_ae_f64)(src);
  return *this;
}
inline ae_f64::ae_f64_(const ae_int64 &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_int64_rtor_ae_f64)(src);
}
inline ae_f64& ae_f64::operator= (const ae_int64 &src_in) {
  ae_int64 src = (ae_int64) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_ae_int64_rtor_ae_f64)(src);
  return *this;
}
inline ae_f64::ae_f64_(const ae_q56s &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_q56s_rtor_ae_f64)(src);
}
inline ae_f64& ae_f64::operator= (const ae_q56s &src_in) {
  ae_q56s src = (ae_q56s) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_ae_q56s_rtor_ae_f64)(src);
  return *this;
}
#ifndef _MSC_VER
template<>
#endif
inline ae_f64::operator long long () const {
  return CSTUB_(_TIE_xt_hifi2_ae_f64_rtor_int64) (*this);
}
inline ae_f64::operator ae_int64 () const {
  return CSTUB_(_TIE_xt_hifi2_ae_f64_rtor_ae_int64) (*this);
}
inline ae_f64::operator ae_q56s () const {
  return CSTUB_(_TIE_xt_hifi2_ae_f64_rtor_ae_q56s) (*this);
}
template <typename T_>
inline ae_f64::operator T_() const {
    return T_((long long)(*this));
}


}

namespace ae_q56s_space {
inline ae_q56s& ae_q56s::operator= (const ae_q56s &src) {
  if (this != &src) {
    CSTUB_(_TIE_xt_hifi2_ae_q56s_storei)(src, this, 0);
  }
  return *this;
}
inline ae_q56s::ae_q56s_(const ae_int64 &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_int64_rtor_ae_q56s)(src);
}
inline ae_q56s& ae_q56s::operator= (const ae_int64 &src_in) {
  ae_int64 src = (ae_int64) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_ae_int64_rtor_ae_q56s)(src);
  return *this;
}
inline ae_q56s::ae_q56s_(const ae_f64 &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_f64_rtor_ae_q56s)(src);
}
inline ae_q56s& ae_q56s::operator= (const ae_f64 &src_in) {
  ae_f64 src = (ae_f64) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_ae_f64_rtor_ae_q56s)(src);
  return *this;
}
inline ae_q56s::ae_q56s_(const ae_q32s &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_q32s_mtor_ae_q56s)(&src, 0);
}
inline ae_q56s& ae_q56s::operator= (const ae_q32s &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_q32s_mtor_ae_q56s)(&src, 0);
  return *this;
}
inline ae_q56s::operator ae_int64 () const {
  return CSTUB_(_TIE_xt_hifi2_ae_q56s_rtor_ae_int64) (*this);
}
inline ae_q56s::operator ae_f64 () const {
  return CSTUB_(_TIE_xt_hifi2_ae_q56s_rtor_ae_f64) (*this);
}
inline ae_q56s::operator ae_q32s () const {
  ae_q32s res;
  CSTUB_(_TIE_xt_hifi2_ae_q56s_rtom_ae_q32s) (*this, &res, 0);
  return res;
}

}

namespace ae_q32s_space {
inline ae_q32s& ae_q32s::operator= (const ae_q32s &src) {
  if (this != &src) {
    CSTUB_(_TIE_xt_hifi2_ae_q32s_storei)(src, this, 0);
  }
  return *this;
}
inline ae_q32s::ae_q32s_(const ae_q56s &src) {
  CSTUB_(_TIE_xt_hifi2_ae_q56s_rtom_ae_q32s)(src, this, 0);
}
inline ae_q32s& ae_q32s::operator= (const ae_q56s &src) {
  CSTUB_(_TIE_xt_hifi2_ae_q56s_rtom_ae_q32s)(src, this, 0);
  return *this;
}
inline ae_q32s::operator ae_q56s () const {
  return CSTUB_(_TIE_xt_hifi2_ae_q32s_mtor_ae_q56s) (this, 0);
}

}

namespace ae_valign_space {
inline ae_valign& ae_valign::operator= (const ae_valign &src) {
  if (this != &src) {
    CSTUB_(_TIE_xt_hifi2_ae_valign_storei)(src, this, 0);
  }
  return *this;
}

}

namespace ae_int32x4_space {
inline ae_int32x4& ae_int32x4::operator= (const ae_int32x4 &src) {
  if (this != &src) {
    CSTUB_(_TIE_xt_hifi2_ae_int32x4_storei)(src, this, 0);
  }
  return *this;
}
inline ae_int32x4::ae_int32x4_(const unsigned int &src) {
  *this = CSTUB_(_TIE_xt_hifi2_uint32_rtor_ae_int32x4)(src);
}
inline ae_int32x4& ae_int32x4::operator= (const unsigned int &src_in) {
  unsigned int src = (unsigned int) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_uint32_rtor_ae_int32x4)(src);
  return *this;
}
inline ae_int32x4::ae_int32x4_(const int &src) {
  *this = CSTUB_(_TIE_xt_hifi2_int32_mtor_ae_int32x4)(&src, 0);
}
inline ae_int32x4& ae_int32x4::operator= (const int &src) {
  *this = CSTUB_(_TIE_xt_hifi2_int32_mtor_ae_int32x4)(&src, 0);
  return *this;
}
inline ae_int32x4::ae_int32x4_(const ae_int16x4 &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_int16x4_rtor_ae_int32x4)(src);
}
inline ae_int32x4& ae_int32x4::operator= (const ae_int16x4 &src_in) {
  ae_int16x4 src = (ae_int16x4) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_ae_int16x4_rtor_ae_int32x4)(src);
  return *this;
}
inline ae_int32x4::ae_int32x4_(const ae_int32 &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_int32_rtor_ae_int32x4)(src);
}
inline ae_int32x4& ae_int32x4::operator= (const ae_int32 &src_in) {
  ae_int32 src = (ae_int32) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_ae_int32_rtor_ae_int32x4)(src);
  return *this;
}
#ifndef _MSC_VER
template<>
#endif
inline ae_int32x4::operator unsigned int () const {
  return CSTUB_(_TIE_xt_hifi2_ae_int32x4_rtor_uint32) (*this);
}
#ifndef _MSC_VER
template<>
#endif
inline ae_int32x4::operator int () const {
  CSTUB_MSC_ALIGN(8) int res CSTUB_GCC_ALIGN(8);
  CSTUB_(_TIE_xt_hifi2_ae_int32x4_rtom_int32) (*this, &res, 0);
  return res;
}
inline ae_int32x4::operator ae_int16x4 () const {
  return CSTUB_(_TIE_xt_hifi2_ae_int32x4_rtor_ae_int16x4) (*this);
}

}

namespace ae_f32x4_space {
inline ae_f32x4& ae_f32x4::operator= (const ae_f32x4 &src) {
  if (this != &src) {
    CSTUB_(_TIE_xt_hifi2_ae_f32x4_storei)(src, this, 0);
  }
  return *this;
}
inline ae_f32x4::ae_f32x4_(const unsigned int &src) {
  *this = CSTUB_(_TIE_xt_hifi2_uint32_rtor_ae_f32x4)(src);
}
inline ae_f32x4& ae_f32x4::operator= (const unsigned int &src_in) {
  unsigned int src = (unsigned int) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_uint32_rtor_ae_f32x4)(src);
  return *this;
}
inline ae_f32x4::ae_f32x4_(const int &src) {
  *this = CSTUB_(_TIE_xt_hifi2_int32_mtor_ae_f32x4)(&src, 0);
}
inline ae_f32x4& ae_f32x4::operator= (const int &src) {
  *this = CSTUB_(_TIE_xt_hifi2_int32_mtor_ae_f32x4)(&src, 0);
  return *this;
}
inline ae_f32x4::ae_f32x4_(const ae_f32 &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_f32_rtor_ae_f32x4)(src);
}
inline ae_f32x4& ae_f32x4::operator= (const ae_f32 &src_in) {
  ae_f32 src = (ae_f32) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_ae_f32_rtor_ae_f32x4)(src);
  return *this;
}
#ifndef _MSC_VER
template<>
#endif
inline ae_f32x4::operator unsigned int () const {
  return CSTUB_(_TIE_xt_hifi2_ae_f32x4_rtor_uint32) (*this);
}
#ifndef _MSC_VER
template<>
#endif
inline ae_f32x4::operator int () const {
  CSTUB_MSC_ALIGN(8) int res CSTUB_GCC_ALIGN(8);
  CSTUB_(_TIE_xt_hifi2_ae_f32x4_rtom_int32) (*this, &res, 0);
  return res;
}

}

namespace ae_int32u_space {
inline ae_int32u& ae_int32u::operator= (const ae_int32u &src) {
  if (this != &src) {
    CSTUB_(_TIE_xt_hifi2_ae_int32u_storei)(src, this, 0);
  }
  return *this;
}
inline ae_int32u::ae_int32u_(const unsigned int &src) {
  *this = CSTUB_(_TIE_xt_hifi2_uint32_mtor_ae_int32u)(&src, 0);
}
inline ae_int32u& ae_int32u::operator= (const unsigned int &src) {
  *this = CSTUB_(_TIE_xt_hifi2_uint32_mtor_ae_int32u)(&src, 0);
  return *this;
}
inline ae_int32u::ae_int32u_(const ae_int16 &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_int16_rtor_ae_int32u)(src);
}
inline ae_int32u& ae_int32u::operator= (const ae_int16 &src_in) {
  ae_int16 src = (ae_int16) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_ae_int16_rtor_ae_int32u)(src);
  return *this;
}
inline ae_int32u::ae_int32u_(const ae_int32x2 &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_int32x2_rtor_ae_int32u)(src);
}
inline ae_int32u& ae_int32u::operator= (const ae_int32x2 &src_in) {
  ae_int32x2 src = (ae_int32x2) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_ae_int32x2_rtor_ae_int32u)(src);
  return *this;
}
inline ae_int32u::ae_int32u_(const ae_int32 &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_int32_rtor_ae_int32u)(src);
}
inline ae_int32u& ae_int32u::operator= (const ae_int32 &src_in) {
  ae_int32 src = (ae_int32) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_ae_int32_rtor_ae_int32u)(src);
  return *this;
}
inline ae_int32u::ae_int32u_(const ae_int16u &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_int16u_rtor_ae_int32u)(src);
}
inline ae_int32u& ae_int32u::operator= (const ae_int16u &src_in) {
  ae_int16u src = (ae_int16u) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_ae_int16u_rtor_ae_int32u)(src);
  return *this;
}
#ifndef _MSC_VER
template<>
#endif
inline ae_int32u::operator unsigned int () const {
  CSTUB_MSC_ALIGN(8) unsigned int res CSTUB_GCC_ALIGN(8);
  CSTUB_(_TIE_xt_hifi2_ae_int32u_rtom_uint32) (*this, &res, 0);
  return res;
}
inline ae_int32u::operator ae_int16 () const {
  return CSTUB_(_TIE_xt_hifi2_ae_int32u_rtor_ae_int16) (*this);
}
inline ae_int32u::operator ae_int32x2 () const {
  return CSTUB_(_TIE_xt_hifi2_ae_int32u_rtor_ae_int32x2) (*this);
}
inline ae_int32u::operator ae_int32 () const {
  return CSTUB_(_TIE_xt_hifi2_ae_int32u_rtor_ae_int32) (*this);
}
inline ae_int32u::operator ae_int16u () const {
  return CSTUB_(_TIE_xt_hifi2_ae_int32u_rtor_ae_int16u) (*this);
}
template <typename T_>
inline ae_int32u::operator T_() const {
    return T_((unsigned int)(*this));
}


}

namespace ae_int16u_space {
inline ae_int16u& ae_int16u::operator= (const ae_int16u &src) {
  if (this != &src) {
    CSTUB_(_TIE_xt_hifi2_ae_int16u_storei)(src, this, 0);
  }
  return *this;
}
inline ae_int16u::ae_int16u_(const unsigned short &src) {
  *this = CSTUB_(_TIE_xt_hifi2_uint16_mtor_ae_int16u)(&src, 0);
}
inline ae_int16u& ae_int16u::operator= (const unsigned short &src) {
  *this = CSTUB_(_TIE_xt_hifi2_uint16_mtor_ae_int16u)(&src, 0);
  return *this;
}
inline ae_int16u::ae_int16u_(const ae_int16 &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_int16_rtor_ae_int16u)(src);
}
inline ae_int16u& ae_int16u::operator= (const ae_int16 &src_in) {
  ae_int16 src = (ae_int16) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_ae_int16_rtor_ae_int16u)(src);
  return *this;
}
inline ae_int16u::ae_int16u_(const ae_int32 &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_int32_rtor_ae_int16u)(src);
}
inline ae_int16u& ae_int16u::operator= (const ae_int32 &src_in) {
  ae_int32 src = (ae_int32) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_ae_int32_rtor_ae_int16u)(src);
  return *this;
}
inline ae_int16u::ae_int16u_(const ae_int32u &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_int32u_rtor_ae_int16u)(src);
}
inline ae_int16u& ae_int16u::operator= (const ae_int32u &src_in) {
  ae_int32u src = (ae_int32u) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_ae_int32u_rtor_ae_int16u)(src);
  return *this;
}
#ifndef _MSC_VER
template<>
#endif
inline ae_int16u::operator unsigned short () const {
  CSTUB_MSC_ALIGN(8) unsigned short res CSTUB_GCC_ALIGN(8);
  CSTUB_(_TIE_xt_hifi2_ae_int16u_rtom_uint16) (*this, &res, 0);
  return res;
}
inline ae_int16u::operator ae_int16 () const {
  return CSTUB_(_TIE_xt_hifi2_ae_int16u_rtor_ae_int16) (*this);
}
inline ae_int16u::operator ae_int32 () const {
  return CSTUB_(_TIE_xt_hifi2_ae_int16u_rtor_ae_int32) (*this);
}
inline ae_int16u::operator ae_int32u () const {
  return CSTUB_(_TIE_xt_hifi2_ae_int16u_rtor_ae_int32u) (*this);
}
template <typename T_>
inline ae_int16u::operator T_() const {
    return T_((unsigned short)(*this));
}


}

namespace ae_int64x2_space {
inline ae_int64x2& ae_int64x2::operator= (const ae_int64x2 &src) {
  if (this != &src) {
    CSTUB_(_TIE_xt_hifi2_ae_int64x2_storei)(src, this, 0);
  }
  return *this;
}
inline ae_int64x2::ae_int64x2_(const ae_int32x2 &src) {
  *this = CSTUB_(_TIE_xt_hifi2_ae_int32x2_rtor_ae_int64x2)(src);
}
inline ae_int64x2& ae_int64x2::operator= (const ae_int32x2 &src_in) {
  ae_int32x2 src = (ae_int32x2) src_in;
  *this = CSTUB_(_TIE_xt_hifi2_ae_int32x2_rtor_ae_int64x2)(src);
  return *this;
}

}

namespace fr32_space {
inline fr32& fr32::operator= (const fr32 &src) {
  if (this != &src) {
    CSTUB_(_TIE_hmd1a_common_tie_fr32_storei)(src, this, 0);
  }
  return *this;
}
inline fr32::fr32_(const unsigned int &src) {
  *this = CSTUB_(_TIE_hmd1a_common_tie_uint32_rtor_fr32)(src);
}
inline fr32& fr32::operator= (const unsigned int &src_in) {
  unsigned int src = (unsigned int) src_in;
  *this = CSTUB_(_TIE_hmd1a_common_tie_uint32_rtor_fr32)(src);
  return *this;
}
inline fr32::fr32_(const int &src) {
  *this = CSTUB_(_TIE_hmd1a_common_tie_int32_rtor_fr32)(src);
}
inline fr32& fr32::operator= (const int &src_in) {
  int src = (int) src_in;
  *this = CSTUB_(_TIE_hmd1a_common_tie_int32_rtor_fr32)(src);
  return *this;
}
#if 0 //ndef _MSC_VER
template<>
#endif
inline fr32::fr32_::operator unsigned int () const {
  return CSTUB_(_TIE_hmd1a_common_tie_fr32_rtor_uint32) (*this);
}
#if 0 //ndef _MSC_VER
template<>
#endif
inline fr32::fr32_::operator int () const {
  return CSTUB_(_TIE_hmd1a_common_tie_fr32_rtor_int32) (*this);
}

}

namespace vr64_space {
inline vr64& vr64::operator= (const vr64 &src) {
  if (this != &src) {
    CSTUB_(_TIE_hmd1a_common_tie_vr64_storei)(src, this, 0);
  }
  return *this;
}

}

namespace cr64_space {
inline cr64& cr64::operator= (const cr64 &src) {
  if (this != &src) {
    CSTUB_(_TIE_hmd1a_common_tie_cr64_storei)(src, this, 0);
  }
  return *this;
}

}

namespace mir18_space {
inline mir18& mir18::operator= (const mir18 &src) {
  if (this != &src) {
    CSTUB_(_TIE_hmd1a_common_tie_mir18_storei)(src, this, 0);
  }
  return *this;
}

}

namespace ulsr32_space {
inline ulsr32& ulsr32::operator= (const ulsr32 &src) {
  if (this != &src) {
    CSTUB_(_TIE_hmd1a_common_tie_ulsr32_storei)(src, this, 0);
  }
  return *this;
}

}

namespace atbool_space {
inline atbool& atbool::operator= (const atbool &src) {
  if (this != &src) {
    CSTUB_(_TIE_hmd1a_common_tie_atbool_storei)(src, this, 0);
  }
  return *this;
}
inline atbool::atbool_(const unsigned int &src) {
  *this = CSTUB_(_TIE_hmd1a_common_tie_uint32_rtor_atbool)(src);
}
inline atbool& atbool::operator= (const unsigned int &src_in) {
  unsigned int src = (unsigned int) src_in;
  *this = CSTUB_(_TIE_hmd1a_common_tie_uint32_rtor_atbool)(src);
  return *this;
}
inline atbool::atbool_(const int &src) {
  *this = CSTUB_(_TIE_hmd1a_common_tie_int32_rtor_atbool)(src);
}
inline atbool& atbool::operator= (const int &src_in) {
  int src = (int) src_in;
  *this = CSTUB_(_TIE_hmd1a_common_tie_int32_rtor_atbool)(src);
  return *this;
}
#ifndef _MSC_VER
template<>
#endif
inline atbool::operator unsigned int () const {
  return CSTUB_(_TIE_hmd1a_common_tie_atbool_rtor_uint32) (*this);
}
#ifndef _MSC_VER
template<>
#endif
inline atbool::operator int () const {
  return CSTUB_(_TIE_hmd1a_common_tie_atbool_rtor_int32) (*this);
}

}


namespace ae_p24x2s_space {
inline ae_p24x2s operator+ (const ae_p24x2s& d0, const ae_p24x2s& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24X2S_ADDS_P24X2S) (d0, d1);
}
inline ae_p24x2s operator+= (ae_p24x2s& d, const ae_p24x2s& d1) {
  d = operator+(d, d1);
  return d;
}

inline ae_p24x2s operator- (const ae_p24x2s& d0, const ae_p24x2s& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24X2S_SUBS_P24X2S) (d0, d1);
}
inline ae_p24x2s operator-= (ae_p24x2s& d, const ae_p24x2s& d1) {
  d = operator-(d, d1);
  return d;
}

inline ae_p24x2s operator& (const ae_p24x2s& d0, const ae_p24x2s& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24X2S_AND_P24X2S) (d0, d1);
}
inline ae_p24x2s operator&= (ae_p24x2s& d, const ae_p24x2s& d1) {
  d = operator&(d, d1);
  return d;
}

inline ae_p24x2s operator^ (const ae_p24x2s& d0, const ae_p24x2s& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24X2S_XOR_P24X2S) (d0, d1);
}
inline ae_p24x2s operator^= (ae_p24x2s& d, const ae_p24x2s& d1) {
  d = operator^(d, d1);
  return d;
}

inline ae_p24x2s operator| (const ae_p24x2s& d0, const ae_p24x2s& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24X2S_OR_P24X2S) (d0, d1);
}
inline ae_p24x2s operator|= (ae_p24x2s& d, const ae_p24x2s& d1) {
  d = operator|(d, d1);
  return d;
}

inline ae_q56s operator* (const ae_p24x2s& d0, const ae_p24x2s& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24X2S_MULF_P24X2S) (d0, d1);
}

inline xtbool2 operator== (const ae_p24x2s& d0, const ae_p24x2s& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24X2S_EQ_P24X2S) (d0, d1);
}

inline xtbool2 operator< (const ae_p24x2s& d0, const ae_p24x2s& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24X2S_LT_P24X2S) (d0, d1);
}

inline xtbool2 operator<= (const ae_p24x2s& d0, const ae_p24x2s& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24X2S_LE_P24X2S) (d0, d1);
}

inline xtbool2 operator> (const ae_p24x2s& d0, const ae_p24x2s& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24X2S_GT_P24X2S) (d0, d1);
}

inline xtbool2 operator>= (const ae_p24x2s& d0, const ae_p24x2s& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24X2S_GE_P24X2S) (d0, d1);
}

inline ae_p24x2s operator+ (const ae_p24x2s& d0, const ae_p24x2f& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24X2S_ADDS_P24X2F) (d0, d1);
}
inline ae_p24x2s operator+= (ae_p24x2s& d, const ae_p24x2f& d1) {
  d = operator+(d, d1);
  return d;
}

inline ae_p24x2s operator- (const ae_p24x2s& d0, const ae_p24x2f& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24X2S_SUBS_P24X2F) (d0, d1);
}
inline ae_p24x2s operator-= (ae_p24x2s& d, const ae_p24x2f& d1) {
  d = operator-(d, d1);
  return d;
}

inline ae_p24x2s operator& (const ae_p24x2s& d0, const ae_p24x2f& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24X2S_AND_P24X2F) (d0, d1);
}
inline ae_p24x2s operator&= (ae_p24x2s& d, const ae_p24x2f& d1) {
  d = operator&(d, d1);
  return d;
}

inline ae_p24x2s operator^ (const ae_p24x2s& d0, const ae_p24x2f& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24X2S_XOR_P24X2F) (d0, d1);
}
inline ae_p24x2s operator^= (ae_p24x2s& d, const ae_p24x2f& d1) {
  d = operator^(d, d1);
  return d;
}

inline ae_p24x2s operator| (const ae_p24x2s& d0, const ae_p24x2f& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24X2S_OR_P24X2F) (d0, d1);
}
inline ae_p24x2s operator|= (ae_p24x2s& d, const ae_p24x2f& d1) {
  d = operator|(d, d1);
  return d;
}

inline ae_q56s operator* (const ae_p24x2s& d0, const ae_p24x2f& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24X2S_MULF_P24X2F) (d0, d1);
}

inline xtbool2 operator== (const ae_p24x2s& d0, const ae_p24x2f& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24X2S_EQ_P24X2F) (d0, d1);
}

inline xtbool2 operator< (const ae_p24x2s& d0, const ae_p24x2f& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24X2S_LT_P24X2F) (d0, d1);
}

inline xtbool2 operator<= (const ae_p24x2s& d0, const ae_p24x2f& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24X2S_LE_P24X2F) (d0, d1);
}

inline xtbool2 operator> (const ae_p24x2s& d0, const ae_p24x2f& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24X2S_GT_P24X2F) (d0, d1);
}

inline xtbool2 operator>= (const ae_p24x2s& d0, const ae_p24x2f& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24X2S_GE_P24X2F) (d0, d1);
}

inline ae_p24x2s operator+ (const ae_p24x2s& d0, const ae_p24s& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24X2S_ADDS_P24S) (d0, d1);
}
inline ae_p24x2s operator+= (ae_p24x2s& d, const ae_p24s& d1) {
  d = operator+(d, d1);
  return d;
}

inline ae_p24x2s operator- (const ae_p24x2s& d0, const ae_p24s& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24X2S_SUBS_P24S) (d0, d1);
}
inline ae_p24x2s operator-= (ae_p24x2s& d, const ae_p24s& d1) {
  d = operator-(d, d1);
  return d;
}

inline ae_p24x2s operator& (const ae_p24x2s& d0, const ae_p24s& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24X2S_AND_P24S) (d0, d1);
}
inline ae_p24x2s operator&= (ae_p24x2s& d, const ae_p24s& d1) {
  d = operator&(d, d1);
  return d;
}

inline ae_p24x2s operator^ (const ae_p24x2s& d0, const ae_p24s& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24X2S_XOR_P24S) (d0, d1);
}
inline ae_p24x2s operator^= (ae_p24x2s& d, const ae_p24s& d1) {
  d = operator^(d, d1);
  return d;
}

inline ae_p24x2s operator| (const ae_p24x2s& d0, const ae_p24s& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24X2S_OR_P24S) (d0, d1);
}
inline ae_p24x2s operator|= (ae_p24x2s& d, const ae_p24s& d1) {
  d = operator|(d, d1);
  return d;
}

inline ae_p24x2s operator+ (const ae_p24x2s& d0, const ae_p24f& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24X2S_ADDS_P24F) (d0, d1);
}
inline ae_p24x2s operator+= (ae_p24x2s& d, const ae_p24f& d1) {
  d = operator+(d, d1);
  return d;
}

inline ae_p24x2s operator- (const ae_p24x2s& d0, const ae_p24f& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24X2S_SUBS_P24F) (d0, d1);
}
inline ae_p24x2s operator-= (ae_p24x2s& d, const ae_p24f& d1) {
  d = operator-(d, d1);
  return d;
}

inline ae_p24x2s operator& (const ae_p24x2s& d0, const ae_p24f& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24X2S_AND_P24F) (d0, d1);
}
inline ae_p24x2s operator&= (ae_p24x2s& d, const ae_p24f& d1) {
  d = operator&(d, d1);
  return d;
}

inline ae_p24x2s operator^ (const ae_p24x2s& d0, const ae_p24f& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24X2S_XOR_P24F) (d0, d1);
}
inline ae_p24x2s operator^= (ae_p24x2s& d, const ae_p24f& d1) {
  d = operator^(d, d1);
  return d;
}

inline ae_p24x2s operator| (const ae_p24x2s& d0, const ae_p24f& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24X2S_OR_P24F) (d0, d1);
}
inline ae_p24x2s operator|= (ae_p24x2s& d, const ae_p24f& d1) {
  d = operator|(d, d1);
  return d;
}

inline ae_p24x2s operator- (const ae_p24x2s& d0) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24X2S_NEGS) (d0);
}

inline ae_p24x2s operator~ (const ae_p24x2s& d0) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24X2S_BNOT) (d0);
}

inline ae_p24x2s operator<< (const ae_p24x2s& d0, const int sa) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24X2S_SLAS) (d0, sa);
}
inline ae_p24x2s operator<<= (ae_p24x2s& d, const int sa) {
  d = operator<<(d, sa);
  return d;
}

inline ae_p24x2s operator>> (const ae_p24x2s& d0, const int sa) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24X2S_SRA) (d0, sa);
}
inline ae_p24x2s operator>>= (ae_p24x2s& d, const int sa) {
  d = operator>>(d, sa);
  return d;
}

}

namespace ae_p24x2f_space {
inline ae_p24x2s operator+ (const ae_p24x2f& d0, const ae_p24x2s& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24X2F_ADDS_P24X2S) (d0, d1);
}

inline ae_p24x2s operator- (const ae_p24x2f& d0, const ae_p24x2s& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24X2F_SUBS_P24X2S) (d0, d1);
}

inline ae_p24x2s operator& (const ae_p24x2f& d0, const ae_p24x2s& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24X2F_AND_P24X2S) (d0, d1);
}

inline ae_p24x2s operator^ (const ae_p24x2f& d0, const ae_p24x2s& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24X2F_XOR_P24X2S) (d0, d1);
}

inline ae_p24x2s operator| (const ae_p24x2f& d0, const ae_p24x2s& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24X2F_OR_P24X2S) (d0, d1);
}

inline ae_q56s operator* (const ae_p24x2f& d0, const ae_p24x2s& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24X2F_MULF_P24X2S) (d0, d1);
}

inline xtbool2 operator== (const ae_p24x2f& d0, const ae_p24x2s& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24X2F_EQ_P24X2S) (d0, d1);
}

inline xtbool2 operator< (const ae_p24x2f& d0, const ae_p24x2s& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24X2F_LT_P24X2S) (d0, d1);
}

inline xtbool2 operator<= (const ae_p24x2f& d0, const ae_p24x2s& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24X2F_LE_P24X2S) (d0, d1);
}

inline xtbool2 operator> (const ae_p24x2f& d0, const ae_p24x2s& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24X2F_GT_P24X2S) (d0, d1);
}

inline xtbool2 operator>= (const ae_p24x2f& d0, const ae_p24x2s& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24X2F_GE_P24X2S) (d0, d1);
}

inline ae_p24x2f operator+ (const ae_p24x2f& d0, const ae_p24x2f& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24X2F_ADDS_P24X2F) (d0, d1);
}
inline ae_p24x2f operator+= (ae_p24x2f& d, const ae_p24x2f& d1) {
  d = operator+(d, d1);
  return d;
}

inline ae_p24x2f operator- (const ae_p24x2f& d0, const ae_p24x2f& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24X2F_SUBS_P24X2F) (d0, d1);
}
inline ae_p24x2f operator-= (ae_p24x2f& d, const ae_p24x2f& d1) {
  d = operator-(d, d1);
  return d;
}

inline ae_p24x2f operator& (const ae_p24x2f& d0, const ae_p24x2f& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24X2F_AND_P24X2F) (d0, d1);
}
inline ae_p24x2f operator&= (ae_p24x2f& d, const ae_p24x2f& d1) {
  d = operator&(d, d1);
  return d;
}

inline ae_p24x2f operator^ (const ae_p24x2f& d0, const ae_p24x2f& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24X2F_XOR_P24X2F) (d0, d1);
}
inline ae_p24x2f operator^= (ae_p24x2f& d, const ae_p24x2f& d1) {
  d = operator^(d, d1);
  return d;
}

inline ae_p24x2f operator| (const ae_p24x2f& d0, const ae_p24x2f& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24X2F_OR_P24X2F) (d0, d1);
}
inline ae_p24x2f operator|= (ae_p24x2f& d, const ae_p24x2f& d1) {
  d = operator|(d, d1);
  return d;
}

inline ae_q56s operator* (const ae_p24x2f& d0, const ae_p24x2f& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24X2F_MULF_P24X2F) (d0, d1);
}

inline xtbool2 operator== (const ae_p24x2f& d0, const ae_p24x2f& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24X2F_EQ_P24X2F) (d0, d1);
}

inline xtbool2 operator< (const ae_p24x2f& d0, const ae_p24x2f& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24X2F_LT_P24X2F) (d0, d1);
}

inline xtbool2 operator<= (const ae_p24x2f& d0, const ae_p24x2f& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24X2F_LE_P24X2F) (d0, d1);
}

inline xtbool2 operator> (const ae_p24x2f& d0, const ae_p24x2f& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24X2F_GT_P24X2F) (d0, d1);
}

inline xtbool2 operator>= (const ae_p24x2f& d0, const ae_p24x2f& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24X2F_GE_P24X2F) (d0, d1);
}

inline ae_p24x2f operator+ (const ae_p24x2f& d0, const ae_p24s& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24X2F_ADDS_P24S) (d0, d1);
}
inline ae_p24x2f operator+= (ae_p24x2f& d, const ae_p24s& d1) {
  d = operator+(d, d1);
  return d;
}

inline ae_p24x2f operator- (const ae_p24x2f& d0, const ae_p24s& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24X2F_SUBS_P24S) (d0, d1);
}
inline ae_p24x2f operator-= (ae_p24x2f& d, const ae_p24s& d1) {
  d = operator-(d, d1);
  return d;
}

inline ae_p24x2f operator& (const ae_p24x2f& d0, const ae_p24s& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24X2F_AND_P24S) (d0, d1);
}
inline ae_p24x2f operator&= (ae_p24x2f& d, const ae_p24s& d1) {
  d = operator&(d, d1);
  return d;
}

inline ae_p24x2f operator^ (const ae_p24x2f& d0, const ae_p24s& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24X2F_XOR_P24S) (d0, d1);
}
inline ae_p24x2f operator^= (ae_p24x2f& d, const ae_p24s& d1) {
  d = operator^(d, d1);
  return d;
}

inline ae_p24x2f operator| (const ae_p24x2f& d0, const ae_p24s& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24X2F_OR_P24S) (d0, d1);
}
inline ae_p24x2f operator|= (ae_p24x2f& d, const ae_p24s& d1) {
  d = operator|(d, d1);
  return d;
}

inline ae_p24x2f operator+ (const ae_p24x2f& d0, const ae_p24f& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24X2F_ADDS_P24F) (d0, d1);
}
inline ae_p24x2f operator+= (ae_p24x2f& d, const ae_p24f& d1) {
  d = operator+(d, d1);
  return d;
}

inline ae_p24x2f operator- (const ae_p24x2f& d0, const ae_p24f& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24X2F_SUBS_P24F) (d0, d1);
}
inline ae_p24x2f operator-= (ae_p24x2f& d, const ae_p24f& d1) {
  d = operator-(d, d1);
  return d;
}

inline ae_p24x2f operator& (const ae_p24x2f& d0, const ae_p24f& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24X2F_AND_P24F) (d0, d1);
}
inline ae_p24x2f operator&= (ae_p24x2f& d, const ae_p24f& d1) {
  d = operator&(d, d1);
  return d;
}

inline ae_p24x2f operator^ (const ae_p24x2f& d0, const ae_p24f& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24X2F_XOR_P24F) (d0, d1);
}
inline ae_p24x2f operator^= (ae_p24x2f& d, const ae_p24f& d1) {
  d = operator^(d, d1);
  return d;
}

inline ae_p24x2f operator| (const ae_p24x2f& d0, const ae_p24f& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24X2F_OR_P24F) (d0, d1);
}
inline ae_p24x2f operator|= (ae_p24x2f& d, const ae_p24f& d1) {
  d = operator|(d, d1);
  return d;
}

inline ae_p24x2f operator- (const ae_p24x2f& d0) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24X2F_NEGS) (d0);
}

inline ae_p24x2f operator~ (const ae_p24x2f& d0) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24X2F_BNOT) (d0);
}

inline ae_p24x2f operator<< (const ae_p24x2f& d0, const int sa) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24X2F_SLAS) (d0, sa);
}
inline ae_p24x2f operator<<= (ae_p24x2f& d, const int sa) {
  d = operator<<(d, sa);
  return d;
}

inline ae_p24x2f operator>> (const ae_p24x2f& d0, const int sa) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24X2F_SRA) (d0, sa);
}
inline ae_p24x2f operator>>= (ae_p24x2f& d, const int sa) {
  d = operator>>(d, sa);
  return d;
}

}

namespace ae_p24s_space {
inline ae_p24x2s operator+ (const ae_p24s& d0, const ae_p24x2s& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24S_ADDS_P24X2S) (d0, d1);
}

inline ae_p24x2s operator- (const ae_p24s& d0, const ae_p24x2s& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24S_SUBS_P24X2S) (d0, d1);
}

inline ae_p24x2s operator& (const ae_p24s& d0, const ae_p24x2s& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24S_AND_P24X2S) (d0, d1);
}

inline ae_p24x2s operator^ (const ae_p24s& d0, const ae_p24x2s& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24S_XOR_P24X2S) (d0, d1);
}

inline ae_p24x2s operator| (const ae_p24s& d0, const ae_p24x2s& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24S_OR_P24X2S) (d0, d1);
}

inline ae_p24x2f operator+ (const ae_p24s& d0, const ae_p24x2f& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24S_ADDS_P24X2F) (d0, d1);
}

inline ae_p24x2f operator- (const ae_p24s& d0, const ae_p24x2f& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24S_SUBS_P24X2F) (d0, d1);
}

inline ae_p24x2f operator& (const ae_p24s& d0, const ae_p24x2f& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24S_AND_P24X2F) (d0, d1);
}

inline ae_p24x2f operator^ (const ae_p24s& d0, const ae_p24x2f& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24S_XOR_P24X2F) (d0, d1);
}

inline ae_p24x2f operator| (const ae_p24s& d0, const ae_p24x2f& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24S_OR_P24X2F) (d0, d1);
}

inline ae_p24s operator+ (const ae_p24s& d0, const ae_p24s& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24S_ADDS_P24S) (d0, d1);
}
inline ae_p24s operator+= (ae_p24s& d, const ae_p24s& d1) {
  d = operator+(d, d1);
  return d;
}

inline ae_p24s operator- (const ae_p24s& d0, const ae_p24s& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24S_SUBS_P24S) (d0, d1);
}
inline ae_p24s operator-= (ae_p24s& d, const ae_p24s& d1) {
  d = operator-(d, d1);
  return d;
}

inline ae_p24s operator& (const ae_p24s& d0, const ae_p24s& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24S_AND_P24S) (d0, d1);
}
inline ae_p24s operator&= (ae_p24s& d, const ae_p24s& d1) {
  d = operator&(d, d1);
  return d;
}

inline ae_p24s operator^ (const ae_p24s& d0, const ae_p24s& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24S_XOR_P24S) (d0, d1);
}
inline ae_p24s operator^= (ae_p24s& d, const ae_p24s& d1) {
  d = operator^(d, d1);
  return d;
}

inline ae_p24s operator| (const ae_p24s& d0, const ae_p24s& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24S_OR_P24S) (d0, d1);
}
inline ae_p24s operator|= (ae_p24s& d, const ae_p24s& d1) {
  d = operator|(d, d1);
  return d;
}

inline ae_q56s operator* (const ae_p24s& d0, const ae_p24s& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24S_MULF_P24S) (d0, d1);
}

inline ae_p24s operator+ (const ae_p24s& d0, const ae_p24f& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24S_ADDS_P24F) (d0, d1);
}
inline ae_p24s operator+= (ae_p24s& d, const ae_p24f& d1) {
  d = operator+(d, d1);
  return d;
}

inline ae_p24s operator- (const ae_p24s& d0, const ae_p24f& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24S_SUBS_P24F) (d0, d1);
}
inline ae_p24s operator-= (ae_p24s& d, const ae_p24f& d1) {
  d = operator-(d, d1);
  return d;
}

inline ae_p24s operator& (const ae_p24s& d0, const ae_p24f& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24S_AND_P24F) (d0, d1);
}
inline ae_p24s operator&= (ae_p24s& d, const ae_p24f& d1) {
  d = operator&(d, d1);
  return d;
}

inline ae_p24s operator^ (const ae_p24s& d0, const ae_p24f& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24S_XOR_P24F) (d0, d1);
}
inline ae_p24s operator^= (ae_p24s& d, const ae_p24f& d1) {
  d = operator^(d, d1);
  return d;
}

inline ae_p24s operator| (const ae_p24s& d0, const ae_p24f& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24S_OR_P24F) (d0, d1);
}
inline ae_p24s operator|= (ae_p24s& d, const ae_p24f& d1) {
  d = operator|(d, d1);
  return d;
}

inline ae_q56s operator* (const ae_p24s& d0, const ae_p24f& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24S_MULF_P24F) (d0, d1);
}

inline ae_p24s operator- (const ae_p24s& d0) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24S_NEGS) (d0);
}

inline ae_p24s operator~ (const ae_p24s& d0) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24S_BNOT) (d0);
}

inline ae_p24s operator<< (const ae_p24s& d0, const int sa) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24S_SLAS) (d0, sa);
}
inline ae_p24s operator<<= (ae_p24s& d, const int sa) {
  d = operator<<(d, sa);
  return d;
}

inline ae_p24s operator>> (const ae_p24s& d0, const int sa) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24S_SRA) (d0, sa);
}
inline ae_p24s operator>>= (ae_p24s& d, const int sa) {
  d = operator>>(d, sa);
  return d;
}

}

namespace ae_p24f_space {
inline ae_p24x2s operator+ (const ae_p24f& d0, const ae_p24x2s& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24F_ADDS_P24X2S) (d0, d1);
}

inline ae_p24x2s operator- (const ae_p24f& d0, const ae_p24x2s& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24F_SUBS_P24X2S) (d0, d1);
}

inline ae_p24x2s operator& (const ae_p24f& d0, const ae_p24x2s& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24F_AND_P24X2S) (d0, d1);
}

inline ae_p24x2s operator^ (const ae_p24f& d0, const ae_p24x2s& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24F_XOR_P24X2S) (d0, d1);
}

inline ae_p24x2s operator| (const ae_p24f& d0, const ae_p24x2s& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24F_OR_P24X2S) (d0, d1);
}

inline ae_p24x2f operator+ (const ae_p24f& d0, const ae_p24x2f& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24F_ADDS_P24X2F) (d0, d1);
}

inline ae_p24x2f operator- (const ae_p24f& d0, const ae_p24x2f& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24F_SUBS_P24X2F) (d0, d1);
}

inline ae_p24x2f operator& (const ae_p24f& d0, const ae_p24x2f& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24F_AND_P24X2F) (d0, d1);
}

inline ae_p24x2f operator^ (const ae_p24f& d0, const ae_p24x2f& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24F_XOR_P24X2F) (d0, d1);
}

inline ae_p24x2f operator| (const ae_p24f& d0, const ae_p24x2f& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24F_OR_P24X2F) (d0, d1);
}

inline ae_p24s operator+ (const ae_p24f& d0, const ae_p24s& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24F_ADDS_P24S) (d0, d1);
}

inline ae_p24s operator- (const ae_p24f& d0, const ae_p24s& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24F_SUBS_P24S) (d0, d1);
}

inline ae_p24s operator& (const ae_p24f& d0, const ae_p24s& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24F_AND_P24S) (d0, d1);
}

inline ae_p24s operator^ (const ae_p24f& d0, const ae_p24s& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24F_XOR_P24S) (d0, d1);
}

inline ae_p24s operator| (const ae_p24f& d0, const ae_p24s& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24F_OR_P24S) (d0, d1);
}

inline ae_q56s operator* (const ae_p24f& d0, const ae_p24s& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24F_MULF_P24S) (d0, d1);
}

inline ae_p24f operator+ (const ae_p24f& d0, const ae_p24f& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24F_ADDS_P24F) (d0, d1);
}
inline ae_p24f operator+= (ae_p24f& d, const ae_p24f& d1) {
  d = operator+(d, d1);
  return d;
}

inline ae_p24f operator- (const ae_p24f& d0, const ae_p24f& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24F_SUBS_P24F) (d0, d1);
}
inline ae_p24f operator-= (ae_p24f& d, const ae_p24f& d1) {
  d = operator-(d, d1);
  return d;
}

inline ae_p24f operator& (const ae_p24f& d0, const ae_p24f& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24F_AND_P24F) (d0, d1);
}
inline ae_p24f operator&= (ae_p24f& d, const ae_p24f& d1) {
  d = operator&(d, d1);
  return d;
}

inline ae_p24f operator^ (const ae_p24f& d0, const ae_p24f& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24F_XOR_P24F) (d0, d1);
}
inline ae_p24f operator^= (ae_p24f& d, const ae_p24f& d1) {
  d = operator^(d, d1);
  return d;
}

inline ae_p24f operator| (const ae_p24f& d0, const ae_p24f& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24F_OR_P24F) (d0, d1);
}
inline ae_p24f operator|= (ae_p24f& d, const ae_p24f& d1) {
  d = operator|(d, d1);
  return d;
}

inline ae_q56s operator* (const ae_p24f& d0, const ae_p24f& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24F_MULF_P24F) (d0, d1);
}

inline ae_p24f operator- (const ae_p24f& d0) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24F_NEGS) (d0);
}

inline ae_p24f operator~ (const ae_p24f& d0) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24F_BNOT) (d0);
}

inline ae_p24f operator<< (const ae_p24f& d0, const int sa) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24F_SLAS) (d0, sa);
}
inline ae_p24f operator<<= (ae_p24f& d, const int sa) {
  d = operator<<(d, sa);
  return d;
}

inline ae_p24f operator>> (const ae_p24f& d0, const int sa) {
  return CSTUB_(_TIE_xt_hifi2_AE_P24F_SRA) (d0, sa);
}
inline ae_p24f operator>>= (ae_p24f& d, const int sa) {
  d = operator>>(d, sa);
  return d;
}

}

namespace ae_int16x4_space {
inline ae_int32x4 operator* (const ae_int16x4& d0, const ae_int16x4& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT16X4_MUL_INT16X4) (d0, d1);
}

inline ae_int16x4 operator+ (const ae_int16x4& d0, const ae_int16x4& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT16X4_ADD_INT16X4) (d0, d1);
}
inline ae_int16x4 operator+= (ae_int16x4& d, const ae_int16x4& d1) {
  d = operator+(d, d1);
  return d;
}

inline ae_int16x4 operator- (const ae_int16x4& d0, const ae_int16x4& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT16X4_SUB_INT16X4) (d0, d1);
}
inline ae_int16x4 operator-= (ae_int16x4& d, const ae_int16x4& d1) {
  d = operator-(d, d1);
  return d;
}

inline ae_int16x4 operator& (const ae_int16x4& d0, const ae_int16x4& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT16X4_AND_INT16X4) (d0, d1);
}
inline ae_int16x4 operator&= (ae_int16x4& d, const ae_int16x4& d1) {
  d = operator&(d, d1);
  return d;
}

inline ae_int16x4 operator^ (const ae_int16x4& d0, const ae_int16x4& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT16X4_XOR_INT16X4) (d0, d1);
}
inline ae_int16x4 operator^= (ae_int16x4& d, const ae_int16x4& d1) {
  d = operator^(d, d1);
  return d;
}

inline ae_int16x4 operator| (const ae_int16x4& d0, const ae_int16x4& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT16X4_OR_INT16X4) (d0, d1);
}
inline ae_int16x4 operator|= (ae_int16x4& d, const ae_int16x4& d1) {
  d = operator|(d, d1);
  return d;
}

inline xtbool4 operator== (const ae_int16x4& d0, const ae_int16x4& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT16X4_EQ_INT16X4) (d0, d1);
}

inline xtbool4 operator< (const ae_int16x4& d0, const ae_int16x4& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT16X4_LT_INT16X4) (d0, d1);
}

inline xtbool4 operator<= (const ae_int16x4& d0, const ae_int16x4& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT16X4_LE_INT16X4) (d0, d1);
}

inline xtbool4 operator> (const ae_int16x4& d0, const ae_int16x4& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT16X4_GT_INT16X4) (d0, d1);
}

inline xtbool4 operator>= (const ae_int16x4& d0, const ae_int16x4& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT16X4_GE_INT16X4) (d0, d1);
}

inline ae_int16x4 operator+ (const ae_int16x4& d0, const ae_int16& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT16X4_ADD_INT16) (d0, d1);
}
inline ae_int16x4 operator+= (ae_int16x4& d, const ae_int16& d1) {
  d = operator+(d, d1);
  return d;
}

inline ae_int16x4 operator- (const ae_int16x4& d0, const ae_int16& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT16X4_SUB_INT16) (d0, d1);
}
inline ae_int16x4 operator-= (ae_int16x4& d, const ae_int16& d1) {
  d = operator-(d, d1);
  return d;
}

inline ae_int16x4 operator& (const ae_int16x4& d0, const ae_int16& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT16X4_AND_INT16) (d0, d1);
}
inline ae_int16x4 operator&= (ae_int16x4& d, const ae_int16& d1) {
  d = operator&(d, d1);
  return d;
}

inline ae_int16x4 operator^ (const ae_int16x4& d0, const ae_int16& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT16X4_XOR_INT16) (d0, d1);
}
inline ae_int16x4 operator^= (ae_int16x4& d, const ae_int16& d1) {
  d = operator^(d, d1);
  return d;
}

inline ae_int16x4 operator| (const ae_int16x4& d0, const ae_int16& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT16X4_OR_INT16) (d0, d1);
}
inline ae_int16x4 operator|= (ae_int16x4& d, const ae_int16& d1) {
  d = operator|(d, d1);
  return d;
}

inline ae_int16x4 operator- (const ae_int16x4& d0) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT16X4_NEG) (d0);
}

inline ae_int16x4 operator~ (const ae_int16x4& d0) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT16X4_BNOT) (d0);
}

inline ae_int16x4 operator>> (const ae_int16x4& d0, const int sa) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT16X4_SRA) (d0, sa);
}
inline ae_int16x4 operator>>= (ae_int16x4& d, const int sa) {
  d = operator>>(d, sa);
  return d;
}

inline ae_int32x4 operator* (const ae_int16x4& d0, const ae_int32x4& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT16X4_INT32X4_MUL) (d0, d1);
}

}

namespace ae_int16_space {
inline ae_int16x4 operator+ (const ae_int16& d0, const ae_int16x4& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT16_ADD_INT16X4) (d0, d1);
}

inline ae_int16x4 operator- (const ae_int16& d0, const ae_int16x4& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT16_SUB_INT16X4) (d0, d1);
}

inline ae_int16x4 operator& (const ae_int16& d0, const ae_int16x4& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT16_AND_INT16X4) (d0, d1);
}

inline ae_int16x4 operator^ (const ae_int16& d0, const ae_int16x4& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT16_XOR_INT16X4) (d0, d1);
}

inline ae_int16x4 operator| (const ae_int16& d0, const ae_int16x4& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT16_OR_INT16X4) (d0, d1);
}

inline ae_int16 operator+ (const ae_int16& d0, const ae_int16& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT16_ADD_INT16) (d0, d1);
}
inline ae_int16 operator+= (ae_int16& d, const ae_int16& d1) {
  d = operator+(d, d1);
  return d;
}

inline ae_int16 operator- (const ae_int16& d0, const ae_int16& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT16_SUB_INT16) (d0, d1);
}
inline ae_int16 operator-= (ae_int16& d, const ae_int16& d1) {
  d = operator-(d, d1);
  return d;
}

inline ae_int16 operator& (const ae_int16& d0, const ae_int16& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT16_AND_INT16) (d0, d1);
}
inline ae_int16 operator&= (ae_int16& d, const ae_int16& d1) {
  d = operator&(d, d1);
  return d;
}

inline ae_int16 operator^ (const ae_int16& d0, const ae_int16& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT16_XOR_INT16) (d0, d1);
}
inline ae_int16 operator^= (ae_int16& d, const ae_int16& d1) {
  d = operator^(d, d1);
  return d;
}

inline ae_int16 operator| (const ae_int16& d0, const ae_int16& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT16_OR_INT16) (d0, d1);
}
inline ae_int16 operator|= (ae_int16& d, const ae_int16& d1) {
  d = operator|(d, d1);
  return d;
}

inline ae_int16 operator- (const ae_int16& d0) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT16_NEG) (d0);
}

inline ae_int16 operator~ (const ae_int16& d0) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT16_BNOT) (d0);
}

inline ae_int16 operator>> (const ae_int16& d0, const int sa) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT16_SRA) (d0, sa);
}
inline ae_int16 operator>>= (ae_int16& d, const int sa) {
  d = operator>>(d, sa);
  return d;
}

}

namespace ae_f16x4_space {
inline ae_f32x4 operator* (const ae_f16x4& d0, const ae_f16x4& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_F16X4_MULF_F16X4) (d0, d1);
}

inline ae_f16x4 operator+ (const ae_f16x4& d0, const ae_f16x4& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_F16X4_ADDS_F16X4) (d0, d1);
}
inline ae_f16x4 operator+= (ae_f16x4& d, const ae_f16x4& d1) {
  d = operator+(d, d1);
  return d;
}

inline ae_f16x4 operator- (const ae_f16x4& d0, const ae_f16x4& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_F16X4_SUBS_F16X4) (d0, d1);
}
inline ae_f16x4 operator-= (ae_f16x4& d, const ae_f16x4& d1) {
  d = operator-(d, d1);
  return d;
}

inline ae_f16x4 operator& (const ae_f16x4& d0, const ae_f16x4& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_F16X4_AND_F16X4) (d0, d1);
}
inline ae_f16x4 operator&= (ae_f16x4& d, const ae_f16x4& d1) {
  d = operator&(d, d1);
  return d;
}

inline ae_f16x4 operator^ (const ae_f16x4& d0, const ae_f16x4& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_F16X4_XOR_F16X4) (d0, d1);
}
inline ae_f16x4 operator^= (ae_f16x4& d, const ae_f16x4& d1) {
  d = operator^(d, d1);
  return d;
}

inline ae_f16x4 operator| (const ae_f16x4& d0, const ae_f16x4& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_F16X4_OR_F16X4) (d0, d1);
}
inline ae_f16x4 operator|= (ae_f16x4& d, const ae_f16x4& d1) {
  d = operator|(d, d1);
  return d;
}

inline xtbool4 operator== (const ae_f16x4& d0, const ae_f16x4& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_F16X4_EQ_F16X4) (d0, d1);
}

inline xtbool4 operator< (const ae_f16x4& d0, const ae_f16x4& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_F16X4_LT_F16X4) (d0, d1);
}

inline xtbool4 operator<= (const ae_f16x4& d0, const ae_f16x4& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_F16X4_LE_F16X4) (d0, d1);
}

inline xtbool4 operator> (const ae_f16x4& d0, const ae_f16x4& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_F16X4_GT_F16X4) (d0, d1);
}

inline xtbool4 operator>= (const ae_f16x4& d0, const ae_f16x4& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_F16X4_GE_F16X4) (d0, d1);
}

inline ae_f16x4 operator+ (const ae_f16x4& d0, const ae_f16& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_F16X4_ADDS_F16) (d0, d1);
}
inline ae_f16x4 operator+= (ae_f16x4& d, const ae_f16& d1) {
  d = operator+(d, d1);
  return d;
}

inline ae_f16x4 operator- (const ae_f16x4& d0, const ae_f16& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_F16X4_SUBS_F16) (d0, d1);
}
inline ae_f16x4 operator-= (ae_f16x4& d, const ae_f16& d1) {
  d = operator-(d, d1);
  return d;
}

inline ae_f16x4 operator& (const ae_f16x4& d0, const ae_f16& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_F16X4_AND_F16) (d0, d1);
}
inline ae_f16x4 operator&= (ae_f16x4& d, const ae_f16& d1) {
  d = operator&(d, d1);
  return d;
}

inline ae_f16x4 operator^ (const ae_f16x4& d0, const ae_f16& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_F16X4_XOR_F16) (d0, d1);
}
inline ae_f16x4 operator^= (ae_f16x4& d, const ae_f16& d1) {
  d = operator^(d, d1);
  return d;
}

inline ae_f16x4 operator| (const ae_f16x4& d0, const ae_f16& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_F16X4_OR_F16) (d0, d1);
}
inline ae_f16x4 operator|= (ae_f16x4& d, const ae_f16& d1) {
  d = operator|(d, d1);
  return d;
}

inline ae_f16x4 operator- (const ae_f16x4& d0) {
  return CSTUB_(_TIE_xt_hifi2_AE_F16X4_NEGS) (d0);
}

inline ae_f16x4 operator~ (const ae_f16x4& d0) {
  return CSTUB_(_TIE_xt_hifi2_AE_F16X4_BNOT) (d0);
}

inline ae_f16x4 operator<< (const ae_f16x4& d0, const int sa) {
  return CSTUB_(_TIE_xt_hifi2_AE_F16X4_SLAS) (d0, sa);
}
inline ae_f16x4 operator<<= (ae_f16x4& d, const int sa) {
  d = operator<<(d, sa);
  return d;
}

inline ae_f16x4 operator>> (const ae_f16x4& d0, const int sa) {
  return CSTUB_(_TIE_xt_hifi2_AE_F16X4_SRA) (d0, sa);
}
inline ae_f16x4 operator>>= (ae_f16x4& d, const int sa) {
  d = operator>>(d, sa);
  return d;
}

inline ae_f32x4 operator* (const ae_f16x4& d0, const ae_f32x4& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_F16X4_F32X4_MUL) (d0, d1);
}

}

namespace ae_f16_space {
inline ae_f16x4 operator+ (const ae_f16& d0, const ae_f16x4& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_F16_ADDS_F16X4) (d0, d1);
}

inline ae_f16x4 operator- (const ae_f16& d0, const ae_f16x4& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_F16_SUBS_F16X4) (d0, d1);
}

inline ae_f16x4 operator& (const ae_f16& d0, const ae_f16x4& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_F16_AND_F16X4) (d0, d1);
}

inline ae_f16x4 operator^ (const ae_f16& d0, const ae_f16x4& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_F16_XOR_F16X4) (d0, d1);
}

inline ae_f16x4 operator| (const ae_f16& d0, const ae_f16x4& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_F16_OR_F16X4) (d0, d1);
}

inline ae_f16 operator+ (const ae_f16& d0, const ae_f16& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_F16_ADDS_F16) (d0, d1);
}
inline ae_f16 operator+= (ae_f16& d, const ae_f16& d1) {
  d = operator+(d, d1);
  return d;
}

inline ae_f16 operator- (const ae_f16& d0, const ae_f16& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_F16_SUBS_F16) (d0, d1);
}
inline ae_f16 operator-= (ae_f16& d, const ae_f16& d1) {
  d = operator-(d, d1);
  return d;
}

inline ae_f16 operator& (const ae_f16& d0, const ae_f16& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_F16_AND_F16) (d0, d1);
}
inline ae_f16 operator&= (ae_f16& d, const ae_f16& d1) {
  d = operator&(d, d1);
  return d;
}

inline ae_f16 operator^ (const ae_f16& d0, const ae_f16& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_F16_XOR_F16) (d0, d1);
}
inline ae_f16 operator^= (ae_f16& d, const ae_f16& d1) {
  d = operator^(d, d1);
  return d;
}

inline ae_f16 operator| (const ae_f16& d0, const ae_f16& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_F16_OR_F16) (d0, d1);
}
inline ae_f16 operator|= (ae_f16& d, const ae_f16& d1) {
  d = operator|(d, d1);
  return d;
}

inline ae_f16 operator- (const ae_f16& d0) {
  return CSTUB_(_TIE_xt_hifi2_AE_F16_NEGS) (d0);
}

inline ae_f16 operator~ (const ae_f16& d0) {
  return CSTUB_(_TIE_xt_hifi2_AE_F16_BNOT) (d0);
}

inline ae_f16 operator<< (const ae_f16& d0, const int sa) {
  return CSTUB_(_TIE_xt_hifi2_AE_F16_SLAS) (d0, sa);
}
inline ae_f16 operator<<= (ae_f16& d, const int sa) {
  d = operator<<(d, sa);
  return d;
}

inline ae_f16 operator>> (const ae_f16& d0, const int sa) {
  return CSTUB_(_TIE_xt_hifi2_AE_F16_SRA) (d0, sa);
}
inline ae_f16 operator>>= (ae_f16& d, const int sa) {
  d = operator>>(d, sa);
  return d;
}

}

namespace ae_int32x2_space {
inline ae_int32x2 operator+ (const ae_int32x2& d0, const ae_int32x2& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT32X2_ADD_INT32X2) (d0, d1);
}
inline ae_int32x2 operator+= (ae_int32x2& d, const ae_int32x2& d1) {
  d = operator+(d, d1);
  return d;
}

inline ae_int32x2 operator- (const ae_int32x2& d0, const ae_int32x2& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT32X2_SUB_INT32X2) (d0, d1);
}
inline ae_int32x2 operator-= (ae_int32x2& d, const ae_int32x2& d1) {
  d = operator-(d, d1);
  return d;
}

inline ae_int32x2 operator& (const ae_int32x2& d0, const ae_int32x2& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT32X2_AND_INT32X2) (d0, d1);
}
inline ae_int32x2 operator&= (ae_int32x2& d, const ae_int32x2& d1) {
  d = operator&(d, d1);
  return d;
}

inline ae_int32x2 operator^ (const ae_int32x2& d0, const ae_int32x2& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT32X2_XOR_INT32X2) (d0, d1);
}
inline ae_int32x2 operator^= (ae_int32x2& d, const ae_int32x2& d1) {
  d = operator^(d, d1);
  return d;
}

inline ae_int32x2 operator| (const ae_int32x2& d0, const ae_int32x2& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT32X2_OR_INT32X2) (d0, d1);
}
inline ae_int32x2 operator|= (ae_int32x2& d, const ae_int32x2& d1) {
  d = operator|(d, d1);
  return d;
}

inline ae_int32x2 operator* (const ae_int32x2& d0, const ae_int32x2& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT32X2_MUL_INT32X2) (d0, d1);
}
inline ae_int32x2 operator*= (ae_int32x2& d, const ae_int32x2& d1) {
  d = operator*(d, d1);
  return d;
}

inline xtbool2 operator== (const ae_int32x2& d0, const ae_int32x2& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT32X2_EQ_INT32X2) (d0, d1);
}

inline xtbool2 operator< (const ae_int32x2& d0, const ae_int32x2& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT32X2_LT_INT32X2) (d0, d1);
}

inline xtbool2 operator<= (const ae_int32x2& d0, const ae_int32x2& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT32X2_LE_INT32X2) (d0, d1);
}

inline xtbool2 operator> (const ae_int32x2& d0, const ae_int32x2& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT32X2_GT_INT32X2) (d0, d1);
}

inline xtbool2 operator>= (const ae_int32x2& d0, const ae_int32x2& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT32X2_GE_INT32X2) (d0, d1);
}

inline ae_int32x2 operator+ (const ae_int32x2& d0, const ae_int32& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT32X2_ADD_INT32) (d0, d1);
}
inline ae_int32x2 operator+= (ae_int32x2& d, const ae_int32& d1) {
  d = operator+(d, d1);
  return d;
}

inline ae_int32x2 operator- (const ae_int32x2& d0, const ae_int32& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT32X2_SUB_INT32) (d0, d1);
}
inline ae_int32x2 operator-= (ae_int32x2& d, const ae_int32& d1) {
  d = operator-(d, d1);
  return d;
}

inline ae_int32x2 operator& (const ae_int32x2& d0, const ae_int32& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT32X2_AND_INT32) (d0, d1);
}
inline ae_int32x2 operator&= (ae_int32x2& d, const ae_int32& d1) {
  d = operator&(d, d1);
  return d;
}

inline ae_int32x2 operator^ (const ae_int32x2& d0, const ae_int32& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT32X2_XOR_INT32) (d0, d1);
}
inline ae_int32x2 operator^= (ae_int32x2& d, const ae_int32& d1) {
  d = operator^(d, d1);
  return d;
}

inline ae_int32x2 operator| (const ae_int32x2& d0, const ae_int32& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT32X2_OR_INT32) (d0, d1);
}
inline ae_int32x2 operator|= (ae_int32x2& d, const ae_int32& d1) {
  d = operator|(d, d1);
  return d;
}

inline ae_int32x2 operator- (const ae_int32x2& d0) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT32X2_NEG) (d0);
}

inline ae_int32x2 operator~ (const ae_int32x2& d0) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT32X2_BNOT) (d0);
}

inline ae_int32x2 operator<< (const ae_int32x2& d0, const int sa) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT32X2_SLA) (d0, sa);
}
inline ae_int32x2 operator<<= (ae_int32x2& d, const int sa) {
  d = operator<<(d, sa);
  return d;
}

inline ae_int32x2 operator>> (const ae_int32x2& d0, const int sa) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT32X2_SRA) (d0, sa);
}
inline ae_int32x2 operator>>= (ae_int32x2& d, const int sa) {
  d = operator>>(d, sa);
  return d;
}

}

namespace ae_int32_space {
inline ae_int32x2 operator+ (const ae_int32& d0, const ae_int32x2& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT32_ADD_INT32X2) (d0, d1);
}

inline ae_int32x2 operator- (const ae_int32& d0, const ae_int32x2& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT32_SUB_INT32X2) (d0, d1);
}

inline ae_int32x2 operator& (const ae_int32& d0, const ae_int32x2& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT32_AND_INT32X2) (d0, d1);
}

inline ae_int32x2 operator^ (const ae_int32& d0, const ae_int32x2& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT32_XOR_INT32X2) (d0, d1);
}

inline ae_int32x2 operator| (const ae_int32& d0, const ae_int32x2& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT32_OR_INT32X2) (d0, d1);
}

inline ae_int32 operator+ (const ae_int32& d0, const ae_int32& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT32_ADD_INT32) (d0, d1);
}
inline ae_int32 operator+= (ae_int32& d, const ae_int32& d1) {
  d = operator+(d, d1);
  return d;
}

inline ae_int32 operator- (const ae_int32& d0, const ae_int32& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT32_SUB_INT32) (d0, d1);
}
inline ae_int32 operator-= (ae_int32& d, const ae_int32& d1) {
  d = operator-(d, d1);
  return d;
}

inline ae_int32 operator& (const ae_int32& d0, const ae_int32& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT32_AND_INT32) (d0, d1);
}
inline ae_int32 operator&= (ae_int32& d, const ae_int32& d1) {
  d = operator&(d, d1);
  return d;
}

inline ae_int32 operator^ (const ae_int32& d0, const ae_int32& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT32_XOR_INT32) (d0, d1);
}
inline ae_int32 operator^= (ae_int32& d, const ae_int32& d1) {
  d = operator^(d, d1);
  return d;
}

inline ae_int32 operator| (const ae_int32& d0, const ae_int32& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT32_OR_INT32) (d0, d1);
}
inline ae_int32 operator|= (ae_int32& d, const ae_int32& d1) {
  d = operator|(d, d1);
  return d;
}

inline ae_int32 operator* (const ae_int32& d0, const ae_int32& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT32_MUL_INT32) (d0, d1);
}
inline ae_int32 operator*= (ae_int32& d, const ae_int32& d1) {
  d = operator*(d, d1);
  return d;
}

inline ae_int32 operator- (const ae_int32& d0) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT32_NEG) (d0);
}

inline ae_int32 operator~ (const ae_int32& d0) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT32_BNOT) (d0);
}

inline ae_int32 operator<< (const ae_int32& d0, const int sa) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT32_SLA) (d0, sa);
}
inline ae_int32 operator<<= (ae_int32& d, const int sa) {
  d = operator<<(d, sa);
  return d;
}

inline ae_int32 operator>> (const ae_int32& d0, const int sa) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT32_SRA) (d0, sa);
}
inline ae_int32 operator>>= (ae_int32& d, const int sa) {
  d = operator>>(d, sa);
  return d;
}

inline ae_int32 operator* (const ae_int32& d0, const ae_int16& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT32_MUL_INT16) (d0, d1);
}
inline ae_int32 operator*= (ae_int32& d, const ae_int16& d1) {
  d = operator*(d, d1);
  return d;
}

}

namespace ae_f32x2_space {
inline ae_f32x2 operator+ (const ae_f32x2& d0, const ae_f32x2& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_F32X2_ADDS_F32X2) (d0, d1);
}
inline ae_f32x2 operator+= (ae_f32x2& d, const ae_f32x2& d1) {
  d = operator+(d, d1);
  return d;
}

inline ae_f32x2 operator- (const ae_f32x2& d0, const ae_f32x2& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_F32X2_SUBS_F32X2) (d0, d1);
}
inline ae_f32x2 operator-= (ae_f32x2& d, const ae_f32x2& d1) {
  d = operator-(d, d1);
  return d;
}

inline ae_f32x2 operator& (const ae_f32x2& d0, const ae_f32x2& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_F32X2_AND_F32X2) (d0, d1);
}
inline ae_f32x2 operator&= (ae_f32x2& d, const ae_f32x2& d1) {
  d = operator&(d, d1);
  return d;
}

inline ae_f32x2 operator^ (const ae_f32x2& d0, const ae_f32x2& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_F32X2_XOR_F32X2) (d0, d1);
}
inline ae_f32x2 operator^= (ae_f32x2& d, const ae_f32x2& d1) {
  d = operator^(d, d1);
  return d;
}

inline ae_f32x2 operator| (const ae_f32x2& d0, const ae_f32x2& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_F32X2_OR_F32X2) (d0, d1);
}
inline ae_f32x2 operator|= (ae_f32x2& d, const ae_f32x2& d1) {
  d = operator|(d, d1);
  return d;
}

inline ae_f32x2 operator* (const ae_f32x2& d0, const ae_f32x2& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_F32X2_MULF_F32X2) (d0, d1);
}
inline ae_f32x2 operator*= (ae_f32x2& d, const ae_f32x2& d1) {
  d = operator*(d, d1);
  return d;
}

inline xtbool2 operator== (const ae_f32x2& d0, const ae_f32x2& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_F32X2_EQ_F32X2) (d0, d1);
}

inline xtbool2 operator< (const ae_f32x2& d0, const ae_f32x2& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_F32X2_LT_F32X2) (d0, d1);
}

inline xtbool2 operator<= (const ae_f32x2& d0, const ae_f32x2& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_F32X2_LE_F32X2) (d0, d1);
}

inline xtbool2 operator> (const ae_f32x2& d0, const ae_f32x2& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_F32X2_GT_F32X2) (d0, d1);
}

inline xtbool2 operator>= (const ae_f32x2& d0, const ae_f32x2& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_F32X2_GE_F32X2) (d0, d1);
}

inline ae_f32x2 operator+ (const ae_f32x2& d0, const ae_f32& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_F32X2_ADDS_F32) (d0, d1);
}
inline ae_f32x2 operator+= (ae_f32x2& d, const ae_f32& d1) {
  d = operator+(d, d1);
  return d;
}

inline ae_f32x2 operator- (const ae_f32x2& d0, const ae_f32& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_F32X2_SUBS_F32) (d0, d1);
}
inline ae_f32x2 operator-= (ae_f32x2& d, const ae_f32& d1) {
  d = operator-(d, d1);
  return d;
}

inline ae_f32x2 operator& (const ae_f32x2& d0, const ae_f32& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_F32X2_AND_F32) (d0, d1);
}
inline ae_f32x2 operator&= (ae_f32x2& d, const ae_f32& d1) {
  d = operator&(d, d1);
  return d;
}

inline ae_f32x2 operator^ (const ae_f32x2& d0, const ae_f32& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_F32X2_XOR_F32) (d0, d1);
}
inline ae_f32x2 operator^= (ae_f32x2& d, const ae_f32& d1) {
  d = operator^(d, d1);
  return d;
}

inline ae_f32x2 operator| (const ae_f32x2& d0, const ae_f32& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_F32X2_OR_F32) (d0, d1);
}
inline ae_f32x2 operator|= (ae_f32x2& d, const ae_f32& d1) {
  d = operator|(d, d1);
  return d;
}

inline ae_f32x2 operator- (const ae_f32x2& d0) {
  return CSTUB_(_TIE_xt_hifi2_AE_F32X2_NEGS) (d0);
}

inline ae_f32x2 operator~ (const ae_f32x2& d0) {
  return CSTUB_(_TIE_xt_hifi2_AE_F32X2_BNOT) (d0);
}

inline ae_f32x2 operator<< (const ae_f32x2& d0, const int sa) {
  return CSTUB_(_TIE_xt_hifi2_AE_F32X2_SLAS) (d0, sa);
}
inline ae_f32x2 operator<<= (ae_f32x2& d, const int sa) {
  d = operator<<(d, sa);
  return d;
}

inline ae_f32x2 operator>> (const ae_f32x2& d0, const int sa) {
  return CSTUB_(_TIE_xt_hifi2_AE_F32X2_SRA) (d0, sa);
}
inline ae_f32x2 operator>>= (ae_f32x2& d, const int sa) {
  d = operator>>(d, sa);
  return d;
}

}

namespace ae_f32_space {
inline ae_f32x2 operator+ (const ae_f32& d0, const ae_f32x2& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_F32_ADDS_F32X2) (d0, d1);
}

inline ae_f32x2 operator- (const ae_f32& d0, const ae_f32x2& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_F32_SUBS_F32X2) (d0, d1);
}

inline ae_f32x2 operator& (const ae_f32& d0, const ae_f32x2& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_F32_AND_F32X2) (d0, d1);
}

inline ae_f32x2 operator^ (const ae_f32& d0, const ae_f32x2& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_F32_XOR_F32X2) (d0, d1);
}

inline ae_f32x2 operator| (const ae_f32& d0, const ae_f32x2& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_F32_OR_F32X2) (d0, d1);
}

inline ae_f32 operator+ (const ae_f32& d0, const ae_f32& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_F32_ADDS_F32) (d0, d1);
}
inline ae_f32 operator+= (ae_f32& d, const ae_f32& d1) {
  d = operator+(d, d1);
  return d;
}

inline ae_f32 operator- (const ae_f32& d0, const ae_f32& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_F32_SUBS_F32) (d0, d1);
}
inline ae_f32 operator-= (ae_f32& d, const ae_f32& d1) {
  d = operator-(d, d1);
  return d;
}

inline ae_f32 operator& (const ae_f32& d0, const ae_f32& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_F32_AND_F32) (d0, d1);
}
inline ae_f32 operator&= (ae_f32& d, const ae_f32& d1) {
  d = operator&(d, d1);
  return d;
}

inline ae_f32 operator^ (const ae_f32& d0, const ae_f32& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_F32_XOR_F32) (d0, d1);
}
inline ae_f32 operator^= (ae_f32& d, const ae_f32& d1) {
  d = operator^(d, d1);
  return d;
}

inline ae_f32 operator| (const ae_f32& d0, const ae_f32& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_F32_OR_F32) (d0, d1);
}
inline ae_f32 operator|= (ae_f32& d, const ae_f32& d1) {
  d = operator|(d, d1);
  return d;
}

inline ae_f32 operator* (const ae_f32& d0, const ae_f32& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_F32_MULF_F32) (d0, d1);
}
inline ae_f32 operator*= (ae_f32& d, const ae_f32& d1) {
  d = operator*(d, d1);
  return d;
}

inline ae_f32 operator- (const ae_f32& d0) {
  return CSTUB_(_TIE_xt_hifi2_AE_F32_NEGS) (d0);
}

inline ae_f32 operator~ (const ae_f32& d0) {
  return CSTUB_(_TIE_xt_hifi2_AE_F32_BNOT) (d0);
}

inline ae_f32 operator<< (const ae_f32& d0, const int sa) {
  return CSTUB_(_TIE_xt_hifi2_AE_F32_SLAS) (d0, sa);
}
inline ae_f32 operator<<= (ae_f32& d, const int sa) {
  d = operator<<(d, sa);
  return d;
}

inline ae_f32 operator>> (const ae_f32& d0, const int sa) {
  return CSTUB_(_TIE_xt_hifi2_AE_F32_SRA) (d0, sa);
}
inline ae_f32 operator>>= (ae_f32& d, const int sa) {
  d = operator>>(d, sa);
  return d;
}

inline ae_f32 operator* (const ae_f32& d0, const ae_f16& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_F32_MUL_F16) (d0, d1);
}
inline ae_f32 operator*= (ae_f32& d, const ae_f16& d1) {
  d = operator*(d, d1);
  return d;
}

}

namespace ae_int24x2_space {
inline ae_int24x2 operator+ (const ae_int24x2& d0, const ae_int24x2& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT24X2_ADD_INT24X2) (d0, d1);
}
inline ae_int24x2 operator+= (ae_int24x2& d, const ae_int24x2& d1) {
  d = operator+(d, d1);
  return d;
}

inline ae_int24x2 operator- (const ae_int24x2& d0, const ae_int24x2& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT24X2_SUB_INT24X2) (d0, d1);
}
inline ae_int24x2 operator-= (ae_int24x2& d, const ae_int24x2& d1) {
  d = operator-(d, d1);
  return d;
}

inline ae_int24x2 operator& (const ae_int24x2& d0, const ae_int24x2& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT24X2_AND_INT24X2) (d0, d1);
}
inline ae_int24x2 operator&= (ae_int24x2& d, const ae_int24x2& d1) {
  d = operator&(d, d1);
  return d;
}

inline ae_int24x2 operator^ (const ae_int24x2& d0, const ae_int24x2& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT24X2_XOR_INT24X2) (d0, d1);
}
inline ae_int24x2 operator^= (ae_int24x2& d, const ae_int24x2& d1) {
  d = operator^(d, d1);
  return d;
}

inline ae_int24x2 operator| (const ae_int24x2& d0, const ae_int24x2& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT24X2_OR_INT24X2) (d0, d1);
}
inline ae_int24x2 operator|= (ae_int24x2& d, const ae_int24x2& d1) {
  d = operator|(d, d1);
  return d;
}

inline ae_int32x2 operator* (const ae_int24x2& d0, const ae_int24x2& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT24X2_MUL_INT24X2) (d0, d1);
}

inline xtbool2 operator== (const ae_int24x2& d0, const ae_int24x2& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT24X2_EQ_INT24X2) (d0, d1);
}

inline xtbool2 operator< (const ae_int24x2& d0, const ae_int24x2& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT24X2_LT_INT24X2) (d0, d1);
}

inline xtbool2 operator<= (const ae_int24x2& d0, const ae_int24x2& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT24X2_LE_INT24X2) (d0, d1);
}

inline xtbool2 operator> (const ae_int24x2& d0, const ae_int24x2& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT24X2_GT_INT24X2) (d0, d1);
}

inline xtbool2 operator>= (const ae_int24x2& d0, const ae_int24x2& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT24X2_GE_INT24X2) (d0, d1);
}

inline ae_int24x2 operator+ (const ae_int24x2& d0, const ae_int24& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT24X2_ADD_INT24) (d0, d1);
}
inline ae_int24x2 operator+= (ae_int24x2& d, const ae_int24& d1) {
  d = operator+(d, d1);
  return d;
}

inline ae_int24x2 operator- (const ae_int24x2& d0, const ae_int24& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT24X2_SUB_INT24) (d0, d1);
}
inline ae_int24x2 operator-= (ae_int24x2& d, const ae_int24& d1) {
  d = operator-(d, d1);
  return d;
}

inline ae_int24x2 operator& (const ae_int24x2& d0, const ae_int24& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT24X2_AND_INT24) (d0, d1);
}
inline ae_int24x2 operator&= (ae_int24x2& d, const ae_int24& d1) {
  d = operator&(d, d1);
  return d;
}

inline ae_int24x2 operator^ (const ae_int24x2& d0, const ae_int24& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT24X2_XOR_INT24) (d0, d1);
}
inline ae_int24x2 operator^= (ae_int24x2& d, const ae_int24& d1) {
  d = operator^(d, d1);
  return d;
}

inline ae_int24x2 operator| (const ae_int24x2& d0, const ae_int24& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT24X2_OR_INT24) (d0, d1);
}
inline ae_int24x2 operator|= (ae_int24x2& d, const ae_int24& d1) {
  d = operator|(d, d1);
  return d;
}

inline ae_int24x2 operator- (const ae_int24x2& d0) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT24X2_NEG) (d0);
}

inline ae_int24x2 operator~ (const ae_int24x2& d0) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT24X2_BNOT) (d0);
}

inline ae_int24x2 operator<< (const ae_int24x2& d0, const int sa) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT24X2_SLA) (d0, sa);
}
inline ae_int24x2 operator<<= (ae_int24x2& d, const int sa) {
  d = operator<<(d, sa);
  return d;
}

inline ae_int24x2 operator>> (const ae_int24x2& d0, const int sa) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT24X2_SRA) (d0, sa);
}
inline ae_int24x2 operator>>= (ae_int24x2& d, const int sa) {
  d = operator>>(d, sa);
  return d;
}

}

namespace ae_int24_space {
inline ae_int24x2 operator+ (const ae_int24& d0, const ae_int24x2& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT24_ADD_INT24X2) (d0, d1);
}

inline ae_int24x2 operator- (const ae_int24& d0, const ae_int24x2& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT24_SUB_INT24X2) (d0, d1);
}

inline ae_int24x2 operator& (const ae_int24& d0, const ae_int24x2& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT24_AND_INT24X2) (d0, d1);
}

inline ae_int24x2 operator^ (const ae_int24& d0, const ae_int24x2& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT24_XOR_INT24X2) (d0, d1);
}

inline ae_int24x2 operator| (const ae_int24& d0, const ae_int24x2& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT24_OR_INT24X2) (d0, d1);
}

inline ae_int24 operator+ (const ae_int24& d0, const ae_int24& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT24_ADD_INT24) (d0, d1);
}
inline ae_int24 operator+= (ae_int24& d, const ae_int24& d1) {
  d = operator+(d, d1);
  return d;
}

inline ae_int24 operator- (const ae_int24& d0, const ae_int24& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT24_SUB_INT24) (d0, d1);
}
inline ae_int24 operator-= (ae_int24& d, const ae_int24& d1) {
  d = operator-(d, d1);
  return d;
}

inline ae_int24 operator& (const ae_int24& d0, const ae_int24& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT24_AND_INT24) (d0, d1);
}
inline ae_int24 operator&= (ae_int24& d, const ae_int24& d1) {
  d = operator&(d, d1);
  return d;
}

inline ae_int24 operator^ (const ae_int24& d0, const ae_int24& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT24_XOR_INT24) (d0, d1);
}
inline ae_int24 operator^= (ae_int24& d, const ae_int24& d1) {
  d = operator^(d, d1);
  return d;
}

inline ae_int24 operator| (const ae_int24& d0, const ae_int24& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT24_OR_INT24) (d0, d1);
}
inline ae_int24 operator|= (ae_int24& d, const ae_int24& d1) {
  d = operator|(d, d1);
  return d;
}

inline ae_int32 operator* (const ae_int24& d0, const ae_int24& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT24_MUL_INT24) (d0, d1);
}

inline ae_int24 operator- (const ae_int24& d0) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT24_NEG) (d0);
}

inline ae_int24 operator~ (const ae_int24& d0) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT24_BNOT) (d0);
}

inline ae_int24 operator<< (const ae_int24& d0, const int sa) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT24_SLA) (d0, sa);
}
inline ae_int24 operator<<= (ae_int24& d, const int sa) {
  d = operator<<(d, sa);
  return d;
}

inline ae_int24 operator>> (const ae_int24& d0, const int sa) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT24_SRA) (d0, sa);
}
inline ae_int24 operator>>= (ae_int24& d, const int sa) {
  d = operator>>(d, sa);
  return d;
}

}

namespace ae_f24x2_space {
inline ae_f24x2 operator+ (const ae_f24x2& d0, const ae_f24x2& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_F24X2_ADDS_F24X2) (d0, d1);
}
inline ae_f24x2 operator+= (ae_f24x2& d, const ae_f24x2& d1) {
  d = operator+(d, d1);
  return d;
}

inline ae_f24x2 operator- (const ae_f24x2& d0, const ae_f24x2& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_F24X2_SUBS_F24X2) (d0, d1);
}
inline ae_f24x2 operator-= (ae_f24x2& d, const ae_f24x2& d1) {
  d = operator-(d, d1);
  return d;
}

inline ae_f24x2 operator& (const ae_f24x2& d0, const ae_f24x2& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_F24X2_AND_F24X2) (d0, d1);
}
inline ae_f24x2 operator&= (ae_f24x2& d, const ae_f24x2& d1) {
  d = operator&(d, d1);
  return d;
}

inline ae_f24x2 operator^ (const ae_f24x2& d0, const ae_f24x2& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_F24X2_XOR_F24X2) (d0, d1);
}
inline ae_f24x2 operator^= (ae_f24x2& d, const ae_f24x2& d1) {
  d = operator^(d, d1);
  return d;
}

inline ae_f24x2 operator| (const ae_f24x2& d0, const ae_f24x2& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_F24X2_OR_F24X2) (d0, d1);
}
inline ae_f24x2 operator|= (ae_f24x2& d, const ae_f24x2& d1) {
  d = operator|(d, d1);
  return d;
}

inline ae_f32x2 operator* (const ae_f24x2& d0, const ae_f24x2& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_F24X2_MULF_F24X2) (d0, d1);
}

inline xtbool2 operator== (const ae_f24x2& d0, const ae_f24x2& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_F24X2_EQ_F24X2) (d0, d1);
}

inline xtbool2 operator< (const ae_f24x2& d0, const ae_f24x2& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_F24X2_LT_F24X2) (d0, d1);
}

inline xtbool2 operator<= (const ae_f24x2& d0, const ae_f24x2& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_F24X2_LE_F24X2) (d0, d1);
}

inline xtbool2 operator> (const ae_f24x2& d0, const ae_f24x2& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_F24X2_GT_F24X2) (d0, d1);
}

inline xtbool2 operator>= (const ae_f24x2& d0, const ae_f24x2& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_F24X2_GE_F24X2) (d0, d1);
}

inline ae_f24x2 operator+ (const ae_f24x2& d0, const ae_f24& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_F24X2_ADDS_F24) (d0, d1);
}
inline ae_f24x2 operator+= (ae_f24x2& d, const ae_f24& d1) {
  d = operator+(d, d1);
  return d;
}

inline ae_f24x2 operator- (const ae_f24x2& d0, const ae_f24& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_F24X2_SUBS_F24) (d0, d1);
}
inline ae_f24x2 operator-= (ae_f24x2& d, const ae_f24& d1) {
  d = operator-(d, d1);
  return d;
}

inline ae_f24x2 operator& (const ae_f24x2& d0, const ae_f24& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_F24X2_AND_F24) (d0, d1);
}
inline ae_f24x2 operator&= (ae_f24x2& d, const ae_f24& d1) {
  d = operator&(d, d1);
  return d;
}

inline ae_f24x2 operator^ (const ae_f24x2& d0, const ae_f24& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_F24X2_XOR_F24) (d0, d1);
}
inline ae_f24x2 operator^= (ae_f24x2& d, const ae_f24& d1) {
  d = operator^(d, d1);
  return d;
}

inline ae_f24x2 operator| (const ae_f24x2& d0, const ae_f24& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_F24X2_OR_F24) (d0, d1);
}
inline ae_f24x2 operator|= (ae_f24x2& d, const ae_f24& d1) {
  d = operator|(d, d1);
  return d;
}

inline ae_f24x2 operator- (const ae_f24x2& d0) {
  return CSTUB_(_TIE_xt_hifi2_AE_F24X2_NEGS) (d0);
}

inline ae_f24x2 operator~ (const ae_f24x2& d0) {
  return CSTUB_(_TIE_xt_hifi2_AE_F24X2_BNOT) (d0);
}

inline ae_f24x2 operator<< (const ae_f24x2& d0, const int sa) {
  return CSTUB_(_TIE_xt_hifi2_AE_F24X2_SLA) (d0, sa);
}
inline ae_f24x2 operator<<= (ae_f24x2& d, const int sa) {
  d = operator<<(d, sa);
  return d;
}

inline ae_f24x2 operator>> (const ae_f24x2& d0, const int sa) {
  return CSTUB_(_TIE_xt_hifi2_AE_F24X2_SRA) (d0, sa);
}
inline ae_f24x2 operator>>= (ae_f24x2& d, const int sa) {
  d = operator>>(d, sa);
  return d;
}

}

namespace ae_f24_space {
inline ae_f24x2 operator+ (const ae_f24& d0, const ae_f24x2& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_F24_ADDS_F24X2) (d0, d1);
}

inline ae_f24x2 operator- (const ae_f24& d0, const ae_f24x2& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_F24_SUBS_F24X2) (d0, d1);
}

inline ae_f24x2 operator& (const ae_f24& d0, const ae_f24x2& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_F24_AND_F24X2) (d0, d1);
}

inline ae_f24x2 operator^ (const ae_f24& d0, const ae_f24x2& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_F24_XOR_F24X2) (d0, d1);
}

inline ae_f24x2 operator| (const ae_f24& d0, const ae_f24x2& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_F24_OR_F24X2) (d0, d1);
}

inline ae_f24 operator+ (const ae_f24& d0, const ae_f24& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_F24_ADDS_F24) (d0, d1);
}
inline ae_f24 operator+= (ae_f24& d, const ae_f24& d1) {
  d = operator+(d, d1);
  return d;
}

inline ae_f24 operator- (const ae_f24& d0, const ae_f24& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_F24_SUBS_F24) (d0, d1);
}
inline ae_f24 operator-= (ae_f24& d, const ae_f24& d1) {
  d = operator-(d, d1);
  return d;
}

inline ae_f24 operator& (const ae_f24& d0, const ae_f24& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_F24_AND_F24) (d0, d1);
}
inline ae_f24 operator&= (ae_f24& d, const ae_f24& d1) {
  d = operator&(d, d1);
  return d;
}

inline ae_f24 operator^ (const ae_f24& d0, const ae_f24& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_F24_XOR_F24) (d0, d1);
}
inline ae_f24 operator^= (ae_f24& d, const ae_f24& d1) {
  d = operator^(d, d1);
  return d;
}

inline ae_f24 operator| (const ae_f24& d0, const ae_f24& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_F24_OR_F24) (d0, d1);
}
inline ae_f24 operator|= (ae_f24& d, const ae_f24& d1) {
  d = operator|(d, d1);
  return d;
}

inline ae_f32 operator* (const ae_f24& d0, const ae_f24& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_F24_MULF_F24) (d0, d1);
}

inline ae_f24 operator- (const ae_f24& d0) {
  return CSTUB_(_TIE_xt_hifi2_AE_F24_NEGS) (d0);
}

inline ae_f24 operator~ (const ae_f24& d0) {
  return CSTUB_(_TIE_xt_hifi2_AE_F24_BNOT) (d0);
}

inline ae_f24 operator<< (const ae_f24& d0, const int sa) {
  return CSTUB_(_TIE_xt_hifi2_AE_F24_SLA) (d0, sa);
}
inline ae_f24 operator<<= (ae_f24& d, const int sa) {
  d = operator<<(d, sa);
  return d;
}

inline ae_f24 operator>> (const ae_f24& d0, const int sa) {
  return CSTUB_(_TIE_xt_hifi2_AE_F24_SRA) (d0, sa);
}
inline ae_f24 operator>>= (ae_f24& d, const int sa) {
  d = operator>>(d, sa);
  return d;
}

}

namespace ae_int64_space {
inline ae_int64 operator+ (const ae_int64& d0, const ae_int64& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT64_ADD) (d0, d1);
}
inline ae_int64 operator+= (ae_int64& d, const ae_int64& d1) {
  d = operator+(d, d1);
  return d;
}

inline ae_int64 operator- (const ae_int64& d0, const ae_int64& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT64_SUB) (d0, d1);
}
inline ae_int64 operator-= (ae_int64& d, const ae_int64& d1) {
  d = operator-(d, d1);
  return d;
}

inline ae_int64 operator& (const ae_int64& d0, const ae_int64& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT64_AND) (d0, d1);
}
inline ae_int64 operator&= (ae_int64& d, const ae_int64& d1) {
  d = operator&(d, d1);
  return d;
}

inline ae_int64 operator^ (const ae_int64& d0, const ae_int64& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT64_XOR) (d0, d1);
}
inline ae_int64 operator^= (ae_int64& d, const ae_int64& d1) {
  d = operator^(d, d1);
  return d;
}

inline ae_int64 operator| (const ae_int64& d0, const ae_int64& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT64_OR) (d0, d1);
}
inline ae_int64 operator|= (ae_int64& d, const ae_int64& d1) {
  d = operator|(d, d1);
  return d;
}

inline ae_int64 operator- (const ae_int64& d0) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT64_NEG) (d0);
}

inline ae_int64 operator~ (const ae_int64& d0) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT64_BNOT) (d0);
}

inline ae_int64 operator<< (const ae_int64& d0, const int sa) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT64_SLA) (d0, sa);
}
inline ae_int64 operator<<= (ae_int64& d, const int sa) {
  d = operator<<(d, sa);
  return d;
}

inline ae_int64 operator>> (const ae_int64& d0, const int sa) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT64_SRA) (d0, sa);
}
inline ae_int64 operator>>= (ae_int64& d, const int sa) {
  d = operator>>(d, sa);
  return d;
}

inline xtbool operator== (const ae_int64& d0, const ae_int64& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT64_EQ) (d0, d1);
}

inline xtbool operator< (const ae_int64& d0, const ae_int64& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT64_LT) (d0, d1);
}

inline xtbool operator<= (const ae_int64& d0, const ae_int64& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT64_LE) (d0, d1);
}

inline xtbool operator> (const ae_int64& d0, const ae_int64& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT64_GT) (d0, d1);
}

inline xtbool operator>= (const ae_int64& d0, const ae_int64& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT64_GE) (d0, d1);
}

}

namespace ae_f64_space {
inline ae_f64 operator+ (const ae_f64& d0, const ae_f64& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_F64_ADDS) (d0, d1);
}
inline ae_f64 operator+= (ae_f64& d, const ae_f64& d1) {
  d = operator+(d, d1);
  return d;
}

inline ae_f64 operator- (const ae_f64& d0, const ae_f64& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_F64_SUBS) (d0, d1);
}
inline ae_f64 operator-= (ae_f64& d, const ae_f64& d1) {
  d = operator-(d, d1);
  return d;
}

inline ae_f64 operator& (const ae_f64& d0, const ae_f64& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_F64_AND) (d0, d1);
}
inline ae_f64 operator&= (ae_f64& d, const ae_f64& d1) {
  d = operator&(d, d1);
  return d;
}

inline ae_f64 operator^ (const ae_f64& d0, const ae_f64& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_F64_XOR) (d0, d1);
}
inline ae_f64 operator^= (ae_f64& d, const ae_f64& d1) {
  d = operator^(d, d1);
  return d;
}

inline ae_f64 operator| (const ae_f64& d0, const ae_f64& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_F64_OR) (d0, d1);
}
inline ae_f64 operator|= (ae_f64& d, const ae_f64& d1) {
  d = operator|(d, d1);
  return d;
}

inline ae_f64 operator- (const ae_f64& d0) {
  return CSTUB_(_TIE_xt_hifi2_AE_F64_NEGS) (d0);
}

inline ae_f64 operator~ (const ae_f64& d0) {
  return CSTUB_(_TIE_xt_hifi2_AE_F64_BNOT) (d0);
}

inline ae_f64 operator<< (const ae_f64& d0, const int sa) {
  return CSTUB_(_TIE_xt_hifi2_AE_F64_SLAS) (d0, sa);
}
inline ae_f64 operator<<= (ae_f64& d, const int sa) {
  d = operator<<(d, sa);
  return d;
}

inline ae_f64 operator>> (const ae_f64& d0, const int sa) {
  return CSTUB_(_TIE_xt_hifi2_AE_F64_SRA) (d0, sa);
}
inline ae_f64 operator>>= (ae_f64& d, const int sa) {
  d = operator>>(d, sa);
  return d;
}

inline xtbool operator== (const ae_f64& d0, const ae_f64& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_F64_EQ) (d0, d1);
}

inline xtbool operator< (const ae_f64& d0, const ae_f64& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_F64_LT) (d0, d1);
}

inline xtbool operator<= (const ae_f64& d0, const ae_f64& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_F64_LE) (d0, d1);
}

inline xtbool operator> (const ae_f64& d0, const ae_f64& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_F64_GT) (d0, d1);
}

inline xtbool operator>= (const ae_f64& d0, const ae_f64& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_F64_GE) (d0, d1);
}

}

namespace ae_q56s_space {
inline ae_q56s operator+ (const ae_q56s& d0, const ae_q56s& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_Q56S_ADD) (d0, d1);
}
inline ae_q56s operator+= (ae_q56s& d, const ae_q56s& d1) {
  d = operator+(d, d1);
  return d;
}

inline ae_q56s operator- (const ae_q56s& d0, const ae_q56s& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_Q56S_SUB) (d0, d1);
}
inline ae_q56s operator-= (ae_q56s& d, const ae_q56s& d1) {
  d = operator-(d, d1);
  return d;
}

inline ae_q56s operator& (const ae_q56s& d0, const ae_q56s& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_Q56S_AND) (d0, d1);
}
inline ae_q56s operator&= (ae_q56s& d, const ae_q56s& d1) {
  d = operator&(d, d1);
  return d;
}

inline ae_q56s operator^ (const ae_q56s& d0, const ae_q56s& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_Q56S_XOR) (d0, d1);
}
inline ae_q56s operator^= (ae_q56s& d, const ae_q56s& d1) {
  d = operator^(d, d1);
  return d;
}

inline ae_q56s operator| (const ae_q56s& d0, const ae_q56s& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_Q56S_OR) (d0, d1);
}
inline ae_q56s operator|= (ae_q56s& d, const ae_q56s& d1) {
  d = operator|(d, d1);
  return d;
}

inline ae_q56s operator- (const ae_q56s& d0) {
  return CSTUB_(_TIE_xt_hifi2_AE_Q56S_NEG) (d0);
}

inline ae_q56s operator~ (const ae_q56s& d0) {
  return CSTUB_(_TIE_xt_hifi2_AE_Q56S_BNOT) (d0);
}

inline ae_q56s operator<< (const ae_q56s& d0, const int sa) {
  return CSTUB_(_TIE_xt_hifi2_AE_Q56S_SLA) (d0, sa);
}
inline ae_q56s operator<<= (ae_q56s& d, const int sa) {
  d = operator<<(d, sa);
  return d;
}

inline ae_q56s operator>> (const ae_q56s& d0, const int sa) {
  return CSTUB_(_TIE_xt_hifi2_AE_Q56S_SRA) (d0, sa);
}
inline ae_q56s operator>>= (ae_q56s& d, const int sa) {
  d = operator>>(d, sa);
  return d;
}

inline xtbool operator== (const ae_q56s& d0, const ae_q56s& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_Q56S_EQ) (d0, d1);
}

inline xtbool operator< (const ae_q56s& d0, const ae_q56s& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_Q56S_LT) (d0, d1);
}

inline xtbool operator<= (const ae_q56s& d0, const ae_q56s& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_Q56S_LE) (d0, d1);
}

inline xtbool operator> (const ae_q56s& d0, const ae_q56s& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_Q56S_GT) (d0, d1);
}

inline xtbool operator>= (const ae_q56s& d0, const ae_q56s& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_Q56S_GE) (d0, d1);
}

}

namespace ae_int32x4_space {
inline ae_int32x4 operator+ (const ae_int32x4& d0, const ae_int32x4& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT32X4_ADD) (d0, d1);
}
inline ae_int32x4 operator+= (ae_int32x4& d, const ae_int32x4& d1) {
  d = operator+(d, d1);
  return d;
}

inline ae_int32x4 operator- (const ae_int32x4& d0, const ae_int32x4& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT32X4_SUB) (d0, d1);
}
inline ae_int32x4 operator-= (ae_int32x4& d, const ae_int32x4& d1) {
  d = operator-(d, d1);
  return d;
}

inline ae_int32x4 operator- (const ae_int32x4& d0) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT32X4_NEG32) (d0);
}

inline ae_int32x4 operator* (const ae_int32x4& d0, const ae_int16x4& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT32X4_INT16X4_MUL) (d0, d1);
}
inline ae_int32x4 operator*= (ae_int32x4& d, const ae_int16x4& d1) {
  d = operator*(d, d1);
  return d;
}

inline ae_int32x4 operator& (const ae_int32x4& d0, const ae_int32x4& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT32X4_AND) (d0, d1);
}
inline ae_int32x4 operator&= (ae_int32x4& d, const ae_int32x4& d1) {
  d = operator&(d, d1);
  return d;
}

inline ae_int32x4 operator| (const ae_int32x4& d0, const ae_int32x4& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT32X4_OR) (d0, d1);
}
inline ae_int32x4 operator|= (ae_int32x4& d, const ae_int32x4& d1) {
  d = operator|(d, d1);
  return d;
}

inline ae_int32x4 operator^ (const ae_int32x4& d0, const ae_int32x4& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT32X4_XOR) (d0, d1);
}
inline ae_int32x4 operator^= (ae_int32x4& d, const ae_int32x4& d1) {
  d = operator^(d, d1);
  return d;
}

inline ae_int32x4 operator~ (const ae_int32x4& d0) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT32X4_BNOT) (d0);
}

inline ae_int32x4 operator<< (const ae_int32x4& d0, const int a) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT32X4_SLAA32) (d0, a);
}
inline ae_int32x4 operator<<= (ae_int32x4& d, const int a) {
  d = operator<<(d, a);
  return d;
}

inline ae_int32x4 operator>> (const ae_int32x4& d0, const int a) {
  return CSTUB_(_TIE_xt_hifi2_AE_INT32X4_SRAA32) (d0, a);
}
inline ae_int32x4 operator>>= (ae_int32x4& d, const int a) {
  d = operator>>(d, a);
  return d;
}

}

namespace ae_f32x4_space {
inline ae_f32x4 operator+ (const ae_f32x4& d0, const ae_f32x4& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_F32X4_ADD) (d0, d1);
}
inline ae_f32x4 operator+= (ae_f32x4& d, const ae_f32x4& d1) {
  d = operator+(d, d1);
  return d;
}

inline ae_f32x4 operator- (const ae_f32x4& d0, const ae_f32x4& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_F32X4_SUB) (d0, d1);
}
inline ae_f32x4 operator-= (ae_f32x4& d, const ae_f32x4& d1) {
  d = operator-(d, d1);
  return d;
}

inline ae_f32x4 operator- (const ae_f32x4& d0) {
  return CSTUB_(_TIE_xt_hifi2_AE_F32X4_NEG32) (d0);
}

inline ae_f32x4 operator* (const ae_f32x4& d0, const ae_f16x4& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_F32X4_F16X4_MUL) (d0, d1);
}
inline ae_f32x4 operator*= (ae_f32x4& d, const ae_f16x4& d1) {
  d = operator*(d, d1);
  return d;
}

inline ae_f32x4 operator& (const ae_f32x4& d0, const ae_f32x4& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_F32X4_AND) (d0, d1);
}
inline ae_f32x4 operator&= (ae_f32x4& d, const ae_f32x4& d1) {
  d = operator&(d, d1);
  return d;
}

inline ae_f32x4 operator| (const ae_f32x4& d0, const ae_f32x4& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_F32X4_OR) (d0, d1);
}
inline ae_f32x4 operator|= (ae_f32x4& d, const ae_f32x4& d1) {
  d = operator|(d, d1);
  return d;
}

inline ae_f32x4 operator^ (const ae_f32x4& d0, const ae_f32x4& d1) {
  return CSTUB_(_TIE_xt_hifi2_AE_F32X4_XOR) (d0, d1);
}
inline ae_f32x4 operator^= (ae_f32x4& d, const ae_f32x4& d1) {
  d = operator^(d, d1);
  return d;
}

inline ae_f32x4 operator~ (const ae_f32x4& d0) {
  return CSTUB_(_TIE_xt_hifi2_AE_F32X4_BNOT) (d0);
}

inline ae_f32x4 operator<< (const ae_f32x4& d0, const int a) {
  return CSTUB_(_TIE_xt_hifi2_AE_F32X4_SLAA32S) (d0, a);
}
inline ae_f32x4 operator<<= (ae_f32x4& d, const int a) {
  d = operator<<(d, a);
  return d;
}

inline ae_f32x4 operator>> (const ae_f32x4& d0, const int a) {
  return CSTUB_(_TIE_xt_hifi2_AE_F32X4_SRAA32) (d0, a);
}
inline ae_f32x4 operator>>= (ae_f32x4& d, const int a) {
  d = operator>>(d, a);
  return d;
}

}

/* Proto macros */
#ifdef _STRICT_ARG_TYPE
#define AE_ZALIGN64() \
	CSTUB_(_TIE_xt_hifi2_AE_ZALIGN64)()
#else
#define AE_ZALIGN64() \
	CSTUB_(_TIE_xt_hifi2_AE_ZALIGN64)()
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_LALIGN64_I(a, i64) \
	CSTUB_(_TIE_xt_hifi2_AE_LALIGN64_I)(a, i64)
#else
#define AE_LALIGN64_I(a, i64) \
	CSTUB_(_TIE_xt_hifi2_AE_LALIGN64_I)(a, i64)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SALIGN64_I(su, a, i64) \
	CSTUB_(_TIE_xt_hifi2_AE_SALIGN64_I)(su, a, i64)
#else
#define AE_SALIGN64_I(su, a, i64) \
	CSTUB_(_TIE_xt_hifi2_AE_SALIGN64_I)(su, a, i64)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVALIGN(v) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVALIGN)(v)
#else
#define AE_MOVALIGN(v) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVALIGN)(v)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_ADDBRBA32(ab, ai) \
	CSTUB_(_TIE_xt_hifi2_AE_ADDBRBA32)(ab, ai)
#else
#define AE_ADDBRBA32(ab, ai) \
	CSTUB_(_TIE_xt_hifi2_AE_ADDBRBA32)(ab, ai)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SHA32(ai) \
	CSTUB_(_TIE_xt_hifi2_AE_SHA32)(ai)
#else
#define AE_SHA32(ai) \
	CSTUB_(_TIE_xt_hifi2_AE_SHA32)(ai)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_VLDSHT(ar_t) \
	CSTUB_(_TIE_xt_hifi2_AE_VLDSHT)(ar_t)
#else
#define AE_VLDSHT(ar_t) \
	CSTUB_(_TIE_xt_hifi2_AE_VLDSHT)(ar_t)
#endif

#ifdef _STRICT_ARG_TYPE
#define XT_NOP_N() \
	CSTUB_(_TIE_xt_density_NOP_N)()
#else
#define XT_NOP_N() \
	CSTUB_(_TIE_xt_density_NOP_N)()
#endif

#ifdef _STRICT_ARG_TYPE
#define XT_NOP() \
	CSTUB_(_TIE_xt_core_NOP)()
#else
#define XT_NOP() \
	CSTUB_(_TIE_xt_core_NOP)()
#endif

#ifdef _STRICT_ARG_TYPE
#define XT_DEPBITS(art, ars, low_depbits, lngth_depbits) \
	CSTUB_(_TIE_xt_core_DEPBITS)(art, ars, low_depbits, lngth_depbits)
#else
#define XT_DEPBITS(art, ars, low_depbits, lngth_depbits) { \
	unsigned int __art = art; \
	CSTUB_(_TIE_xt_core_DEPBITS)(__art, ars, low_depbits, lngth_depbits); \
	(art) = __art; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define XT_XORB(bs, bt) \
	CSTUB_(_TIE_xt_booleans_XORB)(bs, bt)
#else
#define XT_XORB(bs, bt) \
	CSTUB_(_TIE_xt_booleans_XORB)(bs, bt)
#endif

#ifdef _STRICT_ARG_TYPE
#define XT_ORBC(bs, bt) \
	CSTUB_(_TIE_xt_booleans_ORBC)(bs, bt)
#else
#define XT_ORBC(bs, bt) \
	CSTUB_(_TIE_xt_booleans_ORBC)(bs, bt)
#endif

#ifdef _STRICT_ARG_TYPE
#define XT_ORB(bs, bt) \
	CSTUB_(_TIE_xt_booleans_ORB)(bs, bt)
#else
#define XT_ORB(bs, bt) \
	CSTUB_(_TIE_xt_booleans_ORB)(bs, bt)
#endif

#ifdef _STRICT_ARG_TYPE
#define XT_ANDBC(bs, bt) \
	CSTUB_(_TIE_xt_booleans_ANDBC)(bs, bt)
#else
#define XT_ANDBC(bs, bt) \
	CSTUB_(_TIE_xt_booleans_ANDBC)(bs, bt)
#endif

#ifdef _STRICT_ARG_TYPE
#define XT_ANDB(bs, bt) \
	CSTUB_(_TIE_xt_booleans_ANDB)(bs, bt)
#else
#define XT_ANDB(bs, bt) \
	CSTUB_(_TIE_xt_booleans_ANDB)(bs, bt)
#endif

#ifdef _STRICT_ARG_TYPE
#define XT_ALL4(bs4) \
	CSTUB_(_TIE_xt_booleans_ALL4)(bs4)
#else
#define XT_ALL4(bs4) \
	CSTUB_(_TIE_xt_booleans_ALL4)(bs4)
#endif

#ifdef _STRICT_ARG_TYPE
#define XT_ANY4(bs4) \
	CSTUB_(_TIE_xt_booleans_ANY4)(bs4)
#else
#define XT_ANY4(bs4) \
	CSTUB_(_TIE_xt_booleans_ANY4)(bs4)
#endif

#ifdef _STRICT_ARG_TYPE
#define XT_ALL8(bs8) \
	CSTUB_(_TIE_xt_booleans_ALL8)(bs8)
#else
#define XT_ALL8(bs8) \
	CSTUB_(_TIE_xt_booleans_ALL8)(bs8)
#endif

#ifdef _STRICT_ARG_TYPE
#define XT_ANY8(bs8) \
	CSTUB_(_TIE_xt_booleans_ANY8)(bs8)
#else
#define XT_ANY8(bs8) \
	CSTUB_(_TIE_xt_booleans_ANY8)(bs8)
#endif

#ifdef _STRICT_ARG_TYPE
#define XT_MOVT(arr, ars, bt) \
	CSTUB_(_TIE_xt_booleans_MOVT)(arr, ars, bt)
#else
#define XT_MOVT(arr, ars, bt) { \
	unsigned int __arr = arr; \
	CSTUB_(_TIE_xt_booleans_MOVT)(__arr, ars, bt); \
	(arr) = __arr; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define XT_MOVF(arr, ars, bt) \
	CSTUB_(_TIE_xt_booleans_MOVF)(arr, ars, bt)
#else
#define XT_MOVF(arr, ars, bt) { \
	unsigned int __arr = arr; \
	CSTUB_(_TIE_xt_booleans_MOVF)(__arr, ars, bt); \
	(arr) = __arr; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define READ_IMPWIRE() \
	CSTUB_(_TIE_xt_ioports_READ_IMPWIRE)()
#else
#define READ_IMPWIRE() \
	CSTUB_(_TIE_xt_ioports_READ_IMPWIRE)()
#endif

#ifdef _STRICT_ARG_TYPE
#define SETB_EXPSTATE(bitindex) \
	CSTUB_(_TIE_xt_ioports_SETB_EXPSTATE)(bitindex)
#else
#define SETB_EXPSTATE(bitindex) \
	CSTUB_(_TIE_xt_ioports_SETB_EXPSTATE)(bitindex)
#endif

#ifdef _STRICT_ARG_TYPE
#define CLRB_EXPSTATE(bitindex) \
	CSTUB_(_TIE_xt_ioports_CLRB_EXPSTATE)(bitindex)
#else
#define CLRB_EXPSTATE(bitindex) \
	CSTUB_(_TIE_xt_ioports_CLRB_EXPSTATE)(bitindex)
#endif

#ifdef _STRICT_ARG_TYPE
#define WRMSK_EXPSTATE(art, ars) \
	CSTUB_(_TIE_xt_ioports_WRMSK_EXPSTATE)(art, ars)
#else
#define WRMSK_EXPSTATE(art, ars) \
	CSTUB_(_TIE_xt_ioports_WRMSK_EXPSTATE)(art, ars)
#endif

#ifdef _STRICT_ARG_TYPE
#define XT_L32I_N(p, i) \
	CSTUB_(_TIE_xt_density_L32I_N)(p, i)
#else
#define XT_L32I_N(p, i) \
	CSTUB_(_TIE_xt_density_L32I_N)(p, i)
#endif

#ifdef _STRICT_ARG_TYPE
#define XT_S32I_N(t, p, i) \
	CSTUB_(_TIE_xt_density_S32I_N)(t, p, i)
#else
#define XT_S32I_N(t, p, i) \
	CSTUB_(_TIE_xt_density_S32I_N)(t, p, i)
#endif

#ifdef _STRICT_ARG_TYPE
#define XT_ADD_N(s, t) \
	CSTUB_(_TIE_xt_density_ADD_N)(s, t)
#else
#define XT_ADD_N(s, t) \
	CSTUB_(_TIE_xt_density_ADD_N)(s, t)
#endif

#ifdef _STRICT_ARG_TYPE
#define XT_ADDI_N(s, i) \
	CSTUB_(_TIE_xt_density_ADDI_N)(s, i)
#else
#define XT_ADDI_N(s, i) \
	CSTUB_(_TIE_xt_density_ADDI_N)(s, i)
#endif

#ifdef _STRICT_ARG_TYPE
#define XT_MOV_N(s) \
	CSTUB_(_TIE_xt_density_MOV_N)(s)
#else
#define XT_MOV_N(s) \
	CSTUB_(_TIE_xt_density_MOV_N)(s)
#endif

#ifdef _STRICT_ARG_TYPE
#define XT_MOVI_N(i) \
	CSTUB_(_TIE_xt_density_MOVI_N)(i)
#else
#define XT_MOVI_N(i) \
	CSTUB_(_TIE_xt_density_MOVI_N)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define XT_uint32_loadi(p, o) \
	CSTUB_(_TIE_xt_core_uint32_loadi)(p, o)
#else
#define XT_uint32_loadi(p, o) \
	CSTUB_(_TIE_xt_core_uint32_loadi)(p, o)
#endif

#ifdef _STRICT_ARG_TYPE
#define XT_uint32_storei(c, p, o) \
	CSTUB_(_TIE_xt_core_uint32_storei)(c, p, o)
#else
#define XT_uint32_storei(c, p, o) \
	CSTUB_(_TIE_xt_core_uint32_storei)(c, p, o)
#endif

#ifdef _STRICT_ARG_TYPE
#define XT_uint32_move(b) \
	CSTUB_(_TIE_xt_core_uint32_move)(b)
#else
#define XT_uint32_move(b) \
	CSTUB_(_TIE_xt_core_uint32_move)(b)
#endif

#ifdef _STRICT_ARG_TYPE
#define XT_ADDI(s, i) \
	CSTUB_(_TIE_xt_core_ADDI)(s, i)
#else
#define XT_ADDI(s, i) \
	CSTUB_(_TIE_xt_core_ADDI)(s, i)
#endif

#ifdef _STRICT_ARG_TYPE
#define XT_OR(s, t) \
	CSTUB_(_TIE_xt_core_OR)(s, t)
#else
#define XT_OR(s, t) \
	CSTUB_(_TIE_xt_core_OR)(s, t)
#endif

#ifdef _STRICT_ARG_TYPE
#define XT_L32I(p, i) \
	CSTUB_(_TIE_xt_core_L32I)(p, i)
#else
#define XT_L32I(p, i) \
	CSTUB_(_TIE_xt_core_L32I)(p, i)
#endif

#ifdef _STRICT_ARG_TYPE
#define XT_S32I(r, p, i) \
	CSTUB_(_TIE_xt_core_S32I)(r, p, i)
#else
#define XT_S32I(r, p, i) \
	CSTUB_(_TIE_xt_core_S32I)(r, p, i)
#endif

#ifdef _STRICT_ARG_TYPE
#define XT_S32NB(r, p, i) \
	CSTUB_(_TIE_xt_core_S32NB)(r, p, i)
#else
#define XT_S32NB(r, p, i) \
	CSTUB_(_TIE_xt_core_S32NB)(r, p, i)
#endif

#ifdef _STRICT_ARG_TYPE
#define XT_L8UI(p, i) \
	CSTUB_(_TIE_xt_core_L8UI)(p, i)
#else
#define XT_L8UI(p, i) \
	CSTUB_(_TIE_xt_core_L8UI)(p, i)
#endif

#ifdef _STRICT_ARG_TYPE
#define XT_S8I(r, p, i) \
	CSTUB_(_TIE_xt_core_S8I)(r, p, i)
#else
#define XT_S8I(r, p, i) \
	CSTUB_(_TIE_xt_core_S8I)(r, p, i)
#endif

#ifdef _STRICT_ARG_TYPE
#define XT_L16UI(p, i) \
	CSTUB_(_TIE_xt_core_L16UI)(p, i)
#else
#define XT_L16UI(p, i) \
	CSTUB_(_TIE_xt_core_L16UI)(p, i)
#endif

#ifdef _STRICT_ARG_TYPE
#define XT_L16SI(p, i) \
	CSTUB_(_TIE_xt_core_L16SI)(p, i)
#else
#define XT_L16SI(p, i) \
	CSTUB_(_TIE_xt_core_L16SI)(p, i)
#endif

#ifdef _STRICT_ARG_TYPE
#define XT_S16I(r, p, i) \
	CSTUB_(_TIE_xt_core_S16I)(r, p, i)
#else
#define XT_S16I(r, p, i) \
	CSTUB_(_TIE_xt_core_S16I)(r, p, i)
#endif

#ifdef _STRICT_ARG_TYPE
#define XT_ADDMI(s, i) \
	CSTUB_(_TIE_xt_core_ADDMI)(s, i)
#else
#define XT_ADDMI(s, i) \
	CSTUB_(_TIE_xt_core_ADDMI)(s, i)
#endif

#ifdef _STRICT_ARG_TYPE
#define XT_ADD(s, t) \
	CSTUB_(_TIE_xt_core_ADD)(s, t)
#else
#define XT_ADD(s, t) \
	CSTUB_(_TIE_xt_core_ADD)(s, t)
#endif

#ifdef _STRICT_ARG_TYPE
#define XT_ADDX2(s, t) \
	CSTUB_(_TIE_xt_core_ADDX2)(s, t)
#else
#define XT_ADDX2(s, t) \
	CSTUB_(_TIE_xt_core_ADDX2)(s, t)
#endif

#ifdef _STRICT_ARG_TYPE
#define XT_ADDX4(s, t) \
	CSTUB_(_TIE_xt_core_ADDX4)(s, t)
#else
#define XT_ADDX4(s, t) \
	CSTUB_(_TIE_xt_core_ADDX4)(s, t)
#endif

#ifdef _STRICT_ARG_TYPE
#define XT_ADDX8(s, t) \
	CSTUB_(_TIE_xt_core_ADDX8)(s, t)
#else
#define XT_ADDX8(s, t) \
	CSTUB_(_TIE_xt_core_ADDX8)(s, t)
#endif

#ifdef _STRICT_ARG_TYPE
#define XT_SUB(s, t) \
	CSTUB_(_TIE_xt_core_SUB)(s, t)
#else
#define XT_SUB(s, t) \
	CSTUB_(_TIE_xt_core_SUB)(s, t)
#endif

#ifdef _STRICT_ARG_TYPE
#define XT_SUBX2(s, t) \
	CSTUB_(_TIE_xt_core_SUBX2)(s, t)
#else
#define XT_SUBX2(s, t) \
	CSTUB_(_TIE_xt_core_SUBX2)(s, t)
#endif

#ifdef _STRICT_ARG_TYPE
#define XT_SUBX4(s, t) \
	CSTUB_(_TIE_xt_core_SUBX4)(s, t)
#else
#define XT_SUBX4(s, t) \
	CSTUB_(_TIE_xt_core_SUBX4)(s, t)
#endif

#ifdef _STRICT_ARG_TYPE
#define XT_SUBX8(s, t) \
	CSTUB_(_TIE_xt_core_SUBX8)(s, t)
#else
#define XT_SUBX8(s, t) \
	CSTUB_(_TIE_xt_core_SUBX8)(s, t)
#endif

#ifdef _STRICT_ARG_TYPE
#define XT_SALT(s, t) \
	CSTUB_(_TIE_xt_core_SALT)(s, t)
#else
#define XT_SALT(s, t) \
	CSTUB_(_TIE_xt_core_SALT)(s, t)
#endif

#ifdef _STRICT_ARG_TYPE
#define XT_SALTU(s, t) \
	CSTUB_(_TIE_xt_core_SALTU)(s, t)
#else
#define XT_SALTU(s, t) \
	CSTUB_(_TIE_xt_core_SALTU)(s, t)
#endif

#ifdef _STRICT_ARG_TYPE
#define XT_AND(s, t) \
	CSTUB_(_TIE_xt_core_AND)(s, t)
#else
#define XT_AND(s, t) \
	CSTUB_(_TIE_xt_core_AND)(s, t)
#endif

#ifdef _STRICT_ARG_TYPE
#define XT_XOR(s, t) \
	CSTUB_(_TIE_xt_core_XOR)(s, t)
#else
#define XT_XOR(s, t) \
	CSTUB_(_TIE_xt_core_XOR)(s, t)
#endif

#ifdef _STRICT_ARG_TYPE
#define XT_EXTUI(t, i, o) \
	CSTUB_(_TIE_xt_core_EXTUI)(t, i, o)
#else
#define XT_EXTUI(t, i, o) \
	CSTUB_(_TIE_xt_core_EXTUI)(t, i, o)
#endif

#ifdef _STRICT_ARG_TYPE
#define XT_MOVI(i) \
	CSTUB_(_TIE_xt_core_MOVI)(i)
#else
#define XT_MOVI(i) \
	CSTUB_(_TIE_xt_core_MOVI)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define XT_MOVEQZ(r, s, t) \
	CSTUB_(_TIE_xt_core_MOVEQZ)(r, s, t)
#else
#define XT_MOVEQZ(r, s, t) { \
	int __r = r; \
	CSTUB_(_TIE_xt_core_MOVEQZ)(__r, s, t); \
	(r) = __r; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define XT_MOVNEZ(r, s, t) \
	CSTUB_(_TIE_xt_core_MOVNEZ)(r, s, t)
#else
#define XT_MOVNEZ(r, s, t) { \
	int __r = r; \
	CSTUB_(_TIE_xt_core_MOVNEZ)(__r, s, t); \
	(r) = __r; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define XT_MOVLTZ(r, s, t) \
	CSTUB_(_TIE_xt_core_MOVLTZ)(r, s, t)
#else
#define XT_MOVLTZ(r, s, t) { \
	int __r = r; \
	CSTUB_(_TIE_xt_core_MOVLTZ)(__r, s, t); \
	(r) = __r; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define XT_MOVGEZ(r, s, t) \
	CSTUB_(_TIE_xt_core_MOVGEZ)(r, s, t)
#else
#define XT_MOVGEZ(r, s, t) { \
	int __r = r; \
	CSTUB_(_TIE_xt_core_MOVGEZ)(__r, s, t); \
	(r) = __r; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define XT_NEG(t) \
	CSTUB_(_TIE_xt_core_NEG)(t)
#else
#define XT_NEG(t) \
	CSTUB_(_TIE_xt_core_NEG)(t)
#endif

#ifdef _STRICT_ARG_TYPE
#define XT_ABS(t) \
	CSTUB_(_TIE_xt_core_ABS)(t)
#else
#define XT_ABS(t) \
	CSTUB_(_TIE_xt_core_ABS)(t)
#endif

#ifdef _STRICT_ARG_TYPE
#define XT_SSR(s) \
	CSTUB_(_TIE_xt_core_SSR)(s)
#else
#define XT_SSR(s) \
	CSTUB_(_TIE_xt_core_SSR)(s)
#endif

#ifdef _STRICT_ARG_TYPE
#define XT_SSL(s) \
	CSTUB_(_TIE_xt_core_SSL)(s)
#else
#define XT_SSL(s) \
	CSTUB_(_TIE_xt_core_SSL)(s)
#endif

#ifdef _STRICT_ARG_TYPE
#define XT_SSA8L(s) \
	CSTUB_(_TIE_xt_core_SSA8L)(s)
#else
#define XT_SSA8L(s) \
	CSTUB_(_TIE_xt_core_SSA8L)(s)
#endif

#ifdef _STRICT_ARG_TYPE
#define XT_SSA8B(s) \
	CSTUB_(_TIE_xt_core_SSA8B)(s)
#else
#define XT_SSA8B(s) \
	CSTUB_(_TIE_xt_core_SSA8B)(s)
#endif

#ifdef _STRICT_ARG_TYPE
#define XT_SSAI(i) \
	CSTUB_(_TIE_xt_core_SSAI)(i)
#else
#define XT_SSAI(i) \
	CSTUB_(_TIE_xt_core_SSAI)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define XT_SLL(s) \
	CSTUB_(_TIE_xt_core_SLL)(s)
#else
#define XT_SLL(s) \
	CSTUB_(_TIE_xt_core_SLL)(s)
#endif

#ifdef _STRICT_ARG_TYPE
#define XT_SRC(s, t) \
	CSTUB_(_TIE_xt_core_SRC)(s, t)
#else
#define XT_SRC(s, t) \
	CSTUB_(_TIE_xt_core_SRC)(s, t)
#endif

#ifdef _STRICT_ARG_TYPE
#define XT_SRL(t) \
	CSTUB_(_TIE_xt_core_SRL)(t)
#else
#define XT_SRL(t) \
	CSTUB_(_TIE_xt_core_SRL)(t)
#endif

#ifdef _STRICT_ARG_TYPE
#define XT_SRA(t) \
	CSTUB_(_TIE_xt_core_SRA)(t)
#else
#define XT_SRA(t) \
	CSTUB_(_TIE_xt_core_SRA)(t)
#endif

#ifdef _STRICT_ARG_TYPE
#define XT_SLLI(s, i) \
	CSTUB_(_TIE_xt_core_SLLI)(s, i)
#else
#define XT_SLLI(s, i) \
	CSTUB_(_TIE_xt_core_SLLI)(s, i)
#endif

#ifdef _STRICT_ARG_TYPE
#define XT_SRAI(t, i) \
	CSTUB_(_TIE_xt_core_SRAI)(t, i)
#else
#define XT_SRAI(t, i) \
	CSTUB_(_TIE_xt_core_SRAI)(t, i)
#endif

#ifdef _STRICT_ARG_TYPE
#define XT_SRLI(t, i) \
	CSTUB_(_TIE_xt_core_SRLI)(t, i)
#else
#define XT_SRLI(t, i) \
	CSTUB_(_TIE_xt_core_SRLI)(t, i)
#endif

#ifdef _STRICT_ARG_TYPE
#define XT_SSAI_SRC(src1, src2, amount) \
	CSTUB_(_TIE_xt_core_SSAI_SRC)(src1, src2, amount)
#else
#define XT_SSAI_SRC(src1, src2, amount) \
	CSTUB_(_TIE_xt_core_SSAI_SRC)(src1, src2, amount)
#endif

#ifdef _STRICT_ARG_TYPE
#define XT_SSR_SRC(src1, src2, amount) \
	CSTUB_(_TIE_xt_core_SSR_SRC)(src1, src2, amount)
#else
#define XT_SSR_SRC(src1, src2, amount) \
	CSTUB_(_TIE_xt_core_SSR_SRC)(src1, src2, amount)
#endif

#ifdef _STRICT_ARG_TYPE
#define XT_SSR_SRA(src, amount) \
	CSTUB_(_TIE_xt_core_SSR_SRA)(src, amount)
#else
#define XT_SSR_SRA(src, amount) \
	CSTUB_(_TIE_xt_core_SSR_SRA)(src, amount)
#endif

#ifdef _STRICT_ARG_TYPE
#define XT_SSR_SRL(src, amount) \
	CSTUB_(_TIE_xt_core_SSR_SRL)(src, amount)
#else
#define XT_SSR_SRL(src, amount) \
	CSTUB_(_TIE_xt_core_SSR_SRL)(src, amount)
#endif

#ifdef _STRICT_ARG_TYPE
#define XT_SSL_SLL(src, amount) \
	CSTUB_(_TIE_xt_core_SSL_SLL)(src, amount)
#else
#define XT_SSL_SLL(src, amount) \
	CSTUB_(_TIE_xt_core_SSL_SLL)(src, amount)
#endif

#ifdef _STRICT_ARG_TYPE
#define XT_CLAMPS(s, i) \
	CSTUB_(_TIE_xt_misc_CLAMPS)(s, i)
#else
#define XT_CLAMPS(s, i) \
	CSTUB_(_TIE_xt_misc_CLAMPS)(s, i)
#endif

#ifdef _STRICT_ARG_TYPE
#define XT_MIN(s, t) \
	CSTUB_(_TIE_xt_misc_MIN)(s, t)
#else
#define XT_MIN(s, t) \
	CSTUB_(_TIE_xt_misc_MIN)(s, t)
#endif

#ifdef _STRICT_ARG_TYPE
#define XT_MAX(s, t) \
	CSTUB_(_TIE_xt_misc_MAX)(s, t)
#else
#define XT_MAX(s, t) \
	CSTUB_(_TIE_xt_misc_MAX)(s, t)
#endif

#ifdef _STRICT_ARG_TYPE
#define XT_MINU(s, t) \
	CSTUB_(_TIE_xt_misc_MINU)(s, t)
#else
#define XT_MINU(s, t) \
	CSTUB_(_TIE_xt_misc_MINU)(s, t)
#endif

#ifdef _STRICT_ARG_TYPE
#define XT_MAXU(s, t) \
	CSTUB_(_TIE_xt_misc_MAXU)(s, t)
#else
#define XT_MAXU(s, t) \
	CSTUB_(_TIE_xt_misc_MAXU)(s, t)
#endif

#ifdef _STRICT_ARG_TYPE
#define XT_NSA(s) \
	CSTUB_(_TIE_xt_misc_NSA)(s)
#else
#define XT_NSA(s) \
	CSTUB_(_TIE_xt_misc_NSA)(s)
#endif

#ifdef _STRICT_ARG_TYPE
#define XT_NSAU(s) \
	CSTUB_(_TIE_xt_misc_NSAU)(s)
#else
#define XT_NSAU(s) \
	CSTUB_(_TIE_xt_misc_NSAU)(s)
#endif

#ifdef _STRICT_ARG_TYPE
#define XT_SEXT(s, i) \
	CSTUB_(_TIE_xt_misc_SEXT)(s, i)
#else
#define XT_SEXT(s, i) \
	CSTUB_(_TIE_xt_misc_SEXT)(s, i)
#endif

#ifdef _STRICT_ARG_TYPE
#define RUR_AE_OVF_SAR() \
	CSTUB_(_TIE_xt_hifi2_RUR_AE_OVF_SAR)()
#else
#define RUR_AE_OVF_SAR() \
	CSTUB_(_TIE_xt_hifi2_RUR_AE_OVF_SAR)()
#endif

#ifdef _STRICT_ARG_TYPE
#define WUR_AE_OVF_SAR(v) \
	CSTUB_(_TIE_xt_hifi2_WUR_AE_OVF_SAR)(v)
#else
#define WUR_AE_OVF_SAR(v) \
	CSTUB_(_TIE_xt_hifi2_WUR_AE_OVF_SAR)(v)
#endif

#ifdef _STRICT_ARG_TYPE
#define RUR_AE_BITHEAD() \
	CSTUB_(_TIE_xt_hifi2_RUR_AE_BITHEAD)()
#else
#define RUR_AE_BITHEAD() \
	CSTUB_(_TIE_xt_hifi2_RUR_AE_BITHEAD)()
#endif

#ifdef _STRICT_ARG_TYPE
#define WUR_AE_BITHEAD(v) \
	CSTUB_(_TIE_xt_hifi2_WUR_AE_BITHEAD)(v)
#else
#define WUR_AE_BITHEAD(v) \
	CSTUB_(_TIE_xt_hifi2_WUR_AE_BITHEAD)(v)
#endif

#ifdef _STRICT_ARG_TYPE
#define RUR_AE_TS_FTS_BU_BP() \
	CSTUB_(_TIE_xt_hifi2_RUR_AE_TS_FTS_BU_BP)()
#else
#define RUR_AE_TS_FTS_BU_BP() \
	CSTUB_(_TIE_xt_hifi2_RUR_AE_TS_FTS_BU_BP)()
#endif

#ifdef _STRICT_ARG_TYPE
#define WUR_AE_TS_FTS_BU_BP(v) \
	CSTUB_(_TIE_xt_hifi2_WUR_AE_TS_FTS_BU_BP)(v)
#else
#define WUR_AE_TS_FTS_BU_BP(v) \
	CSTUB_(_TIE_xt_hifi2_WUR_AE_TS_FTS_BU_BP)(v)
#endif

#ifdef _STRICT_ARG_TYPE
#define RUR_AE_CW_SD_NO() \
	CSTUB_(_TIE_xt_hifi2_RUR_AE_CW_SD_NO)()
#else
#define RUR_AE_CW_SD_NO() \
	CSTUB_(_TIE_xt_hifi2_RUR_AE_CW_SD_NO)()
#endif

#ifdef _STRICT_ARG_TYPE
#define WUR_AE_CW_SD_NO(v) \
	CSTUB_(_TIE_xt_hifi2_WUR_AE_CW_SD_NO)(v)
#else
#define WUR_AE_CW_SD_NO(v) \
	CSTUB_(_TIE_xt_hifi2_WUR_AE_CW_SD_NO)(v)
#endif

#ifdef _STRICT_ARG_TYPE
#define RUR_AE_CBEGIN0() \
	CSTUB_(_TIE_xt_hifi2_RUR_AE_CBEGIN0)()
#else
#define RUR_AE_CBEGIN0() \
	CSTUB_(_TIE_xt_hifi2_RUR_AE_CBEGIN0)()
#endif

#ifdef _STRICT_ARG_TYPE
#define WUR_AE_CBEGIN0(v) \
	CSTUB_(_TIE_xt_hifi2_WUR_AE_CBEGIN0)(v)
#else
#define WUR_AE_CBEGIN0(v) \
	CSTUB_(_TIE_xt_hifi2_WUR_AE_CBEGIN0)(v)
#endif

#ifdef _STRICT_ARG_TYPE
#define RUR_AE_CEND0() \
	CSTUB_(_TIE_xt_hifi2_RUR_AE_CEND0)()
#else
#define RUR_AE_CEND0() \
	CSTUB_(_TIE_xt_hifi2_RUR_AE_CEND0)()
#endif

#ifdef _STRICT_ARG_TYPE
#define WUR_AE_CEND0(v) \
	CSTUB_(_TIE_xt_hifi2_WUR_AE_CEND0)(v)
#else
#define WUR_AE_CEND0(v) \
	CSTUB_(_TIE_xt_hifi2_WUR_AE_CEND0)(v)
#endif

#ifdef _STRICT_ARG_TYPE
#define RAE_OVERFLOW() \
	CSTUB_(_TIE_xt_hifi2_RAE_OVERFLOW)()
#else
#define RAE_OVERFLOW() \
	CSTUB_(_TIE_xt_hifi2_RAE_OVERFLOW)()
#endif

#ifdef _STRICT_ARG_TYPE
#define WAE_OVERFLOW(a) \
	CSTUB_(_TIE_xt_hifi2_WAE_OVERFLOW)(a)
#else
#define WAE_OVERFLOW(a) \
	CSTUB_(_TIE_xt_hifi2_WAE_OVERFLOW)(a)
#endif

#ifdef _STRICT_ARG_TYPE
#define RUR_AE_OVERFLOW() \
	CSTUB_(_TIE_xt_hifi2_RUR_AE_OVERFLOW)()
#else
#define RUR_AE_OVERFLOW() \
	CSTUB_(_TIE_xt_hifi2_RUR_AE_OVERFLOW)()
#endif

#ifdef _STRICT_ARG_TYPE
#define WUR_AE_OVERFLOW(a) \
	CSTUB_(_TIE_xt_hifi2_WUR_AE_OVERFLOW)(a)
#else
#define WUR_AE_OVERFLOW(a) \
	CSTUB_(_TIE_xt_hifi2_WUR_AE_OVERFLOW)(a)
#endif

#ifdef _STRICT_ARG_TYPE
#define RAE_SAR() \
	CSTUB_(_TIE_xt_hifi2_RAE_SAR)()
#else
#define RAE_SAR() \
	CSTUB_(_TIE_xt_hifi2_RAE_SAR)()
#endif

#ifdef _STRICT_ARG_TYPE
#define WAE_SAR(a) \
	CSTUB_(_TIE_xt_hifi2_WAE_SAR)(a)
#else
#define WAE_SAR(a) \
	CSTUB_(_TIE_xt_hifi2_WAE_SAR)(a)
#endif

#ifdef _STRICT_ARG_TYPE
#define RUR_AE_SAR() \
	CSTUB_(_TIE_xt_hifi2_RUR_AE_SAR)()
#else
#define RUR_AE_SAR() \
	CSTUB_(_TIE_xt_hifi2_RUR_AE_SAR)()
#endif

#ifdef _STRICT_ARG_TYPE
#define WUR_AE_SAR(a) \
	CSTUB_(_TIE_xt_hifi2_WUR_AE_SAR)(a)
#else
#define WUR_AE_SAR(a) \
	CSTUB_(_TIE_xt_hifi2_WUR_AE_SAR)(a)
#endif

#ifdef _STRICT_ARG_TYPE
#define RAE_BITPTR() \
	CSTUB_(_TIE_xt_hifi2_RAE_BITPTR)()
#else
#define RAE_BITPTR() \
	CSTUB_(_TIE_xt_hifi2_RAE_BITPTR)()
#endif

#ifdef _STRICT_ARG_TYPE
#define WAE_BITPTR(a) \
	CSTUB_(_TIE_xt_hifi2_WAE_BITPTR)(a)
#else
#define WAE_BITPTR(a) \
	CSTUB_(_TIE_xt_hifi2_WAE_BITPTR)(a)
#endif

#ifdef _STRICT_ARG_TYPE
#define RUR_AE_BITPTR() \
	CSTUB_(_TIE_xt_hifi2_RUR_AE_BITPTR)()
#else
#define RUR_AE_BITPTR() \
	CSTUB_(_TIE_xt_hifi2_RUR_AE_BITPTR)()
#endif

#ifdef _STRICT_ARG_TYPE
#define WUR_AE_BITPTR(a) \
	CSTUB_(_TIE_xt_hifi2_WUR_AE_BITPTR)(a)
#else
#define WUR_AE_BITPTR(a) \
	CSTUB_(_TIE_xt_hifi2_WUR_AE_BITPTR)(a)
#endif

#ifdef _STRICT_ARG_TYPE
#define RAE_BITSUSED() \
	CSTUB_(_TIE_xt_hifi2_RAE_BITSUSED)()
#else
#define RAE_BITSUSED() \
	CSTUB_(_TIE_xt_hifi2_RAE_BITSUSED)()
#endif

#ifdef _STRICT_ARG_TYPE
#define WAE_BITSUSED(a) \
	CSTUB_(_TIE_xt_hifi2_WAE_BITSUSED)(a)
#else
#define WAE_BITSUSED(a) \
	CSTUB_(_TIE_xt_hifi2_WAE_BITSUSED)(a)
#endif

#ifdef _STRICT_ARG_TYPE
#define RUR_AE_BITSUSED() \
	CSTUB_(_TIE_xt_hifi2_RUR_AE_BITSUSED)()
#else
#define RUR_AE_BITSUSED() \
	CSTUB_(_TIE_xt_hifi2_RUR_AE_BITSUSED)()
#endif

#ifdef _STRICT_ARG_TYPE
#define WUR_AE_BITSUSED(a) \
	CSTUB_(_TIE_xt_hifi2_WUR_AE_BITSUSED)(a)
#else
#define WUR_AE_BITSUSED(a) \
	CSTUB_(_TIE_xt_hifi2_WUR_AE_BITSUSED)(a)
#endif

#ifdef _STRICT_ARG_TYPE
#define RAE_TABLESIZE() \
	CSTUB_(_TIE_xt_hifi2_RAE_TABLESIZE)()
#else
#define RAE_TABLESIZE() \
	CSTUB_(_TIE_xt_hifi2_RAE_TABLESIZE)()
#endif

#ifdef _STRICT_ARG_TYPE
#define WAE_TABLESIZE(a) \
	CSTUB_(_TIE_xt_hifi2_WAE_TABLESIZE)(a)
#else
#define WAE_TABLESIZE(a) \
	CSTUB_(_TIE_xt_hifi2_WAE_TABLESIZE)(a)
#endif

#ifdef _STRICT_ARG_TYPE
#define RUR_AE_TABLESIZE() \
	CSTUB_(_TIE_xt_hifi2_RUR_AE_TABLESIZE)()
#else
#define RUR_AE_TABLESIZE() \
	CSTUB_(_TIE_xt_hifi2_RUR_AE_TABLESIZE)()
#endif

#ifdef _STRICT_ARG_TYPE
#define WUR_AE_TABLESIZE(a) \
	CSTUB_(_TIE_xt_hifi2_WUR_AE_TABLESIZE)(a)
#else
#define WUR_AE_TABLESIZE(a) \
	CSTUB_(_TIE_xt_hifi2_WUR_AE_TABLESIZE)(a)
#endif

#ifdef _STRICT_ARG_TYPE
#define RAE_FIRST_TS() \
	CSTUB_(_TIE_xt_hifi2_RAE_FIRST_TS)()
#else
#define RAE_FIRST_TS() \
	CSTUB_(_TIE_xt_hifi2_RAE_FIRST_TS)()
#endif

#ifdef _STRICT_ARG_TYPE
#define WAE_FIRST_TS(a) \
	CSTUB_(_TIE_xt_hifi2_WAE_FIRST_TS)(a)
#else
#define WAE_FIRST_TS(a) \
	CSTUB_(_TIE_xt_hifi2_WAE_FIRST_TS)(a)
#endif

#ifdef _STRICT_ARG_TYPE
#define RUR_AE_FIRST_TS() \
	CSTUB_(_TIE_xt_hifi2_RUR_AE_FIRST_TS)()
#else
#define RUR_AE_FIRST_TS() \
	CSTUB_(_TIE_xt_hifi2_RUR_AE_FIRST_TS)()
#endif

#ifdef _STRICT_ARG_TYPE
#define WUR_AE_FIRST_TS(a) \
	CSTUB_(_TIE_xt_hifi2_WUR_AE_FIRST_TS)(a)
#else
#define WUR_AE_FIRST_TS(a) \
	CSTUB_(_TIE_xt_hifi2_WUR_AE_FIRST_TS)(a)
#endif

#ifdef _STRICT_ARG_TYPE
#define RAE_NEXTOFFSET() \
	CSTUB_(_TIE_xt_hifi2_RAE_NEXTOFFSET)()
#else
#define RAE_NEXTOFFSET() \
	CSTUB_(_TIE_xt_hifi2_RAE_NEXTOFFSET)()
#endif

#ifdef _STRICT_ARG_TYPE
#define WAE_NEXTOFFSET(a) \
	CSTUB_(_TIE_xt_hifi2_WAE_NEXTOFFSET)(a)
#else
#define WAE_NEXTOFFSET(a) \
	CSTUB_(_TIE_xt_hifi2_WAE_NEXTOFFSET)(a)
#endif

#ifdef _STRICT_ARG_TYPE
#define RUR_AE_NEXTOFFSET() \
	CSTUB_(_TIE_xt_hifi2_RUR_AE_NEXTOFFSET)()
#else
#define RUR_AE_NEXTOFFSET() \
	CSTUB_(_TIE_xt_hifi2_RUR_AE_NEXTOFFSET)()
#endif

#ifdef _STRICT_ARG_TYPE
#define WUR_AE_NEXTOFFSET(a) \
	CSTUB_(_TIE_xt_hifi2_WUR_AE_NEXTOFFSET)(a)
#else
#define WUR_AE_NEXTOFFSET(a) \
	CSTUB_(_TIE_xt_hifi2_WUR_AE_NEXTOFFSET)(a)
#endif

#ifdef _STRICT_ARG_TYPE
#define RAE_SEARCHDONE() \
	CSTUB_(_TIE_xt_hifi2_RAE_SEARCHDONE)()
#else
#define RAE_SEARCHDONE() \
	CSTUB_(_TIE_xt_hifi2_RAE_SEARCHDONE)()
#endif

#ifdef _STRICT_ARG_TYPE
#define WAE_SEARCHDONE(a) \
	CSTUB_(_TIE_xt_hifi2_WAE_SEARCHDONE)(a)
#else
#define WAE_SEARCHDONE(a) \
	CSTUB_(_TIE_xt_hifi2_WAE_SEARCHDONE)(a)
#endif

#ifdef _STRICT_ARG_TYPE
#define RUR_AE_SEARCHDONE() \
	CSTUB_(_TIE_xt_hifi2_RUR_AE_SEARCHDONE)()
#else
#define RUR_AE_SEARCHDONE() \
	CSTUB_(_TIE_xt_hifi2_RUR_AE_SEARCHDONE)()
#endif

#ifdef _STRICT_ARG_TYPE
#define WUR_AE_SEARCHDONE(a) \
	CSTUB_(_TIE_xt_hifi2_WUR_AE_SEARCHDONE)(a)
#else
#define WUR_AE_SEARCHDONE(a) \
	CSTUB_(_TIE_xt_hifi2_WUR_AE_SEARCHDONE)(a)
#endif

#ifdef _STRICT_ARG_TYPE
#define RAE_CWRAP() \
	CSTUB_(_TIE_xt_hifi2_RAE_CWRAP)()
#else
#define RAE_CWRAP() \
	CSTUB_(_TIE_xt_hifi2_RAE_CWRAP)()
#endif

#ifdef _STRICT_ARG_TYPE
#define WAE_CWRAP(a) \
	CSTUB_(_TIE_xt_hifi2_WAE_CWRAP)(a)
#else
#define WAE_CWRAP(a) \
	CSTUB_(_TIE_xt_hifi2_WAE_CWRAP)(a)
#endif

#ifdef _STRICT_ARG_TYPE
#define RUR_AE_CWRAP() \
	CSTUB_(_TIE_xt_hifi2_RUR_AE_CWRAP)()
#else
#define RUR_AE_CWRAP() \
	CSTUB_(_TIE_xt_hifi2_RUR_AE_CWRAP)()
#endif

#ifdef _STRICT_ARG_TYPE
#define WUR_AE_CWRAP(a) \
	CSTUB_(_TIE_xt_hifi2_WUR_AE_CWRAP)(a)
#else
#define WUR_AE_CWRAP(a) \
	CSTUB_(_TIE_xt_hifi2_WUR_AE_CWRAP)(a)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_GETCBEGIN0() \
	CSTUB_(_TIE_xt_hifi2_AE_GETCBEGIN0)()
#else
#define AE_GETCBEGIN0() \
	CSTUB_(_TIE_xt_hifi2_AE_GETCBEGIN0)()
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SETCBEGIN0(a) \
	CSTUB_(_TIE_xt_hifi2_AE_SETCBEGIN0)(a)
#else
#define AE_SETCBEGIN0(a) \
	CSTUB_(_TIE_xt_hifi2_AE_SETCBEGIN0)(a)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_GETCEND0() \
	CSTUB_(_TIE_xt_hifi2_AE_GETCEND0)()
#else
#define AE_GETCEND0() \
	CSTUB_(_TIE_xt_hifi2_AE_GETCEND0)()
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SETCEND0(a) \
	CSTUB_(_TIE_xt_hifi2_AE_SETCEND0)(a)
#else
#define AE_SETCEND0(a) \
	CSTUB_(_TIE_xt_hifi2_AE_SETCEND0)(a)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_L16M_XC(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L16M_XC)(d, (const ae_p16s **)&(a), off)
#else
#define AE_L16M_XC(d, a, off) { \
	ae_int32x2 __d; \
	CSTUB_(_TIE_xt_hifi2_AE_L16M_XC)(__d, (const ae_p16s **)&(a), off); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_LP16F_C(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_LP16F_C)(d, (const ae_p16s **)&(a), off)
#else
#define AE_LP16F_C(d, a, off) { \
	ae_p24x2s __d; \
	CSTUB_(_TIE_xt_hifi2_AE_LP16F_C)(__d, (const ae_p16s **)&(a), off); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_L16M_I(a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L16M_I)(a, off)
#else
#define AE_L16M_I(a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L16M_I)(a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_LP16F_I(a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_LP16F_I)(a, off)
#else
#define AE_LP16F_I(a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_LP16F_I)(a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_p16s_loadi(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p16s_loadi)(a, off)
#else
#define ae_p16s_loadi(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p16s_loadi)(a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_L16M_IU(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L16M_IU)(d, (const ae_p16s **)&(a), off)
#else
#define AE_L16M_IU(d, a, off) { \
	ae_int32x2 __d; \
	CSTUB_(_TIE_xt_hifi2_AE_L16M_IU)(__d, (const ae_p16s **)&(a), off); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_LP16F_IU(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_LP16F_IU)(d, (const ae_p16s **)&(a), off)
#else
#define AE_LP16F_IU(d, a, off) { \
	ae_p24x2s __d; \
	CSTUB_(_TIE_xt_hifi2_AE_LP16F_IU)(__d, (const ae_p16s **)&(a), off); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_p16s_loadiu(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p16s_loadiu)(d, (const ae_p16s **)&(a), off)
#else
#define ae_p16s_loadiu(d, a, off) { \
	ae_p16s __d; \
	CSTUB_(_TIE_xt_hifi2_ae_p16s_loadiu)(__d, (const ae_p16s **)&(a), off); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_L16M_X(a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L16M_X)(a, off)
#else
#define AE_L16M_X(a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L16M_X)(a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_LP16F_X(a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_LP16F_X)(a, off)
#else
#define AE_LP16F_X(a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_LP16F_X)(a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_p16s_loadx(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p16s_loadx)(a, off)
#else
#define ae_p16s_loadx(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p16s_loadx)(a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_L16M_XU(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L16M_XU)(d, (const ae_p16s **)&(a), off)
#else
#define AE_L16M_XU(d, a, off) { \
	ae_int32x2 __d; \
	CSTUB_(_TIE_xt_hifi2_AE_L16M_XU)(__d, (const ae_p16s **)&(a), off); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_LP16F_XU(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_LP16F_XU)(d, (const ae_p16s **)&(a), off)
#else
#define AE_LP16F_XU(d, a, off) { \
	ae_p24x2s __d; \
	CSTUB_(_TIE_xt_hifi2_AE_LP16F_XU)(__d, (const ae_p16s **)&(a), off); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_p16s_loadxu(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p16s_loadxu)(d, (const ae_p16s **)&(a), off)
#else
#define ae_p16s_loadxu(d, a, off) { \
	ae_p16s __d; \
	CSTUB_(_TIE_xt_hifi2_ae_p16s_loadxu)(__d, (const ae_p16s **)&(a), off); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_L16_XC(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L16_XC)(d, (const ae_int16 **)&(a), off)
#else
#define AE_L16_XC(d, a, off) { \
	ae_int16x4 __d; \
	CSTUB_(_TIE_xt_hifi2_AE_L16_XC)(__d, (const ae_int16 **)&(a), off); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_L16_I(a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L16_I)(a, off)
#else
#define AE_L16_I(a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L16_I)(a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int16_loadi(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int16_loadi)(a, off)
#else
#define ae_int16_loadi(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int16_loadi)(a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_f16_loadi(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f16_loadi)(a, off)
#else
#define ae_f16_loadi(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f16_loadi)(a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_L16_IP(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L16_IP)(d, (const ae_int16 **)&(a), off)
#else
#define AE_L16_IP(d, a, off) { \
	ae_int16x4 __d; \
	CSTUB_(_TIE_xt_hifi2_AE_L16_IP)(__d, (const ae_int16 **)&(a), off); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int16_loadip(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int16_loadip)(d, (const ae_int16 **)&(a), off)
#else
#define ae_int16_loadip(d, a, off) { \
	ae_int16 __d; \
	CSTUB_(_TIE_xt_hifi2_ae_int16_loadip)(__d, (const ae_int16 **)&(a), off); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_f16_loadip(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f16_loadip)(d, (const ae_f16 **)&(a), off)
#else
#define ae_f16_loadip(d, a, off) { \
	ae_f16 __d; \
	CSTUB_(_TIE_xt_hifi2_ae_f16_loadip)(__d, (const ae_f16 **)&(a), off); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_L16_X(a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L16_X)(a, off)
#else
#define AE_L16_X(a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L16_X)(a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int16_loadx(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int16_loadx)(a, off)
#else
#define ae_int16_loadx(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int16_loadx)(a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_f16_loadx(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f16_loadx)(a, off)
#else
#define ae_f16_loadx(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f16_loadx)(a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_L16_XP(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L16_XP)(d, (const ae_int16 **)&(a), off)
#else
#define AE_L16_XP(d, a, off) { \
	ae_int16x4 __d; \
	CSTUB_(_TIE_xt_hifi2_AE_L16_XP)(__d, (const ae_int16 **)&(a), off); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int16_loadxp(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int16_loadxp)(d, (const ae_int16 **)&(a), off)
#else
#define ae_int16_loadxp(d, a, off) { \
	ae_int16 __d; \
	CSTUB_(_TIE_xt_hifi2_ae_int16_loadxp)(__d, (const ae_int16 **)&(a), off); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_f16_loadxp(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f16_loadxp)(d, (const ae_f16 **)&(a), off)
#else
#define ae_f16_loadxp(d, a, off) { \
	ae_f16 __d; \
	CSTUB_(_TIE_xt_hifi2_ae_f16_loadxp)(__d, (const ae_f16 **)&(a), off); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_L32F24_XC(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L32F24_XC)(d, (const ae_f24 **)&(a), off)
#else
#define AE_L32F24_XC(d, a, off) { \
	ae_f24x2 __d; \
	CSTUB_(_TIE_xt_hifi2_AE_L32F24_XC)(__d, (const ae_f24 **)&(a), off); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_LP24F_C(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_LP24F_C)(d, (const ae_p24f **)&(a), off)
#else
#define AE_LP24F_C(d, a, off) { \
	ae_p24x2s __d; \
	CSTUB_(_TIE_xt_hifi2_AE_LP24F_C)(__d, (const ae_p24f **)&(a), off); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_L32F24_I(a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L32F24_I)(a, off)
#else
#define AE_L32F24_I(a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L32F24_I)(a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_LP24F_I(a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_LP24F_I)(a, off)
#else
#define AE_LP24F_I(a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_LP24F_I)(a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_f24_loadi(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f24_loadi)(a, off)
#else
#define ae_f24_loadi(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f24_loadi)(a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_p24f_loadi(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p24f_loadi)(a, off)
#else
#define ae_p24f_loadi(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p24f_loadi)(a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_L32F24_IP(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L32F24_IP)(d, (const ae_f24 **)&(a), off)
#else
#define AE_L32F24_IP(d, a, off) { \
	ae_f24x2 __d; \
	CSTUB_(_TIE_xt_hifi2_AE_L32F24_IP)(__d, (const ae_f24 **)&(a), off); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_LP24F_IU(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_LP24F_IU)(d, (const ae_p24f **)&(a), off)
#else
#define AE_LP24F_IU(d, a, off) { \
	ae_p24x2s __d; \
	CSTUB_(_TIE_xt_hifi2_AE_LP24F_IU)(__d, (const ae_p24f **)&(a), off); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_f24_loadip(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f24_loadip)(d, (const ae_f24 **)&(a), off)
#else
#define ae_f24_loadip(d, a, off) { \
	ae_f24 __d; \
	CSTUB_(_TIE_xt_hifi2_ae_f24_loadip)(__d, (const ae_f24 **)&(a), off); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_p24f_loadip(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p24f_loadip)(d, (const ae_p24f **)&(a), off)
#else
#define ae_p24f_loadip(d, a, off) { \
	ae_p24f __d; \
	CSTUB_(_TIE_xt_hifi2_ae_p24f_loadip)(__d, (const ae_p24f **)&(a), off); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_L32F24_X(a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L32F24_X)(a, off)
#else
#define AE_L32F24_X(a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L32F24_X)(a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_LP24F_X(a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_LP24F_X)(a, off)
#else
#define AE_LP24F_X(a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_LP24F_X)(a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_f24_loadx(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f24_loadx)(a, off)
#else
#define ae_f24_loadx(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f24_loadx)(a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_p24f_loadx(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p24f_loadx)(a, off)
#else
#define ae_p24f_loadx(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p24f_loadx)(a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_L32F24_XP(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L32F24_XP)(d, (const ae_f24 **)&(a), off)
#else
#define AE_L32F24_XP(d, a, off) { \
	ae_f24x2 __d; \
	CSTUB_(_TIE_xt_hifi2_AE_L32F24_XP)(__d, (const ae_f24 **)&(a), off); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_LP24F_XU(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_LP24F_XU)(d, (const ae_p24f **)&(a), off)
#else
#define AE_LP24F_XU(d, a, off) { \
	ae_p24x2s __d; \
	CSTUB_(_TIE_xt_hifi2_AE_LP24F_XU)(__d, (const ae_p24f **)&(a), off); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_f24_loadxp(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f24_loadxp)(d, (const ae_f24 **)&(a), off)
#else
#define ae_f24_loadxp(d, a, off) { \
	ae_f24 __d; \
	CSTUB_(_TIE_xt_hifi2_ae_f24_loadxp)(__d, (const ae_f24 **)&(a), off); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_p24f_loadxp(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p24f_loadxp)(d, (const ae_p24f **)&(a), off)
#else
#define ae_p24f_loadxp(d, a, off) { \
	ae_p24f __d; \
	CSTUB_(_TIE_xt_hifi2_ae_p24f_loadxp)(__d, (const ae_p24f **)&(a), off); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_L32_XC(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L32_XC)(d, (const ae_int32 **)&(a), off)
#else
#define AE_L32_XC(d, a, off) { \
	ae_int32x2 __d; \
	CSTUB_(_TIE_xt_hifi2_AE_L32_XC)(__d, (const ae_int32 **)&(a), off); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_LP24_C(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_LP24_C)(d, (const ae_p24s **)&(a), off)
#else
#define AE_LP24_C(d, a, off) { \
	ae_p24x2s __d; \
	CSTUB_(_TIE_xt_hifi2_AE_LP24_C)(__d, (const ae_p24s **)&(a), off); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_L32_I(a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L32_I)(a, off)
#else
#define AE_L32_I(a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L32_I)(a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int32_loadi(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int32_loadi)(a, off)
#else
#define ae_int32_loadi(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int32_loadi)(a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_f32_loadi(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f32_loadi)(a, off)
#else
#define ae_f32_loadi(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f32_loadi)(a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_LP24_I(a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_LP24_I)(a, off)
#else
#define AE_LP24_I(a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_LP24_I)(a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int24_loadi(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int24_loadi)(a, off)
#else
#define ae_int24_loadi(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int24_loadi)(a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_p24s_loadi(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p24s_loadi)(a, off)
#else
#define ae_p24s_loadi(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p24s_loadi)(a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_L32_IP(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L32_IP)(d, (const ae_int32 **)&(a), off)
#else
#define AE_L32_IP(d, a, off) { \
	ae_int32x2 __d; \
	CSTUB_(_TIE_xt_hifi2_AE_L32_IP)(__d, (const ae_int32 **)&(a), off); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int32_loadip(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int32_loadip)(d, (const ae_int32 **)&(a), off)
#else
#define ae_int32_loadip(d, a, off) { \
	ae_int32 __d; \
	CSTUB_(_TIE_xt_hifi2_ae_int32_loadip)(__d, (const ae_int32 **)&(a), off); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_f32_loadip(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f32_loadip)(d, (const ae_f32 **)&(a), off)
#else
#define ae_f32_loadip(d, a, off) { \
	ae_f32 __d; \
	CSTUB_(_TIE_xt_hifi2_ae_f32_loadip)(__d, (const ae_f32 **)&(a), off); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_LP24_IU(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_LP24_IU)(d, (const ae_p24s **)&(a), off)
#else
#define AE_LP24_IU(d, a, off) { \
	ae_p24x2s __d; \
	CSTUB_(_TIE_xt_hifi2_AE_LP24_IU)(__d, (const ae_p24s **)&(a), off); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int24_loadip(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int24_loadip)(d, (const ae_int24 **)&(a), off)
#else
#define ae_int24_loadip(d, a, off) { \
	ae_int24 __d; \
	CSTUB_(_TIE_xt_hifi2_ae_int24_loadip)(__d, (const ae_int24 **)&(a), off); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_p24s_loadip(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p24s_loadip)(d, (const ae_p24s **)&(a), off)
#else
#define ae_p24s_loadip(d, a, off) { \
	ae_p24s __d; \
	CSTUB_(_TIE_xt_hifi2_ae_p24s_loadip)(__d, (const ae_p24s **)&(a), off); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_L32_X(a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L32_X)(a, off)
#else
#define AE_L32_X(a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L32_X)(a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int32_loadx(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int32_loadx)(a, off)
#else
#define ae_int32_loadx(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int32_loadx)(a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_f32_loadx(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f32_loadx)(a, off)
#else
#define ae_f32_loadx(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f32_loadx)(a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_LP24_X(a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_LP24_X)(a, off)
#else
#define AE_LP24_X(a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_LP24_X)(a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int24_loadx(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int24_loadx)(a, off)
#else
#define ae_int24_loadx(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int24_loadx)(a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_p24s_loadx(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p24s_loadx)(a, off)
#else
#define ae_p24s_loadx(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p24s_loadx)(a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_L32_XP(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L32_XP)(d, (const ae_int32 **)&(a), off)
#else
#define AE_L32_XP(d, a, off) { \
	ae_int32x2 __d; \
	CSTUB_(_TIE_xt_hifi2_AE_L32_XP)(__d, (const ae_int32 **)&(a), off); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int32_loadxp(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int32_loadxp)(d, (const ae_int32 **)&(a), off)
#else
#define ae_int32_loadxp(d, a, off) { \
	ae_int32 __d; \
	CSTUB_(_TIE_xt_hifi2_ae_int32_loadxp)(__d, (const ae_int32 **)&(a), off); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_f32_loadxp(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f32_loadxp)(d, (const ae_f32 **)&(a), off)
#else
#define ae_f32_loadxp(d, a, off) { \
	ae_f32 __d; \
	CSTUB_(_TIE_xt_hifi2_ae_f32_loadxp)(__d, (const ae_f32 **)&(a), off); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_LP24_XU(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_LP24_XU)(d, (const ae_p24s **)&(a), off)
#else
#define AE_LP24_XU(d, a, off) { \
	ae_p24x2s __d; \
	CSTUB_(_TIE_xt_hifi2_AE_LP24_XU)(__d, (const ae_p24s **)&(a), off); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int24_loadxp(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int24_loadxp)(d, (const ae_int24 **)&(a), off)
#else
#define ae_int24_loadxp(d, a, off) { \
	ae_int24 __d; \
	CSTUB_(_TIE_xt_hifi2_ae_int24_loadxp)(__d, (const ae_int24 **)&(a), off); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_p24s_loadxp(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p24s_loadxp)(d, (const ae_p24s **)&(a), off)
#else
#define ae_p24s_loadxp(d, a, off) { \
	ae_p24s __d; \
	CSTUB_(_TIE_xt_hifi2_ae_p24s_loadxp)(__d, (const ae_p24s **)&(a), off); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_L32M_XC(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L32M_XC)(d, (const ae_q32s **)&(a), off)
#else
#define AE_L32M_XC(d, a, off) { \
	ae_int64 __d; \
	CSTUB_(_TIE_xt_hifi2_AE_L32M_XC)(__d, (const ae_q32s **)&(a), off); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_LQ32F_C(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_LQ32F_C)(d, (const ae_q32s **)&(a), off)
#else
#define AE_LQ32F_C(d, a, off) { \
	ae_q56s __d; \
	CSTUB_(_TIE_xt_hifi2_AE_LQ32F_C)(__d, (const ae_q32s **)&(a), off); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_L32M_I(a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L32M_I)(a, off)
#else
#define AE_L32M_I(a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L32M_I)(a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_LQ32F_I(a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_LQ32F_I)(a, off)
#else
#define AE_LQ32F_I(a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_LQ32F_I)(a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_q32s_loadi(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_q32s_loadi)(a, off)
#else
#define ae_q32s_loadi(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_q32s_loadi)(a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_L32M_IU(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L32M_IU)(d, (const ae_q32s **)&(a), off)
#else
#define AE_L32M_IU(d, a, off) { \
	ae_int64 __d; \
	CSTUB_(_TIE_xt_hifi2_AE_L32M_IU)(__d, (const ae_q32s **)&(a), off); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_LQ32F_IU(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_LQ32F_IU)(d, (const ae_q32s **)&(a), off)
#else
#define AE_LQ32F_IU(d, a, off) { \
	ae_q56s __d; \
	CSTUB_(_TIE_xt_hifi2_AE_LQ32F_IU)(__d, (const ae_q32s **)&(a), off); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_q32s_loadiu(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_q32s_loadiu)(d, (const ae_q32s **)&(a), off)
#else
#define ae_q32s_loadiu(d, a, off) { \
	ae_q32s __d; \
	CSTUB_(_TIE_xt_hifi2_ae_q32s_loadiu)(__d, (const ae_q32s **)&(a), off); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_L32M_X(a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L32M_X)(a, off)
#else
#define AE_L32M_X(a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L32M_X)(a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_LQ32F_X(a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_LQ32F_X)(a, off)
#else
#define AE_LQ32F_X(a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_LQ32F_X)(a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_q32s_loadx(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_q32s_loadx)(a, off)
#else
#define ae_q32s_loadx(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_q32s_loadx)(a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_L32M_XU(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L32M_XU)(d, (const ae_q32s **)&(a), off)
#else
#define AE_L32M_XU(d, a, off) { \
	ae_int64 __d; \
	CSTUB_(_TIE_xt_hifi2_AE_L32M_XU)(__d, (const ae_q32s **)&(a), off); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_LQ32F_XU(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_LQ32F_XU)(d, (const ae_q32s **)&(a), off)
#else
#define AE_LQ32F_XU(d, a, off) { \
	ae_q56s __d; \
	CSTUB_(_TIE_xt_hifi2_AE_LQ32F_XU)(__d, (const ae_q32s **)&(a), off); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_q32s_loadxu(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_q32s_loadxu)(d, (const ae_q32s **)&(a), off)
#else
#define ae_q32s_loadxu(d, a, off) { \
	ae_q32s __d; \
	CSTUB_(_TIE_xt_hifi2_ae_q32s_loadxu)(__d, (const ae_q32s **)&(a), off); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_L16X2M_XC(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L16X2M_XC)(d, (const ae_p16x2s **)&(a), off)
#else
#define AE_L16X2M_XC(d, a, off) { \
	ae_int32x2 __d; \
	CSTUB_(_TIE_xt_hifi2_AE_L16X2M_XC)(__d, (const ae_p16x2s **)&(a), off); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_LP16X2F_C(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_LP16X2F_C)(d, (const ae_p16x2s **)&(a), off)
#else
#define AE_LP16X2F_C(d, a, off) { \
	ae_p24x2s __d; \
	CSTUB_(_TIE_xt_hifi2_AE_LP16X2F_C)(__d, (const ae_p16x2s **)&(a), off); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_L16X2M_I(a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L16X2M_I)(a, off)
#else
#define AE_L16X2M_I(a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L16X2M_I)(a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_LP16X2F_I(a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_LP16X2F_I)(a, off)
#else
#define AE_LP16X2F_I(a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_LP16X2F_I)(a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_p16x2s_loadi(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p16x2s_loadi)(a, off)
#else
#define ae_p16x2s_loadi(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p16x2s_loadi)(a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_L16X2M_IU(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L16X2M_IU)(d, (const ae_p16x2s **)&(a), off)
#else
#define AE_L16X2M_IU(d, a, off) { \
	ae_int32x2 __d; \
	CSTUB_(_TIE_xt_hifi2_AE_L16X2M_IU)(__d, (const ae_p16x2s **)&(a), off); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_LP16X2F_IU(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_LP16X2F_IU)(d, (const ae_p16x2s **)&(a), off)
#else
#define AE_LP16X2F_IU(d, a, off) { \
	ae_p24x2s __d; \
	CSTUB_(_TIE_xt_hifi2_AE_LP16X2F_IU)(__d, (const ae_p16x2s **)&(a), off); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_p16x2s_loadiu(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p16x2s_loadiu)(d, (const ae_p16x2s **)&(a), off)
#else
#define ae_p16x2s_loadiu(d, a, off) { \
	ae_p16x2s __d; \
	CSTUB_(_TIE_xt_hifi2_ae_p16x2s_loadiu)(__d, (const ae_p16x2s **)&(a), off); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_L16X2M_X(a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L16X2M_X)(a, off)
#else
#define AE_L16X2M_X(a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L16X2M_X)(a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_LP16X2F_X(a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_LP16X2F_X)(a, off)
#else
#define AE_LP16X2F_X(a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_LP16X2F_X)(a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_p16x2s_loadx(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p16x2s_loadx)(a, off)
#else
#define ae_p16x2s_loadx(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p16x2s_loadx)(a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_L16X2M_XU(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L16X2M_XU)(d, (const ae_p16x2s **)&(a), off)
#else
#define AE_L16X2M_XU(d, a, off) { \
	ae_int32x2 __d; \
	CSTUB_(_TIE_xt_hifi2_AE_L16X2M_XU)(__d, (const ae_p16x2s **)&(a), off); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_LP16X2F_XU(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_LP16X2F_XU)(d, (const ae_p16x2s **)&(a), off)
#else
#define AE_LP16X2F_XU(d, a, off) { \
	ae_p24x2s __d; \
	CSTUB_(_TIE_xt_hifi2_AE_LP16X2F_XU)(__d, (const ae_p16x2s **)&(a), off); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_p16x2s_loadxu(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p16x2s_loadxu)(d, (const ae_p16x2s **)&(a), off)
#else
#define ae_p16x2s_loadxu(d, a, off) { \
	ae_p16x2s __d; \
	CSTUB_(_TIE_xt_hifi2_ae_p16x2s_loadxu)(__d, (const ae_p16x2s **)&(a), off); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_L32X2F24_XC(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L32X2F24_XC)(d, (const ae_f24x2 **)&(a), off)
#else
#define AE_L32X2F24_XC(d, a, off) { \
	ae_f24x2 __d; \
	CSTUB_(_TIE_xt_hifi2_AE_L32X2F24_XC)(__d, (const ae_f24x2 **)&(a), off); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_LP24X2F_C(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_LP24X2F_C)(d, (const ae_p24x2f **)&(a), off)
#else
#define AE_LP24X2F_C(d, a, off) { \
	ae_p24x2s __d; \
	CSTUB_(_TIE_xt_hifi2_AE_LP24X2F_C)(__d, (const ae_p24x2f **)&(a), off); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_L32X2F24_I(a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L32X2F24_I)(a, off)
#else
#define AE_L32X2F24_I(a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L32X2F24_I)(a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_LP24X2F_I(a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_LP24X2F_I)(a, off)
#else
#define AE_LP24X2F_I(a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_LP24X2F_I)(a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_f24x2_loadi(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f24x2_loadi)(a, off)
#else
#define ae_f24x2_loadi(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f24x2_loadi)(a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_p24x2f_loadi(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2f_loadi)(a, off)
#else
#define ae_p24x2f_loadi(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2f_loadi)(a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_L32X2F24_IP(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L32X2F24_IP)(d, (const ae_f24x2 **)&(a), off)
#else
#define AE_L32X2F24_IP(d, a, off) { \
	ae_f24x2 __d; \
	CSTUB_(_TIE_xt_hifi2_AE_L32X2F24_IP)(__d, (const ae_f24x2 **)&(a), off); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_LP24X2F_IU(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_LP24X2F_IU)(d, (const ae_p24x2f **)&(a), off)
#else
#define AE_LP24X2F_IU(d, a, off) { \
	ae_p24x2s __d; \
	CSTUB_(_TIE_xt_hifi2_AE_LP24X2F_IU)(__d, (const ae_p24x2f **)&(a), off); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_f24x2_loadip(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f24x2_loadip)(d, (const ae_f24x2 **)&(a), off)
#else
#define ae_f24x2_loadip(d, a, off) { \
	ae_f24x2 __d; \
	CSTUB_(_TIE_xt_hifi2_ae_f24x2_loadip)(__d, (const ae_f24x2 **)&(a), off); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_p24x2f_loadip(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2f_loadip)(d, (const ae_p24x2f **)&(a), off)
#else
#define ae_p24x2f_loadip(d, a, off) { \
	ae_p24x2f __d; \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2f_loadip)(__d, (const ae_p24x2f **)&(a), off); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_L32X2F24_RIP(d, a) \
	CSTUB_(_TIE_xt_hifi2_AE_L32X2F24_RIP)(d, (const ae_f24x2 **)&(a))
#else
#define AE_L32X2F24_RIP(d, a) { \
	ae_f24x2 __d; \
	CSTUB_(_TIE_xt_hifi2_AE_L32X2F24_RIP)(__d, (const ae_f24x2 **)&(a)); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_L32X2F24_RIC(d, a) \
	CSTUB_(_TIE_xt_hifi2_AE_L32X2F24_RIC)(d, (const ae_f24x2 **)&(a))
#else
#define AE_L32X2F24_RIC(d, a) { \
	ae_f24x2 __d; \
	CSTUB_(_TIE_xt_hifi2_AE_L32X2F24_RIC)(__d, (const ae_f24x2 **)&(a)); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_L32X2F24_X(a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L32X2F24_X)(a, off)
#else
#define AE_L32X2F24_X(a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L32X2F24_X)(a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_LP24X2F_X(a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_LP24X2F_X)(a, off)
#else
#define AE_LP24X2F_X(a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_LP24X2F_X)(a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_f24x2_loadx(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f24x2_loadx)(a, off)
#else
#define ae_f24x2_loadx(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f24x2_loadx)(a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_p24x2f_loadx(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2f_loadx)(a, off)
#else
#define ae_p24x2f_loadx(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2f_loadx)(a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_L32X2F24_XP(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L32X2F24_XP)(d, (const ae_f24x2 **)&(a), off)
#else
#define AE_L32X2F24_XP(d, a, off) { \
	ae_f24x2 __d; \
	CSTUB_(_TIE_xt_hifi2_AE_L32X2F24_XP)(__d, (const ae_f24x2 **)&(a), off); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_LP24X2F_XU(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_LP24X2F_XU)(d, (const ae_p24x2f **)&(a), off)
#else
#define AE_LP24X2F_XU(d, a, off) { \
	ae_p24x2s __d; \
	CSTUB_(_TIE_xt_hifi2_AE_LP24X2F_XU)(__d, (const ae_p24x2f **)&(a), off); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_f24x2_loadxp(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f24x2_loadxp)(d, (const ae_f24x2 **)&(a), off)
#else
#define ae_f24x2_loadxp(d, a, off) { \
	ae_f24x2 __d; \
	CSTUB_(_TIE_xt_hifi2_ae_f24x2_loadxp)(__d, (const ae_f24x2 **)&(a), off); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_p24x2f_loadxp(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2f_loadxp)(d, (const ae_p24x2f **)&(a), off)
#else
#define ae_p24x2f_loadxp(d, a, off) { \
	ae_p24x2f __d; \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2f_loadxp)(__d, (const ae_p24x2f **)&(a), off); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_L32X2_XC(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L32X2_XC)(d, (const ae_int32x2 **)&(a), off)
#else
#define AE_L32X2_XC(d, a, off) { \
	ae_int32x2 __d; \
	CSTUB_(_TIE_xt_hifi2_AE_L32X2_XC)(__d, (const ae_int32x2 **)&(a), off); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_LP24X2_C(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_LP24X2_C)(d, (const ae_p24x2s **)&(a), off)
#else
#define AE_LP24X2_C(d, a, off) { \
	ae_p24x2s __d; \
	CSTUB_(_TIE_xt_hifi2_AE_LP24X2_C)(__d, (const ae_p24x2s **)&(a), off); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_L32X2_I(a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L32X2_I)(a, off)
#else
#define AE_L32X2_I(a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L32X2_I)(a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int32x2_loadi(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x2_loadi)(a, off)
#else
#define ae_int32x2_loadi(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x2_loadi)(a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_f32x2_loadi(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f32x2_loadi)(a, off)
#else
#define ae_f32x2_loadi(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f32x2_loadi)(a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_LP24X2_I(a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_LP24X2_I)(a, off)
#else
#define AE_LP24X2_I(a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_LP24X2_I)(a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int24x2_loadi(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int24x2_loadi)(a, off)
#else
#define ae_int24x2_loadi(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int24x2_loadi)(a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_p24x2s_loadi(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2s_loadi)(a, off)
#else
#define ae_p24x2s_loadi(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2s_loadi)(a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_L32X2_IP(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L32X2_IP)(d, (const ae_int32x2 **)&(a), off)
#else
#define AE_L32X2_IP(d, a, off) { \
	ae_int32x2 __d; \
	CSTUB_(_TIE_xt_hifi2_AE_L32X2_IP)(__d, (const ae_int32x2 **)&(a), off); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int32x2_loadip(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x2_loadip)(d, (const ae_int32x2 **)&(a), off)
#else
#define ae_int32x2_loadip(d, a, off) { \
	ae_int32x2 __d; \
	CSTUB_(_TIE_xt_hifi2_ae_int32x2_loadip)(__d, (const ae_int32x2 **)&(a), off); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_f32x2_loadip(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f32x2_loadip)(d, (const ae_f32x2 **)&(a), off)
#else
#define ae_f32x2_loadip(d, a, off) { \
	ae_f32x2 __d; \
	CSTUB_(_TIE_xt_hifi2_ae_f32x2_loadip)(__d, (const ae_f32x2 **)&(a), off); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_LP24X2_IU(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_LP24X2_IU)(d, (const ae_p24x2s **)&(a), off)
#else
#define AE_LP24X2_IU(d, a, off) { \
	ae_p24x2s __d; \
	CSTUB_(_TIE_xt_hifi2_AE_LP24X2_IU)(__d, (const ae_p24x2s **)&(a), off); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int24x2_loadip(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int24x2_loadip)(d, (const ae_int24x2 **)&(a), off)
#else
#define ae_int24x2_loadip(d, a, off) { \
	ae_int24x2 __d; \
	CSTUB_(_TIE_xt_hifi2_ae_int24x2_loadip)(__d, (const ae_int24x2 **)&(a), off); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_p24x2s_loadip(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2s_loadip)(d, (const ae_p24x2s **)&(a), off)
#else
#define ae_p24x2s_loadip(d, a, off) { \
	ae_p24x2s __d; \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2s_loadip)(__d, (const ae_p24x2s **)&(a), off); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_L32X2_RIP(d, a) \
	CSTUB_(_TIE_xt_hifi2_AE_L32X2_RIP)(d, (const ae_int32x2 **)&(a))
#else
#define AE_L32X2_RIP(d, a) { \
	ae_int32x2 __d; \
	CSTUB_(_TIE_xt_hifi2_AE_L32X2_RIP)(__d, (const ae_int32x2 **)&(a)); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_L32X2_RIC(d, a) \
	CSTUB_(_TIE_xt_hifi2_AE_L32X2_RIC)(d, (const ae_int32x2 **)&(a))
#else
#define AE_L32X2_RIC(d, a) { \
	ae_int32x2 __d; \
	CSTUB_(_TIE_xt_hifi2_AE_L32X2_RIC)(__d, (const ae_int32x2 **)&(a)); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_L32X2_X(a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L32X2_X)(a, off)
#else
#define AE_L32X2_X(a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L32X2_X)(a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int32x2_loadx(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x2_loadx)(a, off)
#else
#define ae_int32x2_loadx(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x2_loadx)(a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_f32x2_loadx(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f32x2_loadx)(a, off)
#else
#define ae_f32x2_loadx(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f32x2_loadx)(a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_LP24X2_X(a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_LP24X2_X)(a, off)
#else
#define AE_LP24X2_X(a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_LP24X2_X)(a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int24x2_loadx(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int24x2_loadx)(a, off)
#else
#define ae_int24x2_loadx(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int24x2_loadx)(a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_p24x2s_loadx(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2s_loadx)(a, off)
#else
#define ae_p24x2s_loadx(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2s_loadx)(a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_L32X2_XP(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L32X2_XP)(d, (const ae_int32x2 **)&(a), off)
#else
#define AE_L32X2_XP(d, a, off) { \
	ae_int32x2 __d; \
	CSTUB_(_TIE_xt_hifi2_AE_L32X2_XP)(__d, (const ae_int32x2 **)&(a), off); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int32x2_loadxp(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x2_loadxp)(d, (const ae_int32x2 **)&(a), off)
#else
#define ae_int32x2_loadxp(d, a, off) { \
	ae_int32x2 __d; \
	CSTUB_(_TIE_xt_hifi2_ae_int32x2_loadxp)(__d, (const ae_int32x2 **)&(a), off); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_f32x2_loadxp(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f32x2_loadxp)(d, (const ae_f32x2 **)&(a), off)
#else
#define ae_f32x2_loadxp(d, a, off) { \
	ae_f32x2 __d; \
	CSTUB_(_TIE_xt_hifi2_ae_f32x2_loadxp)(__d, (const ae_f32x2 **)&(a), off); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_LP24X2_XU(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_LP24X2_XU)(d, (const ae_p24x2s **)&(a), off)
#else
#define AE_LP24X2_XU(d, a, off) { \
	ae_p24x2s __d; \
	CSTUB_(_TIE_xt_hifi2_AE_LP24X2_XU)(__d, (const ae_p24x2s **)&(a), off); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int24x2_loadxp(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int24x2_loadxp)(d, (const ae_int24x2 **)&(a), off)
#else
#define ae_int24x2_loadxp(d, a, off) { \
	ae_int24x2 __d; \
	CSTUB_(_TIE_xt_hifi2_ae_int24x2_loadxp)(__d, (const ae_int24x2 **)&(a), off); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_p24x2s_loadxp(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2s_loadxp)(d, (const ae_p24x2s **)&(a), off)
#else
#define ae_p24x2s_loadxp(d, a, off) { \
	ae_p24x2s __d; \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2s_loadxp)(__d, (const ae_p24x2s **)&(a), off); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_L16X4_XC(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L16X4_XC)(d, (const ae_int16x4 **)&(a), off)
#else
#define AE_L16X4_XC(d, a, off) { \
	ae_int16x4 __d; \
	CSTUB_(_TIE_xt_hifi2_AE_L16X4_XC)(__d, (const ae_int16x4 **)&(a), off); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_L16X4_I(a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L16X4_I)(a, off)
#else
#define AE_L16X4_I(a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L16X4_I)(a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int16x4_loadi(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int16x4_loadi)(a, off)
#else
#define ae_int16x4_loadi(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int16x4_loadi)(a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_f16x4_loadi(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f16x4_loadi)(a, off)
#else
#define ae_f16x4_loadi(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f16x4_loadi)(a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_L16X4_IP(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L16X4_IP)(d, (const ae_int16x4 **)&(a), off)
#else
#define AE_L16X4_IP(d, a, off) { \
	ae_int16x4 __d; \
	CSTUB_(_TIE_xt_hifi2_AE_L16X4_IP)(__d, (const ae_int16x4 **)&(a), off); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int16x4_loadip(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int16x4_loadip)(d, (const ae_int16x4 **)&(a), off)
#else
#define ae_int16x4_loadip(d, a, off) { \
	ae_int16x4 __d; \
	CSTUB_(_TIE_xt_hifi2_ae_int16x4_loadip)(__d, (const ae_int16x4 **)&(a), off); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_f16x4_loadip(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f16x4_loadip)(d, (const ae_f16x4 **)&(a), off)
#else
#define ae_f16x4_loadip(d, a, off) { \
	ae_f16x4 __d; \
	CSTUB_(_TIE_xt_hifi2_ae_f16x4_loadip)(__d, (const ae_f16x4 **)&(a), off); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_L16X4_RIP(d, a) \
	CSTUB_(_TIE_xt_hifi2_AE_L16X4_RIP)(d, (const ae_int16x4 **)&(a))
#else
#define AE_L16X4_RIP(d, a) { \
	ae_int16x4 __d; \
	CSTUB_(_TIE_xt_hifi2_AE_L16X4_RIP)(__d, (const ae_int16x4 **)&(a)); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_L16X4_RIC(d, a) \
	CSTUB_(_TIE_xt_hifi2_AE_L16X4_RIC)(d, (const ae_int16x4 **)&(a))
#else
#define AE_L16X4_RIC(d, a) { \
	ae_int16x4 __d; \
	CSTUB_(_TIE_xt_hifi2_AE_L16X4_RIC)(__d, (const ae_int16x4 **)&(a)); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_L16X4_X(a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L16X4_X)(a, off)
#else
#define AE_L16X4_X(a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L16X4_X)(a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int16x4_loadx(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int16x4_loadx)(a, off)
#else
#define ae_int16x4_loadx(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int16x4_loadx)(a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_f16x4_loadx(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f16x4_loadx)(a, off)
#else
#define ae_f16x4_loadx(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f16x4_loadx)(a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_L16X4_XP(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L16X4_XP)(d, (const ae_int16x4 **)&(a), off)
#else
#define AE_L16X4_XP(d, a, off) { \
	ae_int16x4 __d; \
	CSTUB_(_TIE_xt_hifi2_AE_L16X4_XP)(__d, (const ae_int16x4 **)&(a), off); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int16x4_loadxp(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int16x4_loadxp)(d, (const ae_int16x4 **)&(a), off)
#else
#define ae_int16x4_loadxp(d, a, off) { \
	ae_int16x4 __d; \
	CSTUB_(_TIE_xt_hifi2_ae_int16x4_loadxp)(__d, (const ae_int16x4 **)&(a), off); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_f16x4_loadxp(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f16x4_loadxp)(d, (const ae_f16x4 **)&(a), off)
#else
#define ae_f16x4_loadxp(d, a, off) { \
	ae_f16x4 __d; \
	CSTUB_(_TIE_xt_hifi2_ae_f16x4_loadxp)(__d, (const ae_f16x4 **)&(a), off); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_L64_XC(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L64_XC)(d, (const ae_int64 **)&(a), off)
#else
#define AE_L64_XC(d, a, off) { \
	ae_int64 __d; \
	CSTUB_(_TIE_xt_hifi2_AE_L64_XC)(__d, (const ae_int64 **)&(a), off); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_LQ56_C(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_LQ56_C)(d, (const ae_q56s **)&(a), off)
#else
#define AE_LQ56_C(d, a, off) { \
	ae_q56s __d; \
	CSTUB_(_TIE_xt_hifi2_AE_LQ56_C)(__d, (const ae_q56s **)&(a), off); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_L64_I(a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L64_I)(a, off)
#else
#define AE_L64_I(a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L64_I)(a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int64_loadi(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int64_loadi)(a, off)
#else
#define ae_int64_loadi(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int64_loadi)(a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_f64_loadi(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f64_loadi)(a, off)
#else
#define ae_f64_loadi(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f64_loadi)(a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_LQ56_I(a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_LQ56_I)(a, off)
#else
#define AE_LQ56_I(a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_LQ56_I)(a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_q56s_loadi(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_q56s_loadi)(a, off)
#else
#define ae_q56s_loadi(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_q56s_loadi)(a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_L64_IP(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L64_IP)(d, (const ae_int64 **)&(a), off)
#else
#define AE_L64_IP(d, a, off) { \
	ae_int64 __d; \
	CSTUB_(_TIE_xt_hifi2_AE_L64_IP)(__d, (const ae_int64 **)&(a), off); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int64_loadip(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int64_loadip)(d, (const ae_int64 **)&(a), off)
#else
#define ae_int64_loadip(d, a, off) { \
	ae_int64 __d; \
	CSTUB_(_TIE_xt_hifi2_ae_int64_loadip)(__d, (const ae_int64 **)&(a), off); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_f64_loadip(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f64_loadip)(d, (const ae_f64 **)&(a), off)
#else
#define ae_f64_loadip(d, a, off) { \
	ae_f64 __d; \
	CSTUB_(_TIE_xt_hifi2_ae_f64_loadip)(__d, (const ae_f64 **)&(a), off); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_LQ56_IU(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_LQ56_IU)(d, (const ae_q56s **)&(a), off)
#else
#define AE_LQ56_IU(d, a, off) { \
	ae_q56s __d; \
	CSTUB_(_TIE_xt_hifi2_AE_LQ56_IU)(__d, (const ae_q56s **)&(a), off); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_q56s_loadip(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_q56s_loadip)(d, (const ae_q56s **)&(a), off)
#else
#define ae_q56s_loadip(d, a, off) { \
	ae_q56s __d; \
	CSTUB_(_TIE_xt_hifi2_ae_q56s_loadip)(__d, (const ae_q56s **)&(a), off); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_L64_X(a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L64_X)(a, off)
#else
#define AE_L64_X(a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L64_X)(a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int64_loadx(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int64_loadx)(a, off)
#else
#define ae_int64_loadx(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int64_loadx)(a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_f64_loadx(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f64_loadx)(a, off)
#else
#define ae_f64_loadx(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f64_loadx)(a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_LQ56_X(a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_LQ56_X)(a, off)
#else
#define AE_LQ56_X(a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_LQ56_X)(a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_q56s_loadx(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_q56s_loadx)(a, off)
#else
#define ae_q56s_loadx(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_q56s_loadx)(a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_L64_XP(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L64_XP)(d, (const ae_int64 **)&(a), off)
#else
#define AE_L64_XP(d, a, off) { \
	ae_int64 __d; \
	CSTUB_(_TIE_xt_hifi2_AE_L64_XP)(__d, (const ae_int64 **)&(a), off); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int64_loadxp(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int64_loadxp)(d, (const ae_int64 **)&(a), off)
#else
#define ae_int64_loadxp(d, a, off) { \
	ae_int64 __d; \
	CSTUB_(_TIE_xt_hifi2_ae_int64_loadxp)(__d, (const ae_int64 **)&(a), off); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_f64_loadxp(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f64_loadxp)(d, (const ae_f64 **)&(a), off)
#else
#define ae_f64_loadxp(d, a, off) { \
	ae_f64 __d; \
	CSTUB_(_TIE_xt_hifi2_ae_f64_loadxp)(__d, (const ae_f64 **)&(a), off); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_LQ56_XU(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_LQ56_XU)(d, (const ae_q56s **)&(a), off)
#else
#define AE_LQ56_XU(d, a, off) { \
	ae_q56s __d; \
	CSTUB_(_TIE_xt_hifi2_AE_LQ56_XU)(__d, (const ae_q56s **)&(a), off); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_q56s_loadxp(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_q56s_loadxp)(d, (const ae_q56s **)&(a), off)
#else
#define ae_q56s_loadxp(d, a, off) { \
	ae_q56s __d; \
	CSTUB_(_TIE_xt_hifi2_ae_q56s_loadxp)(__d, (const ae_q56s **)&(a), off); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_S16X2M_XC(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S16X2M_XC)(d, (ae_p16x2s **)&(a), off)
#else
#define AE_S16X2M_XC(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S16X2M_XC)(d, (ae_p16x2s **)&(a), off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SP16X2F_C(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SP16X2F_C)(d, (ae_p16x2s **)&(a), off)
#else
#define AE_SP16X2F_C(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SP16X2F_C)(d, (ae_p16x2s **)&(a), off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_S16X2M_I(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S16X2M_I)(d, a, off)
#else
#define AE_S16X2M_I(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S16X2M_I)(d, a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SP16X2F_I(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SP16X2F_I)(d, a, off)
#else
#define AE_SP16X2F_I(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SP16X2F_I)(d, a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_p16x2s_storei(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p16x2s_storei)(d, a, off)
#else
#define ae_p16x2s_storei(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p16x2s_storei)(d, a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_S16X2M_IU(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S16X2M_IU)(d, (ae_p16x2s **)&(a), off)
#else
#define AE_S16X2M_IU(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S16X2M_IU)(d, (ae_p16x2s **)&(a), off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SP16X2F_IU(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SP16X2F_IU)(d, (ae_p16x2s **)&(a), off)
#else
#define AE_SP16X2F_IU(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SP16X2F_IU)(d, (ae_p16x2s **)&(a), off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_p16x2s_storeiu(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p16x2s_storeiu)(d, (ae_p16x2s **)&(a), off)
#else
#define ae_p16x2s_storeiu(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p16x2s_storeiu)(d, (ae_p16x2s **)&(a), off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_S16X2M_X(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S16X2M_X)(d, a, off)
#else
#define AE_S16X2M_X(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S16X2M_X)(d, a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SP16X2F_X(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SP16X2F_X)(d, a, off)
#else
#define AE_SP16X2F_X(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SP16X2F_X)(d, a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_p16x2s_storex(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p16x2s_storex)(d, a, off)
#else
#define ae_p16x2s_storex(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p16x2s_storex)(d, a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_S16X2M_XU(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S16X2M_XU)(d, (ae_p16x2s **)&(a), off)
#else
#define AE_S16X2M_XU(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S16X2M_XU)(d, (ae_p16x2s **)&(a), off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SP16X2F_XU(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SP16X2F_XU)(d, (ae_p16x2s **)&(a), off)
#else
#define AE_SP16X2F_XU(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SP16X2F_XU)(d, (ae_p16x2s **)&(a), off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_p16x2s_storexu(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p16x2s_storexu)(d, (ae_p16x2s **)&(a), off)
#else
#define ae_p16x2s_storexu(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p16x2s_storexu)(d, (ae_p16x2s **)&(a), off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_S32X2F24_XC(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S32X2F24_XC)(d, (ae_f24x2 **)&(a), off)
#else
#define AE_S32X2F24_XC(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S32X2F24_XC)(d, (ae_f24x2 **)&(a), off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SP24X2F_C(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SP24X2F_C)(d, (ae_p24x2f **)&(a), off)
#else
#define AE_SP24X2F_C(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SP24X2F_C)(d, (ae_p24x2f **)&(a), off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_S32X2F24_I(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S32X2F24_I)(d, a, off)
#else
#define AE_S32X2F24_I(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S32X2F24_I)(d, a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SP24X2F_I(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SP24X2F_I)(d, a, off)
#else
#define AE_SP24X2F_I(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SP24X2F_I)(d, a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_f24x2_storei(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f24x2_storei)(d, a, off)
#else
#define ae_f24x2_storei(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f24x2_storei)(d, a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_p24x2f_storei(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2f_storei)(d, a, off)
#else
#define ae_p24x2f_storei(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2f_storei)(d, a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_S32X2F24_IP(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S32X2F24_IP)(d, (ae_f24x2 **)&(a), off)
#else
#define AE_S32X2F24_IP(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S32X2F24_IP)(d, (ae_f24x2 **)&(a), off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SP24X2F_IU(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SP24X2F_IU)(d, (ae_p24x2f **)&(a), off)
#else
#define AE_SP24X2F_IU(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SP24X2F_IU)(d, (ae_p24x2f **)&(a), off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_f24x2_storeip(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f24x2_storeip)(d, (ae_f24x2 **)&(a), off)
#else
#define ae_f24x2_storeip(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f24x2_storeip)(d, (ae_f24x2 **)&(a), off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_p24x2f_storeip(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2f_storeip)(d, (ae_p24x2f **)&(a), off)
#else
#define ae_p24x2f_storeip(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2f_storeip)(d, (ae_p24x2f **)&(a), off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_S32X2F24_RIP(d, a) \
	CSTUB_(_TIE_xt_hifi2_AE_S32X2F24_RIP)(d, (ae_f24x2 **)&(a))
#else
#define AE_S32X2F24_RIP(d, a) \
	CSTUB_(_TIE_xt_hifi2_AE_S32X2F24_RIP)(d, (ae_f24x2 **)&(a))
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_S32X2F24_RIC(d, a) \
	CSTUB_(_TIE_xt_hifi2_AE_S32X2F24_RIC)(d, (ae_f24x2 **)&(a))
#else
#define AE_S32X2F24_RIC(d, a) \
	CSTUB_(_TIE_xt_hifi2_AE_S32X2F24_RIC)(d, (ae_f24x2 **)&(a))
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_S32X2F24_X(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S32X2F24_X)(d, a, off)
#else
#define AE_S32X2F24_X(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S32X2F24_X)(d, a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SP24X2F_X(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SP24X2F_X)(d, a, off)
#else
#define AE_SP24X2F_X(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SP24X2F_X)(d, a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_f24x2_storex(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f24x2_storex)(d, a, off)
#else
#define ae_f24x2_storex(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f24x2_storex)(d, a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_p24x2f_storex(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2f_storex)(d, a, off)
#else
#define ae_p24x2f_storex(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2f_storex)(d, a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_S32X2F24_XP(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S32X2F24_XP)(d, (ae_f24x2 **)&(a), off)
#else
#define AE_S32X2F24_XP(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S32X2F24_XP)(d, (ae_f24x2 **)&(a), off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SP24X2F_XU(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SP24X2F_XU)(d, (ae_p24x2f **)&(a), off)
#else
#define AE_SP24X2F_XU(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SP24X2F_XU)(d, (ae_p24x2f **)&(a), off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_f24x2_storexp(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f24x2_storexp)(d, (ae_f24x2 **)&(a), off)
#else
#define ae_f24x2_storexp(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f24x2_storexp)(d, (ae_f24x2 **)&(a), off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_p24x2f_storexp(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2f_storexp)(d, (ae_p24x2f **)&(a), off)
#else
#define ae_p24x2f_storexp(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2f_storexp)(d, (ae_p24x2f **)&(a), off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_S32X2_XC(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S32X2_XC)(d, (ae_int32x2 **)&(a), off)
#else
#define AE_S32X2_XC(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S32X2_XC)(d, (ae_int32x2 **)&(a), off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SP24X2S_C(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SP24X2S_C)(d, (ae_p24x2s **)&(a), off)
#else
#define AE_SP24X2S_C(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SP24X2S_C)(d, (ae_p24x2s **)&(a), off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_S32X2_I(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S32X2_I)(d, a, off)
#else
#define AE_S32X2_I(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S32X2_I)(d, a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int32x2_storei(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x2_storei)(d, a, off)
#else
#define ae_int32x2_storei(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x2_storei)(d, a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_f32x2_storei(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f32x2_storei)(d, a, off)
#else
#define ae_f32x2_storei(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f32x2_storei)(d, a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SP24X2S_I(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SP24X2S_I)(d, a, off)
#else
#define AE_SP24X2S_I(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SP24X2S_I)(d, a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_p24x2s_storei(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2s_storei)(d, a, off)
#else
#define ae_p24x2s_storei(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2s_storei)(d, a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int24x2_storei(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int24x2_storei)(d, a, off)
#else
#define ae_int24x2_storei(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int24x2_storei)(d, a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_S32X2_IP(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S32X2_IP)(d, (ae_int32x2 **)&(a), off)
#else
#define AE_S32X2_IP(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S32X2_IP)(d, (ae_int32x2 **)&(a), off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int32x2_storeip(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x2_storeip)(d, (ae_int32x2 **)&(a), off)
#else
#define ae_int32x2_storeip(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x2_storeip)(d, (ae_int32x2 **)&(a), off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_f32x2_storeip(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f32x2_storeip)(d, (ae_f32x2 **)&(a), off)
#else
#define ae_f32x2_storeip(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f32x2_storeip)(d, (ae_f32x2 **)&(a), off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SP24X2S_IU(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SP24X2S_IU)(d, (ae_p24x2s **)&(a), off)
#else
#define AE_SP24X2S_IU(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SP24X2S_IU)(d, (ae_p24x2s **)&(a), off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_p24x2s_storeip(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2s_storeip)(d, (ae_p24x2s **)&(a), off)
#else
#define ae_p24x2s_storeip(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2s_storeip)(d, (ae_p24x2s **)&(a), off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int24x2_storeip(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int24x2_storeip)(d, (ae_int24x2 **)&(a), off)
#else
#define ae_int24x2_storeip(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int24x2_storeip)(d, (ae_int24x2 **)&(a), off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_S32X2_RIP(d, a) \
	CSTUB_(_TIE_xt_hifi2_AE_S32X2_RIP)(d, (ae_int32x2 **)&(a))
#else
#define AE_S32X2_RIP(d, a) \
	CSTUB_(_TIE_xt_hifi2_AE_S32X2_RIP)(d, (ae_int32x2 **)&(a))
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_S32X2_RIC(d, a) \
	CSTUB_(_TIE_xt_hifi2_AE_S32X2_RIC)(d, (ae_int32x2 **)&(a))
#else
#define AE_S32X2_RIC(d, a) \
	CSTUB_(_TIE_xt_hifi2_AE_S32X2_RIC)(d, (ae_int32x2 **)&(a))
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_S32X2_X(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S32X2_X)(d, a, off)
#else
#define AE_S32X2_X(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S32X2_X)(d, a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int32x2_storex(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x2_storex)(d, a, off)
#else
#define ae_int32x2_storex(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x2_storex)(d, a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_f32x2_storex(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f32x2_storex)(d, a, off)
#else
#define ae_f32x2_storex(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f32x2_storex)(d, a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SP24X2S_X(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SP24X2S_X)(d, a, off)
#else
#define AE_SP24X2S_X(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SP24X2S_X)(d, a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_p24x2s_storex(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2s_storex)(d, a, off)
#else
#define ae_p24x2s_storex(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2s_storex)(d, a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int24x2_storex(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int24x2_storex)(d, a, off)
#else
#define ae_int24x2_storex(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int24x2_storex)(d, a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_S32X2_XP(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S32X2_XP)(d, (ae_int32x2 **)&(a), off)
#else
#define AE_S32X2_XP(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S32X2_XP)(d, (ae_int32x2 **)&(a), off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int32x2_storexp(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x2_storexp)(d, (ae_int32x2 **)&(a), off)
#else
#define ae_int32x2_storexp(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x2_storexp)(d, (ae_int32x2 **)&(a), off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_f32x2_storexp(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f32x2_storexp)(d, (ae_f32x2 **)&(a), off)
#else
#define ae_f32x2_storexp(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f32x2_storexp)(d, (ae_f32x2 **)&(a), off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SP24X2S_XU(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SP24X2S_XU)(d, (ae_p24x2s **)&(a), off)
#else
#define AE_SP24X2S_XU(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SP24X2S_XU)(d, (ae_p24x2s **)&(a), off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_p24x2s_storexp(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2s_storexp)(d, (ae_p24x2s **)&(a), off)
#else
#define ae_p24x2s_storexp(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2s_storexp)(d, (ae_p24x2s **)&(a), off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int24x2_storexp(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int24x2_storexp)(d, (ae_int24x2 **)&(a), off)
#else
#define ae_int24x2_storexp(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int24x2_storexp)(d, (ae_int24x2 **)&(a), off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_S16X4_XC(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S16X4_XC)(d, (ae_int16x4 **)&(a), off)
#else
#define AE_S16X4_XC(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S16X4_XC)(d, (ae_int16x4 **)&(a), off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_S16X4_I(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S16X4_I)(d, a, off)
#else
#define AE_S16X4_I(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S16X4_I)(d, a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int16x4_storei(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int16x4_storei)(d, a, off)
#else
#define ae_int16x4_storei(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int16x4_storei)(d, a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_f16x4_storei(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f16x4_storei)(d, a, off)
#else
#define ae_f16x4_storei(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f16x4_storei)(d, a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_S16X4_IP(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S16X4_IP)(d, (ae_int16x4 **)&(a), off)
#else
#define AE_S16X4_IP(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S16X4_IP)(d, (ae_int16x4 **)&(a), off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int16x4_storeip(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int16x4_storeip)(d, (ae_int16x4 **)&(a), off)
#else
#define ae_int16x4_storeip(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int16x4_storeip)(d, (ae_int16x4 **)&(a), off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_f16x4_storeip(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f16x4_storeip)(d, (ae_f16x4 **)&(a), off)
#else
#define ae_f16x4_storeip(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f16x4_storeip)(d, (ae_f16x4 **)&(a), off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_S16X4_RIP(d, a) \
	CSTUB_(_TIE_xt_hifi2_AE_S16X4_RIP)(d, (ae_int16x4 **)&(a))
#else
#define AE_S16X4_RIP(d, a) \
	CSTUB_(_TIE_xt_hifi2_AE_S16X4_RIP)(d, (ae_int16x4 **)&(a))
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_S16X4_RIC(d, a) \
	CSTUB_(_TIE_xt_hifi2_AE_S16X4_RIC)(d, (ae_int16x4 **)&(a))
#else
#define AE_S16X4_RIC(d, a) \
	CSTUB_(_TIE_xt_hifi2_AE_S16X4_RIC)(d, (ae_int16x4 **)&(a))
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_S16X4_X(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S16X4_X)(d, a, off)
#else
#define AE_S16X4_X(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S16X4_X)(d, a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int16x4_storex(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int16x4_storex)(d, a, off)
#else
#define ae_int16x4_storex(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int16x4_storex)(d, a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_f16x4_storex(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f16x4_storex)(d, a, off)
#else
#define ae_f16x4_storex(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f16x4_storex)(d, a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_S16X4_XP(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S16X4_XP)(d, (ae_int16x4 **)&(a), off)
#else
#define AE_S16X4_XP(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S16X4_XP)(d, (ae_int16x4 **)&(a), off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int16x4_storexp(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int16x4_storexp)(d, (ae_int16x4 **)&(a), off)
#else
#define ae_int16x4_storexp(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int16x4_storexp)(d, (ae_int16x4 **)&(a), off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_f16x4_storexp(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f16x4_storexp)(d, (ae_f16x4 **)&(a), off)
#else
#define ae_f16x4_storexp(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f16x4_storexp)(d, (ae_f16x4 **)&(a), off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_S16M_L_XC(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S16M_L_XC)(d, (ae_p16s **)&(a), off)
#else
#define AE_S16M_L_XC(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S16M_L_XC)(d, (ae_p16s **)&(a), off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SP16F_L_C(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SP16F_L_C)(d, (ae_p16s **)&(a), off)
#else
#define AE_SP16F_L_C(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SP16F_L_C)(d, (ae_p16s **)&(a), off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_S16M_L_I(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S16M_L_I)(d, a, off)
#else
#define AE_S16M_L_I(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S16M_L_I)(d, a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SP16F_L_I(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SP16F_L_I)(d, a, off)
#else
#define AE_SP16F_L_I(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SP16F_L_I)(d, a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_p16s_storei(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p16s_storei)(d, a, off)
#else
#define ae_p16s_storei(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p16s_storei)(d, a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_S16M_L_IU(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S16M_L_IU)(d, (ae_p16s **)&(a), off)
#else
#define AE_S16M_L_IU(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S16M_L_IU)(d, (ae_p16s **)&(a), off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SP16F_L_IU(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SP16F_L_IU)(d, (ae_p16s **)&(a), off)
#else
#define AE_SP16F_L_IU(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SP16F_L_IU)(d, (ae_p16s **)&(a), off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_p16s_storeiu(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p16s_storeiu)(d, (ae_p16s **)&(a), off)
#else
#define ae_p16s_storeiu(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p16s_storeiu)(d, (ae_p16s **)&(a), off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_S16M_L_X(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S16M_L_X)(d, a, off)
#else
#define AE_S16M_L_X(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S16M_L_X)(d, a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SP16F_L_X(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SP16F_L_X)(d, a, off)
#else
#define AE_SP16F_L_X(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SP16F_L_X)(d, a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_p16s_storex(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p16s_storex)(d, a, off)
#else
#define ae_p16s_storex(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p16s_storex)(d, a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_S16M_L_XU(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S16M_L_XU)(d, (ae_p16s **)&(a), off)
#else
#define AE_S16M_L_XU(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S16M_L_XU)(d, (ae_p16s **)&(a), off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SP16F_L_XU(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SP16F_L_XU)(d, (ae_p16s **)&(a), off)
#else
#define AE_SP16F_L_XU(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SP16F_L_XU)(d, (ae_p16s **)&(a), off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_p16s_storexu(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p16s_storexu)(d, (ae_p16s **)&(a), off)
#else
#define ae_p16s_storexu(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p16s_storexu)(d, (ae_p16s **)&(a), off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_S32F24_L_XC(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S32F24_L_XC)(d, (ae_f24 **)&(a), off)
#else
#define AE_S32F24_L_XC(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S32F24_L_XC)(d, (ae_f24 **)&(a), off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SP24F_L_C(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SP24F_L_C)(d, (ae_p24f **)&(a), off)
#else
#define AE_SP24F_L_C(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SP24F_L_C)(d, (ae_p24f **)&(a), off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_S32F24_L_I(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S32F24_L_I)(d, a, off)
#else
#define AE_S32F24_L_I(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S32F24_L_I)(d, a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SP24F_L_I(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SP24F_L_I)(d, a, off)
#else
#define AE_SP24F_L_I(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SP24F_L_I)(d, a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_f24_storei(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f24_storei)(d, a, off)
#else
#define ae_f24_storei(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f24_storei)(d, a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_p24f_storei(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p24f_storei)(d, a, off)
#else
#define ae_p24f_storei(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p24f_storei)(d, a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_S32F24_L_IP(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S32F24_L_IP)(d, (ae_f24 **)&(a), off)
#else
#define AE_S32F24_L_IP(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S32F24_L_IP)(d, (ae_f24 **)&(a), off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SP24F_L_IU(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SP24F_L_IU)(d, (ae_p24f **)&(a), off)
#else
#define AE_SP24F_L_IU(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SP24F_L_IU)(d, (ae_p24f **)&(a), off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_f24_storeip(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f24_storeip)(d, (ae_f24 **)&(a), off)
#else
#define ae_f24_storeip(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f24_storeip)(d, (ae_f24 **)&(a), off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_p24f_storeip(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p24f_storeip)(d, (ae_p24f **)&(a), off)
#else
#define ae_p24f_storeip(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p24f_storeip)(d, (ae_p24f **)&(a), off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_S32F24_L_X(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S32F24_L_X)(d, a, off)
#else
#define AE_S32F24_L_X(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S32F24_L_X)(d, a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SP24F_L_X(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SP24F_L_X)(d, a, off)
#else
#define AE_SP24F_L_X(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SP24F_L_X)(d, a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_f24_storex(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f24_storex)(d, a, off)
#else
#define ae_f24_storex(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f24_storex)(d, a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_p24f_storex(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p24f_storex)(d, a, off)
#else
#define ae_p24f_storex(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p24f_storex)(d, a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_S32F24_L_XP(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S32F24_L_XP)(d, (ae_f24 **)&(a), off)
#else
#define AE_S32F24_L_XP(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S32F24_L_XP)(d, (ae_f24 **)&(a), off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SP24F_L_XU(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SP24F_L_XU)(d, (ae_p24f **)&(a), off)
#else
#define AE_SP24F_L_XU(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SP24F_L_XU)(d, (ae_p24f **)&(a), off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_f24_storexp(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f24_storexp)(d, (ae_f24 **)&(a), off)
#else
#define ae_f24_storexp(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f24_storexp)(d, (ae_f24 **)&(a), off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_p24f_storexp(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p24f_storexp)(d, (ae_p24f **)&(a), off)
#else
#define ae_p24f_storexp(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p24f_storexp)(d, (ae_p24f **)&(a), off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_S32_L_XC(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S32_L_XC)(d, (ae_int32 **)&(a), off)
#else
#define AE_S32_L_XC(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S32_L_XC)(d, (ae_int32 **)&(a), off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SP24S_L_C(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SP24S_L_C)(d, (ae_p24s **)&(a), off)
#else
#define AE_SP24S_L_C(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SP24S_L_C)(d, (ae_p24s **)&(a), off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_S32_L_I(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S32_L_I)(d, a, off)
#else
#define AE_S32_L_I(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S32_L_I)(d, a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int32_storei(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int32_storei)(d, a, off)
#else
#define ae_int32_storei(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int32_storei)(d, a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_f32_storei(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f32_storei)(d, a, off)
#else
#define ae_f32_storei(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f32_storei)(d, a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SP24S_L_I(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SP24S_L_I)(d, a, off)
#else
#define AE_SP24S_L_I(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SP24S_L_I)(d, a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int24_storei(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int24_storei)(d, a, off)
#else
#define ae_int24_storei(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int24_storei)(d, a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_p24s_storei(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p24s_storei)(d, a, off)
#else
#define ae_p24s_storei(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p24s_storei)(d, a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_S32_L_IP(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S32_L_IP)(d, (ae_int32 **)&(a), off)
#else
#define AE_S32_L_IP(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S32_L_IP)(d, (ae_int32 **)&(a), off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int32_storeip(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int32_storeip)(d, (ae_int32 **)&(a), off)
#else
#define ae_int32_storeip(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int32_storeip)(d, (ae_int32 **)&(a), off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_f32_storeip(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f32_storeip)(d, (ae_f32 **)&(a), off)
#else
#define ae_f32_storeip(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f32_storeip)(d, (ae_f32 **)&(a), off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SP24S_L_IU(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SP24S_L_IU)(d, (ae_p24s **)&(a), off)
#else
#define AE_SP24S_L_IU(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SP24S_L_IU)(d, (ae_p24s **)&(a), off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int24_storeip(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int24_storeip)(d, (ae_int24 **)&(a), off)
#else
#define ae_int24_storeip(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int24_storeip)(d, (ae_int24 **)&(a), off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_p24s_storeip(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p24s_storeip)(d, (ae_p24s **)&(a), off)
#else
#define ae_p24s_storeip(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p24s_storeip)(d, (ae_p24s **)&(a), off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_S32_L_X(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S32_L_X)(d, a, off)
#else
#define AE_S32_L_X(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S32_L_X)(d, a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int32_storex(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int32_storex)(d, a, off)
#else
#define ae_int32_storex(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int32_storex)(d, a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_f32_storex(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f32_storex)(d, a, off)
#else
#define ae_f32_storex(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f32_storex)(d, a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SP24S_L_X(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SP24S_L_X)(d, a, off)
#else
#define AE_SP24S_L_X(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SP24S_L_X)(d, a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int24_storex(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int24_storex)(d, a, off)
#else
#define ae_int24_storex(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int24_storex)(d, a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_p24s_storex(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p24s_storex)(d, a, off)
#else
#define ae_p24s_storex(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p24s_storex)(d, a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_S32_L_XP(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S32_L_XP)(d, (ae_int32 **)&(a), off)
#else
#define AE_S32_L_XP(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S32_L_XP)(d, (ae_int32 **)&(a), off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int32_storexp(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int32_storexp)(d, (ae_int32 **)&(a), off)
#else
#define ae_int32_storexp(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int32_storexp)(d, (ae_int32 **)&(a), off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_f32_storexp(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f32_storexp)(d, (ae_f32 **)&(a), off)
#else
#define ae_f32_storexp(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f32_storexp)(d, (ae_f32 **)&(a), off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SP24S_L_XU(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SP24S_L_XU)(d, (ae_p24s **)&(a), off)
#else
#define AE_SP24S_L_XU(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SP24S_L_XU)(d, (ae_p24s **)&(a), off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int24_storexp(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int24_storexp)(d, (ae_int24 **)&(a), off)
#else
#define ae_int24_storexp(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int24_storexp)(d, (ae_int24 **)&(a), off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_p24s_storexp(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p24s_storexp)(d, (ae_p24s **)&(a), off)
#else
#define ae_p24s_storexp(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p24s_storexp)(d, (ae_p24s **)&(a), off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_S16_0_XC(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S16_0_XC)(d, (ae_int16 **)&(a), off)
#else
#define AE_S16_0_XC(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S16_0_XC)(d, (ae_int16 **)&(a), off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_S16_0_I(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S16_0_I)(d, a, off)
#else
#define AE_S16_0_I(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S16_0_I)(d, a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int16_storei(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int16_storei)(d, a, off)
#else
#define ae_int16_storei(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int16_storei)(d, a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_f16_storei(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f16_storei)(d, a, off)
#else
#define ae_f16_storei(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f16_storei)(d, a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_S16_0_IP(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S16_0_IP)(d, (ae_int16 **)&(a), off)
#else
#define AE_S16_0_IP(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S16_0_IP)(d, (ae_int16 **)&(a), off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int16_storeip(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int16_storeip)(d, (ae_int16 **)&(a), off)
#else
#define ae_int16_storeip(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int16_storeip)(d, (ae_int16 **)&(a), off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_f16_storeip(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f16_storeip)(d, (ae_f16 **)&(a), off)
#else
#define ae_f16_storeip(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f16_storeip)(d, (ae_f16 **)&(a), off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_S16_0_X(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S16_0_X)(d, a, off)
#else
#define AE_S16_0_X(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S16_0_X)(d, a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int16_storex(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int16_storex)(d, a, off)
#else
#define ae_int16_storex(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int16_storex)(d, a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_f16_storex(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f16_storex)(d, a, off)
#else
#define ae_f16_storex(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f16_storex)(d, a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_S16_0_XP(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S16_0_XP)(d, (ae_int16 **)&(a), off)
#else
#define AE_S16_0_XP(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S16_0_XP)(d, (ae_int16 **)&(a), off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int16_storexp(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int16_storexp)(d, (ae_int16 **)&(a), off)
#else
#define ae_int16_storexp(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int16_storexp)(d, (ae_int16 **)&(a), off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_f16_storexp(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f16_storexp)(d, (ae_f16 **)&(a), off)
#else
#define ae_f16_storexp(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f16_storexp)(d, (ae_f16 **)&(a), off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_S64_XC(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S64_XC)(d, (ae_int64 **)&(a), off)
#else
#define AE_S64_XC(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S64_XC)(d, (ae_int64 **)&(a), off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SQ56S_C(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SQ56S_C)(d, (ae_q56s **)&(a), off)
#else
#define AE_SQ56S_C(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SQ56S_C)(d, (ae_q56s **)&(a), off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_S64_I(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S64_I)(d, a, off)
#else
#define AE_S64_I(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S64_I)(d, a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int64_storei(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int64_storei)(d, a, off)
#else
#define ae_int64_storei(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int64_storei)(d, a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_f64_storei(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f64_storei)(d, a, off)
#else
#define ae_f64_storei(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f64_storei)(d, a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SQ56S_I(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SQ56S_I)(d, a, off)
#else
#define AE_SQ56S_I(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SQ56S_I)(d, a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_q56s_storei(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_q56s_storei)(d, a, off)
#else
#define ae_q56s_storei(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_q56s_storei)(d, a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_S64_IP(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S64_IP)(d, (ae_int64 **)&(a), off)
#else
#define AE_S64_IP(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S64_IP)(d, (ae_int64 **)&(a), off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int64_storeip(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int64_storeip)(d, (ae_int64 **)&(a), off)
#else
#define ae_int64_storeip(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int64_storeip)(d, (ae_int64 **)&(a), off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_f64_storeip(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f64_storeip)(d, (ae_f64 **)&(a), off)
#else
#define ae_f64_storeip(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f64_storeip)(d, (ae_f64 **)&(a), off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SQ56S_IU(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SQ56S_IU)(d, (ae_q56s **)&(a), off)
#else
#define AE_SQ56S_IU(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SQ56S_IU)(d, (ae_q56s **)&(a), off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_q56s_storeip(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_q56s_storeip)(d, (ae_q56s **)&(a), off)
#else
#define ae_q56s_storeip(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_q56s_storeip)(d, (ae_q56s **)&(a), off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_S64_X(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S64_X)(d, a, off)
#else
#define AE_S64_X(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S64_X)(d, a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int64_storex(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int64_storex)(d, a, off)
#else
#define ae_int64_storex(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int64_storex)(d, a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_f64_storex(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f64_storex)(d, a, off)
#else
#define ae_f64_storex(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f64_storex)(d, a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SQ56S_X(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SQ56S_X)(d, a, off)
#else
#define AE_SQ56S_X(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SQ56S_X)(d, a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_q56s_storex(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_q56s_storex)(d, a, off)
#else
#define ae_q56s_storex(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_q56s_storex)(d, a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_S64_XP(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S64_XP)(d, (ae_int64 **)&(a), off)
#else
#define AE_S64_XP(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S64_XP)(d, (ae_int64 **)&(a), off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int64_storexp(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int64_storexp)(d, (ae_int64 **)&(a), off)
#else
#define ae_int64_storexp(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int64_storexp)(d, (ae_int64 **)&(a), off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_f64_storexp(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f64_storexp)(d, (ae_f64 **)&(a), off)
#else
#define ae_f64_storexp(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f64_storexp)(d, (ae_f64 **)&(a), off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SQ56S_XU(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SQ56S_XU)(d, (ae_q56s **)&(a), off)
#else
#define AE_SQ56S_XU(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SQ56S_XU)(d, (ae_q56s **)&(a), off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_q56s_storexp(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_q56s_storexp)(d, (ae_q56s **)&(a), off)
#else
#define ae_q56s_storexp(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_q56s_storexp)(d, (ae_q56s **)&(a), off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_S32M_XC(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S32M_XC)(d, (ae_q32s **)&(a), off)
#else
#define AE_S32M_XC(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S32M_XC)(d, (ae_q32s **)&(a), off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SQ32F_C(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SQ32F_C)(d, (ae_q32s **)&(a), off)
#else
#define AE_SQ32F_C(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SQ32F_C)(d, (ae_q32s **)&(a), off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_S32M_I(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S32M_I)(d, a, off)
#else
#define AE_S32M_I(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S32M_I)(d, a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SQ32F_I(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SQ32F_I)(d, a, off)
#else
#define AE_SQ32F_I(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SQ32F_I)(d, a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_q32s_storei(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_q32s_storei)(d, a, off)
#else
#define ae_q32s_storei(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_q32s_storei)(d, a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_S32M_IU(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S32M_IU)(d, (ae_q32s **)&(a), off)
#else
#define AE_S32M_IU(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S32M_IU)(d, (ae_q32s **)&(a), off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SQ32F_IU(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SQ32F_IU)(d, (ae_q32s **)&(a), off)
#else
#define AE_SQ32F_IU(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SQ32F_IU)(d, (ae_q32s **)&(a), off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_q32s_storeiu(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_q32s_storeiu)(d, (ae_q32s **)&(a), off)
#else
#define ae_q32s_storeiu(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_q32s_storeiu)(d, (ae_q32s **)&(a), off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_S32M_X(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S32M_X)(d, a, off)
#else
#define AE_S32M_X(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S32M_X)(d, a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SQ32F_X(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SQ32F_X)(d, a, off)
#else
#define AE_SQ32F_X(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SQ32F_X)(d, a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_q32s_storex(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_q32s_storex)(d, a, off)
#else
#define ae_q32s_storex(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_q32s_storex)(d, a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_S32M_XU(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S32M_XU)(d, (ae_q32s **)&(a), off)
#else
#define AE_S32M_XU(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S32M_XU)(d, (ae_q32s **)&(a), off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SQ32F_XU(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SQ32F_XU)(d, (ae_q32s **)&(a), off)
#else
#define AE_SQ32F_XU(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SQ32F_XU)(d, (ae_q32s **)&(a), off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_q32s_storexu(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_q32s_storexu)(d, (ae_q32s **)&(a), off)
#else
#define ae_q32s_storexu(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_q32s_storexu)(d, (ae_q32s **)&(a), off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SA24_IC(d, su, a) \
	CSTUB_(_TIE_xt_hifi2_AE_SA24_IC)(d, su, (void **)&(a))
#else
#define AE_SA24_IC(d, su, a) { \
	ae_valign __su = su; \
	CSTUB_(_TIE_xt_hifi2_AE_SA24_IC)(d, __su, (void **)&(a)); \
	(su) = __su; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SA24_IP(d, su, a) \
	CSTUB_(_TIE_xt_hifi2_AE_SA24_IP)(d, su, (void **)&(a))
#else
#define AE_SA24_IP(d, su, a) { \
	ae_valign __su = su; \
	CSTUB_(_TIE_xt_hifi2_AE_SA24_IP)(d, __su, (void **)&(a)); \
	(su) = __su; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SA24_RIP(d, su, a) \
	CSTUB_(_TIE_xt_hifi2_AE_SA24_RIP)(d, su, (void **)&(a))
#else
#define AE_SA24_RIP(d, su, a) { \
	ae_valign __su = su; \
	CSTUB_(_TIE_xt_hifi2_AE_SA24_RIP)(d, __su, (void **)&(a)); \
	(su) = __su; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SA24_RIC(d, su, a) \
	CSTUB_(_TIE_xt_hifi2_AE_SA24_RIC)(d, su, (void **)&(a))
#else
#define AE_SA24_RIC(d, su, a) { \
	ae_valign __su = su; \
	CSTUB_(_TIE_xt_hifi2_AE_SA24_RIC)(d, __su, (void **)&(a)); \
	(su) = __su; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_p16s_mtor_ae_p24x2s(a, i) \
	CSTUB_(_TIE_xt_hifi2_ae_p16s_mtor_ae_p24x2s)(a, i)
#else
#define ae_p16s_mtor_ae_p24x2s(a, i) \
	CSTUB_(_TIE_xt_hifi2_ae_p16s_mtor_ae_p24x2s)(a, i)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_p16s_mtor_ae_p24x2f(a, i) \
	CSTUB_(_TIE_xt_hifi2_ae_p16s_mtor_ae_p24x2f)(a, i)
#else
#define ae_p16s_mtor_ae_p24x2f(a, i) \
	CSTUB_(_TIE_xt_hifi2_ae_p16s_mtor_ae_p24x2f)(a, i)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_p16s_mtor_ae_p24s(a, i) \
	CSTUB_(_TIE_xt_hifi2_ae_p16s_mtor_ae_p24s)(a, i)
#else
#define ae_p16s_mtor_ae_p24s(a, i) \
	CSTUB_(_TIE_xt_hifi2_ae_p16s_mtor_ae_p24s)(a, i)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_p16s_mtor_ae_p24f(a, i) \
	CSTUB_(_TIE_xt_hifi2_ae_p16s_mtor_ae_p24f)(a, i)
#else
#define ae_p16s_mtor_ae_p24f(a, i) \
	CSTUB_(_TIE_xt_hifi2_ae_p16s_mtor_ae_p24f)(a, i)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_p24s_mtor_ae_p24x2s(a, i) \
	CSTUB_(_TIE_xt_hifi2_ae_p24s_mtor_ae_p24x2s)(a, i)
#else
#define ae_p24s_mtor_ae_p24x2s(a, i) \
	CSTUB_(_TIE_xt_hifi2_ae_p24s_mtor_ae_p24x2s)(a, i)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_p24s_mtor_ae_p24x2f(a, i) \
	CSTUB_(_TIE_xt_hifi2_ae_p24s_mtor_ae_p24x2f)(a, i)
#else
#define ae_p24s_mtor_ae_p24x2f(a, i) \
	CSTUB_(_TIE_xt_hifi2_ae_p24s_mtor_ae_p24x2f)(a, i)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_p24s_mtor_ae_p24f(a, i) \
	CSTUB_(_TIE_xt_hifi2_ae_p24s_mtor_ae_p24f)(a, i)
#else
#define ae_p24s_mtor_ae_p24f(a, i) \
	CSTUB_(_TIE_xt_hifi2_ae_p24s_mtor_ae_p24f)(a, i)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_p24f_mtor_ae_p24x2s(a, i) \
	CSTUB_(_TIE_xt_hifi2_ae_p24f_mtor_ae_p24x2s)(a, i)
#else
#define ae_p24f_mtor_ae_p24x2s(a, i) \
	CSTUB_(_TIE_xt_hifi2_ae_p24f_mtor_ae_p24x2s)(a, i)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_p24f_mtor_ae_p24x2f(a, i) \
	CSTUB_(_TIE_xt_hifi2_ae_p24f_mtor_ae_p24x2f)(a, i)
#else
#define ae_p24f_mtor_ae_p24x2f(a, i) \
	CSTUB_(_TIE_xt_hifi2_ae_p24f_mtor_ae_p24x2f)(a, i)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_p24x2f_mtor_ae_p24x2s(a, i) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2f_mtor_ae_p24x2s)(a, i)
#else
#define ae_p24x2f_mtor_ae_p24x2s(a, i) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2f_mtor_ae_p24x2s)(a, i)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_p16x2s_mtor_ae_p24x2s(a, i) \
	CSTUB_(_TIE_xt_hifi2_ae_p16x2s_mtor_ae_p24x2s)(a, i)
#else
#define ae_p16x2s_mtor_ae_p24x2s(a, i) \
	CSTUB_(_TIE_xt_hifi2_ae_p16x2s_mtor_ae_p24x2s)(a, i)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_p16x2s_mtor_ae_p24x2f(a, i) \
	CSTUB_(_TIE_xt_hifi2_ae_p16x2s_mtor_ae_p24x2f)(a, i)
#else
#define ae_p16x2s_mtor_ae_p24x2f(a, i) \
	CSTUB_(_TIE_xt_hifi2_ae_p16x2s_mtor_ae_p24x2f)(a, i)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_p24x2s_rtom_ae_p16x2s(d, a, i) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2s_rtom_ae_p16x2s)(d, a, i)
#else
#define ae_p24x2s_rtom_ae_p16x2s(d, a, i) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2s_rtom_ae_p16x2s)(d, a, i)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_p24x2f_rtom_ae_p16x2s(d, a, i) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2f_rtom_ae_p16x2s)(d, a, i)
#else
#define ae_p24x2f_rtom_ae_p16x2s(d, a, i) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2f_rtom_ae_p16x2s)(d, a, i)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_p24x2s_rtom_ae_p24x2f(d, a, i) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2s_rtom_ae_p24x2f)(d, a, i)
#else
#define ae_p24x2s_rtom_ae_p24x2f(d, a, i) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2s_rtom_ae_p24x2f)(d, a, i)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_p24x2f_rtom_ae_p24x2s(d, a, i) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2f_rtom_ae_p24x2s)(d, a, i)
#else
#define ae_p24x2f_rtom_ae_p24x2s(d, a, i) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2f_rtom_ae_p24x2s)(d, a, i)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_p24x2s_rtom_ae_p16s(d, a, i) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2s_rtom_ae_p16s)(d, a, i)
#else
#define ae_p24x2s_rtom_ae_p16s(d, a, i) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2s_rtom_ae_p16s)(d, a, i)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_p24x2f_rtom_ae_p16s(d, a, i) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2f_rtom_ae_p16s)(d, a, i)
#else
#define ae_p24x2f_rtom_ae_p16s(d, a, i) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2f_rtom_ae_p16s)(d, a, i)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_p24s_rtom_ae_p16s(d, a, i) \
	CSTUB_(_TIE_xt_hifi2_ae_p24s_rtom_ae_p16s)(d, a, i)
#else
#define ae_p24s_rtom_ae_p16s(d, a, i) \
	CSTUB_(_TIE_xt_hifi2_ae_p24s_rtom_ae_p16s)(d, a, i)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_p24f_rtom_ae_p16s(d, a, i) \
	CSTUB_(_TIE_xt_hifi2_ae_p24f_rtom_ae_p16s)(d, a, i)
#else
#define ae_p24f_rtom_ae_p16s(d, a, i) \
	CSTUB_(_TIE_xt_hifi2_ae_p24f_rtom_ae_p16s)(d, a, i)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_p24x2s_rtom_ae_p24s(d, a, i) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2s_rtom_ae_p24s)(d, a, i)
#else
#define ae_p24x2s_rtom_ae_p24s(d, a, i) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2s_rtom_ae_p24s)(d, a, i)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_p24x2f_rtom_ae_p24s(d, a, i) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2f_rtom_ae_p24s)(d, a, i)
#else
#define ae_p24x2f_rtom_ae_p24s(d, a, i) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2f_rtom_ae_p24s)(d, a, i)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_p24f_rtom_ae_p24s(d, a, i) \
	CSTUB_(_TIE_xt_hifi2_ae_p24f_rtom_ae_p24s)(d, a, i)
#else
#define ae_p24f_rtom_ae_p24s(d, a, i) \
	CSTUB_(_TIE_xt_hifi2_ae_p24f_rtom_ae_p24s)(d, a, i)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_p24x2s_rtom_ae_p24f(d, a, i) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2s_rtom_ae_p24f)(d, a, i)
#else
#define ae_p24x2s_rtom_ae_p24f(d, a, i) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2s_rtom_ae_p24f)(d, a, i)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_p24x2f_rtom_ae_p24f(d, a, i) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2f_rtom_ae_p24f)(d, a, i)
#else
#define ae_p24x2f_rtom_ae_p24f(d, a, i) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2f_rtom_ae_p24f)(d, a, i)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_p24s_rtom_ae_p24f(d, a, i) \
	CSTUB_(_TIE_xt_hifi2_ae_p24s_rtom_ae_p24f)(d, a, i)
#else
#define ae_p24s_rtom_ae_p24f(d, a, i) \
	CSTUB_(_TIE_xt_hifi2_ae_p24s_rtom_ae_p24f)(d, a, i)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_q32s_mtor_ae_q56s(a, i) \
	CSTUB_(_TIE_xt_hifi2_ae_q32s_mtor_ae_q56s)(a, i)
#else
#define ae_q32s_mtor_ae_q56s(a, i) \
	CSTUB_(_TIE_xt_hifi2_ae_q32s_mtor_ae_q56s)(a, i)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_q56s_rtom_ae_q32s(d, a, i) \
	CSTUB_(_TIE_xt_hifi2_ae_q56s_rtom_ae_q32s)(d, a, i)
#else
#define ae_q56s_rtom_ae_q32s(d, a, i) \
	CSTUB_(_TIE_xt_hifi2_ae_q56s_rtom_ae_q32s)(d, a, i)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_valign_loadi(a, imm) \
	CSTUB_(_TIE_xt_hifi2_ae_valign_loadi)(a, imm)
#else
#define ae_valign_loadi(a, imm) \
	CSTUB_(_TIE_xt_hifi2_ae_valign_loadi)(a, imm)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_valign_storei(su, a, imm) \
	CSTUB_(_TIE_xt_hifi2_ae_valign_storei)(su, a, imm)
#else
#define ae_valign_storei(su, a, imm) \
	CSTUB_(_TIE_xt_hifi2_ae_valign_storei)(su, a, imm)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_valign_move(v) \
	CSTUB_(_TIE_xt_hifi2_ae_valign_move)(v)
#else
#define ae_valign_move(v) \
	CSTUB_(_TIE_xt_hifi2_ae_valign_move)(v)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_LA64_PP(a) \
	CSTUB_(_TIE_xt_hifi2_AE_LA64_PP)(a)
#else
#define AE_LA64_PP(a) \
	CSTUB_(_TIE_xt_hifi2_AE_LA64_PP)(a)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_LA24POS_PC(uu, a) \
	CSTUB_(_TIE_xt_hifi2_AE_LA24POS_PC)(uu, (const void **)&(a))
#else
#define AE_LA24POS_PC(uu, a) { \
	ae_valign __uu; \
	CSTUB_(_TIE_xt_hifi2_AE_LA24POS_PC)(__uu, (const void **)&(a)); \
	(uu) = __uu; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_LA24X2POS_PC(uu, a) \
	CSTUB_(_TIE_xt_hifi2_AE_LA24X2POS_PC)(uu, (const void **)&(a))
#else
#define AE_LA24X2POS_PC(uu, a) { \
	ae_valign __uu; \
	CSTUB_(_TIE_xt_hifi2_AE_LA24X2POS_PC)(__uu, (const void **)&(a)); \
	(uu) = __uu; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_LA32X2POS_PC(uu, a) \
	CSTUB_(_TIE_xt_hifi2_AE_LA32X2POS_PC)(uu, (const ae_int32x2 **)&(a))
#else
#define AE_LA32X2POS_PC(uu, a) { \
	ae_valign __uu; \
	CSTUB_(_TIE_xt_hifi2_AE_LA32X2POS_PC)(__uu, (const ae_int32x2 **)&(a)); \
	(uu) = __uu; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_LA16X4POS_PC(uu, a) \
	CSTUB_(_TIE_xt_hifi2_AE_LA16X4POS_PC)(uu, (const ae_int16x4 **)&(a))
#else
#define AE_LA16X4POS_PC(uu, a) { \
	ae_valign __uu; \
	CSTUB_(_TIE_xt_hifi2_AE_LA16X4POS_PC)(__uu, (const ae_int16x4 **)&(a)); \
	(uu) = __uu; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_LA24NEG_PC(uu, a) \
	CSTUB_(_TIE_xt_hifi2_AE_LA24NEG_PC)(uu, (const void **)&(a))
#else
#define AE_LA24NEG_PC(uu, a) { \
	ae_valign __uu; \
	CSTUB_(_TIE_xt_hifi2_AE_LA24NEG_PC)(__uu, (const void **)&(a)); \
	(uu) = __uu; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_LA24X2NEG_PC(uu, a) \
	CSTUB_(_TIE_xt_hifi2_AE_LA24X2NEG_PC)(uu, (const void **)&(a))
#else
#define AE_LA24X2NEG_PC(uu, a) { \
	ae_valign __uu; \
	CSTUB_(_TIE_xt_hifi2_AE_LA24X2NEG_PC)(__uu, (const void **)&(a)); \
	(uu) = __uu; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_LA32X2NEG_PC(uu, a) \
	CSTUB_(_TIE_xt_hifi2_AE_LA32X2NEG_PC)(uu, (const ae_int32x2 **)&(a))
#else
#define AE_LA32X2NEG_PC(uu, a) { \
	ae_valign __uu; \
	CSTUB_(_TIE_xt_hifi2_AE_LA32X2NEG_PC)(__uu, (const ae_int32x2 **)&(a)); \
	(uu) = __uu; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_LA16X4NEG_PC(uu, a) \
	CSTUB_(_TIE_xt_hifi2_AE_LA16X4NEG_PC)(uu, (const ae_int16x4 **)&(a))
#else
#define AE_LA16X4NEG_PC(uu, a) { \
	ae_valign __uu; \
	CSTUB_(_TIE_xt_hifi2_AE_LA16X4NEG_PC)(__uu, (const ae_int16x4 **)&(a)); \
	(uu) = __uu; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_LA32X2F24POS_PC(uu, a) \
	CSTUB_(_TIE_xt_hifi2_AE_LA32X2F24POS_PC)(uu, (const ae_f24x2 **)&(a))
#else
#define AE_LA32X2F24POS_PC(uu, a) { \
	ae_valign __uu; \
	CSTUB_(_TIE_xt_hifi2_AE_LA32X2F24POS_PC)(__uu, (const ae_f24x2 **)&(a)); \
	(uu) = __uu; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_LA32X2F24NEG_PC(uu, a) \
	CSTUB_(_TIE_xt_hifi2_AE_LA32X2F24NEG_PC)(uu, (const ae_f24x2 **)&(a))
#else
#define AE_LA32X2F24NEG_PC(uu, a) { \
	ae_valign __uu; \
	CSTUB_(_TIE_xt_hifi2_AE_LA32X2F24NEG_PC)(__uu, (const ae_f24x2 **)&(a)); \
	(uu) = __uu; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SA64POS_FP(su, a) \
	CSTUB_(_TIE_xt_hifi2_AE_SA64POS_FP)(su, a)
#else
#define AE_SA64POS_FP(su, a) { \
	ae_valign __su = su; \
	CSTUB_(_TIE_xt_hifi2_AE_SA64POS_FP)(__su, a); \
	(su) = __su; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SA64POS_FC(su, a) \
	CSTUB_(_TIE_xt_hifi2_AE_SA64POS_FC)(su, a)
#else
#define AE_SA64POS_FC(su, a) { \
	ae_valign __su = su; \
	CSTUB_(_TIE_xt_hifi2_AE_SA64POS_FC)(__su, a); \
	(su) = __su; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SA64NEG_FP(su, a) \
	CSTUB_(_TIE_xt_hifi2_AE_SA64NEG_FP)(su, a)
#else
#define AE_SA64NEG_FP(su, a) { \
	ae_valign __su = su; \
	CSTUB_(_TIE_xt_hifi2_AE_SA64NEG_FP)(__su, a); \
	(su) = __su; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SA64NEG_FC(su, a) \
	CSTUB_(_TIE_xt_hifi2_AE_SA64NEG_FC)(su, a)
#else
#define AE_SA64NEG_FC(su, a) { \
	ae_valign __su = su; \
	CSTUB_(_TIE_xt_hifi2_AE_SA64NEG_FC)(__su, a); \
	(su) = __su; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_LA32X2_IC(d, uu, a) \
	CSTUB_(_TIE_xt_hifi2_AE_LA32X2_IC)(d, uu, (const ae_int32x2 **)&(a))
#else
#define AE_LA32X2_IC(d, uu, a) { \
	ae_int32x2 __d; \
	ae_valign __uu = uu; \
	CSTUB_(_TIE_xt_hifi2_AE_LA32X2_IC)(__d, __uu, (const ae_int32x2 **)&(a)); \
	(d) = __d; \
	(uu) = __uu; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_LA32X2_IP(d, uu, a) \
	CSTUB_(_TIE_xt_hifi2_AE_LA32X2_IP)(d, uu, (const ae_int32x2 **)&(a))
#else
#define AE_LA32X2_IP(d, uu, a) { \
	ae_int32x2 __d; \
	ae_valign __uu = uu; \
	CSTUB_(_TIE_xt_hifi2_AE_LA32X2_IP)(__d, __uu, (const ae_int32x2 **)&(a)); \
	(d) = __d; \
	(uu) = __uu; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_LA32X2_RIP(d, uu, a) \
	CSTUB_(_TIE_xt_hifi2_AE_LA32X2_RIP)(d, uu, (const ae_int32x2 **)&(a))
#else
#define AE_LA32X2_RIP(d, uu, a) { \
	ae_int32x2 __d; \
	ae_valign __uu = uu; \
	CSTUB_(_TIE_xt_hifi2_AE_LA32X2_RIP)(__d, __uu, (const ae_int32x2 **)&(a)); \
	(d) = __d; \
	(uu) = __uu; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_LA32X2_RIC(d, uu, a) \
	CSTUB_(_TIE_xt_hifi2_AE_LA32X2_RIC)(d, uu, (const ae_int32x2 **)&(a))
#else
#define AE_LA32X2_RIC(d, uu, a) { \
	ae_int32x2 __d; \
	ae_valign __uu = uu; \
	CSTUB_(_TIE_xt_hifi2_AE_LA32X2_RIC)(__d, __uu, (const ae_int32x2 **)&(a)); \
	(d) = __d; \
	(uu) = __uu; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_LA16X4_IC(d, uu, a) \
	CSTUB_(_TIE_xt_hifi2_AE_LA16X4_IC)(d, uu, (const ae_int16x4 **)&(a))
#else
#define AE_LA16X4_IC(d, uu, a) { \
	ae_int16x4 __d; \
	ae_valign __uu = uu; \
	CSTUB_(_TIE_xt_hifi2_AE_LA16X4_IC)(__d, __uu, (const ae_int16x4 **)&(a)); \
	(d) = __d; \
	(uu) = __uu; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_LA16X4_IP(d, uu, a) \
	CSTUB_(_TIE_xt_hifi2_AE_LA16X4_IP)(d, uu, (const ae_int16x4 **)&(a))
#else
#define AE_LA16X4_IP(d, uu, a) { \
	ae_int16x4 __d; \
	ae_valign __uu = uu; \
	CSTUB_(_TIE_xt_hifi2_AE_LA16X4_IP)(__d, __uu, (const ae_int16x4 **)&(a)); \
	(d) = __d; \
	(uu) = __uu; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_LA16X4_RIP(d, uu, a) \
	CSTUB_(_TIE_xt_hifi2_AE_LA16X4_RIP)(d, uu, (const ae_int16x4 **)&(a))
#else
#define AE_LA16X4_RIP(d, uu, a) { \
	ae_int16x4 __d; \
	ae_valign __uu = uu; \
	CSTUB_(_TIE_xt_hifi2_AE_LA16X4_RIP)(__d, __uu, (const ae_int16x4 **)&(a)); \
	(d) = __d; \
	(uu) = __uu; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_LA16X4_RIC(d, uu, a) \
	CSTUB_(_TIE_xt_hifi2_AE_LA16X4_RIC)(d, uu, (const ae_int16x4 **)&(a))
#else
#define AE_LA16X4_RIC(d, uu, a) { \
	ae_int16x4 __d; \
	ae_valign __uu = uu; \
	CSTUB_(_TIE_xt_hifi2_AE_LA16X4_RIC)(__d, __uu, (const ae_int16x4 **)&(a)); \
	(d) = __d; \
	(uu) = __uu; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_LA32X2F24_IC(d, uu, a) \
	CSTUB_(_TIE_xt_hifi2_AE_LA32X2F24_IC)(d, uu, (const ae_f24x2 **)&(a))
#else
#define AE_LA32X2F24_IC(d, uu, a) { \
	ae_f24x2 __d; \
	ae_valign __uu = uu; \
	CSTUB_(_TIE_xt_hifi2_AE_LA32X2F24_IC)(__d, __uu, (const ae_f24x2 **)&(a)); \
	(d) = __d; \
	(uu) = __uu; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_LA32X2F24_IP(d, uu, a) \
	CSTUB_(_TIE_xt_hifi2_AE_LA32X2F24_IP)(d, uu, (const ae_f24x2 **)&(a))
#else
#define AE_LA32X2F24_IP(d, uu, a) { \
	ae_f24x2 __d; \
	ae_valign __uu = uu; \
	CSTUB_(_TIE_xt_hifi2_AE_LA32X2F24_IP)(__d, __uu, (const ae_f24x2 **)&(a)); \
	(d) = __d; \
	(uu) = __uu; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_LA32X2F24_RIP(d, uu, a) \
	CSTUB_(_TIE_xt_hifi2_AE_LA32X2F24_RIP)(d, uu, (const ae_f24x2 **)&(a))
#else
#define AE_LA32X2F24_RIP(d, uu, a) { \
	ae_f24x2 __d; \
	ae_valign __uu = uu; \
	CSTUB_(_TIE_xt_hifi2_AE_LA32X2F24_RIP)(__d, __uu, (const ae_f24x2 **)&(a)); \
	(d) = __d; \
	(uu) = __uu; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_LA32X2F24_RIC(d, uu, a) \
	CSTUB_(_TIE_xt_hifi2_AE_LA32X2F24_RIC)(d, uu, (const ae_f24x2 **)&(a))
#else
#define AE_LA32X2F24_RIC(d, uu, a) { \
	ae_f24x2 __d; \
	ae_valign __uu = uu; \
	CSTUB_(_TIE_xt_hifi2_AE_LA32X2F24_RIC)(__d, __uu, (const ae_f24x2 **)&(a)); \
	(d) = __d; \
	(uu) = __uu; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_LA24_IC(d, uu, a) \
	CSTUB_(_TIE_xt_hifi2_AE_LA24_IC)(d, uu, (const void **)&(a))
#else
#define AE_LA24_IC(d, uu, a) { \
	ae_int24x2 __d; \
	ae_valign __uu = uu; \
	CSTUB_(_TIE_xt_hifi2_AE_LA24_IC)(__d, __uu, (const void **)&(a)); \
	(d) = __d; \
	(uu) = __uu; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_LA24_IP(d, uu, a) \
	CSTUB_(_TIE_xt_hifi2_AE_LA24_IP)(d, uu, (const void **)&(a))
#else
#define AE_LA24_IP(d, uu, a) { \
	ae_int24x2 __d; \
	ae_valign __uu = uu; \
	CSTUB_(_TIE_xt_hifi2_AE_LA24_IP)(__d, __uu, (const void **)&(a)); \
	(d) = __d; \
	(uu) = __uu; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_LA24_RIP(d, uu, a) \
	CSTUB_(_TIE_xt_hifi2_AE_LA24_RIP)(d, uu, (const void **)&(a))
#else
#define AE_LA24_RIP(d, uu, a) { \
	ae_int24x2 __d; \
	ae_valign __uu = uu; \
	CSTUB_(_TIE_xt_hifi2_AE_LA24_RIP)(__d, __uu, (const void **)&(a)); \
	(d) = __d; \
	(uu) = __uu; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_LA24_RIC(d, uu, a) \
	CSTUB_(_TIE_xt_hifi2_AE_LA24_RIC)(d, uu, (const void **)&(a))
#else
#define AE_LA24_RIC(d, uu, a) { \
	ae_int24x2 __d; \
	ae_valign __uu = uu; \
	CSTUB_(_TIE_xt_hifi2_AE_LA24_RIC)(__d, __uu, (const void **)&(a)); \
	(d) = __d; \
	(uu) = __uu; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_LA24X2_IC(d, uu, a) \
	CSTUB_(_TIE_xt_hifi2_AE_LA24X2_IC)(d, uu, (const void **)&(a))
#else
#define AE_LA24X2_IC(d, uu, a) { \
	ae_int24x2 __d; \
	ae_valign __uu = uu; \
	CSTUB_(_TIE_xt_hifi2_AE_LA24X2_IC)(__d, __uu, (const void **)&(a)); \
	(d) = __d; \
	(uu) = __uu; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_LA24X2_IP(d, uu, a) \
	CSTUB_(_TIE_xt_hifi2_AE_LA24X2_IP)(d, uu, (const void **)&(a))
#else
#define AE_LA24X2_IP(d, uu, a) { \
	ae_int24x2 __d; \
	ae_valign __uu = uu; \
	CSTUB_(_TIE_xt_hifi2_AE_LA24X2_IP)(__d, __uu, (const void **)&(a)); \
	(d) = __d; \
	(uu) = __uu; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_LA24X2_RIP(d, uu, a) \
	CSTUB_(_TIE_xt_hifi2_AE_LA24X2_RIP)(d, uu, (const void **)&(a))
#else
#define AE_LA24X2_RIP(d, uu, a) { \
	ae_int24x2 __d; \
	ae_valign __uu = uu; \
	CSTUB_(_TIE_xt_hifi2_AE_LA24X2_RIP)(__d, __uu, (const void **)&(a)); \
	(d) = __d; \
	(uu) = __uu; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_LA24X2_RIC(d, uu, a) \
	CSTUB_(_TIE_xt_hifi2_AE_LA24X2_RIC)(d, uu, (const void **)&(a))
#else
#define AE_LA24X2_RIC(d, uu, a) { \
	ae_int24x2 __d; \
	ae_valign __uu = uu; \
	CSTUB_(_TIE_xt_hifi2_AE_LA24X2_RIC)(__d, __uu, (const void **)&(a)); \
	(d) = __d; \
	(uu) = __uu; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SA32X2_IC(d, su, a) \
	CSTUB_(_TIE_xt_hifi2_AE_SA32X2_IC)(d, su, (ae_int32x2 **)&(a))
#else
#define AE_SA32X2_IC(d, su, a) { \
	ae_valign __su = su; \
	CSTUB_(_TIE_xt_hifi2_AE_SA32X2_IC)(d, __su, (ae_int32x2 **)&(a)); \
	(su) = __su; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SA32X2_IP(d, su, a) \
	CSTUB_(_TIE_xt_hifi2_AE_SA32X2_IP)(d, su, (ae_int32x2 **)&(a))
#else
#define AE_SA32X2_IP(d, su, a) { \
	ae_valign __su = su; \
	CSTUB_(_TIE_xt_hifi2_AE_SA32X2_IP)(d, __su, (ae_int32x2 **)&(a)); \
	(su) = __su; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SA32X2_RIP(d, su, a) \
	CSTUB_(_TIE_xt_hifi2_AE_SA32X2_RIP)(d, su, (ae_int32x2 **)&(a))
#else
#define AE_SA32X2_RIP(d, su, a) { \
	ae_valign __su = su; \
	CSTUB_(_TIE_xt_hifi2_AE_SA32X2_RIP)(d, __su, (ae_int32x2 **)&(a)); \
	(su) = __su; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SA32X2_RIC(d, su, a) \
	CSTUB_(_TIE_xt_hifi2_AE_SA32X2_RIC)(d, su, (ae_int32x2 **)&(a))
#else
#define AE_SA32X2_RIC(d, su, a) { \
	ae_valign __su = su; \
	CSTUB_(_TIE_xt_hifi2_AE_SA32X2_RIC)(d, __su, (ae_int32x2 **)&(a)); \
	(su) = __su; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SA16X4_IC(d, su, a) \
	CSTUB_(_TIE_xt_hifi2_AE_SA16X4_IC)(d, su, (ae_int16x4 **)&(a))
#else
#define AE_SA16X4_IC(d, su, a) { \
	ae_valign __su = su; \
	CSTUB_(_TIE_xt_hifi2_AE_SA16X4_IC)(d, __su, (ae_int16x4 **)&(a)); \
	(su) = __su; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SA16X4_IP(d, su, a) \
	CSTUB_(_TIE_xt_hifi2_AE_SA16X4_IP)(d, su, (ae_int16x4 **)&(a))
#else
#define AE_SA16X4_IP(d, su, a) { \
	ae_valign __su = su; \
	CSTUB_(_TIE_xt_hifi2_AE_SA16X4_IP)(d, __su, (ae_int16x4 **)&(a)); \
	(su) = __su; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SA16X4_RIP(d, su, a) \
	CSTUB_(_TIE_xt_hifi2_AE_SA16X4_RIP)(d, su, (ae_int16x4 **)&(a))
#else
#define AE_SA16X4_RIP(d, su, a) { \
	ae_valign __su = su; \
	CSTUB_(_TIE_xt_hifi2_AE_SA16X4_RIP)(d, __su, (ae_int16x4 **)&(a)); \
	(su) = __su; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SA16X4_RIC(d, su, a) \
	CSTUB_(_TIE_xt_hifi2_AE_SA16X4_RIC)(d, su, (ae_int16x4 **)&(a))
#else
#define AE_SA16X4_RIC(d, su, a) { \
	ae_valign __su = su; \
	CSTUB_(_TIE_xt_hifi2_AE_SA16X4_RIC)(d, __su, (ae_int16x4 **)&(a)); \
	(su) = __su; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SA32X2F24_IC(d, su, a) \
	CSTUB_(_TIE_xt_hifi2_AE_SA32X2F24_IC)(d, su, (ae_f24x2 **)&(a))
#else
#define AE_SA32X2F24_IC(d, su, a) { \
	ae_valign __su = su; \
	CSTUB_(_TIE_xt_hifi2_AE_SA32X2F24_IC)(d, __su, (ae_f24x2 **)&(a)); \
	(su) = __su; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SA32X2F24_IP(d, su, a) \
	CSTUB_(_TIE_xt_hifi2_AE_SA32X2F24_IP)(d, su, (ae_f24x2 **)&(a))
#else
#define AE_SA32X2F24_IP(d, su, a) { \
	ae_valign __su = su; \
	CSTUB_(_TIE_xt_hifi2_AE_SA32X2F24_IP)(d, __su, (ae_f24x2 **)&(a)); \
	(su) = __su; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SA32X2F24_RIP(d, su, a) \
	CSTUB_(_TIE_xt_hifi2_AE_SA32X2F24_RIP)(d, su, (ae_f24x2 **)&(a))
#else
#define AE_SA32X2F24_RIP(d, su, a) { \
	ae_valign __su = su; \
	CSTUB_(_TIE_xt_hifi2_AE_SA32X2F24_RIP)(d, __su, (ae_f24x2 **)&(a)); \
	(su) = __su; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SA32X2F24_RIC(d, su, a) \
	CSTUB_(_TIE_xt_hifi2_AE_SA32X2F24_RIC)(d, su, (ae_f24x2 **)&(a))
#else
#define AE_SA32X2F24_RIC(d, su, a) { \
	ae_valign __su = su; \
	CSTUB_(_TIE_xt_hifi2_AE_SA32X2F24_RIC)(d, __su, (ae_f24x2 **)&(a)); \
	(su) = __su; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SA24_L_IC(d, su, a) \
	CSTUB_(_TIE_xt_hifi2_AE_SA24_L_IC)(d, su, (void **)&(a))
#else
#define AE_SA24_L_IC(d, su, a) { \
	ae_valign __su = su; \
	CSTUB_(_TIE_xt_hifi2_AE_SA24_L_IC)(d, __su, (void **)&(a)); \
	(su) = __su; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SA24_L_IP(d, su, a) \
	CSTUB_(_TIE_xt_hifi2_AE_SA24_L_IP)(d, su, (void **)&(a))
#else
#define AE_SA24_L_IP(d, su, a) { \
	ae_valign __su = su; \
	CSTUB_(_TIE_xt_hifi2_AE_SA24_L_IP)(d, __su, (void **)&(a)); \
	(su) = __su; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SA24_L_RIP(d, su, a) \
	CSTUB_(_TIE_xt_hifi2_AE_SA24_L_RIP)(d, su, (void **)&(a))
#else
#define AE_SA24_L_RIP(d, su, a) { \
	ae_valign __su = su; \
	CSTUB_(_TIE_xt_hifi2_AE_SA24_L_RIP)(d, __su, (void **)&(a)); \
	(su) = __su; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SA24_L_RIC(d, su, a) \
	CSTUB_(_TIE_xt_hifi2_AE_SA24_L_RIC)(d, su, (void **)&(a))
#else
#define AE_SA24_L_RIC(d, su, a) { \
	ae_valign __su = su; \
	CSTUB_(_TIE_xt_hifi2_AE_SA24_L_RIC)(d, __su, (void **)&(a)); \
	(su) = __su; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SA24X2_IC(d, su, a) \
	CSTUB_(_TIE_xt_hifi2_AE_SA24X2_IC)(d, su, (void **)&(a))
#else
#define AE_SA24X2_IC(d, su, a) { \
	ae_valign __su = su; \
	CSTUB_(_TIE_xt_hifi2_AE_SA24X2_IC)(d, __su, (void **)&(a)); \
	(su) = __su; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SA24X2_IP(d, su, a) \
	CSTUB_(_TIE_xt_hifi2_AE_SA24X2_IP)(d, su, (void **)&(a))
#else
#define AE_SA24X2_IP(d, su, a) { \
	ae_valign __su = su; \
	CSTUB_(_TIE_xt_hifi2_AE_SA24X2_IP)(d, __su, (void **)&(a)); \
	(su) = __su; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SA24X2_RIP(d, su, a) \
	CSTUB_(_TIE_xt_hifi2_AE_SA24X2_RIP)(d, su, (void **)&(a))
#else
#define AE_SA24X2_RIP(d, su, a) { \
	ae_valign __su = su; \
	CSTUB_(_TIE_xt_hifi2_AE_SA24X2_RIP)(d, __su, (void **)&(a)); \
	(su) = __su; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SA24X2_RIC(d, su, a) \
	CSTUB_(_TIE_xt_hifi2_AE_SA24X2_RIC)(d, su, (void **)&(a))
#else
#define AE_SA24X2_RIC(d, su, a) { \
	ae_valign __su = su; \
	CSTUB_(_TIE_xt_hifi2_AE_SA24X2_RIC)(d, __su, (void **)&(a)); \
	(su) = __su; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_S32RA64S_I(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S32RA64S_I)(d, a, off)
#else
#define AE_S32RA64S_I(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S32RA64S_I)(d, a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_S32RA64S_IP(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S32RA64S_IP)(d, (ae_f32 **)&(a), off)
#else
#define AE_S32RA64S_IP(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S32RA64S_IP)(d, (ae_f32 **)&(a), off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_S32RA64S_X(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S32RA64S_X)(d, a, off)
#else
#define AE_S32RA64S_X(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S32RA64S_X)(d, a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_S32RA64S_XP(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S32RA64S_XP)(d, (ae_f32 **)&(a), off)
#else
#define AE_S32RA64S_XP(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S32RA64S_XP)(d, (ae_f32 **)&(a), off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_S32RA64S_XC(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S32RA64S_XC)(d, (ae_f32 **)&(a), off)
#else
#define AE_S32RA64S_XC(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S32RA64S_XC)(d, (ae_f32 **)&(a), off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_S24RA64S_I(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S24RA64S_I)(d, a, off)
#else
#define AE_S24RA64S_I(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S24RA64S_I)(d, a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_S24RA64S_IP(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S24RA64S_IP)(d, (ae_f24 **)&(a), off)
#else
#define AE_S24RA64S_IP(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S24RA64S_IP)(d, (ae_f24 **)&(a), off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_S24RA64S_X(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S24RA64S_X)(d, a, off)
#else
#define AE_S24RA64S_X(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S24RA64S_X)(d, a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_S24RA64S_XP(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S24RA64S_XP)(d, (ae_f24 **)&(a), off)
#else
#define AE_S24RA64S_XP(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S24RA64S_XP)(d, (ae_f24 **)&(a), off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_S24RA64S_XC(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S24RA64S_XC)(d, (ae_f24 **)&(a), off)
#else
#define AE_S24RA64S_XC(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S24RA64S_XC)(d, (ae_f24 **)&(a), off)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_S32X2RA64S_IP(d2, d1, a) \
	CSTUB_(_TIE_xt_hifi2_AE_S32X2RA64S_IP)(d2, d1, (ae_f32x2 **)&(a))
#else
#define AE_S32X2RA64S_IP(d2, d1, a) \
	CSTUB_(_TIE_xt_hifi2_AE_S32X2RA64S_IP)(d2, d1, (ae_f32x2 **)&(a))
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_S24X2RA64S_IP(d2, d1, a) \
	CSTUB_(_TIE_xt_hifi2_AE_S24X2RA64S_IP)(d2, d1, (ae_f24x2 **)&(a))
#else
#define AE_S24X2RA64S_IP(d2, d1, a) \
	CSTUB_(_TIE_xt_hifi2_AE_S24X2RA64S_IP)(d2, d1, (ae_f24x2 **)&(a))
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_ZERO() \
	CSTUB_(_TIE_xt_hifi2_AE_ZERO)()
#else
#define AE_ZERO() \
	CSTUB_(_TIE_xt_hifi2_AE_ZERO)()
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_ZERO64() \
	CSTUB_(_TIE_xt_hifi2_AE_ZERO64)()
#else
#define AE_ZERO64() \
	CSTUB_(_TIE_xt_hifi2_AE_ZERO64)()
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_ZERO32() \
	CSTUB_(_TIE_xt_hifi2_AE_ZERO32)()
#else
#define AE_ZERO32() \
	CSTUB_(_TIE_xt_hifi2_AE_ZERO32)()
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_ZERO24() \
	CSTUB_(_TIE_xt_hifi2_AE_ZERO24)()
#else
#define AE_ZERO24() \
	CSTUB_(_TIE_xt_hifi2_AE_ZERO24)()
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_ZERO16() \
	CSTUB_(_TIE_xt_hifi2_AE_ZERO16)()
#else
#define AE_ZERO16() \
	CSTUB_(_TIE_xt_hifi2_AE_ZERO16)()
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_ZEROP48() \
	CSTUB_(_TIE_xt_hifi2_AE_ZEROP48)()
#else
#define AE_ZEROP48() \
	CSTUB_(_TIE_xt_hifi2_AE_ZEROP48)()
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOV(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MOV)(d0)
#else
#define AE_MOV(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MOV)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOV64(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MOV64)(d0)
#else
#define AE_MOV64(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MOV64)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOV16(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MOV16)(d0)
#else
#define AE_MOV16(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MOV16)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOV24(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MOV24)(d0)
#else
#define AE_MOV24(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MOV24)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOV32(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MOV32)(d0)
#else
#define AE_MOV32(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MOV32)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVP48(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVP48)(d0)
#else
#define AE_MOVP48(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVP48)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SEL16I_N(d0, d1, i) \
	CSTUB_(_TIE_xt_hifi2_AE_SEL16I_N)(d0, d1, i)
#else
#define AE_SEL16I_N(d0, d1, i) \
	CSTUB_(_TIE_xt_hifi2_AE_SEL16I_N)(d0, d1, i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SEL16I(d0, d1, i) \
	CSTUB_(_TIE_xt_hifi2_AE_SEL16I)(d0, d1, i)
#else
#define AE_SEL16I(d0, d1, i) \
	CSTUB_(_TIE_xt_hifi2_AE_SEL16I)(d0, d1, i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SEL32I(d0, d1, i) \
	CSTUB_(_TIE_xt_hifi2_AE_SEL32I)(d0, d1, i)
#else
#define AE_SEL32I(d0, d1, i) \
	CSTUB_(_TIE_xt_hifi2_AE_SEL32I)(d0, d1, i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SEL16_5432(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SEL16_5432)(d0, d1)
#else
#define AE_SEL16_5432(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SEL16_5432)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SEL32_LH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SEL32_LH)(d0, d1)
#else
#define AE_SEL32_LH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SEL32_LH)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SEL24_LH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SEL24_LH)(d0, d1)
#else
#define AE_SEL24_LH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SEL24_LH)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SELP24_LH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SELP24_LH)(d0, d1)
#else
#define AE_SELP24_LH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SELP24_LH)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SEL16_7520(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SEL16_7520)(d0, d1)
#else
#define AE_SEL16_7520(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SEL16_7520)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SEL16_7610(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SEL16_7610)(d0, d1)
#else
#define AE_SEL16_7610(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SEL16_7610)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SEL32_HL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SEL32_HL)(d0, d1)
#else
#define AE_SEL32_HL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SEL32_HL)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SEL24_HL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SEL24_HL)(d0, d1)
#else
#define AE_SEL24_HL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SEL24_HL)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SELP24_HL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SELP24_HL)(d0, d1)
#else
#define AE_SELP24_HL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SELP24_HL)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SEL16_4321(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SEL16_4321)(d0, d1)
#else
#define AE_SEL16_4321(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SEL16_4321)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SEL16_6543(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SEL16_6543)(d0, d1)
#else
#define AE_SEL16_6543(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SEL16_6543)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SEL16_7632(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SEL16_7632)(d0, d1)
#else
#define AE_SEL16_7632(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SEL16_7632)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SEL32_HH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SEL32_HH)(d0, d1)
#else
#define AE_SEL32_HH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SEL32_HH)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SEL24_HH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SEL24_HH)(d0, d1)
#else
#define AE_SEL24_HH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SEL24_HH)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SELP24_HH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SELP24_HH)(d0, d1)
#else
#define AE_SELP24_HH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SELP24_HH)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SEL16_5410(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SEL16_5410)(d0, d1)
#else
#define AE_SEL16_5410(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SEL16_5410)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SEL32_LL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SEL32_LL)(d0, d1)
#else
#define AE_SEL32_LL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SEL32_LL)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SEL24_LL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SEL24_LL)(d0, d1)
#else
#define AE_SEL24_LL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SEL24_LL)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SELP24_LL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SELP24_LL)(d0, d1)
#else
#define AE_SELP24_LL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SELP24_LL)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SEL16_6420(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SEL16_6420)(d0, d1)
#else
#define AE_SEL16_6420(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SEL16_6420)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_CVT16X4(dl, dh) \
	CSTUB_(_TIE_xt_hifi2_AE_CVT16X4)(dl, dh)
#else
#define AE_CVT16X4(dl, dh) \
	CSTUB_(_TIE_xt_hifi2_AE_CVT16X4)(dl, dh)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SEL16_7362(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SEL16_7362)(d0, d1)
#else
#define AE_SEL16_7362(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SEL16_7362)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SEL16_5146(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SEL16_5146)(d0, d1)
#else
#define AE_SEL16_5146(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SEL16_5146)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_TRUNC16X4F32(dl, dh) \
	CSTUB_(_TIE_xt_hifi2_AE_TRUNC16X4F32)(dl, dh)
#else
#define AE_TRUNC16X4F32(dl, dh) \
	CSTUB_(_TIE_xt_hifi2_AE_TRUNC16X4F32)(dl, dh)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SHORTSWAP(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_SHORTSWAP)(d0)
#else
#define AE_SHORTSWAP(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_SHORTSWAP)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVT16X4(d, d0, bhl) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVT16X4)(d, d0, bhl)
#else
#define AE_MOVT16X4(d, d0, bhl) { \
	ae_int16x4 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MOVT16X4)(__d, d0, bhl); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVF16X4(d, d0, bhl) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF16X4)(d, d0, bhl)
#else
#define AE_MOVF16X4(d, d0, bhl) { \
	ae_int16x4 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF16X4)(__d, d0, bhl); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVT32X2(d, d0, bhl) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVT32X2)(d, d0, bhl)
#else
#define AE_MOVT32X2(d, d0, bhl) { \
	ae_int32x2 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MOVT32X2)(__d, d0, bhl); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVTP24X2(d, d0, bhl) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVTP24X2)(d, d0, bhl)
#else
#define AE_MOVTP24X2(d, d0, bhl) { \
	ae_p24x2s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MOVTP24X2)(__d, d0, bhl); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVF32X2(d, d0, bhl) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF32X2)(d, d0, bhl)
#else
#define AE_MOVF32X2(d, d0, bhl) { \
	ae_int32x2 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF32X2)(__d, d0, bhl); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVFP24X2(d, d0, bhl) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVFP24X2)(d, d0, bhl)
#else
#define AE_MOVFP24X2(d, d0, bhl) { \
	ae_p24x2s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MOVFP24X2)(__d, d0, bhl); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVT64(d, d0, bi) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVT64)(d, d0, bi)
#else
#define AE_MOVT64(d, d0, bi) { \
	ae_int64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MOVT64)(__d, d0, bi); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVTP48(d, d0, bi) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVTP48)(d, d0, bi)
#else
#define AE_MOVTP48(d, d0, bi) { \
	ae_p24x2s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MOVTP48)(__d, d0, bi); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVF64(d, d0, bi) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF64)(d, d0, bi)
#else
#define AE_MOVF64(d, d0, bi) { \
	ae_int64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF64)(__d, d0, bi); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVFP48(d, d0, bi) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVFP48)(d, d0, bi)
#else
#define AE_MOVFP48(d, d0, bi) { \
	ae_p24x2s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MOVFP48)(__d, d0, bi); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVDA32X2(a0, a1) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVDA32X2)(a0, a1)
#else
#define AE_MOVDA32X2(a0, a1) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVDA32X2)(a0, a1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVPA24X2(ah, al) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVPA24X2)(ah, al)
#else
#define AE_MOVPA24X2(ah, al) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVPA24X2)(ah, al)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVDA32(a) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVDA32)(a)
#else
#define AE_MOVDA32(a) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVDA32)(a)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVDA16X2(ah, al) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVDA16X2)(ah, al)
#else
#define AE_MOVDA16X2(ah, al) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVDA16X2)(ah, al)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVDA16(a) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVDA16)(a)
#else
#define AE_MOVDA16(a) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVDA16)(a)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVI(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVI)(i)
#else
#define AE_MOVI(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVI)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_TRUNCP24A32X2(ah, al) \
	CSTUB_(_TIE_xt_hifi2_AE_TRUNCP24A32X2)(ah, al)
#else
#define AE_TRUNCP24A32X2(ah, al) \
	CSTUB_(_TIE_xt_hifi2_AE_TRUNCP24A32X2)(ah, al)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SAT16X4(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SAT16X4)(d0, d1)
#else
#define AE_SAT16X4(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SAT16X4)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_CVT32X2F16_32(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_CVT32X2F16_32)(d0)
#else
#define AE_CVT32X2F16_32(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_CVT32X2F16_32)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_CVT32X2F16_10(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_CVT32X2F16_10)(d0)
#else
#define AE_CVT32X2F16_10(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_CVT32X2F16_10)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SEXT32X2D16_32(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_SEXT32X2D16_32)(d0)
#else
#define AE_SEXT32X2D16_32(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_SEXT32X2D16_32)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SEXT32X2D16_10(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_SEXT32X2D16_10)(d0)
#else
#define AE_SEXT32X2D16_10(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_SEXT32X2D16_10)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_CVTA32F24S_L(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_CVTA32F24S_L)(d0)
#else
#define AE_CVTA32F24S_L(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_CVTA32F24S_L)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_CVTA32P24_L(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_CVTA32P24_L)(d0)
#else
#define AE_CVTA32P24_L(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_CVTA32P24_L)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_CVTA32F24S_H(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_CVTA32F24S_H)(d0)
#else
#define AE_CVTA32F24S_H(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_CVTA32F24S_H)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_CVTA32P24_H(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_CVTA32P24_H)(d0)
#else
#define AE_CVTA32P24_H(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_CVTA32P24_H)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_CVTP24A16X2_LL(ah, al) \
	CSTUB_(_TIE_xt_hifi2_AE_CVTP24A16X2_LL)(ah, al)
#else
#define AE_CVTP24A16X2_LL(ah, al) \
	CSTUB_(_TIE_xt_hifi2_AE_CVTP24A16X2_LL)(ah, al)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_CVTP24A16X2_LH(ah, al) \
	CSTUB_(_TIE_xt_hifi2_AE_CVTP24A16X2_LH)(ah, al)
#else
#define AE_CVTP24A16X2_LH(ah, al) \
	CSTUB_(_TIE_xt_hifi2_AE_CVTP24A16X2_LH)(ah, al)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_CVTP24A16X2_HL(ah, al) \
	CSTUB_(_TIE_xt_hifi2_AE_CVTP24A16X2_HL)(ah, al)
#else
#define AE_CVTP24A16X2_HL(ah, al) \
	CSTUB_(_TIE_xt_hifi2_AE_CVTP24A16X2_HL)(ah, al)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_CVTP24A16X2_HH(ah, al) \
	CSTUB_(_TIE_xt_hifi2_AE_CVTP24A16X2_HH)(ah, al)
#else
#define AE_CVTP24A16X2_HH(ah, al) \
	CSTUB_(_TIE_xt_hifi2_AE_CVTP24A16X2_HH)(ah, al)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_TRUNCP24Q48X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_TRUNCP24Q48X2)(d0, d1)
#else
#define AE_TRUNCP24Q48X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_TRUNCP24Q48X2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_TRUNCA32X2F64S(d0, d1, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_TRUNCA32X2F64S)(d0, d1, sa)
#else
#define AE_TRUNCA32X2F64S(d0, d1, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_TRUNCA32X2F64S)(d0, d1, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_TRUNCI32X2F64S(d0, d1, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_TRUNCI32X2F64S)(d0, d1, sa)
#else
#define AE_TRUNCI32X2F64S(d0, d1, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_TRUNCI32X2F64S)(d0, d1, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_TRUNCA32F64S_L(d0, d1, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_TRUNCA32F64S_L)(d0, d1, sa)
#else
#define AE_TRUNCA32F64S_L(d0, d1, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_TRUNCA32F64S_L)(d0, d1, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_TRUNCI32F64S_L(d0, d1, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_TRUNCI32F64S_L)(d0, d1, sa)
#else
#define AE_TRUNCI32F64S_L(d0, d1, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_TRUNCI32F64S_L)(d0, d1, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_TRUNCP16(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_TRUNCP16)(d0)
#else
#define AE_TRUNCP16(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_TRUNCP16)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_ROUND32X2F64SSYM(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_ROUND32X2F64SSYM)(d0, d1)
#else
#define AE_ROUND32X2F64SSYM(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_ROUND32X2F64SSYM)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_ROUND32F64SSYM(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_ROUND32F64SSYM)(d0)
#else
#define AE_ROUND32F64SSYM(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_ROUND32F64SSYM)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_ROUND32X2F64SASYM(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_ROUND32X2F64SASYM)(d0, d1)
#else
#define AE_ROUND32X2F64SASYM(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_ROUND32X2F64SASYM)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_ROUND32F64SASYM(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_ROUND32F64SASYM)(d0)
#else
#define AE_ROUND32F64SASYM(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_ROUND32F64SASYM)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_ROUND32X2F48SSYM(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_ROUND32X2F48SSYM)(d0, d1)
#else
#define AE_ROUND32X2F48SSYM(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_ROUND32X2F48SSYM)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_ROUND32F48SSYM(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_ROUND32F48SSYM)(d0)
#else
#define AE_ROUND32F48SSYM(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_ROUND32F48SSYM)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_ROUND32X2F48SASYM(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_ROUND32X2F48SASYM)(d0, d1)
#else
#define AE_ROUND32X2F48SASYM(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_ROUND32X2F48SASYM)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_ROUND32F48SASYM(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_ROUND32F48SASYM)(d0)
#else
#define AE_ROUND32F48SASYM(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_ROUND32F48SASYM)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_ROUND16X4F32SSYM(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_ROUND16X4F32SSYM)(d1, d0)
#else
#define AE_ROUND16X4F32SSYM(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_ROUND16X4F32SSYM)(d1, d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_ROUND16X4F32SASYM(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_ROUND16X4F32SASYM)(d1, d0)
#else
#define AE_ROUND16X4F32SASYM(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_ROUND16X4F32SASYM)(d1, d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_ROUND24X2F48SSYM(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_ROUND24X2F48SSYM)(d0, d1)
#else
#define AE_ROUND24X2F48SSYM(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_ROUND24X2F48SSYM)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_ROUND24F48SSYM(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_ROUND24F48SSYM)(d0)
#else
#define AE_ROUND24F48SSYM(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_ROUND24F48SSYM)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_ROUND24X2F48SASYM(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_ROUND24X2F48SASYM)(d0, d1)
#else
#define AE_ROUND24X2F48SASYM(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_ROUND24X2F48SASYM)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_ROUND24F48SASYM(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_ROUND24F48SASYM)(d0)
#else
#define AE_ROUND24F48SASYM(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_ROUND24F48SASYM)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_ROUNDSP16Q48X2SYM(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_ROUNDSP16Q48X2SYM)(d0, d1)
#else
#define AE_ROUNDSP16Q48X2SYM(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_ROUNDSP16Q48X2SYM)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_ROUNDSP16Q48SYM(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_ROUNDSP16Q48SYM)(d0)
#else
#define AE_ROUNDSP16Q48SYM(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_ROUNDSP16Q48SYM)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_ROUNDSP16Q48X2ASYM(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_ROUNDSP16Q48X2ASYM)(d0, d1)
#else
#define AE_ROUNDSP16Q48X2ASYM(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_ROUNDSP16Q48X2ASYM)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_ROUNDSP16Q48ASYM(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_ROUNDSP16Q48ASYM)(d0)
#else
#define AE_ROUNDSP16Q48ASYM(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_ROUNDSP16Q48ASYM)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_ROUNDSP24Q48ASYM(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_ROUNDSP24Q48ASYM)(d0)
#else
#define AE_ROUNDSP24Q48ASYM(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_ROUNDSP24Q48ASYM)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_ROUNDSP24Q48SYM(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_ROUNDSP24Q48SYM)(d0)
#else
#define AE_ROUNDSP24Q48SYM(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_ROUNDSP24Q48SYM)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MINABS32S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MINABS32S)(d0, d1)
#else
#define AE_MINABS32S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MINABS32S)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MINABSSP24S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MINABSSP24S)(d0, d1)
#else
#define AE_MINABSSP24S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MINABSSP24S)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MAXABS32S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MAXABS32S)(d0, d1)
#else
#define AE_MAXABS32S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MAXABS32S)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MAXABSSP24S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MAXABSSP24S)(d0, d1)
#else
#define AE_MAXABSSP24S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MAXABSSP24S)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_ROUNDSP16F24SYM(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_ROUNDSP16F24SYM)(d0)
#else
#define AE_ROUNDSP16F24SYM(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_ROUNDSP16F24SYM)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_ROUNDSP16SYM(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_ROUNDSP16SYM)(d0)
#else
#define AE_ROUNDSP16SYM(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_ROUNDSP16SYM)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_ROUNDSP16F24ASYM(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_ROUNDSP16F24ASYM)(d0)
#else
#define AE_ROUNDSP16F24ASYM(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_ROUNDSP16F24ASYM)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_ROUNDSP16ASYM(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_ROUNDSP16ASYM)(d0)
#else
#define AE_ROUNDSP16ASYM(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_ROUNDSP16ASYM)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_ZEROQ56() \
	CSTUB_(_TIE_xt_hifi2_AE_ZEROQ56)()
#else
#define AE_ZEROQ56() \
	CSTUB_(_TIE_xt_hifi2_AE_ZEROQ56)()
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVQ56(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVQ56)(d0)
#else
#define AE_MOVQ56(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVQ56)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVTQ56(d, d0, bi) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVTQ56)(d, d0, bi)
#else
#define AE_MOVTQ56(d, d0, bi) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MOVTQ56)(__d, d0, bi); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVFQ56(d, d0, bi) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVFQ56)(d, d0, bi)
#else
#define AE_MOVFQ56(d, d0, bi) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MOVFQ56)(__d, d0, bi); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_CVTQ56A32S(a0) \
	CSTUB_(_TIE_xt_hifi2_AE_CVTQ56A32S)(a0)
#else
#define AE_CVTQ56A32S(a0) \
	CSTUB_(_TIE_xt_hifi2_AE_CVTQ56A32S)(a0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_CVT48A32(a0) \
	CSTUB_(_TIE_xt_hifi2_AE_CVT48A32)(a0)
#else
#define AE_CVT48A32(a0) \
	CSTUB_(_TIE_xt_hifi2_AE_CVT48A32)(a0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_CVT64A32(a0) \
	CSTUB_(_TIE_xt_hifi2_AE_CVT64A32)(a0)
#else
#define AE_CVT64A32(a0) \
	CSTUB_(_TIE_xt_hifi2_AE_CVT64A32)(a0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_CVTQ48A32S(a) \
	CSTUB_(_TIE_xt_hifi2_AE_CVTQ48A32S)(a)
#else
#define AE_CVTQ48A32S(a) \
	CSTUB_(_TIE_xt_hifi2_AE_CVTQ48A32S)(a)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_CVTQ56P32S_L(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_CVTQ56P32S_L)(d0)
#else
#define AE_CVTQ56P32S_L(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_CVTQ56P32S_L)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_CVTQ48P24S_L(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_CVTQ48P24S_L)(d0)
#else
#define AE_CVTQ48P24S_L(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_CVTQ48P24S_L)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_CVTQ56P32S_H(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_CVTQ56P32S_H)(d0)
#else
#define AE_CVTQ56P32S_H(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_CVTQ56P32S_H)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_CVTQ48P24S_H(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_CVTQ48P24S_H)(d0)
#else
#define AE_CVTQ48P24S_H(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_CVTQ48P24S_H)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_CVT64F32_H(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_CVT64F32_H)(d0)
#else
#define AE_CVT64F32_H(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_CVT64F32_H)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_CVT64F32_L(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_CVT64F32_L)(d0)
#else
#define AE_CVT64F32_L(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_CVT64F32_L)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SAT48S(d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SAT48S)(d1)
#else
#define AE_SAT48S(d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SAT48S)(d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SATQ48S(d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SATQ48S)(d1)
#else
#define AE_SATQ48S(d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SATQ48S)(d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SATQ56S(d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SATQ56S)(d1)
#else
#define AE_SATQ56S(d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SATQ56S)(d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SAT24S(d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SAT24S)(d1)
#else
#define AE_SAT24S(d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SAT24S)(d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_TRUNCQ32(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_TRUNCQ32)(d0)
#else
#define AE_TRUNCQ32(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_TRUNCQ32)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MINABS64S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MINABS64S)(d0, d1)
#else
#define AE_MINABS64S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MINABS64S)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MINABSSQ56S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MINABSSQ56S)(d0, d1)
#else
#define AE_MINABSSQ56S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MINABSSQ56S)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MAXABS64S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MAXABS64S)(d0, d1)
#else
#define AE_MAXABS64S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MAXABS64S)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MAXABSSQ56S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MAXABSSQ56S)(d0, d1)
#else
#define AE_MAXABSSQ56S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MAXABSSQ56S)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_ROUNDSQ32F48SYM(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_ROUNDSQ32F48SYM)(d0)
#else
#define AE_ROUNDSQ32F48SYM(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_ROUNDSQ32F48SYM)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_ROUNDSQ32SYM(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_ROUNDSQ32SYM)(d0)
#else
#define AE_ROUNDSQ32SYM(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_ROUNDSQ32SYM)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_ROUNDSQ32F48ASYM(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_ROUNDSQ32F48ASYM)(d0)
#else
#define AE_ROUNDSQ32F48ASYM(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_ROUNDSQ32F48ASYM)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_ROUNDSQ32ASYM(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_ROUNDSQ32ASYM)(d0)
#else
#define AE_ROUNDSQ32ASYM(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_ROUNDSQ32ASYM)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_TRUNCA32Q48(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_TRUNCA32Q48)(d0)
#else
#define AE_TRUNCA32Q48(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_TRUNCA32Q48)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_TRUNCA32Q64(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_TRUNCA32Q64)(d0)
#else
#define AE_TRUNCA32Q64(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_TRUNCA32Q64)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVAD32_L(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVAD32_L)(d0)
#else
#define AE_MOVAD32_L(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVAD32_L)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVAP24S_L(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVAP24S_L)(d0)
#else
#define AE_MOVAP24S_L(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVAP24S_L)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVAD32_H(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVAD32_H)(d0)
#else
#define AE_MOVAD32_H(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVAD32_H)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVAP24S_H(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVAP24S_H)(d0)
#else
#define AE_MOVAP24S_H(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVAP24S_H)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVAD16_3(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVAD16_3)(d0)
#else
#define AE_MOVAD16_3(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVAD16_3)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVAD16_2(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVAD16_2)(d0)
#else
#define AE_MOVAD16_2(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVAD16_2)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVAD16_1(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVAD16_1)(d0)
#else
#define AE_MOVAD16_1(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVAD16_1)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVAD16_0(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVAD16_0)(d0)
#else
#define AE_MOVAD16_0(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVAD16_0)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SRA64_32(s, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SRA64_32)(s, sa)
#else
#define AE_SRA64_32(s, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SRA64_32)(s, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_PKSR24(d, ps, pos) \
	CSTUB_(_TIE_xt_hifi2_AE_PKSR24)(d, ps, pos)
#else
#define AE_PKSR24(d, ps, pos) { \
	ae_f24x2 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_PKSR24)(__d, ps, pos); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_PKSR32(d, ps, pos) \
	CSTUB_(_TIE_xt_hifi2_AE_PKSR32)(d, ps, pos)
#else
#define AE_PKSR32(d, ps, pos) { \
	ae_f32x2 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_PKSR32)(__d, ps, pos); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_TRUNCA16P24S_L(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_TRUNCA16P24S_L)(d0)
#else
#define AE_TRUNCA16P24S_L(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_TRUNCA16P24S_L)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_TRUNCA16P24S_H(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_TRUNCA16P24S_H)(d0)
#else
#define AE_TRUNCA16P24S_H(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_TRUNCA16P24S_H)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_ADD32(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_ADD32)(d0, d1)
#else
#define AE_ADD32(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_ADD32)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_ADDP24(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_ADDP24)(d0, d1)
#else
#define AE_ADDP24(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_ADDP24)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SUB32(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SUB32)(d0, d1)
#else
#define AE_SUB32(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SUB32)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SUBP24(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SUBP24)(d0, d1)
#else
#define AE_SUBP24(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SUBP24)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_ADDSUB32(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_ADDSUB32)(d0, d1)
#else
#define AE_ADDSUB32(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_ADDSUB32)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SUBADD32(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SUBADD32)(d0, d1)
#else
#define AE_SUBADD32(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SUBADD32)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_ADD16(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_ADD16)(d0, d1)
#else
#define AE_ADD16(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_ADD16)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SUB16(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SUB16)(d0, d1)
#else
#define AE_SUB16(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SUB16)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_ADD32_HL_LH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_ADD32_HL_LH)(d0, d1)
#else
#define AE_ADD32_HL_LH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_ADD32_HL_LH)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_NEG32(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_NEG32)(d0)
#else
#define AE_NEG32(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_NEG32)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_NEGP24(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_NEGP24)(d0)
#else
#define AE_NEGP24(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_NEGP24)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_ABS32(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_ABS32)(d0)
#else
#define AE_ABS32(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_ABS32)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_ABSP24(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_ABSP24)(d0)
#else
#define AE_ABSP24(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_ABSP24)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_ADD24S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_ADD24S)(d0, d1)
#else
#define AE_ADD24S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_ADD24S)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_ADDSP24S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_ADDSP24S)(d0, d1)
#else
#define AE_ADDSP24S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_ADDSP24S)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SUB24S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SUB24S)(d0, d1)
#else
#define AE_SUB24S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SUB24S)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SUBSP24S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SUBSP24S)(d0, d1)
#else
#define AE_SUBSP24S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SUBSP24S)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_ADD32S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_ADD32S)(d0, d1)
#else
#define AE_ADD32S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_ADD32S)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SUB32S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SUB32S)(d0, d1)
#else
#define AE_SUB32S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SUB32S)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_ADDSUB32S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_ADDSUB32S)(d0, d1)
#else
#define AE_ADDSUB32S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_ADDSUB32S)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SUBADD32S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SUBADD32S)(d0, d1)
#else
#define AE_SUBADD32S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SUBADD32S)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_ADD16S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_ADD16S)(d0, d1)
#else
#define AE_ADD16S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_ADD16S)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SUB16S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SUB16S)(d0, d1)
#else
#define AE_SUB16S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SUB16S)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_NEG24S(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_NEG24S)(d0)
#else
#define AE_NEG24S(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_NEG24S)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_NEGSP24S(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_NEGSP24S)(d0)
#else
#define AE_NEGSP24S(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_NEGSP24S)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_ABS24S(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_ABS24S)(d0)
#else
#define AE_ABS24S(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_ABS24S)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_ABSSP24S(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_ABSSP24S)(d0)
#else
#define AE_ABSSP24S(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_ABSSP24S)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_NEG32S(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_NEG32S)(d0)
#else
#define AE_NEG32S(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_NEG32S)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_ABS32S(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_ABS32S)(d0)
#else
#define AE_ABS32S(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_ABS32S)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_NEG16S(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_NEG16S)(d0)
#else
#define AE_NEG16S(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_NEG16S)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_ABS16S(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_ABS16S)(d0)
#else
#define AE_ABS16S(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_ABS16S)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_LT16(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_LT16)(d0, d1)
#else
#define AE_LT16(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_LT16)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_LE16(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_LE16)(d0, d1)
#else
#define AE_LE16(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_LE16)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_EQ16(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_EQ16)(d0, d1)
#else
#define AE_EQ16(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_EQ16)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_LT32(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_LT32)(d0, d1)
#else
#define AE_LT32(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_LT32)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_LTP24S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_LTP24S)(d0, d1)
#else
#define AE_LTP24S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_LTP24S)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_LE32(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_LE32)(d0, d1)
#else
#define AE_LE32(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_LE32)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_LEP24S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_LEP24S)(d0, d1)
#else
#define AE_LEP24S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_LEP24S)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_EQ32(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_EQ32)(d0, d1)
#else
#define AE_EQ32(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_EQ32)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_EQP24(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_EQP24)(d0, d1)
#else
#define AE_EQP24(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_EQP24)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MIN32(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MIN32)(d0, d1)
#else
#define AE_MIN32(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MIN32)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MINP24S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MINP24S)(d0, d1)
#else
#define AE_MINP24S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MINP24S)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MINB32(d, d0, d1, bhl) \
	CSTUB_(_TIE_xt_hifi2_AE_MINB32)(d, d0, d1, bhl)
#else
#define AE_MINB32(d, d0, d1, bhl) { \
	ae_int32x2 __d; \
	xtbool2 __bhl; \
	CSTUB_(_TIE_xt_hifi2_AE_MINB32)(__d, d0, d1, __bhl); \
	(d) = __d; \
	(bhl) = __bhl; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MINBP24S(d, d0, d1, bhl) \
	CSTUB_(_TIE_xt_hifi2_AE_MINBP24S)(d, d0, d1, bhl)
#else
#define AE_MINBP24S(d, d0, d1, bhl) { \
	ae_p24x2s __d; \
	xtbool2 __bhl; \
	CSTUB_(_TIE_xt_hifi2_AE_MINBP24S)(__d, d0, d1, __bhl); \
	(d) = __d; \
	(bhl) = __bhl; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MAX32(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MAX32)(d0, d1)
#else
#define AE_MAX32(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MAX32)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MAXP24S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MAXP24S)(d0, d1)
#else
#define AE_MAXP24S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MAXP24S)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MAXB32(d, d0, d1, bhl) \
	CSTUB_(_TIE_xt_hifi2_AE_MAXB32)(d, d0, d1, bhl)
#else
#define AE_MAXB32(d, d0, d1, bhl) { \
	ae_int32x2 __d; \
	xtbool2 __bhl; \
	CSTUB_(_TIE_xt_hifi2_AE_MAXB32)(__d, d0, d1, __bhl); \
	(d) = __d; \
	(bhl) = __bhl; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MAXBP24S(d, d0, d1, bhl) \
	CSTUB_(_TIE_xt_hifi2_AE_MAXBP24S)(d, d0, d1, bhl)
#else
#define AE_MAXBP24S(d, d0, d1, bhl) { \
	ae_p24x2s __d; \
	xtbool2 __bhl; \
	CSTUB_(_TIE_xt_hifi2_AE_MAXBP24S)(__d, d0, d1, __bhl); \
	(d) = __d; \
	(bhl) = __bhl; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_ADD64(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_ADD64)(d0, d1)
#else
#define AE_ADD64(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_ADD64)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SUB64(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SUB64)(d0, d1)
#else
#define AE_SUB64(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SUB64)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_ADDQ56(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_ADDQ56)(d0, d1)
#else
#define AE_ADDQ56(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_ADDQ56)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SUBQ56(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SUBQ56)(d0, d1)
#else
#define AE_SUBQ56(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SUBQ56)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_NEGQ56(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_NEGQ56)(d0)
#else
#define AE_NEGQ56(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_NEGQ56)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_ABSQ56(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_ABSQ56)(d0)
#else
#define AE_ABSQ56(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_ABSQ56)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_NEG64(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_NEG64)(d0)
#else
#define AE_NEG64(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_NEG64)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_ABS64(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_ABS64)(d0)
#else
#define AE_ABS64(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_ABS64)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_ADDSQ56S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_ADDSQ56S)(d0, d1)
#else
#define AE_ADDSQ56S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_ADDSQ56S)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SUBSQ56S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SUBSQ56S)(d0, d1)
#else
#define AE_SUBSQ56S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SUBSQ56S)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_ADD64S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_ADD64S)(d0, d1)
#else
#define AE_ADD64S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_ADD64S)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SUB64S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SUB64S)(d0, d1)
#else
#define AE_SUB64S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SUB64S)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_NEGSQ56S(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_NEGSQ56S)(d0)
#else
#define AE_NEGSQ56S(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_NEGSQ56S)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_ABSSQ56S(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_ABSSQ56S)(d0)
#else
#define AE_ABSSQ56S(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_ABSSQ56S)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_NEG64S(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_NEG64S)(d0)
#else
#define AE_NEG64S(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_NEG64S)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_ABS64S(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_ABS64S)(d0)
#else
#define AE_ABS64S(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_ABS64S)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_AND(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_AND)(d0, d1)
#else
#define AE_AND(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_AND)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_AND64(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_AND64)(d0, d1)
#else
#define AE_AND64(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_AND64)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_AND32(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_AND32)(d0, d1)
#else
#define AE_AND32(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_AND32)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_AND24(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_AND24)(d0, d1)
#else
#define AE_AND24(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_AND24)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_AND16(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_AND16)(d0, d1)
#else
#define AE_AND16(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_AND16)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_ANDP48(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_ANDP48)(d0, d1)
#else
#define AE_ANDP48(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_ANDP48)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_ANDQ56(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_ANDQ56)(d0, d1)
#else
#define AE_ANDQ56(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_ANDQ56)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_NAND(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_NAND)(d0, d1)
#else
#define AE_NAND(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_NAND)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_NAND64(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_NAND64)(d0, d1)
#else
#define AE_NAND64(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_NAND64)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_NAND32(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_NAND32)(d0, d1)
#else
#define AE_NAND32(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_NAND32)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_NAND24(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_NAND24)(d0, d1)
#else
#define AE_NAND24(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_NAND24)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_NAND16(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_NAND16)(d0, d1)
#else
#define AE_NAND16(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_NAND16)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_NANDP48(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_NANDP48)(d0, d1)
#else
#define AE_NANDP48(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_NANDP48)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_NANDQ56(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_NANDQ56)(d0, d1)
#else
#define AE_NANDQ56(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_NANDQ56)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_OR(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_OR)(d0, d1)
#else
#define AE_OR(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_OR)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_OR64(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_OR64)(d0, d1)
#else
#define AE_OR64(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_OR64)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_OR32(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_OR32)(d0, d1)
#else
#define AE_OR32(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_OR32)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_OR24(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_OR24)(d0, d1)
#else
#define AE_OR24(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_OR24)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_OR16(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_OR16)(d0, d1)
#else
#define AE_OR16(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_OR16)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_ORP48(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_ORP48)(d0, d1)
#else
#define AE_ORP48(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_ORP48)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_ORQ56(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_ORQ56)(d0, d1)
#else
#define AE_ORQ56(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_ORQ56)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_XOR(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_XOR)(d0, d1)
#else
#define AE_XOR(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_XOR)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_XOR64(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_XOR64)(d0, d1)
#else
#define AE_XOR64(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_XOR64)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_XOR32(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_XOR32)(d0, d1)
#else
#define AE_XOR32(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_XOR32)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_XOR24(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_XOR24)(d0, d1)
#else
#define AE_XOR24(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_XOR24)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_XOR16(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_XOR16)(d0, d1)
#else
#define AE_XOR16(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_XOR16)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_XORP48(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_XORP48)(d0, d1)
#else
#define AE_XORP48(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_XORP48)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_XORQ56(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_XORQ56)(d0, d1)
#else
#define AE_XORQ56(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_XORQ56)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SLAI24(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SLAI24)(d0, sa)
#else
#define AE_SLAI24(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SLAI24)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SLLIP24(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SLLIP24)(d0, sa)
#else
#define AE_SLLIP24(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SLLIP24)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SLLI24(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SLLI24)(d0, sa)
#else
#define AE_SLLI24(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SLLI24)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SRLI24(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SRLI24)(d0, sa)
#else
#define AE_SRLI24(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SRLI24)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SRLIP24(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SRLIP24)(d0, sa)
#else
#define AE_SRLIP24(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SRLIP24)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SRAI24(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SRAI24)(d0, sa)
#else
#define AE_SRAI24(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SRAI24)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SRAIP24(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SRAIP24)(d0, sa)
#else
#define AE_SRAIP24(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SRAIP24)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SLAS24(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_SLAS24)(d0)
#else
#define AE_SLAS24(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_SLAS24)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SLLSP24(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_SLLSP24)(d0)
#else
#define AE_SLLSP24(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_SLLSP24)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SRLS24(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_SRLS24)(d0)
#else
#define AE_SRLS24(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_SRLS24)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SRLSP24(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_SRLSP24)(d0)
#else
#define AE_SRLSP24(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_SRLSP24)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SRAS24(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_SRAS24)(d0)
#else
#define AE_SRAS24(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_SRAS24)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SRASP24(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_SRASP24)(d0)
#else
#define AE_SRASP24(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_SRASP24)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SRAI16(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SRAI16)(d0, sa)
#else
#define AE_SRAI16(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SRAI16)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SRAI16R(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SRAI16R)(d0, sa)
#else
#define AE_SRAI16R(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SRAI16R)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SLAI32(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SLAI32)(d0, sa)
#else
#define AE_SLAI32(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SLAI32)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SLLI32(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SLLI32)(d0, sa)
#else
#define AE_SLLI32(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SLLI32)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SRLI32(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SRLI32)(d0, sa)
#else
#define AE_SRLI32(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SRLI32)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SRAI32(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SRAI32)(d0, sa)
#else
#define AE_SRAI32(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SRAI32)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SRAI32R(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SRAI32R)(d0, sa)
#else
#define AE_SRAI32R(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SRAI32R)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SLAS32(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_SLAS32)(d0)
#else
#define AE_SLAS32(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_SLAS32)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SRLS32(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_SRLS32)(d0)
#else
#define AE_SRLS32(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_SRLS32)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SRAS32(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_SRAS32)(d0)
#else
#define AE_SRAS32(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_SRAS32)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SLAA32(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SLAA32)(d0, sa)
#else
#define AE_SLAA32(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SLAA32)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SRLA32(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SRLA32)(d0, sa)
#else
#define AE_SRLA32(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SRLA32)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SRAA32(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SRAA32)(d0, sa)
#else
#define AE_SRAA32(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SRAA32)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SLLI16S(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SLLI16S)(d0, sa)
#else
#define AE_SLLI16S(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SLLI16S)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SLAI16S(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SLAI16S)(d0, sa)
#else
#define AE_SLAI16S(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SLAI16S)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SLAA16S(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SLAA16S)(d0, sa)
#else
#define AE_SLAA16S(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SLAA16S)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SRAA16S(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SRAA16S)(d0, sa)
#else
#define AE_SRAA16S(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SRAA16S)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SRAA16RS(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SRAA16RS)(d0, sa)
#else
#define AE_SRAA16RS(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SRAA16RS)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SLAI24S(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SLAI24S)(d0, sa)
#else
#define AE_SLAI24S(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SLAI24S)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SLLI24S(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SLLI24S)(d0, sa)
#else
#define AE_SLLI24S(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SLLI24S)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SLLISP24S(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SLLISP24S)(d0, sa)
#else
#define AE_SLLISP24S(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SLLISP24S)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SLAS24S(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_SLAS24S)(d0)
#else
#define AE_SLAS24S(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_SLAS24S)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SLLSSP24S(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_SLLSSP24S)(d0)
#else
#define AE_SLLSSP24S(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_SLLSSP24S)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SLLI32S(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SLLI32S)(d0, sa)
#else
#define AE_SLLI32S(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SLLI32S)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SLAI32S(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SLAI32S)(d0, sa)
#else
#define AE_SLAI32S(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SLAI32S)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SLAS32S(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_SLAS32S)(d0)
#else
#define AE_SLAS32S(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_SLAS32S)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SLAA32S(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SLAA32S)(d0, sa)
#else
#define AE_SLAA32S(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SLAA32S)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SRAA32S(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SRAA32S)(d0, sa)
#else
#define AE_SRAA32S(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SRAA32S)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SRAA32RS(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SRAA32RS)(d0, sa)
#else
#define AE_SRAA32RS(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SRAA32RS)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SLASQ56(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_SLASQ56)(d0)
#else
#define AE_SLASQ56(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_SLASQ56)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SLLSQ56(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_SLLSQ56)(d0)
#else
#define AE_SLLSQ56(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_SLLSQ56)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SRLSQ56(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_SRLSQ56)(d0)
#else
#define AE_SRLSQ56(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_SRLSQ56)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SRASQ56(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_SRASQ56)(d0)
#else
#define AE_SRASQ56(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_SRASQ56)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SLAAQ56(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SLAAQ56)(d0, sa)
#else
#define AE_SLAAQ56(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SLAAQ56)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SLAIQ56(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SLAIQ56)(d0, sa)
#else
#define AE_SLAIQ56(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SLAIQ56)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SLLAQ56(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SLLAQ56)(d0, sa)
#else
#define AE_SLLAQ56(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SLLAQ56)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SLLIQ56(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SLLIQ56)(d0, sa)
#else
#define AE_SLLIQ56(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SLLIQ56)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SRLAQ56(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SRLAQ56)(d0, sa)
#else
#define AE_SRLAQ56(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SRLAQ56)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SRLIQ56(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SRLIQ56)(d0, sa)
#else
#define AE_SRLIQ56(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SRLIQ56)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SRAAQ56(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SRAAQ56)(d0, sa)
#else
#define AE_SRAAQ56(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SRAAQ56)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SLAI64(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SLAI64)(d0, sa)
#else
#define AE_SLAI64(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SLAI64)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SLLI64(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SLLI64)(d0, sa)
#else
#define AE_SLLI64(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SLLI64)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SRLI64(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SRLI64)(d0, sa)
#else
#define AE_SRLI64(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SRLI64)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SRAI64(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SRAI64)(d0, sa)
#else
#define AE_SRAI64(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SRAI64)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SRAIQ56(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SRAIQ56)(d0, sa)
#else
#define AE_SRAIQ56(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SRAIQ56)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SLAS64(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_SLAS64)(d0)
#else
#define AE_SLAS64(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_SLAS64)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SRLS64(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_SRLS64)(d0)
#else
#define AE_SRLS64(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_SRLS64)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SRAS64(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_SRAS64)(d0)
#else
#define AE_SRAS64(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_SRAS64)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SLAA64(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SLAA64)(d0, sa)
#else
#define AE_SLAA64(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SLAA64)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SRLA64(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SRLA64)(d0, sa)
#else
#define AE_SRLA64(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SRLA64)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SRAA64(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SRAA64)(d0, sa)
#else
#define AE_SRAA64(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SRAA64)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SLAISQ56S(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SLAISQ56S)(d0, sa)
#else
#define AE_SLAISQ56S(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SLAISQ56S)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SLLISQ56S(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SLLISQ56S)(d0, sa)
#else
#define AE_SLLISQ56S(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SLLISQ56S)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SLASSQ56S(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_SLASSQ56S)(d0)
#else
#define AE_SLASSQ56S(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_SLASSQ56S)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SLLSSQ56S(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_SLLSSQ56S)(d0)
#else
#define AE_SLLSSQ56S(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_SLLSSQ56S)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SLAASQ56S(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SLAASQ56S)(d0, sa)
#else
#define AE_SLAASQ56S(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SLAASQ56S)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SLLASQ56S(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SLLASQ56S)(d0, sa)
#else
#define AE_SLLASQ56S(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SLLASQ56S)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SLAI64S(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SLAI64S)(d0, sa)
#else
#define AE_SLAI64S(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SLAI64S)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SLLI64S(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SLLI64S)(d0, sa)
#else
#define AE_SLLI64S(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SLLI64S)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SLAS64S(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_SLAS64S)(d0)
#else
#define AE_SLAS64S(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_SLAS64S)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SLAA64S(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SLAA64S)(d0, sa)
#else
#define AE_SLAA64S(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SLAA64S)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_LT64(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_LT64)(d0, d1)
#else
#define AE_LT64(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_LT64)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_LTQ56S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_LTQ56S)(d0, d1)
#else
#define AE_LTQ56S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_LTQ56S)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_LE64(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_LE64)(d0, d1)
#else
#define AE_LE64(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_LE64)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_LEQ56S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_LEQ56S)(d0, d1)
#else
#define AE_LEQ56S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_LEQ56S)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_EQ64(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_EQ64)(d0, d1)
#else
#define AE_EQ64(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_EQ64)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_EQQ56(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_EQQ56)(d0, d1)
#else
#define AE_EQQ56(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_EQQ56)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MAX64(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MAX64)(d0, d1)
#else
#define AE_MAX64(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MAX64)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MAXQ56S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MAXQ56S)(d0, d1)
#else
#define AE_MAXQ56S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MAXQ56S)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MAXB64(d, d0, d1, bo) \
	CSTUB_(_TIE_xt_hifi2_AE_MAXB64)(d, d0, d1, bo)
#else
#define AE_MAXB64(d, d0, d1, bo) { \
	ae_int64 __d; \
	xtbool __bo; \
	CSTUB_(_TIE_xt_hifi2_AE_MAXB64)(__d, d0, d1, __bo); \
	(d) = __d; \
	(bo) = __bo; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MAXBQ56S(d, d0, d1, bo) \
	CSTUB_(_TIE_xt_hifi2_AE_MAXBQ56S)(d, d0, d1, bo)
#else
#define AE_MAXBQ56S(d, d0, d1, bo) { \
	ae_q56s __d; \
	xtbool __bo; \
	CSTUB_(_TIE_xt_hifi2_AE_MAXBQ56S)(__d, d0, d1, __bo); \
	(d) = __d; \
	(bo) = __bo; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MIN64(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MIN64)(d0, d1)
#else
#define AE_MIN64(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MIN64)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MINQ56S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MINQ56S)(d0, d1)
#else
#define AE_MINQ56S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MINQ56S)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MINB64(d, d0, d1, bo) \
	CSTUB_(_TIE_xt_hifi2_AE_MINB64)(d, d0, d1, bo)
#else
#define AE_MINB64(d, d0, d1, bo) { \
	ae_int64 __d; \
	xtbool __bo; \
	CSTUB_(_TIE_xt_hifi2_AE_MINB64)(__d, d0, d1, __bo); \
	(d) = __d; \
	(bo) = __bo; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MINBQ56S(d, d0, d1, bo) \
	CSTUB_(_TIE_xt_hifi2_AE_MINBQ56S)(d, d0, d1, bo)
#else
#define AE_MINBQ56S(d, d0, d1, bo) { \
	ae_q56s __d; \
	xtbool __bo; \
	CSTUB_(_TIE_xt_hifi2_AE_MINBQ56S)(__d, d0, d1, __bo); \
	(d) = __d; \
	(bo) = __bo; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_NSA64(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_NSA64)(d0)
#else
#define AE_NSA64(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_NSA64)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_NSAQ56S(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_NSAQ56S)(d0)
#else
#define AE_NSAQ56S(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_NSAQ56S)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_NSAZ16_0(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_NSAZ16_0)(d0)
#else
#define AE_NSAZ16_0(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_NSAZ16_0)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_NSAZ32_L(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_NSAZ32_L)(d0)
#else
#define AE_NSAZ32_L(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_NSAZ32_L)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULS32F48P16S_LL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULS32F48P16S_LL)(d0, d1)
#else
#define AE_MULS32F48P16S_LL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULS32F48P16S_LL)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULFS32P16S_LL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFS32P16S_LL)(d0, d1)
#else
#define AE_MULFS32P16S_LL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFS32P16S_LL)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULF32S_LL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF32S_LL)(d0, d1)
#else
#define AE_MULF32S_LL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF32S_LL)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULFP24S_LL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFP24S_LL)(d0, d1)
#else
#define AE_MULFP24S_LL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFP24S_LL)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULF24S_LL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF24S_LL)(d0, d1)
#else
#define AE_MULF24S_LL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF24S_LL)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MUL32_LL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MUL32_LL)(d0, d1)
#else
#define AE_MUL32_LL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MUL32_LL)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULP24S_LL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULP24S_LL)(d0, d1)
#else
#define AE_MULP24S_LL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULP24S_LL)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MUL24_LL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MUL24_LL)(d0, d1)
#else
#define AE_MUL24_LL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MUL24_LL)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULS32F48P16S_LL_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULS32F48P16S_LL_S2)(d0, d1)
#else
#define AE_MULS32F48P16S_LL_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULS32F48P16S_LL_S2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULFS32P16S_LL_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFS32P16S_LL_S2)(d0, d1)
#else
#define AE_MULFS32P16S_LL_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFS32P16S_LL_S2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULF32R_LL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF32R_LL)(d0, d1)
#else
#define AE_MULF32R_LL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF32R_LL)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULS32F48P16S_LH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULS32F48P16S_LH)(d0, d1)
#else
#define AE_MULS32F48P16S_LH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULS32F48P16S_LH)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULFS32P16S_LH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFS32P16S_LH)(d0, d1)
#else
#define AE_MULFS32P16S_LH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFS32P16S_LH)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULS32F48P16S_HL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULS32F48P16S_HL)(d0, d1)
#else
#define AE_MULS32F48P16S_HL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULS32F48P16S_HL)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULFS32P16S_HL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFS32P16S_HL)(d0, d1)
#else
#define AE_MULFS32P16S_HL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFS32P16S_HL)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULF32S_LH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF32S_LH)(d0, d1)
#else
#define AE_MULF32S_LH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF32S_LH)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULFP24S_LH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFP24S_LH)(d0, d1)
#else
#define AE_MULFP24S_LH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFP24S_LH)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULF24S_LH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF24S_LH)(d0, d1)
#else
#define AE_MULF24S_LH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF24S_LH)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULF32S_HL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF32S_HL)(d0, d1)
#else
#define AE_MULF32S_HL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF32S_HL)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULFP24S_HL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFP24S_HL)(d0, d1)
#else
#define AE_MULFP24S_HL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFP24S_HL)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULF24S_HL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF24S_HL)(d0, d1)
#else
#define AE_MULF24S_HL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF24S_HL)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MUL32_LH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MUL32_LH)(d0, d1)
#else
#define AE_MUL32_LH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MUL32_LH)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULP24S_LH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULP24S_LH)(d0, d1)
#else
#define AE_MULP24S_LH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULP24S_LH)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MUL24_LH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MUL24_LH)(d0, d1)
#else
#define AE_MUL24_LH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MUL24_LH)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MUL32_HL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MUL32_HL)(d0, d1)
#else
#define AE_MUL32_HL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MUL32_HL)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULP24S_HL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULP24S_HL)(d0, d1)
#else
#define AE_MULP24S_HL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULP24S_HL)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MUL24_HL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MUL24_HL)(d0, d1)
#else
#define AE_MUL24_HL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MUL24_HL)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULS32F48P16S_LH_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULS32F48P16S_LH_S2)(d0, d1)
#else
#define AE_MULS32F48P16S_LH_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULS32F48P16S_LH_S2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULFS32P16S_LH_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFS32P16S_LH_S2)(d0, d1)
#else
#define AE_MULFS32P16S_LH_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFS32P16S_LH_S2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULF32R_LH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF32R_LH)(d0, d1)
#else
#define AE_MULF32R_LH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF32R_LH)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULF32R_HL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF32R_HL)(d0, d1)
#else
#define AE_MULF32R_HL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF32R_HL)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULS32F48P16S_HH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULS32F48P16S_HH)(d0, d1)
#else
#define AE_MULS32F48P16S_HH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULS32F48P16S_HH)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULFS32P16S_HH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFS32P16S_HH)(d0, d1)
#else
#define AE_MULFS32P16S_HH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFS32P16S_HH)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULF32S_HH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF32S_HH)(d0, d1)
#else
#define AE_MULF32S_HH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF32S_HH)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULFP24S_HH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFP24S_HH)(d0, d1)
#else
#define AE_MULFP24S_HH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFP24S_HH)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULF24S_HH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF24S_HH)(d0, d1)
#else
#define AE_MULF24S_HH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF24S_HH)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MUL32_HH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MUL32_HH)(d0, d1)
#else
#define AE_MUL32_HH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MUL32_HH)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULP24S_HH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULP24S_HH)(d0, d1)
#else
#define AE_MULP24S_HH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULP24S_HH)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MUL24_HH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MUL24_HH)(d0, d1)
#else
#define AE_MUL24_HH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MUL24_HH)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULS32F48P16S_HH_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULS32F48P16S_HH_S2)(d0, d1)
#else
#define AE_MULS32F48P16S_HH_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULS32F48P16S_HH_S2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULFS32P16S_HH_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFS32P16S_HH_S2)(d0, d1)
#else
#define AE_MULFS32P16S_HH_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFS32P16S_HH_S2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULF32R_HH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF32R_HH)(d0, d1)
#else
#define AE_MULF32R_HH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF32R_HH)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULF32R_LL_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF32R_LL_S2)(d0, d1)
#else
#define AE_MULF32R_LL_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF32R_LL_S2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAS32F48P16S_LL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAS32F48P16S_LL)(d, d0, d1)
#else
#define AE_MULAS32F48P16S_LL(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAS32F48P16S_LL)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAFS32P16S_LL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFS32P16S_LL)(d, d0, d1)
#else
#define AE_MULAFS32P16S_LL(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFS32P16S_LL)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAF32S_LL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF32S_LL)(d, d0, d1)
#else
#define AE_MULAF32S_LL(d, d0, d1) { \
	ae_f64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF32S_LL)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAFP24S_LL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFP24S_LL)(d, d0, d1)
#else
#define AE_MULAFP24S_LL(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFP24S_LL)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAF24S_LL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF24S_LL)(d, d0, d1)
#else
#define AE_MULAF24S_LL(d, d0, d1) { \
	ae_f64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF24S_LL)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULA32_LL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULA32_LL)(d, d0, d1)
#else
#define AE_MULA32_LL(d, d0, d1) { \
	ae_int64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULA32_LL)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAP24S_LL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAP24S_LL)(d, d0, d1)
#else
#define AE_MULAP24S_LL(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAP24S_LL)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULA24_LL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULA24_LL)(d, d0, d1)
#else
#define AE_MULA24_LL(d, d0, d1) { \
	ae_int64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULA24_LL)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAS32F48P16S_LL_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAS32F48P16S_LL_S2)(d, d0, d1)
#else
#define AE_MULAS32F48P16S_LL_S2(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAS32F48P16S_LL_S2)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAFS32P16S_LL_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFS32P16S_LL_S2)(d, d0, d1)
#else
#define AE_MULAFS32P16S_LL_S2(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFS32P16S_LL_S2)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAF32R_LL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF32R_LL)(d, d0, d1)
#else
#define AE_MULAF32R_LL(d, d0, d1) { \
	ae_f64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF32R_LL)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAS32F48P16S_LH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAS32F48P16S_LH)(d, d0, d1)
#else
#define AE_MULAS32F48P16S_LH(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAS32F48P16S_LH)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAFS32P16S_LH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFS32P16S_LH)(d, d0, d1)
#else
#define AE_MULAFS32P16S_LH(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFS32P16S_LH)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAS32F48P16S_HL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAS32F48P16S_HL)(d, d0, d1)
#else
#define AE_MULAS32F48P16S_HL(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAS32F48P16S_HL)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAFS32P16S_HL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFS32P16S_HL)(d, d0, d1)
#else
#define AE_MULAFS32P16S_HL(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFS32P16S_HL)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAF32S_LH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF32S_LH)(d, d0, d1)
#else
#define AE_MULAF32S_LH(d, d0, d1) { \
	ae_f64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF32S_LH)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAFP24S_LH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFP24S_LH)(d, d0, d1)
#else
#define AE_MULAFP24S_LH(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFP24S_LH)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAF24S_LH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF24S_LH)(d, d0, d1)
#else
#define AE_MULAF24S_LH(d, d0, d1) { \
	ae_f64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF24S_LH)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAF32S_HL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF32S_HL)(d, d0, d1)
#else
#define AE_MULAF32S_HL(d, d0, d1) { \
	ae_f64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF32S_HL)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAFP24S_HL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFP24S_HL)(d, d0, d1)
#else
#define AE_MULAFP24S_HL(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFP24S_HL)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAF24S_HL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF24S_HL)(d, d0, d1)
#else
#define AE_MULAF24S_HL(d, d0, d1) { \
	ae_f64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF24S_HL)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULA32_LH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULA32_LH)(d, d0, d1)
#else
#define AE_MULA32_LH(d, d0, d1) { \
	ae_int64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULA32_LH)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAP24S_LH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAP24S_LH)(d, d0, d1)
#else
#define AE_MULAP24S_LH(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAP24S_LH)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULA24_LH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULA24_LH)(d, d0, d1)
#else
#define AE_MULA24_LH(d, d0, d1) { \
	ae_int64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULA24_LH)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULA32_HL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULA32_HL)(d, d0, d1)
#else
#define AE_MULA32_HL(d, d0, d1) { \
	ae_int64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULA32_HL)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAP24S_HL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAP24S_HL)(d, d0, d1)
#else
#define AE_MULAP24S_HL(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAP24S_HL)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULA24_HL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULA24_HL)(d, d0, d1)
#else
#define AE_MULA24_HL(d, d0, d1) { \
	ae_int64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULA24_HL)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAS32F48P16S_LH_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAS32F48P16S_LH_S2)(d, d0, d1)
#else
#define AE_MULAS32F48P16S_LH_S2(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAS32F48P16S_LH_S2)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAFS32P16S_LH_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFS32P16S_LH_S2)(d, d0, d1)
#else
#define AE_MULAFS32P16S_LH_S2(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFS32P16S_LH_S2)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAF32R_LH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF32R_LH)(d, d0, d1)
#else
#define AE_MULAF32R_LH(d, d0, d1) { \
	ae_f64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF32R_LH)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAF32R_HL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF32R_HL)(d, d0, d1)
#else
#define AE_MULAF32R_HL(d, d0, d1) { \
	ae_f64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF32R_HL)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAS32F48P16S_HH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAS32F48P16S_HH)(d, d0, d1)
#else
#define AE_MULAS32F48P16S_HH(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAS32F48P16S_HH)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAFS32P16S_HH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFS32P16S_HH)(d, d0, d1)
#else
#define AE_MULAFS32P16S_HH(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFS32P16S_HH)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAF32S_HH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF32S_HH)(d, d0, d1)
#else
#define AE_MULAF32S_HH(d, d0, d1) { \
	ae_f64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF32S_HH)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAFP24S_HH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFP24S_HH)(d, d0, d1)
#else
#define AE_MULAFP24S_HH(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFP24S_HH)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAF24S_HH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF24S_HH)(d, d0, d1)
#else
#define AE_MULAF24S_HH(d, d0, d1) { \
	ae_f64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF24S_HH)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULA32_HH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULA32_HH)(d, d0, d1)
#else
#define AE_MULA32_HH(d, d0, d1) { \
	ae_int64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULA32_HH)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAP24S_HH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAP24S_HH)(d, d0, d1)
#else
#define AE_MULAP24S_HH(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAP24S_HH)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULA24_HH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULA24_HH)(d, d0, d1)
#else
#define AE_MULA24_HH(d, d0, d1) { \
	ae_int64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULA24_HH)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAS32F48P16S_HH_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAS32F48P16S_HH_S2)(d, d0, d1)
#else
#define AE_MULAS32F48P16S_HH_S2(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAS32F48P16S_HH_S2)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAFS32P16S_HH_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFS32P16S_HH_S2)(d, d0, d1)
#else
#define AE_MULAFS32P16S_HH_S2(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFS32P16S_HH_S2)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAF32R_HH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF32R_HH)(d, d0, d1)
#else
#define AE_MULAF32R_HH(d, d0, d1) { \
	ae_f64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF32R_HH)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAF32R_LL_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF32R_LL_S2)(d, d0, d1)
#else
#define AE_MULAF32R_LL_S2(d, d0, d1) { \
	ae_f64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF32R_LL_S2)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSS32F48P16S_LL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSS32F48P16S_LL)(d, d0, d1)
#else
#define AE_MULSS32F48P16S_LL(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSS32F48P16S_LL)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSFS32P16S_LL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFS32P16S_LL)(d, d0, d1)
#else
#define AE_MULSFS32P16S_LL(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFS32P16S_LL)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSF32S_LL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF32S_LL)(d, d0, d1)
#else
#define AE_MULSF32S_LL(d, d0, d1) { \
	ae_f64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF32S_LL)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSFP24S_LL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFP24S_LL)(d, d0, d1)
#else
#define AE_MULSFP24S_LL(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFP24S_LL)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSF24S_LL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF24S_LL)(d, d0, d1)
#else
#define AE_MULSF24S_LL(d, d0, d1) { \
	ae_f64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF24S_LL)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULS32_LL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULS32_LL)(d, d0, d1)
#else
#define AE_MULS32_LL(d, d0, d1) { \
	ae_int64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULS32_LL)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSP24S_LL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSP24S_LL)(d, d0, d1)
#else
#define AE_MULSP24S_LL(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSP24S_LL)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULS24_LL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULS24_LL)(d, d0, d1)
#else
#define AE_MULS24_LL(d, d0, d1) { \
	ae_int64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULS24_LL)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSS32F48P16S_LL_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSS32F48P16S_LL_S2)(d, d0, d1)
#else
#define AE_MULSS32F48P16S_LL_S2(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSS32F48P16S_LL_S2)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSFS32P16S_LL_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFS32P16S_LL_S2)(d, d0, d1)
#else
#define AE_MULSFS32P16S_LL_S2(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFS32P16S_LL_S2)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSF32R_LL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF32R_LL)(d, d0, d1)
#else
#define AE_MULSF32R_LL(d, d0, d1) { \
	ae_f64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF32R_LL)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSS32F48P16S_LH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSS32F48P16S_LH)(d, d0, d1)
#else
#define AE_MULSS32F48P16S_LH(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSS32F48P16S_LH)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSFS32P16S_LH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFS32P16S_LH)(d, d0, d1)
#else
#define AE_MULSFS32P16S_LH(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFS32P16S_LH)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSS32F48P16S_HL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSS32F48P16S_HL)(d, d0, d1)
#else
#define AE_MULSS32F48P16S_HL(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSS32F48P16S_HL)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSFS32P16S_HL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFS32P16S_HL)(d, d0, d1)
#else
#define AE_MULSFS32P16S_HL(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFS32P16S_HL)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSF32S_LH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF32S_LH)(d, d0, d1)
#else
#define AE_MULSF32S_LH(d, d0, d1) { \
	ae_f64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF32S_LH)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSFP24S_LH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFP24S_LH)(d, d0, d1)
#else
#define AE_MULSFP24S_LH(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFP24S_LH)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSF24S_LH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF24S_LH)(d, d0, d1)
#else
#define AE_MULSF24S_LH(d, d0, d1) { \
	ae_f64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF24S_LH)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSF32S_HL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF32S_HL)(d, d0, d1)
#else
#define AE_MULSF32S_HL(d, d0, d1) { \
	ae_f64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF32S_HL)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSFP24S_HL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFP24S_HL)(d, d0, d1)
#else
#define AE_MULSFP24S_HL(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFP24S_HL)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSF24S_HL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF24S_HL)(d, d0, d1)
#else
#define AE_MULSF24S_HL(d, d0, d1) { \
	ae_f64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF24S_HL)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULS32_LH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULS32_LH)(d, d0, d1)
#else
#define AE_MULS32_LH(d, d0, d1) { \
	ae_int64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULS32_LH)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSP24S_LH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSP24S_LH)(d, d0, d1)
#else
#define AE_MULSP24S_LH(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSP24S_LH)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULS24_LH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULS24_LH)(d, d0, d1)
#else
#define AE_MULS24_LH(d, d0, d1) { \
	ae_int64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULS24_LH)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULS32_HL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULS32_HL)(d, d0, d1)
#else
#define AE_MULS32_HL(d, d0, d1) { \
	ae_int64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULS32_HL)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSP24S_HL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSP24S_HL)(d, d0, d1)
#else
#define AE_MULSP24S_HL(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSP24S_HL)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULS24_HL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULS24_HL)(d, d0, d1)
#else
#define AE_MULS24_HL(d, d0, d1) { \
	ae_int64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULS24_HL)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSS32F48P16S_LH_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSS32F48P16S_LH_S2)(d, d0, d1)
#else
#define AE_MULSS32F48P16S_LH_S2(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSS32F48P16S_LH_S2)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSFS32P16S_LH_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFS32P16S_LH_S2)(d, d0, d1)
#else
#define AE_MULSFS32P16S_LH_S2(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFS32P16S_LH_S2)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSF32R_LH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF32R_LH)(d, d0, d1)
#else
#define AE_MULSF32R_LH(d, d0, d1) { \
	ae_f64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF32R_LH)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSF32R_HL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF32R_HL)(d, d0, d1)
#else
#define AE_MULSF32R_HL(d, d0, d1) { \
	ae_f64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF32R_HL)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSS32F48P16S_HH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSS32F48P16S_HH)(d, d0, d1)
#else
#define AE_MULSS32F48P16S_HH(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSS32F48P16S_HH)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSFS32P16S_HH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFS32P16S_HH)(d, d0, d1)
#else
#define AE_MULSFS32P16S_HH(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFS32P16S_HH)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSF32S_HH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF32S_HH)(d, d0, d1)
#else
#define AE_MULSF32S_HH(d, d0, d1) { \
	ae_f64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF32S_HH)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSFP24S_HH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFP24S_HH)(d, d0, d1)
#else
#define AE_MULSFP24S_HH(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFP24S_HH)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSF24S_HH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF24S_HH)(d, d0, d1)
#else
#define AE_MULSF24S_HH(d, d0, d1) { \
	ae_f64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF24S_HH)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULS32_HH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULS32_HH)(d, d0, d1)
#else
#define AE_MULS32_HH(d, d0, d1) { \
	ae_int64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULS32_HH)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSP24S_HH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSP24S_HH)(d, d0, d1)
#else
#define AE_MULSP24S_HH(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSP24S_HH)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULS24_HH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULS24_HH)(d, d0, d1)
#else
#define AE_MULS24_HH(d, d0, d1) { \
	ae_int64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULS24_HH)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSS32F48P16S_HH_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSS32F48P16S_HH_S2)(d, d0, d1)
#else
#define AE_MULSS32F48P16S_HH_S2(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSS32F48P16S_HH_S2)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSFS32P16S_HH_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFS32P16S_HH_S2)(d, d0, d1)
#else
#define AE_MULSFS32P16S_HH_S2(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFS32P16S_HH_S2)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSF32R_HH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF32R_HH)(d, d0, d1)
#else
#define AE_MULSF32R_HH(d, d0, d1) { \
	ae_f64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF32R_HH)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSF32R_LL_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF32R_LL_S2)(d, d0, d1)
#else
#define AE_MULSF32R_LL_S2(d, d0, d1) { \
	ae_f64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF32R_LL_S2)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULF32S_LL_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF32S_LL_S2)(d0, d1)
#else
#define AE_MULF32S_LL_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF32S_LL_S2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULFP24S_LL_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFP24S_LL_S2)(d0, d1)
#else
#define AE_MULFP24S_LL_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFP24S_LL_S2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULF24S_LL_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF24S_LL_S2)(d0, d1)
#else
#define AE_MULF24S_LL_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF24S_LL_S2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAF32S_LL_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF32S_LL_S2)(d, d0, d1)
#else
#define AE_MULAF32S_LL_S2(d, d0, d1) { \
	ae_f64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF32S_LL_S2)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAFP24S_LL_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFP24S_LL_S2)(d, d0, d1)
#else
#define AE_MULAFP24S_LL_S2(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFP24S_LL_S2)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAF24S_LL_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF24S_LL_S2)(d, d0, d1)
#else
#define AE_MULAF24S_LL_S2(d, d0, d1) { \
	ae_f64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF24S_LL_S2)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MUL32_LL_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MUL32_LL_S2)(d0, d1)
#else
#define AE_MUL32_LL_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MUL32_LL_S2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULP24S_LL_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULP24S_LL_S2)(d0, d1)
#else
#define AE_MULP24S_LL_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULP24S_LL_S2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MUL24_LL_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MUL24_LL_S2)(d0, d1)
#else
#define AE_MUL24_LL_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MUL24_LL_S2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULA32_LL_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULA32_LL_S2)(d, d0, d1)
#else
#define AE_MULA32_LL_S2(d, d0, d1) { \
	ae_int64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULA32_LL_S2)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAP24S_LL_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAP24S_LL_S2)(d, d0, d1)
#else
#define AE_MULAP24S_LL_S2(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAP24S_LL_S2)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULA24_LL_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULA24_LL_S2)(d, d0, d1)
#else
#define AE_MULA24_LL_S2(d, d0, d1) { \
	ae_int64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULA24_LL_S2)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MUL32U_LL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MUL32U_LL)(d0, d1)
#else
#define AE_MUL32U_LL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MUL32U_LL)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULA32U_LL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULA32U_LL)(d, d0, d1)
#else
#define AE_MULA32U_LL(d, d0, d1) { \
	ae_int64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULA32U_LL)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULS32U_LL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULS32U_LL)(d, d0, d1)
#else
#define AE_MULS32U_LL(d, d0, d1) { \
	ae_int64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULS32U_LL)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAFS56P24S_LL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFS56P24S_LL)(d, d0, d1)
#else
#define AE_MULAFS56P24S_LL(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFS56P24S_LL)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAS56P24S_LL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAS56P24S_LL)(d, d0, d1)
#else
#define AE_MULAS56P24S_LL(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAS56P24S_LL)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAFS56P24S_LH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFS56P24S_LH)(d, d0, d1)
#else
#define AE_MULAFS56P24S_LH(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFS56P24S_LH)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAFS56P24S_HL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFS56P24S_HL)(d, d0, d1)
#else
#define AE_MULAFS56P24S_HL(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFS56P24S_HL)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAS56P24S_LH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAS56P24S_LH)(d, d0, d1)
#else
#define AE_MULAS56P24S_LH(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAS56P24S_LH)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAS56P24S_HL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAS56P24S_HL)(d, d0, d1)
#else
#define AE_MULAS56P24S_HL(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAS56P24S_HL)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAFS56P24S_HH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFS56P24S_HH)(d, d0, d1)
#else
#define AE_MULAFS56P24S_HH(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFS56P24S_HH)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAS56P24S_HH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAS56P24S_HH)(d, d0, d1)
#else
#define AE_MULAS56P24S_HH(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAS56P24S_HH)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSFS56P24S_LL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFS56P24S_LL)(d, d0, d1)
#else
#define AE_MULSFS56P24S_LL(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFS56P24S_LL)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSS56P24S_LL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSS56P24S_LL)(d, d0, d1)
#else
#define AE_MULSS56P24S_LL(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSS56P24S_LL)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSFS56P24S_LH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFS56P24S_LH)(d, d0, d1)
#else
#define AE_MULSFS56P24S_LH(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFS56P24S_LH)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSFS56P24S_HL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFS56P24S_HL)(d, d0, d1)
#else
#define AE_MULSFS56P24S_HL(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFS56P24S_HL)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSS56P24S_LH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSS56P24S_LH)(d, d0, d1)
#else
#define AE_MULSS56P24S_LH(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSS56P24S_LH)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSS56P24S_HL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSS56P24S_HL)(d, d0, d1)
#else
#define AE_MULSS56P24S_HL(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSS56P24S_HL)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSFS56P24S_HH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFS56P24S_HH)(d, d0, d1)
#else
#define AE_MULSFS56P24S_HH(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFS56P24S_HH)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSS56P24S_HH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSS56P24S_HH)(d, d0, d1)
#else
#define AE_MULSS56P24S_HH(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSS56P24S_HH)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULF16SS_33(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF16SS_33)(d0, d1)
#else
#define AE_MULF16SS_33(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF16SS_33)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULF16SS_22(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF16SS_22)(d0, d1)
#else
#define AE_MULF16SS_22(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF16SS_22)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULF16SS_32(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF16SS_32)(d0, d1)
#else
#define AE_MULF16SS_32(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF16SS_32)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULF16SS_21(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF16SS_21)(d0, d1)
#else
#define AE_MULF16SS_21(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF16SS_21)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULF16SS_31(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF16SS_31)(d0, d1)
#else
#define AE_MULF16SS_31(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF16SS_31)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULF16SS_30(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF16SS_30)(d0, d1)
#else
#define AE_MULF16SS_30(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF16SS_30)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULF16SS_10(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF16SS_10)(d0, d1)
#else
#define AE_MULF16SS_10(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF16SS_10)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULF16SS_20(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF16SS_20)(d0, d1)
#else
#define AE_MULF16SS_20(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF16SS_20)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULF16SS_11(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF16SS_11)(d0, d1)
#else
#define AE_MULF16SS_11(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF16SS_11)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULF16SS_00(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF16SS_00)(d0, d1)
#else
#define AE_MULF16SS_00(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF16SS_00)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULF16SS_00_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF16SS_00_S2)(d0, d1)
#else
#define AE_MULF16SS_00_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF16SS_00_S2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSF16SS_33(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF16SS_33)(d, d0, d1)
#else
#define AE_MULSF16SS_33(d, d0, d1) { \
	ae_f32x2 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF16SS_33)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSF16SS_22(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF16SS_22)(d, d0, d1)
#else
#define AE_MULSF16SS_22(d, d0, d1) { \
	ae_f32x2 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF16SS_22)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSF16SS_32(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF16SS_32)(d, d0, d1)
#else
#define AE_MULSF16SS_32(d, d0, d1) { \
	ae_f32x2 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF16SS_32)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSF16SS_21(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF16SS_21)(d, d0, d1)
#else
#define AE_MULSF16SS_21(d, d0, d1) { \
	ae_f32x2 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF16SS_21)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSF16SS_31(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF16SS_31)(d, d0, d1)
#else
#define AE_MULSF16SS_31(d, d0, d1) { \
	ae_f32x2 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF16SS_31)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSF16SS_30(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF16SS_30)(d, d0, d1)
#else
#define AE_MULSF16SS_30(d, d0, d1) { \
	ae_f32x2 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF16SS_30)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSF16SS_10(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF16SS_10)(d, d0, d1)
#else
#define AE_MULSF16SS_10(d, d0, d1) { \
	ae_f32x2 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF16SS_10)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSF16SS_20(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF16SS_20)(d, d0, d1)
#else
#define AE_MULSF16SS_20(d, d0, d1) { \
	ae_f32x2 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF16SS_20)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSF16SS_11(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF16SS_11)(d, d0, d1)
#else
#define AE_MULSF16SS_11(d, d0, d1) { \
	ae_f32x2 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF16SS_11)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSF16SS_00(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF16SS_00)(d, d0, d1)
#else
#define AE_MULSF16SS_00(d, d0, d1) { \
	ae_f32x2 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF16SS_00)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSF16SS_00_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF16SS_00_S2)(d, d0, d1)
#else
#define AE_MULSF16SS_00_S2(d, d0, d1) { \
	ae_f32x2 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF16SS_00_S2)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAF16SS_33(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF16SS_33)(d, d0, d1)
#else
#define AE_MULAF16SS_33(d, d0, d1) { \
	ae_f32x2 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF16SS_33)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAF16SS_22(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF16SS_22)(d, d0, d1)
#else
#define AE_MULAF16SS_22(d, d0, d1) { \
	ae_f32x2 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF16SS_22)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAF16SS_32(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF16SS_32)(d, d0, d1)
#else
#define AE_MULAF16SS_32(d, d0, d1) { \
	ae_f32x2 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF16SS_32)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAF16SS_21(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF16SS_21)(d, d0, d1)
#else
#define AE_MULAF16SS_21(d, d0, d1) { \
	ae_f32x2 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF16SS_21)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAF16SS_31(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF16SS_31)(d, d0, d1)
#else
#define AE_MULAF16SS_31(d, d0, d1) { \
	ae_f32x2 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF16SS_31)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAF16SS_30(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF16SS_30)(d, d0, d1)
#else
#define AE_MULAF16SS_30(d, d0, d1) { \
	ae_f32x2 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF16SS_30)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAF16SS_10(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF16SS_10)(d, d0, d1)
#else
#define AE_MULAF16SS_10(d, d0, d1) { \
	ae_f32x2 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF16SS_10)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAF16SS_20(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF16SS_20)(d, d0, d1)
#else
#define AE_MULAF16SS_20(d, d0, d1) { \
	ae_f32x2 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF16SS_20)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAF16SS_11(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF16SS_11)(d, d0, d1)
#else
#define AE_MULAF16SS_11(d, d0, d1) { \
	ae_f32x2 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF16SS_11)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAF16SS_00(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF16SS_00)(d, d0, d1)
#else
#define AE_MULAF16SS_00(d, d0, d1) { \
	ae_f32x2 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF16SS_00)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAF16SS_00_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF16SS_00_S2)(d, d0, d1)
#else
#define AE_MULAF16SS_00_S2(d, d0, d1) { \
	ae_f32x2 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF16SS_00_S2)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAAFD16SS_33_22(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAFD16SS_33_22)(d, d0, d1)
#else
#define AE_MULAAFD16SS_33_22(d, d0, d1) { \
	ae_f32x2 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAFD16SS_33_22)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAAFD16SS_33_22_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAFD16SS_33_22_S2)(d, d0, d1)
#else
#define AE_MULAAFD16SS_33_22_S2(d, d0, d1) { \
	ae_f32x2 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAFD16SS_33_22_S2)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAAFD16SS_13_02(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAFD16SS_13_02)(d, d0, d1)
#else
#define AE_MULAAFD16SS_13_02(d, d0, d1) { \
	ae_f32x2 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAFD16SS_13_02)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAAFD16SS_13_02_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAFD16SS_13_02_S2)(d, d0, d1)
#else
#define AE_MULAAFD16SS_13_02_S2(d, d0, d1) { \
	ae_f32x2 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAFD16SS_13_02_S2)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAAFD16SS_11_00(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAFD16SS_11_00)(d, d0, d1)
#else
#define AE_MULAAFD16SS_11_00(d, d0, d1) { \
	ae_f32x2 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAFD16SS_11_00)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAAFD16SS_11_00_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAFD16SS_11_00_S2)(d, d0, d1)
#else
#define AE_MULAAFD16SS_11_00_S2(d, d0, d1) { \
	ae_f32x2 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAFD16SS_11_00_S2)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSSFD16SS_33_22(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSSFD16SS_33_22)(d, d0, d1)
#else
#define AE_MULSSFD16SS_33_22(d, d0, d1) { \
	ae_f32x2 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSSFD16SS_33_22)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSSFD16SS_33_22_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSSFD16SS_33_22_S2)(d, d0, d1)
#else
#define AE_MULSSFD16SS_33_22_S2(d, d0, d1) { \
	ae_f32x2 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSSFD16SS_33_22_S2)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSSFD16SS_13_02(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSSFD16SS_13_02)(d, d0, d1)
#else
#define AE_MULSSFD16SS_13_02(d, d0, d1) { \
	ae_f32x2 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSSFD16SS_13_02)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSSFD16SS_13_02_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSSFD16SS_13_02_S2)(d, d0, d1)
#else
#define AE_MULSSFD16SS_13_02_S2(d, d0, d1) { \
	ae_f32x2 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSSFD16SS_13_02_S2)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSSFD16SS_11_00(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSSFD16SS_11_00)(d, d0, d1)
#else
#define AE_MULSSFD16SS_11_00(d, d0, d1) { \
	ae_f32x2 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSSFD16SS_11_00)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSSFD16SS_11_00_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSSFD16SS_11_00_S2)(d, d0, d1)
#else
#define AE_MULSSFD16SS_11_00_S2(d, d0, d1) { \
	ae_f32x2 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSSFD16SS_11_00_S2)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZAAFD16SS_33_22(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAFD16SS_33_22)(d0, d1)
#else
#define AE_MULZAAFD16SS_33_22(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAFD16SS_33_22)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZAAFD16SS_33_22_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAFD16SS_33_22_S2)(d0, d1)
#else
#define AE_MULZAAFD16SS_33_22_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAFD16SS_33_22_S2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZAAFD16SS_13_02(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAFD16SS_13_02)(d0, d1)
#else
#define AE_MULZAAFD16SS_13_02(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAFD16SS_13_02)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZAAFD16SS_13_02_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAFD16SS_13_02_S2)(d0, d1)
#else
#define AE_MULZAAFD16SS_13_02_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAFD16SS_13_02_S2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZAAFD16SS_11_00(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAFD16SS_11_00)(d0, d1)
#else
#define AE_MULZAAFD16SS_11_00(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAFD16SS_11_00)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZAAFD16SS_11_00_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAFD16SS_11_00_S2)(d0, d1)
#else
#define AE_MULZAAFD16SS_11_00_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAFD16SS_11_00_S2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZSSFD16SS_33_22(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSFD16SS_33_22)(d0, d1)
#else
#define AE_MULZSSFD16SS_33_22(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSFD16SS_33_22)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZSSFD16SS_33_22_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSFD16SS_33_22_S2)(d0, d1)
#else
#define AE_MULZSSFD16SS_33_22_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSFD16SS_33_22_S2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZSSFD16SS_13_02(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSFD16SS_13_02)(d0, d1)
#else
#define AE_MULZSSFD16SS_13_02(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSFD16SS_13_02)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZSSFD16SS_13_02_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSFD16SS_13_02_S2)(d0, d1)
#else
#define AE_MULZSSFD16SS_13_02_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSFD16SS_13_02_S2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZSSFD16SS_11_00(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSFD16SS_11_00)(d0, d1)
#else
#define AE_MULZSSFD16SS_11_00(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSFD16SS_11_00)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZSSFD16SS_11_00_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSFD16SS_11_00_S2)(d0, d1)
#else
#define AE_MULZSSFD16SS_11_00_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSFD16SS_11_00_S2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULF48Q32SP16S_L(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF48Q32SP16S_L)(d0, d1)
#else
#define AE_MULF48Q32SP16S_L(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF48Q32SP16S_L)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULFQ32SP16S_L(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFQ32SP16S_L)(d0, d1)
#else
#define AE_MULFQ32SP16S_L(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFQ32SP16S_L)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULF48Q32SP16S_L_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF48Q32SP16S_L_S2)(d0, d1)
#else
#define AE_MULF48Q32SP16S_L_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF48Q32SP16S_L_S2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULFQ32SP16S_L_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFQ32SP16S_L_S2)(d0, d1)
#else
#define AE_MULFQ32SP16S_L_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFQ32SP16S_L_S2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULF48Q32SP16U_L(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF48Q32SP16U_L)(d0, d1)
#else
#define AE_MULF48Q32SP16U_L(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF48Q32SP16U_L)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULFQ32SP16U_L(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFQ32SP16U_L)(d0, d1)
#else
#define AE_MULFQ32SP16U_L(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFQ32SP16U_L)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULF48Q32SP16U_L_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF48Q32SP16U_L_S2)(d0, d1)
#else
#define AE_MULF48Q32SP16U_L_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF48Q32SP16U_L_S2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULFQ32SP16U_L_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFQ32SP16U_L_S2)(d0, d1)
#else
#define AE_MULFQ32SP16U_L_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFQ32SP16U_L_S2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULQ32SP16S_L(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULQ32SP16S_L)(d0, d1)
#else
#define AE_MULQ32SP16S_L(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULQ32SP16S_L)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULQ32SP16S_L_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULQ32SP16S_L_S2)(d0, d1)
#else
#define AE_MULQ32SP16S_L_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULQ32SP16S_L_S2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULQ32SP16U_L(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULQ32SP16U_L)(d0, d1)
#else
#define AE_MULQ32SP16U_L(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULQ32SP16U_L)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULQ32SP16U_L_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULQ32SP16U_L_S2)(d0, d1)
#else
#define AE_MULQ32SP16U_L_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULQ32SP16U_L_S2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAF48Q32SP16S_L(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF48Q32SP16S_L)(d, d0, d1)
#else
#define AE_MULAF48Q32SP16S_L(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF48Q32SP16S_L)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAFQ32SP16S_L(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFQ32SP16S_L)(d, d0, d1)
#else
#define AE_MULAFQ32SP16S_L(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFQ32SP16S_L)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAF48Q32SP16S_L_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF48Q32SP16S_L_S2)(d, d0, d1)
#else
#define AE_MULAF48Q32SP16S_L_S2(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF48Q32SP16S_L_S2)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAFQ32SP16S_L_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFQ32SP16S_L_S2)(d, d0, d1)
#else
#define AE_MULAFQ32SP16S_L_S2(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFQ32SP16S_L_S2)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAF48Q32SP16U_L(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF48Q32SP16U_L)(d, d0, d1)
#else
#define AE_MULAF48Q32SP16U_L(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF48Q32SP16U_L)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAFQ32SP16U_L(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFQ32SP16U_L)(d, d0, d1)
#else
#define AE_MULAFQ32SP16U_L(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFQ32SP16U_L)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAF48Q32SP16U_L_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF48Q32SP16U_L_S2)(d, d0, d1)
#else
#define AE_MULAF48Q32SP16U_L_S2(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF48Q32SP16U_L_S2)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAFQ32SP16U_L_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFQ32SP16U_L_S2)(d, d0, d1)
#else
#define AE_MULAFQ32SP16U_L_S2(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFQ32SP16U_L_S2)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAQ32SP16S_L(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAQ32SP16S_L)(d, d0, d1)
#else
#define AE_MULAQ32SP16S_L(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAQ32SP16S_L)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAQ32SP16S_L_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAQ32SP16S_L_S2)(d, d0, d1)
#else
#define AE_MULAQ32SP16S_L_S2(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAQ32SP16S_L_S2)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAQ32SP16U_L(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAQ32SP16U_L)(d, d0, d1)
#else
#define AE_MULAQ32SP16U_L(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAQ32SP16U_L)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAQ32SP16U_L_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAQ32SP16U_L_S2)(d, d0, d1)
#else
#define AE_MULAQ32SP16U_L_S2(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAQ32SP16U_L_S2)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSF48Q32SP16S_L(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF48Q32SP16S_L)(d, d0, d1)
#else
#define AE_MULSF48Q32SP16S_L(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF48Q32SP16S_L)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSFQ32SP16S_L(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFQ32SP16S_L)(d, d0, d1)
#else
#define AE_MULSFQ32SP16S_L(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFQ32SP16S_L)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSF48Q32SP16S_L_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF48Q32SP16S_L_S2)(d, d0, d1)
#else
#define AE_MULSF48Q32SP16S_L_S2(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF48Q32SP16S_L_S2)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSFQ32SP16S_L_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFQ32SP16S_L_S2)(d, d0, d1)
#else
#define AE_MULSFQ32SP16S_L_S2(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFQ32SP16S_L_S2)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSF48Q32SP16U_L(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF48Q32SP16U_L)(d, d0, d1)
#else
#define AE_MULSF48Q32SP16U_L(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF48Q32SP16U_L)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSFQ32SP16U_L(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFQ32SP16U_L)(d, d0, d1)
#else
#define AE_MULSFQ32SP16U_L(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFQ32SP16U_L)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSF48Q32SP16U_L_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF48Q32SP16U_L_S2)(d, d0, d1)
#else
#define AE_MULSF48Q32SP16U_L_S2(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF48Q32SP16U_L_S2)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSFQ32SP16U_L_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFQ32SP16U_L_S2)(d, d0, d1)
#else
#define AE_MULSFQ32SP16U_L_S2(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFQ32SP16U_L_S2)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSQ32SP16S_L(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSQ32SP16S_L)(d, d0, d1)
#else
#define AE_MULSQ32SP16S_L(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSQ32SP16S_L)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSQ32SP16S_L_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSQ32SP16S_L_S2)(d, d0, d1)
#else
#define AE_MULSQ32SP16S_L_S2(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSQ32SP16S_L_S2)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSQ32SP16U_L(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSQ32SP16U_L)(d, d0, d1)
#else
#define AE_MULSQ32SP16U_L(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSQ32SP16U_L)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSQ32SP16U_L_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSQ32SP16U_L_S2)(d, d0, d1)
#else
#define AE_MULSQ32SP16U_L_S2(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSQ32SP16U_L_S2)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULFP24X2RA(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFP24X2RA)(d0, d1)
#else
#define AE_MULFP24X2RA(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFP24X2RA)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULFP24X2R(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFP24X2R)(d0, d1)
#else
#define AE_MULFP24X2R(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFP24X2R)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULP24X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULP24X2)(d0, d1)
#else
#define AE_MULP24X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULP24X2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULFP24X2RA_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFP24X2RA_S2)(d0, d1)
#else
#define AE_MULFP24X2RA_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFP24X2RA_S2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULFP24X2R_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFP24X2R_S2)(d0, d1)
#else
#define AE_MULFP24X2R_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFP24X2R_S2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULP24X2_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULP24X2_S2)(d0, d1)
#else
#define AE_MULP24X2_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULP24X2_S2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAFP24X2RA(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFP24X2RA)(d, d0, d1)
#else
#define AE_MULAFP24X2RA(d, d0, d1) { \
	ae_f32x2 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFP24X2RA)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAFP24X2R(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFP24X2R)(d, d0, d1)
#else
#define AE_MULAFP24X2R(d, d0, d1) { \
	ae_f32x2 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFP24X2R)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAP24X2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAP24X2)(d, d0, d1)
#else
#define AE_MULAP24X2(d, d0, d1) { \
	ae_int32x2 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAP24X2)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAFP24X2RA_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFP24X2RA_S2)(d, d0, d1)
#else
#define AE_MULAFP24X2RA_S2(d, d0, d1) { \
	ae_f32x2 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFP24X2RA_S2)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAFP24X2R_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFP24X2R_S2)(d, d0, d1)
#else
#define AE_MULAFP24X2R_S2(d, d0, d1) { \
	ae_f32x2 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFP24X2R_S2)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAP24X2_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAP24X2_S2)(d, d0, d1)
#else
#define AE_MULAP24X2_S2(d, d0, d1) { \
	ae_int32x2 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAP24X2_S2)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSFP24X2RA(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFP24X2RA)(d, d0, d1)
#else
#define AE_MULSFP24X2RA(d, d0, d1) { \
	ae_f32x2 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFP24X2RA)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSFP24X2R(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFP24X2R)(d, d0, d1)
#else
#define AE_MULSFP24X2R(d, d0, d1) { \
	ae_f32x2 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFP24X2R)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSP24X2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSP24X2)(d, d0, d1)
#else
#define AE_MULSP24X2(d, d0, d1) { \
	ae_int32x2 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSP24X2)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSFP24X2RA_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFP24X2RA_S2)(d, d0, d1)
#else
#define AE_MULSFP24X2RA_S2(d, d0, d1) { \
	ae_f32x2 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFP24X2RA_S2)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSFP24X2R_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFP24X2R_S2)(d, d0, d1)
#else
#define AE_MULSFP24X2R_S2(d, d0, d1) { \
	ae_f32x2 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFP24X2R_S2)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSP24X2_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSP24X2_S2)(d, d0, d1)
#else
#define AE_MULSP24X2_S2(d, d0, d1) { \
	ae_int32x2 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSP24X2_S2)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZAAFD24_HH_LL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAFD24_HH_LL)(d0, d1)
#else
#define AE_MULZAAFD24_HH_LL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAFD24_HH_LL)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZAAFP24S_HH_LL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAFP24S_HH_LL)(d0, d1)
#else
#define AE_MULZAAFP24S_HH_LL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAFP24S_HH_LL)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZAAD24_HH_LL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAD24_HH_LL)(d0, d1)
#else
#define AE_MULZAAD24_HH_LL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAD24_HH_LL)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZAAP24S_HH_LL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAP24S_HH_LL)(d0, d1)
#else
#define AE_MULZAAP24S_HH_LL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAP24S_HH_LL)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZAAFD24_HH_LL_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAFD24_HH_LL_S2)(d0, d1)
#else
#define AE_MULZAAFD24_HH_LL_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAFD24_HH_LL_S2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZAAFP24S_HH_LL_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAFP24S_HH_LL_S2)(d0, d1)
#else
#define AE_MULZAAFP24S_HH_LL_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAFP24S_HH_LL_S2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZAAD24_HH_LL_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAD24_HH_LL_S2)(d0, d1)
#else
#define AE_MULZAAD24_HH_LL_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAD24_HH_LL_S2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZAAP24S_HH_LL_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAP24S_HH_LL_S2)(d0, d1)
#else
#define AE_MULZAAP24S_HH_LL_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAP24S_HH_LL_S2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZAAFD24_HL_LH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAFD24_HL_LH)(d0, d1)
#else
#define AE_MULZAAFD24_HL_LH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAFD24_HL_LH)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZAAFP24S_HL_LH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAFP24S_HL_LH)(d0, d1)
#else
#define AE_MULZAAFP24S_HL_LH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAFP24S_HL_LH)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZAAD24_HL_LH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAD24_HL_LH)(d0, d1)
#else
#define AE_MULZAAD24_HL_LH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAD24_HL_LH)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZAAP24S_HL_LH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAP24S_HL_LH)(d0, d1)
#else
#define AE_MULZAAP24S_HL_LH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAP24S_HL_LH)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZAAFD24_HL_LH_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAFD24_HL_LH_S2)(d0, d1)
#else
#define AE_MULZAAFD24_HL_LH_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAFD24_HL_LH_S2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZAAFP24S_HL_LH_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAFP24S_HL_LH_S2)(d0, d1)
#else
#define AE_MULZAAFP24S_HL_LH_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAFP24S_HL_LH_S2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZAAD24_HL_LH_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAD24_HL_LH_S2)(d0, d1)
#else
#define AE_MULZAAD24_HL_LH_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAD24_HL_LH_S2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZAAP24S_HL_LH_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAP24S_HL_LH_S2)(d0, d1)
#else
#define AE_MULZAAP24S_HL_LH_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAP24S_HL_LH_S2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZASFD24_HH_LL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASFD24_HH_LL)(d0, d1)
#else
#define AE_MULZASFD24_HH_LL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASFD24_HH_LL)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZASFP24S_HH_LL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASFP24S_HH_LL)(d0, d1)
#else
#define AE_MULZASFP24S_HH_LL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASFP24S_HH_LL)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZASD24_HH_LL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASD24_HH_LL)(d0, d1)
#else
#define AE_MULZASD24_HH_LL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASD24_HH_LL)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZASP24S_HH_LL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASP24S_HH_LL)(d0, d1)
#else
#define AE_MULZASP24S_HH_LL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASP24S_HH_LL)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZASFD24_HH_LL_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASFD24_HH_LL_S2)(d0, d1)
#else
#define AE_MULZASFD24_HH_LL_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASFD24_HH_LL_S2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZASFP24S_HH_LL_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASFP24S_HH_LL_S2)(d0, d1)
#else
#define AE_MULZASFP24S_HH_LL_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASFP24S_HH_LL_S2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZASD24_HH_LL_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASD24_HH_LL_S2)(d0, d1)
#else
#define AE_MULZASD24_HH_LL_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASD24_HH_LL_S2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZASP24S_HH_LL_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASP24S_HH_LL_S2)(d0, d1)
#else
#define AE_MULZASP24S_HH_LL_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASP24S_HH_LL_S2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZASFD24_HL_LH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASFD24_HL_LH)(d0, d1)
#else
#define AE_MULZASFD24_HL_LH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASFD24_HL_LH)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZASFP24S_HL_LH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASFP24S_HL_LH)(d0, d1)
#else
#define AE_MULZASFP24S_HL_LH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASFP24S_HL_LH)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZSAF48P24S_HL_LH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAF48P24S_HL_LH)(d0, d1)
#else
#define AE_MULZSAF48P24S_HL_LH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAF48P24S_HL_LH)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZSAFP24S_HL_LH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAFP24S_HL_LH)(d0, d1)
#else
#define AE_MULZSAFP24S_HL_LH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAFP24S_HL_LH)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZASD24_HL_LH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASD24_HL_LH)(d0, d1)
#else
#define AE_MULZASD24_HL_LH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASD24_HL_LH)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZASP24S_HL_LH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASP24S_HL_LH)(d0, d1)
#else
#define AE_MULZASP24S_HL_LH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASP24S_HL_LH)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZSA64P24S_HL_LH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSA64P24S_HL_LH)(d0, d1)
#else
#define AE_MULZSA64P24S_HL_LH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSA64P24S_HL_LH)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZSAP24S_HL_LH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAP24S_HL_LH)(d0, d1)
#else
#define AE_MULZSAP24S_HL_LH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAP24S_HL_LH)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZASFD24_HL_LH_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASFD24_HL_LH_S2)(d0, d1)
#else
#define AE_MULZASFD24_HL_LH_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASFD24_HL_LH_S2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZASFP24S_HL_LH_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASFP24S_HL_LH_S2)(d0, d1)
#else
#define AE_MULZASFP24S_HL_LH_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASFP24S_HL_LH_S2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZSAF48P24S_HL_LH_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAF48P24S_HL_LH_S2)(d0, d1)
#else
#define AE_MULZSAF48P24S_HL_LH_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAF48P24S_HL_LH_S2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZSAFP24S_HL_LH_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAFP24S_HL_LH_S2)(d0, d1)
#else
#define AE_MULZSAFP24S_HL_LH_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAFP24S_HL_LH_S2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZASD24_HL_LH_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASD24_HL_LH_S2)(d0, d1)
#else
#define AE_MULZASD24_HL_LH_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASD24_HL_LH_S2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZASP24S_HL_LH_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASP24S_HL_LH_S2)(d0, d1)
#else
#define AE_MULZASP24S_HL_LH_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASP24S_HL_LH_S2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZSA64P24S_HL_LH_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSA64P24S_HL_LH_S2)(d0, d1)
#else
#define AE_MULZSA64P24S_HL_LH_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSA64P24S_HL_LH_S2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZSAP24S_HL_LH_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAP24S_HL_LH_S2)(d0, d1)
#else
#define AE_MULZSAP24S_HL_LH_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAP24S_HL_LH_S2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZSAFD24_HH_LL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAFD24_HH_LL)(d0, d1)
#else
#define AE_MULZSAFD24_HH_LL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAFD24_HH_LL)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZSAFP24S_HH_LL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAFP24S_HH_LL)(d0, d1)
#else
#define AE_MULZSAFP24S_HH_LL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAFP24S_HH_LL)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZSAD24_HH_LL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAD24_HH_LL)(d0, d1)
#else
#define AE_MULZSAD24_HH_LL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAD24_HH_LL)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZSAP24S_HH_LL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAP24S_HH_LL)(d0, d1)
#else
#define AE_MULZSAP24S_HH_LL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAP24S_HH_LL)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZSAFD24_HH_LL_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAFD24_HH_LL_S2)(d0, d1)
#else
#define AE_MULZSAFD24_HH_LL_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAFD24_HH_LL_S2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZSAFP24S_HH_LL_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAFP24S_HH_LL_S2)(d0, d1)
#else
#define AE_MULZSAFP24S_HH_LL_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAFP24S_HH_LL_S2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZSAD24_HH_LL_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAD24_HH_LL_S2)(d0, d1)
#else
#define AE_MULZSAD24_HH_LL_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAD24_HH_LL_S2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZSAP24S_HH_LL_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAP24S_HH_LL_S2)(d0, d1)
#else
#define AE_MULZSAP24S_HH_LL_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAP24S_HH_LL_S2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZSSFD24_HH_LL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSFD24_HH_LL)(d0, d1)
#else
#define AE_MULZSSFD24_HH_LL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSFD24_HH_LL)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZSSFP24S_HH_LL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSFP24S_HH_LL)(d0, d1)
#else
#define AE_MULZSSFP24S_HH_LL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSFP24S_HH_LL)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZSSD24_HH_LL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSD24_HH_LL)(d0, d1)
#else
#define AE_MULZSSD24_HH_LL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSD24_HH_LL)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZSSP24S_HH_LL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSP24S_HH_LL)(d0, d1)
#else
#define AE_MULZSSP24S_HH_LL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSP24S_HH_LL)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZSSFD24_HH_LL_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSFD24_HH_LL_S2)(d0, d1)
#else
#define AE_MULZSSFD24_HH_LL_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSFD24_HH_LL_S2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZSSFP24S_HH_LL_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSFP24S_HH_LL_S2)(d0, d1)
#else
#define AE_MULZSSFP24S_HH_LL_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSFP24S_HH_LL_S2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZSSD24_HH_LL_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSD24_HH_LL_S2)(d0, d1)
#else
#define AE_MULZSSD24_HH_LL_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSD24_HH_LL_S2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZSSP24S_HH_LL_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSP24S_HH_LL_S2)(d0, d1)
#else
#define AE_MULZSSP24S_HH_LL_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSP24S_HH_LL_S2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZSSFD24_HL_LH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSFD24_HL_LH)(d0, d1)
#else
#define AE_MULZSSFD24_HL_LH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSFD24_HL_LH)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZSSFP24S_HL_LH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSFP24S_HL_LH)(d0, d1)
#else
#define AE_MULZSSFP24S_HL_LH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSFP24S_HL_LH)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZSSD24_HL_LH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSD24_HL_LH)(d0, d1)
#else
#define AE_MULZSSD24_HL_LH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSD24_HL_LH)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZSSP24S_HL_LH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSP24S_HL_LH)(d0, d1)
#else
#define AE_MULZSSP24S_HL_LH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSP24S_HL_LH)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZSSFD24_HL_LH_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSFD24_HL_LH_S2)(d0, d1)
#else
#define AE_MULZSSFD24_HL_LH_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSFD24_HL_LH_S2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZSSFP24S_HL_LH_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSFP24S_HL_LH_S2)(d0, d1)
#else
#define AE_MULZSSFP24S_HL_LH_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSFP24S_HL_LH_S2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZSSD24_HL_LH_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSD24_HL_LH_S2)(d0, d1)
#else
#define AE_MULZSSD24_HL_LH_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSD24_HL_LH_S2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZSSP24S_HL_LH_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSP24S_HL_LH_S2)(d0, d1)
#else
#define AE_MULZSSP24S_HL_LH_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSP24S_HL_LH_S2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAAFD24_HH_LL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAFD24_HH_LL)(d, d0, d1)
#else
#define AE_MULAAFD24_HH_LL(d, d0, d1) { \
	ae_f64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAFD24_HH_LL)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAAFP24S_HH_LL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAFP24S_HH_LL)(d, d0, d1)
#else
#define AE_MULAAFP24S_HH_LL(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAFP24S_HH_LL)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAAD24_HH_LL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAD24_HH_LL)(d, d0, d1)
#else
#define AE_MULAAD24_HH_LL(d, d0, d1) { \
	ae_int64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAD24_HH_LL)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAAP24S_HH_LL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAP24S_HH_LL)(d, d0, d1)
#else
#define AE_MULAAP24S_HH_LL(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAP24S_HH_LL)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAAFD24_HH_LL_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAFD24_HH_LL_S2)(d, d0, d1)
#else
#define AE_MULAAFD24_HH_LL_S2(d, d0, d1) { \
	ae_f64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAFD24_HH_LL_S2)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAAFP24S_HH_LL_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAFP24S_HH_LL_S2)(d, d0, d1)
#else
#define AE_MULAAFP24S_HH_LL_S2(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAFP24S_HH_LL_S2)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAAD24_HH_LL_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAD24_HH_LL_S2)(d, d0, d1)
#else
#define AE_MULAAD24_HH_LL_S2(d, d0, d1) { \
	ae_int64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAD24_HH_LL_S2)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAAP24S_HH_LL_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAP24S_HH_LL_S2)(d, d0, d1)
#else
#define AE_MULAAP24S_HH_LL_S2(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAP24S_HH_LL_S2)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAAFD24_HL_LH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAFD24_HL_LH)(d, d0, d1)
#else
#define AE_MULAAFD24_HL_LH(d, d0, d1) { \
	ae_f64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAFD24_HL_LH)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAAFP24S_HL_LH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAFP24S_HL_LH)(d, d0, d1)
#else
#define AE_MULAAFP24S_HL_LH(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAFP24S_HL_LH)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAAD24_HL_LH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAD24_HL_LH)(d, d0, d1)
#else
#define AE_MULAAD24_HL_LH(d, d0, d1) { \
	ae_int64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAD24_HL_LH)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAAP24S_HL_LH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAP24S_HL_LH)(d, d0, d1)
#else
#define AE_MULAAP24S_HL_LH(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAP24S_HL_LH)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAAFD24_HL_LH_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAFD24_HL_LH_S2)(d, d0, d1)
#else
#define AE_MULAAFD24_HL_LH_S2(d, d0, d1) { \
	ae_f64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAFD24_HL_LH_S2)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAAFP24S_HL_LH_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAFP24S_HL_LH_S2)(d, d0, d1)
#else
#define AE_MULAAFP24S_HL_LH_S2(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAFP24S_HL_LH_S2)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAAD24_HL_LH_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAD24_HL_LH_S2)(d, d0, d1)
#else
#define AE_MULAAD24_HL_LH_S2(d, d0, d1) { \
	ae_int64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAD24_HL_LH_S2)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAAP24S_HL_LH_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAP24S_HL_LH_S2)(d, d0, d1)
#else
#define AE_MULAAP24S_HL_LH_S2(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAP24S_HL_LH_S2)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULASFD24_HH_LL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULASFD24_HH_LL)(d, d0, d1)
#else
#define AE_MULASFD24_HH_LL(d, d0, d1) { \
	ae_f64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULASFD24_HH_LL)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULASFP24S_HH_LL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULASFP24S_HH_LL)(d, d0, d1)
#else
#define AE_MULASFP24S_HH_LL(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULASFP24S_HH_LL)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULASD24_HH_LL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULASD24_HH_LL)(d, d0, d1)
#else
#define AE_MULASD24_HH_LL(d, d0, d1) { \
	ae_int64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULASD24_HH_LL)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULASP24S_HH_LL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULASP24S_HH_LL)(d, d0, d1)
#else
#define AE_MULASP24S_HH_LL(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULASP24S_HH_LL)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULASFD24_HH_LL_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULASFD24_HH_LL_S2)(d, d0, d1)
#else
#define AE_MULASFD24_HH_LL_S2(d, d0, d1) { \
	ae_f64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULASFD24_HH_LL_S2)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULASFP24S_HH_LL_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULASFP24S_HH_LL_S2)(d, d0, d1)
#else
#define AE_MULASFP24S_HH_LL_S2(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULASFP24S_HH_LL_S2)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULASD24_HH_LL_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULASD24_HH_LL_S2)(d, d0, d1)
#else
#define AE_MULASD24_HH_LL_S2(d, d0, d1) { \
	ae_int64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULASD24_HH_LL_S2)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULASP24S_HH_LL_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULASP24S_HH_LL_S2)(d, d0, d1)
#else
#define AE_MULASP24S_HH_LL_S2(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULASP24S_HH_LL_S2)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULASFD24_HL_LH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULASFD24_HL_LH)(d, d0, d1)
#else
#define AE_MULASFD24_HL_LH(d, d0, d1) { \
	ae_f64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULASFD24_HL_LH)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULASFP24S_HL_LH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULASFP24S_HL_LH)(d, d0, d1)
#else
#define AE_MULASFP24S_HL_LH(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULASFP24S_HL_LH)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSAF48P24S_HL_LH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSAF48P24S_HL_LH)(d, d0, d1)
#else
#define AE_MULSAF48P24S_HL_LH(d, d0, d1) { \
	ae_f64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSAF48P24S_HL_LH)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSAFP24S_HL_LH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSAFP24S_HL_LH)(d, d0, d1)
#else
#define AE_MULSAFP24S_HL_LH(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSAFP24S_HL_LH)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULASD24_HL_LH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULASD24_HL_LH)(d, d0, d1)
#else
#define AE_MULASD24_HL_LH(d, d0, d1) { \
	ae_int64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULASD24_HL_LH)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULASP24S_HL_LH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULASP24S_HL_LH)(d, d0, d1)
#else
#define AE_MULASP24S_HL_LH(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULASP24S_HL_LH)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSA64P24S_HL_LH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSA64P24S_HL_LH)(d, d0, d1)
#else
#define AE_MULSA64P24S_HL_LH(d, d0, d1) { \
	ae_int64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSA64P24S_HL_LH)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSAP24S_HL_LH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSAP24S_HL_LH)(d, d0, d1)
#else
#define AE_MULSAP24S_HL_LH(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSAP24S_HL_LH)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULASFD24_HL_LH_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULASFD24_HL_LH_S2)(d, d0, d1)
#else
#define AE_MULASFD24_HL_LH_S2(d, d0, d1) { \
	ae_f64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULASFD24_HL_LH_S2)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULASFP24S_HL_LH_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULASFP24S_HL_LH_S2)(d, d0, d1)
#else
#define AE_MULASFP24S_HL_LH_S2(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULASFP24S_HL_LH_S2)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSAF48P24S_HL_LH_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSAF48P24S_HL_LH_S2)(d, d0, d1)
#else
#define AE_MULSAF48P24S_HL_LH_S2(d, d0, d1) { \
	ae_f64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSAF48P24S_HL_LH_S2)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSAFP24S_HL_LH_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSAFP24S_HL_LH_S2)(d, d0, d1)
#else
#define AE_MULSAFP24S_HL_LH_S2(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSAFP24S_HL_LH_S2)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULASD24_HL_LH_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULASD24_HL_LH_S2)(d, d0, d1)
#else
#define AE_MULASD24_HL_LH_S2(d, d0, d1) { \
	ae_int64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULASD24_HL_LH_S2)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULASP24S_HL_LH_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULASP24S_HL_LH_S2)(d, d0, d1)
#else
#define AE_MULASP24S_HL_LH_S2(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULASP24S_HL_LH_S2)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSA64P24S_HL_LH_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSA64P24S_HL_LH_S2)(d, d0, d1)
#else
#define AE_MULSA64P24S_HL_LH_S2(d, d0, d1) { \
	ae_int64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSA64P24S_HL_LH_S2)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSAP24S_HL_LH_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSAP24S_HL_LH_S2)(d, d0, d1)
#else
#define AE_MULSAP24S_HL_LH_S2(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSAP24S_HL_LH_S2)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSAFD24_HH_LL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSAFD24_HH_LL)(d, d0, d1)
#else
#define AE_MULSAFD24_HH_LL(d, d0, d1) { \
	ae_f64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSAFD24_HH_LL)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSAFP24S_HH_LL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSAFP24S_HH_LL)(d, d0, d1)
#else
#define AE_MULSAFP24S_HH_LL(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSAFP24S_HH_LL)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSAD24_HH_LL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSAD24_HH_LL)(d, d0, d1)
#else
#define AE_MULSAD24_HH_LL(d, d0, d1) { \
	ae_int64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSAD24_HH_LL)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSAP24S_HH_LL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSAP24S_HH_LL)(d, d0, d1)
#else
#define AE_MULSAP24S_HH_LL(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSAP24S_HH_LL)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSAFD24_HH_LL_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSAFD24_HH_LL_S2)(d, d0, d1)
#else
#define AE_MULSAFD24_HH_LL_S2(d, d0, d1) { \
	ae_f64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSAFD24_HH_LL_S2)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSAFP24S_HH_LL_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSAFP24S_HH_LL_S2)(d, d0, d1)
#else
#define AE_MULSAFP24S_HH_LL_S2(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSAFP24S_HH_LL_S2)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSAD24_HH_LL_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSAD24_HH_LL_S2)(d, d0, d1)
#else
#define AE_MULSAD24_HH_LL_S2(d, d0, d1) { \
	ae_int64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSAD24_HH_LL_S2)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSAP24S_HH_LL_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSAP24S_HH_LL_S2)(d, d0, d1)
#else
#define AE_MULSAP24S_HH_LL_S2(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSAP24S_HH_LL_S2)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSSFD24_HH_LL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSSFD24_HH_LL)(d, d0, d1)
#else
#define AE_MULSSFD24_HH_LL(d, d0, d1) { \
	ae_f64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSSFD24_HH_LL)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSSFP24S_HH_LL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSSFP24S_HH_LL)(d, d0, d1)
#else
#define AE_MULSSFP24S_HH_LL(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSSFP24S_HH_LL)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSSD24_HH_LL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSSD24_HH_LL)(d, d0, d1)
#else
#define AE_MULSSD24_HH_LL(d, d0, d1) { \
	ae_int64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSSD24_HH_LL)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSSP24S_HH_LL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSSP24S_HH_LL)(d, d0, d1)
#else
#define AE_MULSSP24S_HH_LL(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSSP24S_HH_LL)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSSFD24_HH_LL_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSSFD24_HH_LL_S2)(d, d0, d1)
#else
#define AE_MULSSFD24_HH_LL_S2(d, d0, d1) { \
	ae_f64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSSFD24_HH_LL_S2)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSSFP24S_HH_LL_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSSFP24S_HH_LL_S2)(d, d0, d1)
#else
#define AE_MULSSFP24S_HH_LL_S2(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSSFP24S_HH_LL_S2)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSSD24_HH_LL_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSSD24_HH_LL_S2)(d, d0, d1)
#else
#define AE_MULSSD24_HH_LL_S2(d, d0, d1) { \
	ae_int64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSSD24_HH_LL_S2)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSSP24S_HH_LL_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSSP24S_HH_LL_S2)(d, d0, d1)
#else
#define AE_MULSSP24S_HH_LL_S2(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSSP24S_HH_LL_S2)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSSFD24_HL_LH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSSFD24_HL_LH)(d, d0, d1)
#else
#define AE_MULSSFD24_HL_LH(d, d0, d1) { \
	ae_f64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSSFD24_HL_LH)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSSFP24S_HL_LH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSSFP24S_HL_LH)(d, d0, d1)
#else
#define AE_MULSSFP24S_HL_LH(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSSFP24S_HL_LH)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSSD24_HL_LH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSSD24_HL_LH)(d, d0, d1)
#else
#define AE_MULSSD24_HL_LH(d, d0, d1) { \
	ae_int64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSSD24_HL_LH)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSSP24S_HL_LH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSSP24S_HL_LH)(d, d0, d1)
#else
#define AE_MULSSP24S_HL_LH(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSSP24S_HL_LH)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSSFD24_HL_LH_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSSFD24_HL_LH_S2)(d, d0, d1)
#else
#define AE_MULSSFD24_HL_LH_S2(d, d0, d1) { \
	ae_f64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSSFD24_HL_LH_S2)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSSFP24S_HL_LH_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSSFP24S_HL_LH_S2)(d, d0, d1)
#else
#define AE_MULSSFP24S_HL_LH_S2(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSSFP24S_HL_LH_S2)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSSD24_HL_LH_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSSD24_HL_LH_S2)(d, d0, d1)
#else
#define AE_MULSSD24_HL_LH_S2(d, d0, d1) { \
	ae_int64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSSD24_HL_LH_S2)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSSP24S_HL_LH_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSSP24S_HL_LH_S2)(d, d0, d1)
#else
#define AE_MULSSP24S_HL_LH_S2(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSSP24S_HL_LH_S2)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSRFQ32SP24S_H(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSRFQ32SP24S_H)(d, d0, d1)
#else
#define AE_MULSRFQ32SP24S_H(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSRFQ32SP24S_H)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSRFQ32SP24S_L(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSRFQ32SP24S_L)(d, d0, d1)
#else
#define AE_MULSRFQ32SP24S_L(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSRFQ32SP24S_L)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSRFQ32SP24S_H_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSRFQ32SP24S_H_S2)(d, d0, d1)
#else
#define AE_MULSRFQ32SP24S_H_S2(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSRFQ32SP24S_H_S2)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSRFQ32SP24S_L_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSRFQ32SP24S_L_S2)(d, d0, d1)
#else
#define AE_MULSRFQ32SP24S_L_S2(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSRFQ32SP24S_L_S2)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULARFQ32SP24S_H(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULARFQ32SP24S_H)(d, d0, d1)
#else
#define AE_MULARFQ32SP24S_H(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULARFQ32SP24S_H)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULARFQ32SP24S_L(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULARFQ32SP24S_L)(d, d0, d1)
#else
#define AE_MULARFQ32SP24S_L(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULARFQ32SP24S_L)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULARFQ32SP24S_H_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULARFQ32SP24S_H_S2)(d, d0, d1)
#else
#define AE_MULARFQ32SP24S_H_S2(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULARFQ32SP24S_H_S2)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULARFQ32SP24S_L_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULARFQ32SP24S_L_S2)(d, d0, d1)
#else
#define AE_MULARFQ32SP24S_L_S2(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULARFQ32SP24S_L_S2)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULRFQ32SP24S_H(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULRFQ32SP24S_H)(d0, d1)
#else
#define AE_MULRFQ32SP24S_H(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULRFQ32SP24S_H)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULRFQ32SP24S_L(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULRFQ32SP24S_L)(d0, d1)
#else
#define AE_MULRFQ32SP24S_L(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULRFQ32SP24S_L)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULRFQ32SP24S_H_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULRFQ32SP24S_H_S2)(d0, d1)
#else
#define AE_MULRFQ32SP24S_H_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULRFQ32SP24S_H_S2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULRFQ32SP24S_L_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULRFQ32SP24S_L_S2)(d0, d1)
#else
#define AE_MULRFQ32SP24S_L_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULRFQ32SP24S_L_S2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSFQ32SP24S_H(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFQ32SP24S_H)(d, d0, d1)
#else
#define AE_MULSFQ32SP24S_H(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFQ32SP24S_H)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSFQ32SP24S_L(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFQ32SP24S_L)(d, d0, d1)
#else
#define AE_MULSFQ32SP24S_L(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFQ32SP24S_L)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSFQ32SP24S_H_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFQ32SP24S_H_S2)(d, d0, d1)
#else
#define AE_MULSFQ32SP24S_H_S2(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFQ32SP24S_H_S2)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSFQ32SP24S_L_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFQ32SP24S_L_S2)(d, d0, d1)
#else
#define AE_MULSFQ32SP24S_L_S2(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFQ32SP24S_L_S2)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAFQ32SP24S_H(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFQ32SP24S_H)(d, d0, d1)
#else
#define AE_MULAFQ32SP24S_H(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFQ32SP24S_H)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAFQ32SP24S_L(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFQ32SP24S_L)(d, d0, d1)
#else
#define AE_MULAFQ32SP24S_L(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFQ32SP24S_L)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAFQ32SP24S_H_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFQ32SP24S_H_S2)(d, d0, d1)
#else
#define AE_MULAFQ32SP24S_H_S2(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFQ32SP24S_H_S2)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAFQ32SP24S_L_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFQ32SP24S_L_S2)(d, d0, d1)
#else
#define AE_MULAFQ32SP24S_L_S2(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFQ32SP24S_L_S2)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULFQ32SP24S_H(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFQ32SP24S_H)(d0, d1)
#else
#define AE_MULFQ32SP24S_H(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFQ32SP24S_H)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULFQ32SP24S_L(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFQ32SP24S_L)(d0, d1)
#else
#define AE_MULFQ32SP24S_L(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFQ32SP24S_L)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULFQ32SP24S_H_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFQ32SP24S_H_S2)(d0, d1)
#else
#define AE_MULFQ32SP24S_H_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFQ32SP24S_H_S2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULFQ32SP24S_L_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFQ32SP24S_L_S2)(d0, d1)
#else
#define AE_MULFQ32SP24S_L_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFQ32SP24S_L_S2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULF32X16_L0(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF32X16_L0)(d1, d0)
#else
#define AE_MULF32X16_L0(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF32X16_L0)(d1, d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MUL32X16_L0(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MUL32X16_L0)(d1, d0)
#else
#define AE_MUL32X16_L0(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MUL32X16_L0)(d1, d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULF32X16_L0_S2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF32X16_L0_S2)(d1, d0)
#else
#define AE_MULF32X16_L0_S2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF32X16_L0_S2)(d1, d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MUL32X16_L0_S2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MUL32X16_L0_S2)(d1, d0)
#else
#define AE_MUL32X16_L0_S2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MUL32X16_L0_S2)(d1, d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULF32X16_L1(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF32X16_L1)(d1, d0)
#else
#define AE_MULF32X16_L1(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF32X16_L1)(d1, d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MUL32X16_L1(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MUL32X16_L1)(d1, d0)
#else
#define AE_MUL32X16_L1(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MUL32X16_L1)(d1, d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULF32X16_L1_S2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF32X16_L1_S2)(d1, d0)
#else
#define AE_MULF32X16_L1_S2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF32X16_L1_S2)(d1, d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MUL32X16_L1_S2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MUL32X16_L1_S2)(d1, d0)
#else
#define AE_MUL32X16_L1_S2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MUL32X16_L1_S2)(d1, d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULF32X16_L2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF32X16_L2)(d1, d0)
#else
#define AE_MULF32X16_L2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF32X16_L2)(d1, d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MUL32X16_L2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MUL32X16_L2)(d1, d0)
#else
#define AE_MUL32X16_L2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MUL32X16_L2)(d1, d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULF32X16_L2_S2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF32X16_L2_S2)(d1, d0)
#else
#define AE_MULF32X16_L2_S2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF32X16_L2_S2)(d1, d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MUL32X16_L2_S2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MUL32X16_L2_S2)(d1, d0)
#else
#define AE_MUL32X16_L2_S2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MUL32X16_L2_S2)(d1, d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULF32X16_L3(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF32X16_L3)(d1, d0)
#else
#define AE_MULF32X16_L3(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF32X16_L3)(d1, d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MUL32X16_L3(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MUL32X16_L3)(d1, d0)
#else
#define AE_MUL32X16_L3(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MUL32X16_L3)(d1, d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULF32X16_L3_S2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF32X16_L3_S2)(d1, d0)
#else
#define AE_MULF32X16_L3_S2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF32X16_L3_S2)(d1, d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MUL32X16_L3_S2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MUL32X16_L3_S2)(d1, d0)
#else
#define AE_MUL32X16_L3_S2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MUL32X16_L3_S2)(d1, d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULF32X16_H0(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF32X16_H0)(d1, d0)
#else
#define AE_MULF32X16_H0(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF32X16_H0)(d1, d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MUL32X16_H0(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MUL32X16_H0)(d1, d0)
#else
#define AE_MUL32X16_H0(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MUL32X16_H0)(d1, d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULF32X16_H0_S2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF32X16_H0_S2)(d1, d0)
#else
#define AE_MULF32X16_H0_S2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF32X16_H0_S2)(d1, d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MUL32X16_H0_S2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MUL32X16_H0_S2)(d1, d0)
#else
#define AE_MUL32X16_H0_S2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MUL32X16_H0_S2)(d1, d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULF32X16_H1(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF32X16_H1)(d1, d0)
#else
#define AE_MULF32X16_H1(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF32X16_H1)(d1, d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MUL32X16_H1(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MUL32X16_H1)(d1, d0)
#else
#define AE_MUL32X16_H1(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MUL32X16_H1)(d1, d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULF32X16_H1_S2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF32X16_H1_S2)(d1, d0)
#else
#define AE_MULF32X16_H1_S2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF32X16_H1_S2)(d1, d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MUL32X16_H1_S2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MUL32X16_H1_S2)(d1, d0)
#else
#define AE_MUL32X16_H1_S2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MUL32X16_H1_S2)(d1, d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULF32X16_H2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF32X16_H2)(d1, d0)
#else
#define AE_MULF32X16_H2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF32X16_H2)(d1, d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MUL32X16_H2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MUL32X16_H2)(d1, d0)
#else
#define AE_MUL32X16_H2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MUL32X16_H2)(d1, d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULF32X16_H2_S2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF32X16_H2_S2)(d1, d0)
#else
#define AE_MULF32X16_H2_S2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF32X16_H2_S2)(d1, d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MUL32X16_H2_S2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MUL32X16_H2_S2)(d1, d0)
#else
#define AE_MUL32X16_H2_S2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MUL32X16_H2_S2)(d1, d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULF32X16_H3(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF32X16_H3)(d1, d0)
#else
#define AE_MULF32X16_H3(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF32X16_H3)(d1, d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MUL32X16_H3(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MUL32X16_H3)(d1, d0)
#else
#define AE_MUL32X16_H3(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MUL32X16_H3)(d1, d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULF32X16_H3_S2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF32X16_H3_S2)(d1, d0)
#else
#define AE_MULF32X16_H3_S2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF32X16_H3_S2)(d1, d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MUL32X16_H3_S2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MUL32X16_H3_S2)(d1, d0)
#else
#define AE_MUL32X16_H3_S2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MUL32X16_H3_S2)(d1, d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAF32X16_L0(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF32X16_L0)(d, d1, d0)
#else
#define AE_MULAF32X16_L0(d, d1, d0) { \
	ae_f64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF32X16_L0)(__d, d1, d0); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULA32X16_L0(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULA32X16_L0)(d, d1, d0)
#else
#define AE_MULA32X16_L0(d, d1, d0) { \
	ae_int64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULA32X16_L0)(__d, d1, d0); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAF32X16_L0_S2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF32X16_L0_S2)(d, d1, d0)
#else
#define AE_MULAF32X16_L0_S2(d, d1, d0) { \
	ae_f64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF32X16_L0_S2)(__d, d1, d0); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULA32X16_L0_S2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULA32X16_L0_S2)(d, d1, d0)
#else
#define AE_MULA32X16_L0_S2(d, d1, d0) { \
	ae_int64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULA32X16_L0_S2)(__d, d1, d0); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAF32X16_L1(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF32X16_L1)(d, d1, d0)
#else
#define AE_MULAF32X16_L1(d, d1, d0) { \
	ae_f64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF32X16_L1)(__d, d1, d0); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULA32X16_L1(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULA32X16_L1)(d, d1, d0)
#else
#define AE_MULA32X16_L1(d, d1, d0) { \
	ae_int64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULA32X16_L1)(__d, d1, d0); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAF32X16_L1_S2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF32X16_L1_S2)(d, d1, d0)
#else
#define AE_MULAF32X16_L1_S2(d, d1, d0) { \
	ae_f64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF32X16_L1_S2)(__d, d1, d0); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULA32X16_L1_S2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULA32X16_L1_S2)(d, d1, d0)
#else
#define AE_MULA32X16_L1_S2(d, d1, d0) { \
	ae_int64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULA32X16_L1_S2)(__d, d1, d0); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAF32X16_L2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF32X16_L2)(d, d1, d0)
#else
#define AE_MULAF32X16_L2(d, d1, d0) { \
	ae_f64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF32X16_L2)(__d, d1, d0); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULA32X16_L2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULA32X16_L2)(d, d1, d0)
#else
#define AE_MULA32X16_L2(d, d1, d0) { \
	ae_int64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULA32X16_L2)(__d, d1, d0); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAF32X16_L2_S2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF32X16_L2_S2)(d, d1, d0)
#else
#define AE_MULAF32X16_L2_S2(d, d1, d0) { \
	ae_f64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF32X16_L2_S2)(__d, d1, d0); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULA32X16_L2_S2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULA32X16_L2_S2)(d, d1, d0)
#else
#define AE_MULA32X16_L2_S2(d, d1, d0) { \
	ae_int64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULA32X16_L2_S2)(__d, d1, d0); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAF32X16_L3(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF32X16_L3)(d, d1, d0)
#else
#define AE_MULAF32X16_L3(d, d1, d0) { \
	ae_f64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF32X16_L3)(__d, d1, d0); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULA32X16_L3(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULA32X16_L3)(d, d1, d0)
#else
#define AE_MULA32X16_L3(d, d1, d0) { \
	ae_int64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULA32X16_L3)(__d, d1, d0); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAF32X16_L3_S2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF32X16_L3_S2)(d, d1, d0)
#else
#define AE_MULAF32X16_L3_S2(d, d1, d0) { \
	ae_f64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF32X16_L3_S2)(__d, d1, d0); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULA32X16_L3_S2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULA32X16_L3_S2)(d, d1, d0)
#else
#define AE_MULA32X16_L3_S2(d, d1, d0) { \
	ae_int64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULA32X16_L3_S2)(__d, d1, d0); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAF32X16_H0(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF32X16_H0)(d, d1, d0)
#else
#define AE_MULAF32X16_H0(d, d1, d0) { \
	ae_f64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF32X16_H0)(__d, d1, d0); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULA32X16_H0(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULA32X16_H0)(d, d1, d0)
#else
#define AE_MULA32X16_H0(d, d1, d0) { \
	ae_int64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULA32X16_H0)(__d, d1, d0); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAF32X16_H0_S2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF32X16_H0_S2)(d, d1, d0)
#else
#define AE_MULAF32X16_H0_S2(d, d1, d0) { \
	ae_f64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF32X16_H0_S2)(__d, d1, d0); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULA32X16_H0_S2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULA32X16_H0_S2)(d, d1, d0)
#else
#define AE_MULA32X16_H0_S2(d, d1, d0) { \
	ae_int64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULA32X16_H0_S2)(__d, d1, d0); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAF32X16_H1(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF32X16_H1)(d, d1, d0)
#else
#define AE_MULAF32X16_H1(d, d1, d0) { \
	ae_f64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF32X16_H1)(__d, d1, d0); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULA32X16_H1(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULA32X16_H1)(d, d1, d0)
#else
#define AE_MULA32X16_H1(d, d1, d0) { \
	ae_int64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULA32X16_H1)(__d, d1, d0); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAF32X16_H1_S2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF32X16_H1_S2)(d, d1, d0)
#else
#define AE_MULAF32X16_H1_S2(d, d1, d0) { \
	ae_f64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF32X16_H1_S2)(__d, d1, d0); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULA32X16_H1_S2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULA32X16_H1_S2)(d, d1, d0)
#else
#define AE_MULA32X16_H1_S2(d, d1, d0) { \
	ae_int64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULA32X16_H1_S2)(__d, d1, d0); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAF32X16_H2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF32X16_H2)(d, d1, d0)
#else
#define AE_MULAF32X16_H2(d, d1, d0) { \
	ae_f64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF32X16_H2)(__d, d1, d0); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULA32X16_H2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULA32X16_H2)(d, d1, d0)
#else
#define AE_MULA32X16_H2(d, d1, d0) { \
	ae_int64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULA32X16_H2)(__d, d1, d0); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAF32X16_H2_S2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF32X16_H2_S2)(d, d1, d0)
#else
#define AE_MULAF32X16_H2_S2(d, d1, d0) { \
	ae_f64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF32X16_H2_S2)(__d, d1, d0); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULA32X16_H2_S2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULA32X16_H2_S2)(d, d1, d0)
#else
#define AE_MULA32X16_H2_S2(d, d1, d0) { \
	ae_int64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULA32X16_H2_S2)(__d, d1, d0); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAF32X16_H3(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF32X16_H3)(d, d1, d0)
#else
#define AE_MULAF32X16_H3(d, d1, d0) { \
	ae_f64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF32X16_H3)(__d, d1, d0); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULA32X16_H3(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULA32X16_H3)(d, d1, d0)
#else
#define AE_MULA32X16_H3(d, d1, d0) { \
	ae_int64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULA32X16_H3)(__d, d1, d0); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAF32X16_H3_S2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF32X16_H3_S2)(d, d1, d0)
#else
#define AE_MULAF32X16_H3_S2(d, d1, d0) { \
	ae_f64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF32X16_H3_S2)(__d, d1, d0); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULA32X16_H3_S2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULA32X16_H3_S2)(d, d1, d0)
#else
#define AE_MULA32X16_H3_S2(d, d1, d0) { \
	ae_int64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULA32X16_H3_S2)(__d, d1, d0); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSF32X16_L0(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF32X16_L0)(d, d1, d0)
#else
#define AE_MULSF32X16_L0(d, d1, d0) { \
	ae_f64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF32X16_L0)(__d, d1, d0); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULS32X16_L0(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULS32X16_L0)(d, d1, d0)
#else
#define AE_MULS32X16_L0(d, d1, d0) { \
	ae_int64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULS32X16_L0)(__d, d1, d0); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSF32X16_L0_S2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF32X16_L0_S2)(d, d1, d0)
#else
#define AE_MULSF32X16_L0_S2(d, d1, d0) { \
	ae_f64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF32X16_L0_S2)(__d, d1, d0); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULS32X16_L0_S2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULS32X16_L0_S2)(d, d1, d0)
#else
#define AE_MULS32X16_L0_S2(d, d1, d0) { \
	ae_int64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULS32X16_L0_S2)(__d, d1, d0); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSF32X16_L1(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF32X16_L1)(d, d1, d0)
#else
#define AE_MULSF32X16_L1(d, d1, d0) { \
	ae_f64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF32X16_L1)(__d, d1, d0); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULS32X16_L1(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULS32X16_L1)(d, d1, d0)
#else
#define AE_MULS32X16_L1(d, d1, d0) { \
	ae_int64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULS32X16_L1)(__d, d1, d0); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSF32X16_L1_S2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF32X16_L1_S2)(d, d1, d0)
#else
#define AE_MULSF32X16_L1_S2(d, d1, d0) { \
	ae_f64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF32X16_L1_S2)(__d, d1, d0); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULS32X16_L1_S2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULS32X16_L1_S2)(d, d1, d0)
#else
#define AE_MULS32X16_L1_S2(d, d1, d0) { \
	ae_int64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULS32X16_L1_S2)(__d, d1, d0); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSF32X16_L2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF32X16_L2)(d, d1, d0)
#else
#define AE_MULSF32X16_L2(d, d1, d0) { \
	ae_f64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF32X16_L2)(__d, d1, d0); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULS32X16_L2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULS32X16_L2)(d, d1, d0)
#else
#define AE_MULS32X16_L2(d, d1, d0) { \
	ae_int64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULS32X16_L2)(__d, d1, d0); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSF32X16_L2_S2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF32X16_L2_S2)(d, d1, d0)
#else
#define AE_MULSF32X16_L2_S2(d, d1, d0) { \
	ae_f64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF32X16_L2_S2)(__d, d1, d0); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULS32X16_L2_S2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULS32X16_L2_S2)(d, d1, d0)
#else
#define AE_MULS32X16_L2_S2(d, d1, d0) { \
	ae_int64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULS32X16_L2_S2)(__d, d1, d0); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSF32X16_L3(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF32X16_L3)(d, d1, d0)
#else
#define AE_MULSF32X16_L3(d, d1, d0) { \
	ae_f64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF32X16_L3)(__d, d1, d0); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULS32X16_L3(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULS32X16_L3)(d, d1, d0)
#else
#define AE_MULS32X16_L3(d, d1, d0) { \
	ae_int64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULS32X16_L3)(__d, d1, d0); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSF32X16_L3_S2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF32X16_L3_S2)(d, d1, d0)
#else
#define AE_MULSF32X16_L3_S2(d, d1, d0) { \
	ae_f64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF32X16_L3_S2)(__d, d1, d0); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULS32X16_L3_S2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULS32X16_L3_S2)(d, d1, d0)
#else
#define AE_MULS32X16_L3_S2(d, d1, d0) { \
	ae_int64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULS32X16_L3_S2)(__d, d1, d0); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSF32X16_H0(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF32X16_H0)(d, d1, d0)
#else
#define AE_MULSF32X16_H0(d, d1, d0) { \
	ae_f64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF32X16_H0)(__d, d1, d0); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULS32X16_H0(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULS32X16_H0)(d, d1, d0)
#else
#define AE_MULS32X16_H0(d, d1, d0) { \
	ae_int64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULS32X16_H0)(__d, d1, d0); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSF32X16_H0_S2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF32X16_H0_S2)(d, d1, d0)
#else
#define AE_MULSF32X16_H0_S2(d, d1, d0) { \
	ae_f64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF32X16_H0_S2)(__d, d1, d0); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULS32X16_H0_S2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULS32X16_H0_S2)(d, d1, d0)
#else
#define AE_MULS32X16_H0_S2(d, d1, d0) { \
	ae_int64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULS32X16_H0_S2)(__d, d1, d0); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSF32X16_H1(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF32X16_H1)(d, d1, d0)
#else
#define AE_MULSF32X16_H1(d, d1, d0) { \
	ae_f64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF32X16_H1)(__d, d1, d0); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULS32X16_H1(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULS32X16_H1)(d, d1, d0)
#else
#define AE_MULS32X16_H1(d, d1, d0) { \
	ae_int64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULS32X16_H1)(__d, d1, d0); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSF32X16_H1_S2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF32X16_H1_S2)(d, d1, d0)
#else
#define AE_MULSF32X16_H1_S2(d, d1, d0) { \
	ae_f64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF32X16_H1_S2)(__d, d1, d0); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULS32X16_H1_S2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULS32X16_H1_S2)(d, d1, d0)
#else
#define AE_MULS32X16_H1_S2(d, d1, d0) { \
	ae_int64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULS32X16_H1_S2)(__d, d1, d0); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSF32X16_H2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF32X16_H2)(d, d1, d0)
#else
#define AE_MULSF32X16_H2(d, d1, d0) { \
	ae_f64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF32X16_H2)(__d, d1, d0); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULS32X16_H2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULS32X16_H2)(d, d1, d0)
#else
#define AE_MULS32X16_H2(d, d1, d0) { \
	ae_int64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULS32X16_H2)(__d, d1, d0); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSF32X16_H2_S2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF32X16_H2_S2)(d, d1, d0)
#else
#define AE_MULSF32X16_H2_S2(d, d1, d0) { \
	ae_f64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF32X16_H2_S2)(__d, d1, d0); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULS32X16_H2_S2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULS32X16_H2_S2)(d, d1, d0)
#else
#define AE_MULS32X16_H2_S2(d, d1, d0) { \
	ae_int64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULS32X16_H2_S2)(__d, d1, d0); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSF32X16_H3(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF32X16_H3)(d, d1, d0)
#else
#define AE_MULSF32X16_H3(d, d1, d0) { \
	ae_f64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF32X16_H3)(__d, d1, d0); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULS32X16_H3(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULS32X16_H3)(d, d1, d0)
#else
#define AE_MULS32X16_H3(d, d1, d0) { \
	ae_int64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULS32X16_H3)(__d, d1, d0); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSF32X16_H3_S2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF32X16_H3_S2)(d, d1, d0)
#else
#define AE_MULSF32X16_H3_S2(d, d1, d0) { \
	ae_f64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF32X16_H3_S2)(__d, d1, d0); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULS32X16_H3_S2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULS32X16_H3_S2)(d, d1, d0)
#else
#define AE_MULS32X16_H3_S2(d, d1, d0) { \
	ae_int64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULS32X16_H3_S2)(__d, d1, d0); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAAFD32X16_H3_L2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAFD32X16_H3_L2)(d, d1, d0)
#else
#define AE_MULAAFD32X16_H3_L2(d, d1, d0) { \
	ae_f64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAFD32X16_H3_L2)(__d, d1, d0); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAAD32X16_H3_L2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAD32X16_H3_L2)(d, d1, d0)
#else
#define AE_MULAAD32X16_H3_L2(d, d1, d0) { \
	ae_int64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAD32X16_H3_L2)(__d, d1, d0); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAAFD32X16_H3_L2_S2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAFD32X16_H3_L2_S2)(d, d1, d0)
#else
#define AE_MULAAFD32X16_H3_L2_S2(d, d1, d0) { \
	ae_f64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAFD32X16_H3_L2_S2)(__d, d1, d0); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAAD32X16_H3_L2_S2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAD32X16_H3_L2_S2)(d, d1, d0)
#else
#define AE_MULAAD32X16_H3_L2_S2(d, d1, d0) { \
	ae_int64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAD32X16_H3_L2_S2)(__d, d1, d0); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAAFD32X16_H1_L0(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAFD32X16_H1_L0)(d, d1, d0)
#else
#define AE_MULAAFD32X16_H1_L0(d, d1, d0) { \
	ae_f64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAFD32X16_H1_L0)(__d, d1, d0); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAAD32X16_H1_L0(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAD32X16_H1_L0)(d, d1, d0)
#else
#define AE_MULAAD32X16_H1_L0(d, d1, d0) { \
	ae_int64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAD32X16_H1_L0)(__d, d1, d0); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAAFD32X16_H1_L0_S2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAFD32X16_H1_L0_S2)(d, d1, d0)
#else
#define AE_MULAAFD32X16_H1_L0_S2(d, d1, d0) { \
	ae_f64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAFD32X16_H1_L0_S2)(__d, d1, d0); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAAD32X16_H1_L0_S2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAD32X16_H1_L0_S2)(d, d1, d0)
#else
#define AE_MULAAD32X16_H1_L0_S2(d, d1, d0) { \
	ae_int64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAD32X16_H1_L0_S2)(__d, d1, d0); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULASFD32X16_H3_L2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULASFD32X16_H3_L2)(d, d1, d0)
#else
#define AE_MULASFD32X16_H3_L2(d, d1, d0) { \
	ae_f64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULASFD32X16_H3_L2)(__d, d1, d0); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULASD32X16_H3_L2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULASD32X16_H3_L2)(d, d1, d0)
#else
#define AE_MULASD32X16_H3_L2(d, d1, d0) { \
	ae_int64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULASD32X16_H3_L2)(__d, d1, d0); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULASFD32X16_H3_L2_S2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULASFD32X16_H3_L2_S2)(d, d1, d0)
#else
#define AE_MULASFD32X16_H3_L2_S2(d, d1, d0) { \
	ae_f64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULASFD32X16_H3_L2_S2)(__d, d1, d0); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULASD32X16_H3_L2_S2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULASD32X16_H3_L2_S2)(d, d1, d0)
#else
#define AE_MULASD32X16_H3_L2_S2(d, d1, d0) { \
	ae_int64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULASD32X16_H3_L2_S2)(__d, d1, d0); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULASFD32X16_H1_L0(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULASFD32X16_H1_L0)(d, d1, d0)
#else
#define AE_MULASFD32X16_H1_L0(d, d1, d0) { \
	ae_f64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULASFD32X16_H1_L0)(__d, d1, d0); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULASD32X16_H1_L0(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULASD32X16_H1_L0)(d, d1, d0)
#else
#define AE_MULASD32X16_H1_L0(d, d1, d0) { \
	ae_int64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULASD32X16_H1_L0)(__d, d1, d0); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULASFD32X16_H1_L0_S2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULASFD32X16_H1_L0_S2)(d, d1, d0)
#else
#define AE_MULASFD32X16_H1_L0_S2(d, d1, d0) { \
	ae_f64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULASFD32X16_H1_L0_S2)(__d, d1, d0); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULASD32X16_H1_L0_S2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULASD32X16_H1_L0_S2)(d, d1, d0)
#else
#define AE_MULASD32X16_H1_L0_S2(d, d1, d0) { \
	ae_int64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULASD32X16_H1_L0_S2)(__d, d1, d0); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSAFD32X16_H3_L2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSAFD32X16_H3_L2)(d, d1, d0)
#else
#define AE_MULSAFD32X16_H3_L2(d, d1, d0) { \
	ae_f64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSAFD32X16_H3_L2)(__d, d1, d0); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSAD32X16_H3_L2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSAD32X16_H3_L2)(d, d1, d0)
#else
#define AE_MULSAD32X16_H3_L2(d, d1, d0) { \
	ae_int64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSAD32X16_H3_L2)(__d, d1, d0); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSAFD32X16_H3_L2_S2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSAFD32X16_H3_L2_S2)(d, d1, d0)
#else
#define AE_MULSAFD32X16_H3_L2_S2(d, d1, d0) { \
	ae_f64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSAFD32X16_H3_L2_S2)(__d, d1, d0); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSAD32X16_H3_L2_S2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSAD32X16_H3_L2_S2)(d, d1, d0)
#else
#define AE_MULSAD32X16_H3_L2_S2(d, d1, d0) { \
	ae_int64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSAD32X16_H3_L2_S2)(__d, d1, d0); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSAFD32X16_H1_L0(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSAFD32X16_H1_L0)(d, d1, d0)
#else
#define AE_MULSAFD32X16_H1_L0(d, d1, d0) { \
	ae_f64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSAFD32X16_H1_L0)(__d, d1, d0); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSAD32X16_H1_L0(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSAD32X16_H1_L0)(d, d1, d0)
#else
#define AE_MULSAD32X16_H1_L0(d, d1, d0) { \
	ae_int64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSAD32X16_H1_L0)(__d, d1, d0); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSAFD32X16_H1_L0_S2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSAFD32X16_H1_L0_S2)(d, d1, d0)
#else
#define AE_MULSAFD32X16_H1_L0_S2(d, d1, d0) { \
	ae_f64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSAFD32X16_H1_L0_S2)(__d, d1, d0); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSAD32X16_H1_L0_S2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSAD32X16_H1_L0_S2)(d, d1, d0)
#else
#define AE_MULSAD32X16_H1_L0_S2(d, d1, d0) { \
	ae_int64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSAD32X16_H1_L0_S2)(__d, d1, d0); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSSFD32X16_H3_L2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSSFD32X16_H3_L2)(d, d1, d0)
#else
#define AE_MULSSFD32X16_H3_L2(d, d1, d0) { \
	ae_f64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSSFD32X16_H3_L2)(__d, d1, d0); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSSD32X16_H3_L2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSSD32X16_H3_L2)(d, d1, d0)
#else
#define AE_MULSSD32X16_H3_L2(d, d1, d0) { \
	ae_int64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSSD32X16_H3_L2)(__d, d1, d0); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSSFD32X16_H3_L2_S2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSSFD32X16_H3_L2_S2)(d, d1, d0)
#else
#define AE_MULSSFD32X16_H3_L2_S2(d, d1, d0) { \
	ae_f64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSSFD32X16_H3_L2_S2)(__d, d1, d0); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSSD32X16_H3_L2_S2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSSD32X16_H3_L2_S2)(d, d1, d0)
#else
#define AE_MULSSD32X16_H3_L2_S2(d, d1, d0) { \
	ae_int64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSSD32X16_H3_L2_S2)(__d, d1, d0); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSSFD32X16_H1_L0(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSSFD32X16_H1_L0)(d, d1, d0)
#else
#define AE_MULSSFD32X16_H1_L0(d, d1, d0) { \
	ae_f64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSSFD32X16_H1_L0)(__d, d1, d0); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSSD32X16_H1_L0(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSSD32X16_H1_L0)(d, d1, d0)
#else
#define AE_MULSSD32X16_H1_L0(d, d1, d0) { \
	ae_int64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSSD32X16_H1_L0)(__d, d1, d0); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSSFD32X16_H1_L0_S2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSSFD32X16_H1_L0_S2)(d, d1, d0)
#else
#define AE_MULSSFD32X16_H1_L0_S2(d, d1, d0) { \
	ae_f64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSSFD32X16_H1_L0_S2)(__d, d1, d0); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSSD32X16_H1_L0_S2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSSD32X16_H1_L0_S2)(d, d1, d0)
#else
#define AE_MULSSD32X16_H1_L0_S2(d, d1, d0) { \
	ae_int64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSSD32X16_H1_L0_S2)(__d, d1, d0); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZAAFD32X16_H3_L2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAFD32X16_H3_L2)(d1, d0)
#else
#define AE_MULZAAFD32X16_H3_L2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAFD32X16_H3_L2)(d1, d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZAAD32X16_H3_L2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAD32X16_H3_L2)(d1, d0)
#else
#define AE_MULZAAD32X16_H3_L2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAD32X16_H3_L2)(d1, d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZAAFD32X16_H3_L2_S2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAFD32X16_H3_L2_S2)(d1, d0)
#else
#define AE_MULZAAFD32X16_H3_L2_S2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAFD32X16_H3_L2_S2)(d1, d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZAAD32X16_H3_L2_S2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAD32X16_H3_L2_S2)(d1, d0)
#else
#define AE_MULZAAD32X16_H3_L2_S2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAD32X16_H3_L2_S2)(d1, d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZAAFD32X16_H1_L0(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAFD32X16_H1_L0)(d1, d0)
#else
#define AE_MULZAAFD32X16_H1_L0(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAFD32X16_H1_L0)(d1, d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZAAD32X16_H1_L0(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAD32X16_H1_L0)(d1, d0)
#else
#define AE_MULZAAD32X16_H1_L0(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAD32X16_H1_L0)(d1, d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZAAFD32X16_H1_L0_S2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAFD32X16_H1_L0_S2)(d1, d0)
#else
#define AE_MULZAAFD32X16_H1_L0_S2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAFD32X16_H1_L0_S2)(d1, d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZAAD32X16_H1_L0_S2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAD32X16_H1_L0_S2)(d1, d0)
#else
#define AE_MULZAAD32X16_H1_L0_S2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAD32X16_H1_L0_S2)(d1, d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZASFD32X16_H3_L2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASFD32X16_H3_L2)(d1, d0)
#else
#define AE_MULZASFD32X16_H3_L2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASFD32X16_H3_L2)(d1, d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZASD32X16_H3_L2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASD32X16_H3_L2)(d1, d0)
#else
#define AE_MULZASD32X16_H3_L2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASD32X16_H3_L2)(d1, d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZASFD32X16_H3_L2_S2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASFD32X16_H3_L2_S2)(d1, d0)
#else
#define AE_MULZASFD32X16_H3_L2_S2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASFD32X16_H3_L2_S2)(d1, d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZASD32X16_H3_L2_S2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASD32X16_H3_L2_S2)(d1, d0)
#else
#define AE_MULZASD32X16_H3_L2_S2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASD32X16_H3_L2_S2)(d1, d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZASFD32X16_H1_L0(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASFD32X16_H1_L0)(d1, d0)
#else
#define AE_MULZASFD32X16_H1_L0(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASFD32X16_H1_L0)(d1, d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZASD32X16_H1_L0(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASD32X16_H1_L0)(d1, d0)
#else
#define AE_MULZASD32X16_H1_L0(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASD32X16_H1_L0)(d1, d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZASFD32X16_H1_L0_S2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASFD32X16_H1_L0_S2)(d1, d0)
#else
#define AE_MULZASFD32X16_H1_L0_S2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASFD32X16_H1_L0_S2)(d1, d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZASD32X16_H1_L0_S2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASD32X16_H1_L0_S2)(d1, d0)
#else
#define AE_MULZASD32X16_H1_L0_S2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASD32X16_H1_L0_S2)(d1, d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZSAFD32X16_H3_L2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAFD32X16_H3_L2)(d1, d0)
#else
#define AE_MULZSAFD32X16_H3_L2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAFD32X16_H3_L2)(d1, d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZSAD32X16_H3_L2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAD32X16_H3_L2)(d1, d0)
#else
#define AE_MULZSAD32X16_H3_L2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAD32X16_H3_L2)(d1, d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZSAFD32X16_H3_L2_S2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAFD32X16_H3_L2_S2)(d1, d0)
#else
#define AE_MULZSAFD32X16_H3_L2_S2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAFD32X16_H3_L2_S2)(d1, d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZSAD32X16_H3_L2_S2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAD32X16_H3_L2_S2)(d1, d0)
#else
#define AE_MULZSAD32X16_H3_L2_S2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAD32X16_H3_L2_S2)(d1, d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZSAFD32X16_H1_L0(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAFD32X16_H1_L0)(d1, d0)
#else
#define AE_MULZSAFD32X16_H1_L0(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAFD32X16_H1_L0)(d1, d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZSAD32X16_H1_L0(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAD32X16_H1_L0)(d1, d0)
#else
#define AE_MULZSAD32X16_H1_L0(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAD32X16_H1_L0)(d1, d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZSAFD32X16_H1_L0_S2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAFD32X16_H1_L0_S2)(d1, d0)
#else
#define AE_MULZSAFD32X16_H1_L0_S2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAFD32X16_H1_L0_S2)(d1, d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZSAD32X16_H1_L0_S2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAD32X16_H1_L0_S2)(d1, d0)
#else
#define AE_MULZSAD32X16_H1_L0_S2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAD32X16_H1_L0_S2)(d1, d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZSSFD32X16_H3_L2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSFD32X16_H3_L2)(d1, d0)
#else
#define AE_MULZSSFD32X16_H3_L2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSFD32X16_H3_L2)(d1, d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZSSD32X16_H3_L2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSD32X16_H3_L2)(d1, d0)
#else
#define AE_MULZSSD32X16_H3_L2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSD32X16_H3_L2)(d1, d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZSSFD32X16_H3_L2_S2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSFD32X16_H3_L2_S2)(d1, d0)
#else
#define AE_MULZSSFD32X16_H3_L2_S2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSFD32X16_H3_L2_S2)(d1, d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZSSD32X16_H3_L2_S2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSD32X16_H3_L2_S2)(d1, d0)
#else
#define AE_MULZSSD32X16_H3_L2_S2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSD32X16_H3_L2_S2)(d1, d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZSSFD32X16_H1_L0(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSFD32X16_H1_L0)(d1, d0)
#else
#define AE_MULZSSFD32X16_H1_L0(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSFD32X16_H1_L0)(d1, d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZSSD32X16_H1_L0(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSD32X16_H1_L0)(d1, d0)
#else
#define AE_MULZSSD32X16_H1_L0(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSD32X16_H1_L0)(d1, d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZSSFD32X16_H1_L0_S2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSFD32X16_H1_L0_S2)(d1, d0)
#else
#define AE_MULZSSFD32X16_H1_L0_S2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSFD32X16_H1_L0_S2)(d1, d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZSSD32X16_H1_L0_S2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSD32X16_H1_L0_S2)(d1, d0)
#else
#define AE_MULZSSD32X16_H1_L0_S2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSD32X16_H1_L0_S2)(d1, d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZAAFD32X16_H2_L3(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAFD32X16_H2_L3)(d1, d0)
#else
#define AE_MULZAAFD32X16_H2_L3(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAFD32X16_H2_L3)(d1, d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZAAFD32X16_H0_L1(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAFD32X16_H0_L1)(d1, d0)
#else
#define AE_MULZAAFD32X16_H0_L1(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAFD32X16_H0_L1)(d1, d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAAFD32X16_H2_L3(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAFD32X16_H2_L3)(d, d1, d0)
#else
#define AE_MULAAFD32X16_H2_L3(d, d1, d0) { \
	ae_f64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAFD32X16_H2_L3)(__d, d1, d0); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAAFD32X16_H0_L1(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAFD32X16_H0_L1)(d, d1, d0)
#else
#define AE_MULAAFD32X16_H0_L1(d, d1, d0) { \
	ae_f64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAFD32X16_H0_L1)(__d, d1, d0); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZAAD32X16_H2_L3(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAD32X16_H2_L3)(d1, d0)
#else
#define AE_MULZAAD32X16_H2_L3(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAD32X16_H2_L3)(d1, d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZAAD32X16_H0_L1(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAD32X16_H0_L1)(d1, d0)
#else
#define AE_MULZAAD32X16_H0_L1(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAD32X16_H0_L1)(d1, d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAAD32X16_H2_L3(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAD32X16_H2_L3)(d, d1, d0)
#else
#define AE_MULAAD32X16_H2_L3(d, d1, d0) { \
	ae_int64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAD32X16_H2_L3)(__d, d1, d0); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAAD32X16_H0_L1(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAD32X16_H0_L1)(d, d1, d0)
#else
#define AE_MULAAD32X16_H0_L1(d, d1, d0) { \
	ae_int64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAD32X16_H0_L1)(__d, d1, d0); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZAAFD32X16_H2_L3_S2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAFD32X16_H2_L3_S2)(d1, d0)
#else
#define AE_MULZAAFD32X16_H2_L3_S2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAFD32X16_H2_L3_S2)(d1, d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZAAFD32X16_H0_L1_S2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAFD32X16_H0_L1_S2)(d1, d0)
#else
#define AE_MULZAAFD32X16_H0_L1_S2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAFD32X16_H0_L1_S2)(d1, d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAAFD32X16_H2_L3_S2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAFD32X16_H2_L3_S2)(d, d1, d0)
#else
#define AE_MULAAFD32X16_H2_L3_S2(d, d1, d0) { \
	ae_f64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAFD32X16_H2_L3_S2)(__d, d1, d0); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAAFD32X16_H0_L1_S2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAFD32X16_H0_L1_S2)(d, d1, d0)
#else
#define AE_MULAAFD32X16_H0_L1_S2(d, d1, d0) { \
	ae_f64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAFD32X16_H0_L1_S2)(__d, d1, d0); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZAAD32X16_H2_L3_S2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAD32X16_H2_L3_S2)(d1, d0)
#else
#define AE_MULZAAD32X16_H2_L3_S2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAD32X16_H2_L3_S2)(d1, d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZAAD32X16_H0_L1_S2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAD32X16_H0_L1_S2)(d1, d0)
#else
#define AE_MULZAAD32X16_H0_L1_S2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAD32X16_H0_L1_S2)(d1, d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAAD32X16_H2_L3_S2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAD32X16_H2_L3_S2)(d, d1, d0)
#else
#define AE_MULAAD32X16_H2_L3_S2(d, d1, d0) { \
	ae_int64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAD32X16_H2_L3_S2)(__d, d1, d0); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAAD32X16_H0_L1_S2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAD32X16_H0_L1_S2)(d, d1, d0)
#else
#define AE_MULAAD32X16_H0_L1_S2(d, d1, d0) { \
	ae_int64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAD32X16_H0_L1_S2)(__d, d1, d0); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULP32X16X2_H(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULP32X16X2_H)(d0, d1)
#else
#define AE_MULP32X16X2_H(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULP32X16X2_H)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULFP32X16X2RS_H(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFP32X16X2RS_H)(d0, d1)
#else
#define AE_MULFP32X16X2RS_H(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFP32X16X2RS_H)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULFP32X16X2RAS_H(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFP32X16X2RAS_H)(d0, d1)
#else
#define AE_MULFP32X16X2RAS_H(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFP32X16X2RAS_H)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULFP32X16X2RS_H_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFP32X16X2RS_H_S2)(d0, d1)
#else
#define AE_MULFP32X16X2RS_H_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFP32X16X2RS_H_S2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULFP32X16X2RAS_H_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFP32X16X2RAS_H_S2)(d0, d1)
#else
#define AE_MULFP32X16X2RAS_H_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFP32X16X2RAS_H_S2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULP32X16X2_L(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULP32X16X2_L)(d0, d1)
#else
#define AE_MULP32X16X2_L(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULP32X16X2_L)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULFP32X16X2RS_L(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFP32X16X2RS_L)(d0, d1)
#else
#define AE_MULFP32X16X2RS_L(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFP32X16X2RS_L)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULFP32X16X2RAS_L(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFP32X16X2RAS_L)(d0, d1)
#else
#define AE_MULFP32X16X2RAS_L(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFP32X16X2RAS_L)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULFP32X16X2RS_L_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFP32X16X2RS_L_S2)(d0, d1)
#else
#define AE_MULFP32X16X2RS_L_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFP32X16X2RS_L_S2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULFP32X16X2RAS_L_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFP32X16X2RAS_L_S2)(d0, d1)
#else
#define AE_MULFP32X16X2RAS_L_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFP32X16X2RAS_L_S2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAP32X16X2_H(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAP32X16X2_H)(d, d0, d1)
#else
#define AE_MULAP32X16X2_H(d, d0, d1) { \
	ae_int32x2 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAP32X16X2_H)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAFP32X16X2RS_H(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFP32X16X2RS_H)(d, d0, d1)
#else
#define AE_MULAFP32X16X2RS_H(d, d0, d1) { \
	ae_f32x2 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFP32X16X2RS_H)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAFP32X16X2RAS_H(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFP32X16X2RAS_H)(d, d0, d1)
#else
#define AE_MULAFP32X16X2RAS_H(d, d0, d1) { \
	ae_f32x2 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFP32X16X2RAS_H)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAFP32X16X2RS_H_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFP32X16X2RS_H_S2)(d, d0, d1)
#else
#define AE_MULAFP32X16X2RS_H_S2(d, d0, d1) { \
	ae_f32x2 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFP32X16X2RS_H_S2)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAFP32X16X2RAS_H_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFP32X16X2RAS_H_S2)(d, d0, d1)
#else
#define AE_MULAFP32X16X2RAS_H_S2(d, d0, d1) { \
	ae_f32x2 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFP32X16X2RAS_H_S2)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAP32X16X2_L(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAP32X16X2_L)(d, d0, d1)
#else
#define AE_MULAP32X16X2_L(d, d0, d1) { \
	ae_int32x2 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAP32X16X2_L)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAFP32X16X2RS_L(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFP32X16X2RS_L)(d, d0, d1)
#else
#define AE_MULAFP32X16X2RS_L(d, d0, d1) { \
	ae_f32x2 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFP32X16X2RS_L)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAFP32X16X2RAS_L(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFP32X16X2RAS_L)(d, d0, d1)
#else
#define AE_MULAFP32X16X2RAS_L(d, d0, d1) { \
	ae_f32x2 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFP32X16X2RAS_L)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAFP32X16X2RS_L_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFP32X16X2RS_L_S2)(d, d0, d1)
#else
#define AE_MULAFP32X16X2RS_L_S2(d, d0, d1) { \
	ae_f32x2 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFP32X16X2RS_L_S2)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAFP32X16X2RAS_L_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFP32X16X2RAS_L_S2)(d, d0, d1)
#else
#define AE_MULAFP32X16X2RAS_L_S2(d, d0, d1) { \
	ae_f32x2 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFP32X16X2RAS_L_S2)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSP32X16X2_H(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSP32X16X2_H)(d, d0, d1)
#else
#define AE_MULSP32X16X2_H(d, d0, d1) { \
	ae_int32x2 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSP32X16X2_H)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSFP32X16X2RS_H(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFP32X16X2RS_H)(d, d0, d1)
#else
#define AE_MULSFP32X16X2RS_H(d, d0, d1) { \
	ae_f32x2 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFP32X16X2RS_H)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSFP32X16X2RAS_H(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFP32X16X2RAS_H)(d, d0, d1)
#else
#define AE_MULSFP32X16X2RAS_H(d, d0, d1) { \
	ae_f32x2 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFP32X16X2RAS_H)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSFP32X16X2RS_H_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFP32X16X2RS_H_S2)(d, d0, d1)
#else
#define AE_MULSFP32X16X2RS_H_S2(d, d0, d1) { \
	ae_f32x2 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFP32X16X2RS_H_S2)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSFP32X16X2RAS_H_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFP32X16X2RAS_H_S2)(d, d0, d1)
#else
#define AE_MULSFP32X16X2RAS_H_S2(d, d0, d1) { \
	ae_f32x2 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFP32X16X2RAS_H_S2)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSP32X16X2_L(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSP32X16X2_L)(d, d0, d1)
#else
#define AE_MULSP32X16X2_L(d, d0, d1) { \
	ae_int32x2 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSP32X16X2_L)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSFP32X16X2RS_L(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFP32X16X2RS_L)(d, d0, d1)
#else
#define AE_MULSFP32X16X2RS_L(d, d0, d1) { \
	ae_f32x2 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFP32X16X2RS_L)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSFP32X16X2RAS_L(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFP32X16X2RAS_L)(d, d0, d1)
#else
#define AE_MULSFP32X16X2RAS_L(d, d0, d1) { \
	ae_f32x2 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFP32X16X2RAS_L)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSFP32X16X2RS_L_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFP32X16X2RS_L_S2)(d, d0, d1)
#else
#define AE_MULSFP32X16X2RS_L_S2(d, d0, d1) { \
	ae_f32x2 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFP32X16X2RS_L_S2)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSFP32X16X2RAS_L_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFP32X16X2RAS_L_S2)(d, d0, d1)
#else
#define AE_MULSFP32X16X2RAS_L_S2(d, d0, d1) { \
	ae_f32x2 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFP32X16X2RAS_L_S2)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULP32X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULP32X2)(d0, d1)
#else
#define AE_MULP32X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULP32X2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULFP32X2RS(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFP32X2RS)(d0, d1)
#else
#define AE_MULFP32X2RS(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFP32X2RS)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULFP32X2RAS(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFP32X2RAS)(d0, d1)
#else
#define AE_MULFP32X2RAS(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFP32X2RAS)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAP32X2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAP32X2)(d, d0, d1)
#else
#define AE_MULAP32X2(d, d0, d1) { \
	ae_int32x2 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAP32X2)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAFP32X2RS(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFP32X2RS)(d, d0, d1)
#else
#define AE_MULAFP32X2RS(d, d0, d1) { \
	ae_f32x2 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFP32X2RS)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAFP32X2RAS(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFP32X2RAS)(d, d0, d1)
#else
#define AE_MULAFP32X2RAS(d, d0, d1) { \
	ae_f32x2 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFP32X2RAS)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSP32X2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSP32X2)(d, d0, d1)
#else
#define AE_MULSP32X2(d, d0, d1) { \
	ae_int32x2 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSP32X2)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSFP32X2RS(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFP32X2RS)(d, d0, d1)
#else
#define AE_MULSFP32X2RS(d, d0, d1) { \
	ae_f32x2 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFP32X2RS)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSFP32X2RAS(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFP32X2RAS)(d, d0, d1)
#else
#define AE_MULSFP32X2RAS(d, d0, d1) { \
	ae_f32x2 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFP32X2RAS)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULFP16X4S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFP16X4S)(d0, d1)
#else
#define AE_MULFP16X4S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFP16X4S)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULFP16X4RAS(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFP16X4RAS)(d0, d1)
#else
#define AE_MULFP16X4RAS(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFP16X4RAS)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULC24(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULC24)(d0, d1)
#else
#define AE_MULC24(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULC24)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULFC24RA(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFC24RA)(d0, d1)
#else
#define AE_MULFC24RA(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFC24RA)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULC32X16_L(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULC32X16_L)(d0, d1)
#else
#define AE_MULC32X16_L(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULC32X16_L)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULFC32X16RAS_L(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFC32X16RAS_L)(d0, d1)
#else
#define AE_MULFC32X16RAS_L(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFC32X16RAS_L)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULC32X16_H(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULC32X16_H)(d0, d1)
#else
#define AE_MULC32X16_H(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULC32X16_H)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULFC32X16RAS_H(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFC32X16RAS_H)(d0, d1)
#else
#define AE_MULFC32X16RAS_H(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFC32X16RAS_H)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAC24(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAC24)(d, d0, d1)
#else
#define AE_MULAC24(d, d0, d1) { \
	ae_int32x2 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAC24)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAFC24RA(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFC24RA)(d, d0, d1)
#else
#define AE_MULAFC24RA(d, d0, d1) { \
	ae_f32x2 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFC24RA)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAC32X16_L(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAC32X16_L)(d, d0, d1)
#else
#define AE_MULAC32X16_L(d, d0, d1) { \
	ae_int32x2 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAC32X16_L)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAFC32X16RAS_L(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFC32X16RAS_L)(d, d0, d1)
#else
#define AE_MULAFC32X16RAS_L(d, d0, d1) { \
	ae_f32x2 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFC32X16RAS_L)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAC32X16_H(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAC32X16_H)(d, d0, d1)
#else
#define AE_MULAC32X16_H(d, d0, d1) { \
	ae_int32x2 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAC32X16_H)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAFC32X16RAS_H(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFC32X16RAS_H)(d, d0, d1)
#else
#define AE_MULAFC32X16RAS_H(d, d0, d1) { \
	ae_f32x2 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFC32X16RAS_H)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULF16X4SS(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF16X4SS)(d0, d1, d2, d3)
#else
#define AE_MULF16X4SS(d0, d1, d2, d3) { \
	ae_f32x2 __d0; \
	ae_f32x2 __d1; \
	CSTUB_(_TIE_xt_hifi2_AE_MULF16X4SS)(__d0, __d1, d2, d3); \
	(d0) = __d0; \
	(d1) = __d1; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAF16X4SS(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF16X4SS)(d0, d1, d2, d3)
#else
#define AE_MULAF16X4SS(d0, d1, d2, d3) { \
	ae_f32x2 __d0 = d0; \
	ae_f32x2 __d1 = d1; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF16X4SS)(__d0, __d1, d2, d3); \
	(d0) = __d0; \
	(d1) = __d1; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSF16X4SS(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF16X4SS)(d0, d1, d2, d3)
#else
#define AE_MULSF16X4SS(d0, d1, d2, d3) { \
	ae_f32x2 __d0 = d0; \
	ae_f32x2 __d1 = d1; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF16X4SS)(__d0, __d1, d2, d3); \
	(d0) = __d0; \
	(d1) = __d1; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MUL16X4(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MUL16X4)(d0, d1, d2, d3)
#else
#define AE_MUL16X4(d0, d1, d2, d3) { \
	ae_int32x2 __d0; \
	ae_int32x2 __d1; \
	CSTUB_(_TIE_xt_hifi2_AE_MUL16X4)(__d0, __d1, d2, d3); \
	(d0) = __d0; \
	(d1) = __d1; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULA16X4(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULA16X4)(d0, d1, d2, d3)
#else
#define AE_MULA16X4(d0, d1, d2, d3) { \
	ae_int32x2 __d0 = d0; \
	ae_int32x2 __d1 = d1; \
	CSTUB_(_TIE_xt_hifi2_AE_MULA16X4)(__d0, __d1, d2, d3); \
	(d0) = __d0; \
	(d1) = __d1; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULS16X4(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULS16X4)(d0, d1, d2, d3)
#else
#define AE_MULS16X4(d0, d1, d2, d3) { \
	ae_int32x2 __d0 = d0; \
	ae_int32x2 __d1 = d1; \
	CSTUB_(_TIE_xt_hifi2_AE_MULS16X4)(__d0, __d1, d2, d3); \
	(d0) = __d0; \
	(d1) = __d1; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULFD24X2_FIR_H(q0, q1, d0, d1, c) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFD24X2_FIR_H)(q0, q1, d0, d1, c)
#else
#define AE_MULFD24X2_FIR_H(q0, q1, d0, d1, c) { \
	ae_f64 __q0; \
	ae_f64 __q1; \
	CSTUB_(_TIE_xt_hifi2_AE_MULFD24X2_FIR_H)(__q0, __q1, d0, d1, c); \
	(q0) = __q0; \
	(q1) = __q1; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULFD24X2_FIR_L(q0, q1, d0, d1, c) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFD24X2_FIR_L)(q0, q1, d0, d1, c)
#else
#define AE_MULFD24X2_FIR_L(q0, q1, d0, d1, c) { \
	ae_f64 __q0; \
	ae_f64 __q1; \
	CSTUB_(_TIE_xt_hifi2_AE_MULFD24X2_FIR_L)(__q0, __q1, d0, d1, c); \
	(q0) = __q0; \
	(q1) = __q1; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULFD32X16X2_FIR_HH(q0, q1, d0, d1, c) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFD32X16X2_FIR_HH)(q0, q1, d0, d1, c)
#else
#define AE_MULFD32X16X2_FIR_HH(q0, q1, d0, d1, c) { \
	ae_f64 __q0; \
	ae_f64 __q1; \
	CSTUB_(_TIE_xt_hifi2_AE_MULFD32X16X2_FIR_HH)(__q0, __q1, d0, d1, c); \
	(q0) = __q0; \
	(q1) = __q1; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULFD32X16X2_FIR_HL(q0, q1, d0, d1, c) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFD32X16X2_FIR_HL)(q0, q1, d0, d1, c)
#else
#define AE_MULFD32X16X2_FIR_HL(q0, q1, d0, d1, c) { \
	ae_f64 __q0; \
	ae_f64 __q1; \
	CSTUB_(_TIE_xt_hifi2_AE_MULFD32X16X2_FIR_HL)(__q0, __q1, d0, d1, c); \
	(q0) = __q0; \
	(q1) = __q1; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULFD32X16X2_FIR_LH(q0, q1, d0, d1, c) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFD32X16X2_FIR_LH)(q0, q1, d0, d1, c)
#else
#define AE_MULFD32X16X2_FIR_LH(q0, q1, d0, d1, c) { \
	ae_f64 __q0; \
	ae_f64 __q1; \
	CSTUB_(_TIE_xt_hifi2_AE_MULFD32X16X2_FIR_LH)(__q0, __q1, d0, d1, c); \
	(q0) = __q0; \
	(q1) = __q1; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULFD32X16X2_FIR_LL(q0, q1, d0, d1, c) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFD32X16X2_FIR_LL)(q0, q1, d0, d1, c)
#else
#define AE_MULFD32X16X2_FIR_LL(q0, q1, d0, d1, c) { \
	ae_f64 __q0; \
	ae_f64 __q1; \
	CSTUB_(_TIE_xt_hifi2_AE_MULFD32X16X2_FIR_LL)(__q0, __q1, d0, d1, c); \
	(q0) = __q0; \
	(q1) = __q1; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAFD24X2_FIR_H(q0, q1, d0, d1, c) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFD24X2_FIR_H)(q0, q1, d0, d1, c)
#else
#define AE_MULAFD24X2_FIR_H(q0, q1, d0, d1, c) { \
	ae_f64 __q0 = q0; \
	ae_f64 __q1 = q1; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFD24X2_FIR_H)(__q0, __q1, d0, d1, c); \
	(q0) = __q0; \
	(q1) = __q1; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAFD24X2_FIR_L(q0, q1, d0, d1, c) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFD24X2_FIR_L)(q0, q1, d0, d1, c)
#else
#define AE_MULAFD24X2_FIR_L(q0, q1, d0, d1, c) { \
	ae_f64 __q0 = q0; \
	ae_f64 __q1 = q1; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFD24X2_FIR_L)(__q0, __q1, d0, d1, c); \
	(q0) = __q0; \
	(q1) = __q1; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAFD32X16X2_FIR_HH(q0, q1, d0, d1, c) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFD32X16X2_FIR_HH)(q0, q1, d0, d1, c)
#else
#define AE_MULAFD32X16X2_FIR_HH(q0, q1, d0, d1, c) { \
	ae_f64 __q0 = q0; \
	ae_f64 __q1 = q1; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFD32X16X2_FIR_HH)(__q0, __q1, d0, d1, c); \
	(q0) = __q0; \
	(q1) = __q1; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAFD32X16X2_FIR_HL(q0, q1, d0, d1, c) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFD32X16X2_FIR_HL)(q0, q1, d0, d1, c)
#else
#define AE_MULAFD32X16X2_FIR_HL(q0, q1, d0, d1, c) { \
	ae_f64 __q0 = q0; \
	ae_f64 __q1 = q1; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFD32X16X2_FIR_HL)(__q0, __q1, d0, d1, c); \
	(q0) = __q0; \
	(q1) = __q1; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAFD32X16X2_FIR_LH(q0, q1, d0, d1, c) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFD32X16X2_FIR_LH)(q0, q1, d0, d1, c)
#else
#define AE_MULAFD32X16X2_FIR_LH(q0, q1, d0, d1, c) { \
	ae_f64 __q0 = q0; \
	ae_f64 __q1 = q1; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFD32X16X2_FIR_LH)(__q0, __q1, d0, d1, c); \
	(q0) = __q0; \
	(q1) = __q1; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAFD32X16X2_FIR_LL(q0, q1, d0, d1, c) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFD32X16X2_FIR_LL)(q0, q1, d0, d1, c)
#else
#define AE_MULAFD32X16X2_FIR_LL(q0, q1, d0, d1, c) { \
	ae_f64 __q0 = q0; \
	ae_f64 __q1 = q1; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFD32X16X2_FIR_LL)(__q0, __q1, d0, d1, c); \
	(q0) = __q0; \
	(q1) = __q1; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_DIV64D32_H(d, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_DIV64D32_H)(d, d0)
#else
#define AE_DIV64D32_H(d, d0) { \
	ae_int64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_DIV64D32_H)(__d, d0); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_DIV64D32_L(d, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_DIV64D32_L)(d, d0)
#else
#define AE_DIV64D32_L(d, d0) { \
	ae_int64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_DIV64D32_L)(__d, d0); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_LB(ba) \
	CSTUB_(_TIE_xt_hifi2_AE_LB)(ba)
#else
#define AE_LB(ba) \
	CSTUB_(_TIE_xt_hifi2_AE_LB)(ba)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_LBI(ba) \
	CSTUB_(_TIE_xt_hifi2_AE_LBI)(ba)
#else
#define AE_LBI(ba) \
	CSTUB_(_TIE_xt_hifi2_AE_LBI)(ba)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_LBK(a0, ba) \
	CSTUB_(_TIE_xt_hifi2_AE_LBK)(a0, ba)
#else
#define AE_LBK(a0, ba) \
	CSTUB_(_TIE_xt_hifi2_AE_LBK)(a0, ba)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_LBKI(a0, ba) \
	CSTUB_(_TIE_xt_hifi2_AE_LBKI)(a0, ba)
#else
#define AE_LBKI(a0, ba) \
	CSTUB_(_TIE_xt_hifi2_AE_LBKI)(a0, ba)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_LBS(ba) \
	CSTUB_(_TIE_xt_hifi2_AE_LBS)(ba)
#else
#define AE_LBS(ba) \
	CSTUB_(_TIE_xt_hifi2_AE_LBS)(ba)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_LBSI(ba) \
	CSTUB_(_TIE_xt_hifi2_AE_LBSI)(ba)
#else
#define AE_LBSI(ba) \
	CSTUB_(_TIE_xt_hifi2_AE_LBSI)(ba)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_DB(a, count) \
	CSTUB_(_TIE_xt_hifi2_AE_DB)((const unsigned short **)&(a), count)
#else
#define AE_DB(a, count) \
	CSTUB_(_TIE_xt_hifi2_AE_DB)((const unsigned short **)&(a), count)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_DBI(a, count) \
	CSTUB_(_TIE_xt_hifi2_AE_DBI)((const unsigned short **)&(a), count)
#else
#define AE_DBI(a, count) \
	CSTUB_(_TIE_xt_hifi2_AE_DBI)((const unsigned short **)&(a), count)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_DB_IC(a, count) \
	CSTUB_(_TIE_xt_hifi2_AE_DB_IC)((const unsigned short **)&(a), count)
#else
#define AE_DB_IC(a, count) \
	CSTUB_(_TIE_xt_hifi2_AE_DB_IC)((const unsigned short **)&(a), count)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_DB_XC(a, count) \
	CSTUB_(_TIE_xt_hifi2_AE_DB_XC)((const unsigned short **)&(a), count)
#else
#define AE_DB_XC(a, count) \
	CSTUB_(_TIE_xt_hifi2_AE_DB_XC)((const unsigned short **)&(a), count)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_DBI_IC(a, count) \
	CSTUB_(_TIE_xt_hifi2_AE_DBI_IC)((const unsigned short **)&(a), count)
#else
#define AE_DBI_IC(a, count) \
	CSTUB_(_TIE_xt_hifi2_AE_DBI_IC)((const unsigned short **)&(a), count)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_DBI_XC(a, count) \
	CSTUB_(_TIE_xt_hifi2_AE_DBI_XC)((const unsigned short **)&(a), count)
#else
#define AE_DBI_XC(a, count) \
	CSTUB_(_TIE_xt_hifi2_AE_DBI_XC)((const unsigned short **)&(a), count)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_DB_IP(a, count) \
	CSTUB_(_TIE_xt_hifi2_AE_DB_IP)((const unsigned short **)&(a), count)
#else
#define AE_DB_IP(a, count) \
	CSTUB_(_TIE_xt_hifi2_AE_DB_IP)((const unsigned short **)&(a), count)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_DBI_IP(a, count) \
	CSTUB_(_TIE_xt_hifi2_AE_DBI_IP)((const unsigned short **)&(a), count)
#else
#define AE_DBI_IP(a, count) \
	CSTUB_(_TIE_xt_hifi2_AE_DBI_IP)((const unsigned short **)&(a), count)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SEXT32(d0, bit) \
	CSTUB_(_TIE_xt_hifi2_AE_SEXT32)(d0, bit)
#else
#define AE_SEXT32(d0, bit) \
	CSTUB_(_TIE_xt_hifi2_AE_SEXT32)(d0, bit)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_p16s_move(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_p16s_move)(d0)
#else
#define ae_p16s_move(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_p16s_move)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_p16x2s_move(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_p16x2s_move)(d0)
#else
#define ae_p16x2s_move(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_p16x2s_move)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int24_move(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_int24_move)(d0)
#else
#define ae_int24_move(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_int24_move)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_p24s_move(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_p24s_move)(d0)
#else
#define ae_p24s_move(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_p24s_move)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int16_move(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_int16_move)(d0)
#else
#define ae_int16_move(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_int16_move)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int16x4_move(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_int16x4_move)(d0)
#else
#define ae_int16x4_move(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_int16x4_move)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_f16_move(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_f16_move)(d0)
#else
#define ae_f16_move(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_f16_move)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_f16x4_move(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_f16x4_move)(d0)
#else
#define ae_f16x4_move(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_f16x4_move)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int32_move(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_int32_move)(d0)
#else
#define ae_int32_move(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_int32_move)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_f32_move(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_f32_move)(d0)
#else
#define ae_f32_move(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_f32_move)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_p24x2s_move(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2s_move)(d0)
#else
#define ae_p24x2s_move(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2s_move)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int24x2_move(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_int24x2_move)(d0)
#else
#define ae_int24x2_move(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_int24x2_move)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_f24_move(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_f24_move)(d0)
#else
#define ae_f24_move(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_f24_move)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_p24f_move(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_p24f_move)(d0)
#else
#define ae_p24f_move(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_p24f_move)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_p24x2f_move(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2f_move)(d0)
#else
#define ae_p24x2f_move(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2f_move)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_f24x2_move(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_f24x2_move)(d0)
#else
#define ae_f24x2_move(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_f24x2_move)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int32x2_move(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x2_move)(d0)
#else
#define ae_int32x2_move(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x2_move)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_f32x2_move(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_f32x2_move)(d0)
#else
#define ae_f32x2_move(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_f32x2_move)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_q32s_move(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_q32s_move)(d0)
#else
#define ae_q32s_move(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_q32s_move)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_q56s_move(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_q56s_move)(d0)
#else
#define ae_q56s_move(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_q56s_move)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int64_move(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_int64_move)(d0)
#else
#define ae_int64_move(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_int64_move)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_f64_move(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_f64_move)(d0)
#else
#define ae_f64_move(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_f64_move)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_p24x2f_rtor_ae_p24x2s(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2f_rtor_ae_p24x2s)(d0)
#else
#define ae_p24x2f_rtor_ae_p24x2s(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2f_rtor_ae_p24x2s)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_p24x2f_rtor_ae_p16x2s(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2f_rtor_ae_p16x2s)(d0)
#else
#define ae_p24x2f_rtor_ae_p16x2s(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2f_rtor_ae_p16x2s)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_p24x2f_rtor_ae_p16s(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2f_rtor_ae_p16s)(d0)
#else
#define ae_p24x2f_rtor_ae_p16s(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2f_rtor_ae_p16s)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_p24x2f_rtor_ae_p24s(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2f_rtor_ae_p24s)(d0)
#else
#define ae_p24x2f_rtor_ae_p24s(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2f_rtor_ae_p24s)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_p24x2f_rtor_ae_p24f(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2f_rtor_ae_p24f)(d0)
#else
#define ae_p24x2f_rtor_ae_p24f(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2f_rtor_ae_p24f)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_p24x2s_rtor_ae_p24x2f(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2s_rtor_ae_p24x2f)(d0)
#else
#define ae_p24x2s_rtor_ae_p24x2f(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2s_rtor_ae_p24x2f)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_p24x2s_rtor_ae_p16x2s(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2s_rtor_ae_p16x2s)(d0)
#else
#define ae_p24x2s_rtor_ae_p16x2s(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2s_rtor_ae_p16x2s)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_p24x2s_rtor_ae_p16s(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2s_rtor_ae_p16s)(d0)
#else
#define ae_p24x2s_rtor_ae_p16s(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2s_rtor_ae_p16s)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_p24x2s_rtor_ae_p24s(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2s_rtor_ae_p24s)(d0)
#else
#define ae_p24x2s_rtor_ae_p24s(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2s_rtor_ae_p24s)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_p24x2s_rtor_ae_p24f(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2s_rtor_ae_p24f)(d0)
#else
#define ae_p24x2s_rtor_ae_p24f(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2s_rtor_ae_p24f)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_p24s_rtor_ae_p24x2f(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_p24s_rtor_ae_p24x2f)(d0)
#else
#define ae_p24s_rtor_ae_p24x2f(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_p24s_rtor_ae_p24x2f)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_p24s_rtor_ae_p24x2s(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_p24s_rtor_ae_p24x2s)(d0)
#else
#define ae_p24s_rtor_ae_p24x2s(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_p24s_rtor_ae_p24x2s)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_p24f_rtor_ae_p24x2f(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_p24f_rtor_ae_p24x2f)(d0)
#else
#define ae_p24f_rtor_ae_p24x2f(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_p24f_rtor_ae_p24x2f)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_p24f_rtor_ae_p24x2s(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_p24f_rtor_ae_p24x2s)(d0)
#else
#define ae_p24f_rtor_ae_p24x2s(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_p24f_rtor_ae_p24x2s)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_q56s_rtor_ae_q32s(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_q56s_rtor_ae_q32s)(d0)
#else
#define ae_q56s_rtor_ae_q32s(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_q56s_rtor_ae_q32s)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_CVTP24A16(ai) \
	CSTUB_(_TIE_xt_hifi2_AE_CVTP24A16)(ai)
#else
#define AE_CVTP24A16(ai) \
	CSTUB_(_TIE_xt_hifi2_AE_CVTP24A16)(ai)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_CVTP24A16X2(ah, al) \
	CSTUB_(_TIE_xt_hifi2_AE_CVTP24A16X2)(ah, al)
#else
#define AE_CVTP24A16X2(ah, al) \
	CSTUB_(_TIE_xt_hifi2_AE_CVTP24A16X2)(ah, al)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVPA24(ai) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVPA24)(ai)
#else
#define AE_MOVPA24(ai) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVPA24)(ai)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_TRUNCP24Q48(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_TRUNCP24Q48)(d0)
#else
#define AE_TRUNCP24Q48(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_TRUNCP24Q48)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_TRUNCI32F64S(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_TRUNCI32F64S)(d0, sa)
#else
#define AE_TRUNCI32F64S(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_TRUNCI32F64S)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_TRUNCA32F64S(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_TRUNCA32F64S)(d0, sa)
#else
#define AE_TRUNCA32F64S(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_TRUNCA32F64S)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_NOTP48(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_NOTP48)(d0)
#else
#define AE_NOTP48(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_NOTP48)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_NOT32(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_NOT32)(d0)
#else
#define AE_NOT32(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_NOT32)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_NOT16(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_NOT16)(d0)
#else
#define AE_NOT16(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_NOT16)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_NOT24(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_NOT24)(d0)
#else
#define AE_NOT24(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_NOT24)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_NOTQ56(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_NOTQ56)(d0)
#else
#define AE_NOTQ56(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_NOTQ56)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_NOT64(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_NOT64)(d0)
#else
#define AE_NOT64(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_NOT64)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_NOT(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_NOT)(d0)
#else
#define AE_NOT(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_NOT)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULF48Q32SP16S_H(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF48Q32SP16S_H)(d0, d1)
#else
#define AE_MULF48Q32SP16S_H(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF48Q32SP16S_H)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULFQ32SP16S_H(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFQ32SP16S_H)(d0, d1)
#else
#define AE_MULFQ32SP16S_H(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFQ32SP16S_H)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULF48Q32SP16U_H(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF48Q32SP16U_H)(d0, d1)
#else
#define AE_MULF48Q32SP16U_H(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF48Q32SP16U_H)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULFQ32SP16U_H(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFQ32SP16U_H)(d0, d1)
#else
#define AE_MULFQ32SP16U_H(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFQ32SP16U_H)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULQ32SP16S_H(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULQ32SP16S_H)(d0, d1)
#else
#define AE_MULQ32SP16S_H(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULQ32SP16S_H)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULQ32SP16U_H(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULQ32SP16U_H)(d0, d1)
#else
#define AE_MULQ32SP16U_H(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULQ32SP16U_H)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAF48Q32SP16S_H(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF48Q32SP16S_H)(d, d0, d1)
#else
#define AE_MULAF48Q32SP16S_H(d, d0, d1) { \
	ae_int64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF48Q32SP16S_H)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAFQ32SP16S_H(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFQ32SP16S_H)(d, d0, d1)
#else
#define AE_MULAFQ32SP16S_H(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFQ32SP16S_H)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAF48Q32SP16U_H(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF48Q32SP16U_H)(d, d0, d1)
#else
#define AE_MULAF48Q32SP16U_H(d, d0, d1) { \
	ae_int64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF48Q32SP16U_H)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAFQ32SP16U_H(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFQ32SP16U_H)(d, d0, d1)
#else
#define AE_MULAFQ32SP16U_H(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFQ32SP16U_H)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAQ32SP16S_H(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAQ32SP16S_H)(d, d0, d1)
#else
#define AE_MULAQ32SP16S_H(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAQ32SP16S_H)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAQ32SP16U_H(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAQ32SP16U_H)(d, d0, d1)
#else
#define AE_MULAQ32SP16U_H(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAQ32SP16U_H)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSF48Q32SP16S_H(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF48Q32SP16S_H)(d, d0, d1)
#else
#define AE_MULSF48Q32SP16S_H(d, d0, d1) { \
	ae_int64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF48Q32SP16S_H)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSFQ32SP16S_H(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFQ32SP16S_H)(d, d0, d1)
#else
#define AE_MULSFQ32SP16S_H(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFQ32SP16S_H)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSF48Q32SP16U_H(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF48Q32SP16U_H)(d, d0, d1)
#else
#define AE_MULSF48Q32SP16U_H(d, d0, d1) { \
	ae_int64 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF48Q32SP16U_H)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSFQ32SP16U_H(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFQ32SP16U_H)(d, d0, d1)
#else
#define AE_MULSFQ32SP16U_H(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFQ32SP16U_H)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSQ32SP16S_H(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSQ32SP16S_H)(d, d0, d1)
#else
#define AE_MULSQ32SP16S_H(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSQ32SP16S_H)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSQ32SP16U_H(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSQ32SP16U_H)(d, d0, d1)
#else
#define AE_MULSQ32SP16U_H(d, d0, d1) { \
	ae_q56s __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULSQ32SP16U_H)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZAAFQ32SP16S_LL(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAFQ32SP16S_LL)(d0, d1, d2, d3)
#else
#define AE_MULZAAFQ32SP16S_LL(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAFQ32SP16S_LL)(d0, d1, d2, d3)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZAAFQ32SP16S_LL_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAFQ32SP16S_LL_S2)(d0, d1, d2, d3)
#else
#define AE_MULZAAFQ32SP16S_LL_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAFQ32SP16S_LL_S2)(d0, d1, d2, d3)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZAAQ32SP16S_LL(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAQ32SP16S_LL)(d0, d1, d2, d3)
#else
#define AE_MULZAAQ32SP16S_LL(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAQ32SP16S_LL)(d0, d1, d2, d3)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZAAQ32SP16S_LL_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAQ32SP16S_LL_S2)(d0, d1, d2, d3)
#else
#define AE_MULZAAQ32SP16S_LL_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAQ32SP16S_LL_S2)(d0, d1, d2, d3)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZAAFQ32SP16U_LL(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAFQ32SP16U_LL)(d0, d1, d2, d3)
#else
#define AE_MULZAAFQ32SP16U_LL(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAFQ32SP16U_LL)(d0, d1, d2, d3)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZAAFQ32SP16U_LL_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAFQ32SP16U_LL_S2)(d0, d1, d2, d3)
#else
#define AE_MULZAAFQ32SP16U_LL_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAFQ32SP16U_LL_S2)(d0, d1, d2, d3)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZAAQ32SP16U_LL(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAQ32SP16U_LL)(d0, d1, d2, d3)
#else
#define AE_MULZAAQ32SP16U_LL(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAQ32SP16U_LL)(d0, d1, d2, d3)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZAAQ32SP16U_LL_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAQ32SP16U_LL_S2)(d0, d1, d2, d3)
#else
#define AE_MULZAAQ32SP16U_LL_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAQ32SP16U_LL_S2)(d0, d1, d2, d3)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZAAFQ32SP16S_HH(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAFQ32SP16S_HH)(d0, d1, d2, d3)
#else
#define AE_MULZAAFQ32SP16S_HH(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAFQ32SP16S_HH)(d0, d1, d2, d3)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZAAFQ32SP16S_HH_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAFQ32SP16S_HH_S2)(d0, d1, d2, d3)
#else
#define AE_MULZAAFQ32SP16S_HH_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAFQ32SP16S_HH_S2)(d0, d1, d2, d3)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZAAQ32SP16S_HH(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAQ32SP16S_HH)(d0, d1, d2, d3)
#else
#define AE_MULZAAQ32SP16S_HH(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAQ32SP16S_HH)(d0, d1, d2, d3)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZAAQ32SP16S_HH_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAQ32SP16S_HH_S2)(d0, d1, d2, d3)
#else
#define AE_MULZAAQ32SP16S_HH_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAQ32SP16S_HH_S2)(d0, d1, d2, d3)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZAAFQ32SP16U_HH(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAFQ32SP16U_HH)(d0, d1, d2, d3)
#else
#define AE_MULZAAFQ32SP16U_HH(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAFQ32SP16U_HH)(d0, d1, d2, d3)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZAAFQ32SP16U_HH_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAFQ32SP16U_HH_S2)(d0, d1, d2, d3)
#else
#define AE_MULZAAFQ32SP16U_HH_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAFQ32SP16U_HH_S2)(d0, d1, d2, d3)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZAAQ32SP16U_HH(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAQ32SP16U_HH)(d0, d1, d2, d3)
#else
#define AE_MULZAAQ32SP16U_HH(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAQ32SP16U_HH)(d0, d1, d2, d3)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZAAQ32SP16U_HH_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAQ32SP16U_HH_S2)(d0, d1, d2, d3)
#else
#define AE_MULZAAQ32SP16U_HH_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAQ32SP16U_HH_S2)(d0, d1, d2, d3)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZAAFQ32SP16S_LH(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAFQ32SP16S_LH)(d0, d1, d2, d3)
#else
#define AE_MULZAAFQ32SP16S_LH(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAFQ32SP16S_LH)(d0, d1, d2, d3)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZAAFQ32SP16S_LH_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAFQ32SP16S_LH_S2)(d0, d1, d2, d3)
#else
#define AE_MULZAAFQ32SP16S_LH_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAFQ32SP16S_LH_S2)(d0, d1, d2, d3)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZAAQ32SP16S_LH(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAQ32SP16S_LH)(d0, d1, d2, d3)
#else
#define AE_MULZAAQ32SP16S_LH(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAQ32SP16S_LH)(d0, d1, d2, d3)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZAAQ32SP16S_LH_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAQ32SP16S_LH_S2)(d0, d1, d2, d3)
#else
#define AE_MULZAAQ32SP16S_LH_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAQ32SP16S_LH_S2)(d0, d1, d2, d3)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZAAFQ32SP16U_LH(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAFQ32SP16U_LH)(d0, d1, d2, d3)
#else
#define AE_MULZAAFQ32SP16U_LH(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAFQ32SP16U_LH)(d0, d1, d2, d3)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZAAFQ32SP16U_LH_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAFQ32SP16U_LH_S2)(d0, d1, d2, d3)
#else
#define AE_MULZAAFQ32SP16U_LH_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAFQ32SP16U_LH_S2)(d0, d1, d2, d3)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZAAQ32SP16U_LH(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAQ32SP16U_LH)(d0, d1, d2, d3)
#else
#define AE_MULZAAQ32SP16U_LH(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAQ32SP16U_LH)(d0, d1, d2, d3)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZAAQ32SP16U_LH_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAQ32SP16U_LH_S2)(d0, d1, d2, d3)
#else
#define AE_MULZAAQ32SP16U_LH_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAQ32SP16U_LH_S2)(d0, d1, d2, d3)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZASFQ32SP16S_LL(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASFQ32SP16S_LL)(d0, d1, d2, d3)
#else
#define AE_MULZASFQ32SP16S_LL(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASFQ32SP16S_LL)(d0, d1, d2, d3)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZASFQ32SP16S_LL_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASFQ32SP16S_LL_S2)(d0, d1, d2, d3)
#else
#define AE_MULZASFQ32SP16S_LL_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASFQ32SP16S_LL_S2)(d0, d1, d2, d3)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZASQ32SP16S_LL(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASQ32SP16S_LL)(d0, d1, d2, d3)
#else
#define AE_MULZASQ32SP16S_LL(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASQ32SP16S_LL)(d0, d1, d2, d3)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZASQ32SP16S_LL_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASQ32SP16S_LL_S2)(d0, d1, d2, d3)
#else
#define AE_MULZASQ32SP16S_LL_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASQ32SP16S_LL_S2)(d0, d1, d2, d3)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZASFQ32SP16U_LL(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASFQ32SP16U_LL)(d0, d1, d2, d3)
#else
#define AE_MULZASFQ32SP16U_LL(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASFQ32SP16U_LL)(d0, d1, d2, d3)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZASFQ32SP16U_LL_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASFQ32SP16U_LL_S2)(d0, d1, d2, d3)
#else
#define AE_MULZASFQ32SP16U_LL_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASFQ32SP16U_LL_S2)(d0, d1, d2, d3)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZASQ32SP16U_LL(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASQ32SP16U_LL)(d0, d1, d2, d3)
#else
#define AE_MULZASQ32SP16U_LL(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASQ32SP16U_LL)(d0, d1, d2, d3)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZASQ32SP16U_LL_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASQ32SP16U_LL_S2)(d0, d1, d2, d3)
#else
#define AE_MULZASQ32SP16U_LL_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASQ32SP16U_LL_S2)(d0, d1, d2, d3)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZASFQ32SP16S_HH(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASFQ32SP16S_HH)(d0, d1, d2, d3)
#else
#define AE_MULZASFQ32SP16S_HH(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASFQ32SP16S_HH)(d0, d1, d2, d3)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZASFQ32SP16S_HH_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASFQ32SP16S_HH_S2)(d0, d1, d2, d3)
#else
#define AE_MULZASFQ32SP16S_HH_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASFQ32SP16S_HH_S2)(d0, d1, d2, d3)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZASQ32SP16S_HH(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASQ32SP16S_HH)(d0, d1, d2, d3)
#else
#define AE_MULZASQ32SP16S_HH(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASQ32SP16S_HH)(d0, d1, d2, d3)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZASQ32SP16S_HH_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASQ32SP16S_HH_S2)(d0, d1, d2, d3)
#else
#define AE_MULZASQ32SP16S_HH_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASQ32SP16S_HH_S2)(d0, d1, d2, d3)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZASFQ32SP16U_HH(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASFQ32SP16U_HH)(d0, d1, d2, d3)
#else
#define AE_MULZASFQ32SP16U_HH(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASFQ32SP16U_HH)(d0, d1, d2, d3)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZASFQ32SP16U_HH_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASFQ32SP16U_HH_S2)(d0, d1, d2, d3)
#else
#define AE_MULZASFQ32SP16U_HH_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASFQ32SP16U_HH_S2)(d0, d1, d2, d3)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZASQ32SP16U_HH(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASQ32SP16U_HH)(d0, d1, d2, d3)
#else
#define AE_MULZASQ32SP16U_HH(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASQ32SP16U_HH)(d0, d1, d2, d3)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZASQ32SP16U_HH_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASQ32SP16U_HH_S2)(d0, d1, d2, d3)
#else
#define AE_MULZASQ32SP16U_HH_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASQ32SP16U_HH_S2)(d0, d1, d2, d3)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZASFQ32SP16S_LH(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASFQ32SP16S_LH)(d0, d1, d2, d3)
#else
#define AE_MULZASFQ32SP16S_LH(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASFQ32SP16S_LH)(d0, d1, d2, d3)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZASFQ32SP16S_LH_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASFQ32SP16S_LH_S2)(d0, d1, d2, d3)
#else
#define AE_MULZASFQ32SP16S_LH_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASFQ32SP16S_LH_S2)(d0, d1, d2, d3)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZASQ32SP16S_LH(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASQ32SP16S_LH)(d0, d1, d2, d3)
#else
#define AE_MULZASQ32SP16S_LH(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASQ32SP16S_LH)(d0, d1, d2, d3)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZASQ32SP16S_LH_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASQ32SP16S_LH_S2)(d0, d1, d2, d3)
#else
#define AE_MULZASQ32SP16S_LH_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASQ32SP16S_LH_S2)(d0, d1, d2, d3)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZASFQ32SP16U_LH(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASFQ32SP16U_LH)(d0, d1, d2, d3)
#else
#define AE_MULZASFQ32SP16U_LH(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASFQ32SP16U_LH)(d0, d1, d2, d3)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZASFQ32SP16U_LH_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASFQ32SP16U_LH_S2)(d0, d1, d2, d3)
#else
#define AE_MULZASFQ32SP16U_LH_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASFQ32SP16U_LH_S2)(d0, d1, d2, d3)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZASQ32SP16U_LH(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASQ32SP16U_LH)(d0, d1, d2, d3)
#else
#define AE_MULZASQ32SP16U_LH(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASQ32SP16U_LH)(d0, d1, d2, d3)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZASQ32SP16U_LH_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASQ32SP16U_LH_S2)(d0, d1, d2, d3)
#else
#define AE_MULZASQ32SP16U_LH_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASQ32SP16U_LH_S2)(d0, d1, d2, d3)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZSAFQ32SP16S_LL(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAFQ32SP16S_LL)(d0, d1, d2, d3)
#else
#define AE_MULZSAFQ32SP16S_LL(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAFQ32SP16S_LL)(d0, d1, d2, d3)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZSAFQ32SP16S_LL_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAFQ32SP16S_LL_S2)(d0, d1, d2, d3)
#else
#define AE_MULZSAFQ32SP16S_LL_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAFQ32SP16S_LL_S2)(d0, d1, d2, d3)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZSAQ32SP16S_LL(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAQ32SP16S_LL)(d0, d1, d2, d3)
#else
#define AE_MULZSAQ32SP16S_LL(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAQ32SP16S_LL)(d0, d1, d2, d3)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZSAQ32SP16S_LL_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAQ32SP16S_LL_S2)(d0, d1, d2, d3)
#else
#define AE_MULZSAQ32SP16S_LL_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAQ32SP16S_LL_S2)(d0, d1, d2, d3)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZSAFQ32SP16U_LL(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAFQ32SP16U_LL)(d0, d1, d2, d3)
#else
#define AE_MULZSAFQ32SP16U_LL(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAFQ32SP16U_LL)(d0, d1, d2, d3)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZSAFQ32SP16U_LL_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAFQ32SP16U_LL_S2)(d0, d1, d2, d3)
#else
#define AE_MULZSAFQ32SP16U_LL_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAFQ32SP16U_LL_S2)(d0, d1, d2, d3)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZSAQ32SP16U_LL(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAQ32SP16U_LL)(d0, d1, d2, d3)
#else
#define AE_MULZSAQ32SP16U_LL(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAQ32SP16U_LL)(d0, d1, d2, d3)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZSAQ32SP16U_LL_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAQ32SP16U_LL_S2)(d0, d1, d2, d3)
#else
#define AE_MULZSAQ32SP16U_LL_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAQ32SP16U_LL_S2)(d0, d1, d2, d3)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZSAFQ32SP16S_HH(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAFQ32SP16S_HH)(d0, d1, d2, d3)
#else
#define AE_MULZSAFQ32SP16S_HH(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAFQ32SP16S_HH)(d0, d1, d2, d3)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZSAFQ32SP16S_HH_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAFQ32SP16S_HH_S2)(d0, d1, d2, d3)
#else
#define AE_MULZSAFQ32SP16S_HH_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAFQ32SP16S_HH_S2)(d0, d1, d2, d3)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZSAQ32SP16S_HH(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAQ32SP16S_HH)(d0, d1, d2, d3)
#else
#define AE_MULZSAQ32SP16S_HH(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAQ32SP16S_HH)(d0, d1, d2, d3)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZSAQ32SP16S_HH_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAQ32SP16S_HH_S2)(d0, d1, d2, d3)
#else
#define AE_MULZSAQ32SP16S_HH_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAQ32SP16S_HH_S2)(d0, d1, d2, d3)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZSAFQ32SP16U_HH(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAFQ32SP16U_HH)(d0, d1, d2, d3)
#else
#define AE_MULZSAFQ32SP16U_HH(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAFQ32SP16U_HH)(d0, d1, d2, d3)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZSAFQ32SP16U_HH_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAFQ32SP16U_HH_S2)(d0, d1, d2, d3)
#else
#define AE_MULZSAFQ32SP16U_HH_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAFQ32SP16U_HH_S2)(d0, d1, d2, d3)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZSAQ32SP16U_HH(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAQ32SP16U_HH)(d0, d1, d2, d3)
#else
#define AE_MULZSAQ32SP16U_HH(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAQ32SP16U_HH)(d0, d1, d2, d3)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZSAQ32SP16U_HH_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAQ32SP16U_HH_S2)(d0, d1, d2, d3)
#else
#define AE_MULZSAQ32SP16U_HH_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAQ32SP16U_HH_S2)(d0, d1, d2, d3)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZSAFQ32SP16S_LH(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAFQ32SP16S_LH)(d0, d1, d2, d3)
#else
#define AE_MULZSAFQ32SP16S_LH(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAFQ32SP16S_LH)(d0, d1, d2, d3)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZSAFQ32SP16S_LH_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAFQ32SP16S_LH_S2)(d0, d1, d2, d3)
#else
#define AE_MULZSAFQ32SP16S_LH_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAFQ32SP16S_LH_S2)(d0, d1, d2, d3)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZSAQ32SP16S_LH(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAQ32SP16S_LH)(d0, d1, d2, d3)
#else
#define AE_MULZSAQ32SP16S_LH(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAQ32SP16S_LH)(d0, d1, d2, d3)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZSAQ32SP16S_LH_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAQ32SP16S_LH_S2)(d0, d1, d2, d3)
#else
#define AE_MULZSAQ32SP16S_LH_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAQ32SP16S_LH_S2)(d0, d1, d2, d3)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZSAFQ32SP16U_LH(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAFQ32SP16U_LH)(d0, d1, d2, d3)
#else
#define AE_MULZSAFQ32SP16U_LH(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAFQ32SP16U_LH)(d0, d1, d2, d3)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZSAFQ32SP16U_LH_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAFQ32SP16U_LH_S2)(d0, d1, d2, d3)
#else
#define AE_MULZSAFQ32SP16U_LH_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAFQ32SP16U_LH_S2)(d0, d1, d2, d3)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZSAQ32SP16U_LH(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAQ32SP16U_LH)(d0, d1, d2, d3)
#else
#define AE_MULZSAQ32SP16U_LH(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAQ32SP16U_LH)(d0, d1, d2, d3)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZSAQ32SP16U_LH_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAQ32SP16U_LH_S2)(d0, d1, d2, d3)
#else
#define AE_MULZSAQ32SP16U_LH_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAQ32SP16U_LH_S2)(d0, d1, d2, d3)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZSSFQ32SP16S_LL(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSFQ32SP16S_LL)(d0, d1, d2, d3)
#else
#define AE_MULZSSFQ32SP16S_LL(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSFQ32SP16S_LL)(d0, d1, d2, d3)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZSSFQ32SP16S_LL_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSFQ32SP16S_LL_S2)(d0, d1, d2, d3)
#else
#define AE_MULZSSFQ32SP16S_LL_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSFQ32SP16S_LL_S2)(d0, d1, d2, d3)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZSSQ32SP16S_LL(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSQ32SP16S_LL)(d0, d1, d2, d3)
#else
#define AE_MULZSSQ32SP16S_LL(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSQ32SP16S_LL)(d0, d1, d2, d3)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZSSQ32SP16S_LL_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSQ32SP16S_LL_S2)(d0, d1, d2, d3)
#else
#define AE_MULZSSQ32SP16S_LL_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSQ32SP16S_LL_S2)(d0, d1, d2, d3)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZSSFQ32SP16U_LL(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSFQ32SP16U_LL)(d0, d1, d2, d3)
#else
#define AE_MULZSSFQ32SP16U_LL(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSFQ32SP16U_LL)(d0, d1, d2, d3)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZSSFQ32SP16U_LL_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSFQ32SP16U_LL_S2)(d0, d1, d2, d3)
#else
#define AE_MULZSSFQ32SP16U_LL_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSFQ32SP16U_LL_S2)(d0, d1, d2, d3)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZSSQ32SP16U_LL(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSQ32SP16U_LL)(d0, d1, d2, d3)
#else
#define AE_MULZSSQ32SP16U_LL(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSQ32SP16U_LL)(d0, d1, d2, d3)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZSSQ32SP16U_LL_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSQ32SP16U_LL_S2)(d0, d1, d2, d3)
#else
#define AE_MULZSSQ32SP16U_LL_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSQ32SP16U_LL_S2)(d0, d1, d2, d3)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZSSFQ32SP16S_HH(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSFQ32SP16S_HH)(d0, d1, d2, d3)
#else
#define AE_MULZSSFQ32SP16S_HH(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSFQ32SP16S_HH)(d0, d1, d2, d3)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZSSFQ32SP16S_HH_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSFQ32SP16S_HH_S2)(d0, d1, d2, d3)
#else
#define AE_MULZSSFQ32SP16S_HH_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSFQ32SP16S_HH_S2)(d0, d1, d2, d3)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZSSQ32SP16S_HH(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSQ32SP16S_HH)(d0, d1, d2, d3)
#else
#define AE_MULZSSQ32SP16S_HH(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSQ32SP16S_HH)(d0, d1, d2, d3)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZSSQ32SP16S_HH_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSQ32SP16S_HH_S2)(d0, d1, d2, d3)
#else
#define AE_MULZSSQ32SP16S_HH_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSQ32SP16S_HH_S2)(d0, d1, d2, d3)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZSSFQ32SP16U_HH(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSFQ32SP16U_HH)(d0, d1, d2, d3)
#else
#define AE_MULZSSFQ32SP16U_HH(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSFQ32SP16U_HH)(d0, d1, d2, d3)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZSSFQ32SP16U_HH_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSFQ32SP16U_HH_S2)(d0, d1, d2, d3)
#else
#define AE_MULZSSFQ32SP16U_HH_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSFQ32SP16U_HH_S2)(d0, d1, d2, d3)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZSSQ32SP16U_HH(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSQ32SP16U_HH)(d0, d1, d2, d3)
#else
#define AE_MULZSSQ32SP16U_HH(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSQ32SP16U_HH)(d0, d1, d2, d3)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZSSQ32SP16U_HH_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSQ32SP16U_HH_S2)(d0, d1, d2, d3)
#else
#define AE_MULZSSQ32SP16U_HH_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSQ32SP16U_HH_S2)(d0, d1, d2, d3)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZSSFQ32SP16S_LH(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSFQ32SP16S_LH)(d0, d1, d2, d3)
#else
#define AE_MULZSSFQ32SP16S_LH(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSFQ32SP16S_LH)(d0, d1, d2, d3)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZSSFQ32SP16S_LH_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSFQ32SP16S_LH_S2)(d0, d1, d2, d3)
#else
#define AE_MULZSSFQ32SP16S_LH_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSFQ32SP16S_LH_S2)(d0, d1, d2, d3)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZSSQ32SP16S_LH(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSQ32SP16S_LH)(d0, d1, d2, d3)
#else
#define AE_MULZSSQ32SP16S_LH(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSQ32SP16S_LH)(d0, d1, d2, d3)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZSSQ32SP16S_LH_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSQ32SP16S_LH_S2)(d0, d1, d2, d3)
#else
#define AE_MULZSSQ32SP16S_LH_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSQ32SP16S_LH_S2)(d0, d1, d2, d3)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZSSFQ32SP16U_LH(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSFQ32SP16U_LH)(d0, d1, d2, d3)
#else
#define AE_MULZSSFQ32SP16U_LH(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSFQ32SP16U_LH)(d0, d1, d2, d3)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZSSFQ32SP16U_LH_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSFQ32SP16U_LH_S2)(d0, d1, d2, d3)
#else
#define AE_MULZSSFQ32SP16U_LH_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSFQ32SP16U_LH_S2)(d0, d1, d2, d3)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZSSQ32SP16U_LH(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSQ32SP16U_LH)(d0, d1, d2, d3)
#else
#define AE_MULZSSQ32SP16U_LH(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSQ32SP16U_LH)(d0, d1, d2, d3)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULZSSQ32SP16U_LH_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSQ32SP16U_LH_S2)(d0, d1, d2, d3)
#else
#define AE_MULZSSQ32SP16U_LH_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSQ32SP16U_LH_S2)(d0, d1, d2, d3)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_VLDL16T(done, symbol, a) \
	CSTUB_(_TIE_xt_hifi2_AE_VLDL16T)(done, symbol, a)
#else
#define AE_VLDL16T(done, symbol, a) { \
	xtbool __done; \
	unsigned int __symbol; \
	CSTUB_(_TIE_xt_hifi2_AE_VLDL16T)(__done, __symbol, a); \
	(done) = __done; \
	(symbol) = __symbol; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_VLDL16C(a) \
	CSTUB_(_TIE_xt_hifi2_AE_VLDL16C)((const unsigned short **)&(a))
#else
#define AE_VLDL16C(a) \
	CSTUB_(_TIE_xt_hifi2_AE_VLDL16C)((const unsigned short **)&(a))
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_VLDL16C_XC(a) \
	CSTUB_(_TIE_xt_hifi2_AE_VLDL16C_XC)((const unsigned short **)&(a))
#else
#define AE_VLDL16C_XC(a) \
	CSTUB_(_TIE_xt_hifi2_AE_VLDL16C_XC)((const unsigned short **)&(a))
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_VLDL16C_IC(a) \
	CSTUB_(_TIE_xt_hifi2_AE_VLDL16C_IC)((const unsigned short **)&(a))
#else
#define AE_VLDL16C_IC(a) \
	CSTUB_(_TIE_xt_hifi2_AE_VLDL16C_IC)((const unsigned short **)&(a))
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_VLDL16C_IP(a) \
	CSTUB_(_TIE_xt_hifi2_AE_VLDL16C_IP)((const unsigned short **)&(a))
#else
#define AE_VLDL16C_IP(a) \
	CSTUB_(_TIE_xt_hifi2_AE_VLDL16C_IP)((const unsigned short **)&(a))
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_VLEL16T(done, symbol, a) \
	CSTUB_(_TIE_xt_hifi2_AE_VLEL16T)(done, symbol, a)
#else
#define AE_VLEL16T(done, symbol, a) { \
	xtbool __done; \
	unsigned int __symbol = symbol; \
	CSTUB_(_TIE_xt_hifi2_AE_VLEL16T)(__done, __symbol, a); \
	(done) = __done; \
	(symbol) = __symbol; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_VLES16C(a) \
	CSTUB_(_TIE_xt_hifi2_AE_VLES16C)((unsigned short **)&(a))
#else
#define AE_VLES16C(a) \
	CSTUB_(_TIE_xt_hifi2_AE_VLES16C)((unsigned short **)&(a))
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_VLES16C_IC(a) \
	CSTUB_(_TIE_xt_hifi2_AE_VLES16C_IC)((unsigned short **)&(a))
#else
#define AE_VLES16C_IC(a) \
	CSTUB_(_TIE_xt_hifi2_AE_VLES16C_IC)((unsigned short **)&(a))
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_VLES16C_XC(a) \
	CSTUB_(_TIE_xt_hifi2_AE_VLES16C_XC)((unsigned short **)&(a))
#else
#define AE_VLES16C_XC(a) \
	CSTUB_(_TIE_xt_hifi2_AE_VLES16C_XC)((unsigned short **)&(a))
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_VLES16C_IP(a) \
	CSTUB_(_TIE_xt_hifi2_AE_VLES16C_IP)((unsigned short **)&(a))
#else
#define AE_VLES16C_IP(a) \
	CSTUB_(_TIE_xt_hifi2_AE_VLES16C_IP)((unsigned short **)&(a))
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_VLDL32T(done, symbol, a) \
	CSTUB_(_TIE_xt_hifi2_AE_VLDL32T)(done, symbol, a)
#else
#define AE_VLDL32T(done, symbol, a) { \
	xtbool __done; \
	unsigned int __symbol; \
	CSTUB_(_TIE_xt_hifi2_AE_VLDL32T)(__done, __symbol, a); \
	(done) = __done; \
	(symbol) = __symbol; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_VLEL32T(done, symbol, a) \
	CSTUB_(_TIE_xt_hifi2_AE_VLEL32T)(done, symbol, a)
#else
#define AE_VLEL32T(done, symbol, a) { \
	xtbool __done; \
	unsigned int __symbol = symbol; \
	CSTUB_(_TIE_xt_hifi2_AE_VLEL32T)(__done, __symbol, a); \
	(done) = __done; \
	(symbol) = __symbol; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SB(a, bits) \
	CSTUB_(_TIE_xt_hifi2_AE_SB)((unsigned short **)&(a), bits)
#else
#define AE_SB(a, bits) \
	CSTUB_(_TIE_xt_hifi2_AE_SB)((unsigned short **)&(a), bits)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SB_IC(a, bits) \
	CSTUB_(_TIE_xt_hifi2_AE_SB_IC)((unsigned short **)&(a), bits)
#else
#define AE_SB_IC(a, bits) \
	CSTUB_(_TIE_xt_hifi2_AE_SB_IC)((unsigned short **)&(a), bits)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SB_XC(a, bits) \
	CSTUB_(_TIE_xt_hifi2_AE_SB_XC)((unsigned short **)&(a), bits)
#else
#define AE_SB_XC(a, bits) \
	CSTUB_(_TIE_xt_hifi2_AE_SB_XC)((unsigned short **)&(a), bits)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SB_IP(a, bits) \
	CSTUB_(_TIE_xt_hifi2_AE_SB_IP)((unsigned short **)&(a), bits)
#else
#define AE_SB_IP(a, bits) \
	CSTUB_(_TIE_xt_hifi2_AE_SB_IP)((unsigned short **)&(a), bits)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SBI(a, bits, count) \
	CSTUB_(_TIE_xt_hifi2_AE_SBI)((unsigned short **)&(a), bits, count)
#else
#define AE_SBI(a, bits, count) \
	CSTUB_(_TIE_xt_hifi2_AE_SBI)((unsigned short **)&(a), bits, count)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SBI_IC(a, bits, count) \
	CSTUB_(_TIE_xt_hifi2_AE_SBI_IC)((unsigned short **)&(a), bits, count)
#else
#define AE_SBI_IC(a, bits, count) \
	CSTUB_(_TIE_xt_hifi2_AE_SBI_IC)((unsigned short **)&(a), bits, count)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SBI_XC(a, bits, count) \
	CSTUB_(_TIE_xt_hifi2_AE_SBI_XC)((unsigned short **)&(a), bits, count)
#else
#define AE_SBI_XC(a, bits, count) \
	CSTUB_(_TIE_xt_hifi2_AE_SBI_XC)((unsigned short **)&(a), bits, count)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SBI_IP(a, bits, count) \
	CSTUB_(_TIE_xt_hifi2_AE_SBI_IP)((unsigned short **)&(a), bits, count)
#else
#define AE_SBI_IP(a, bits, count) \
	CSTUB_(_TIE_xt_hifi2_AE_SBI_IP)((unsigned short **)&(a), bits, count)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SBF(a) \
	CSTUB_(_TIE_xt_hifi2_AE_SBF)((unsigned short **)&(a))
#else
#define AE_SBF(a) \
	CSTUB_(_TIE_xt_hifi2_AE_SBF)((unsigned short **)&(a))
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SBF_IC(a) \
	CSTUB_(_TIE_xt_hifi2_AE_SBF_IC)((unsigned short **)&(a))
#else
#define AE_SBF_IC(a) \
	CSTUB_(_TIE_xt_hifi2_AE_SBF_IC)((unsigned short **)&(a))
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SBF_XC(a) \
	CSTUB_(_TIE_xt_hifi2_AE_SBF_XC)((unsigned short **)&(a))
#else
#define AE_SBF_XC(a) \
	CSTUB_(_TIE_xt_hifi2_AE_SBF_XC)((unsigned short **)&(a))
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SBF_IP(a) \
	CSTUB_(_TIE_xt_hifi2_AE_SBF_IP)((unsigned short **)&(a))
#else
#define AE_SBF_IP(a) \
	CSTUB_(_TIE_xt_hifi2_AE_SBF_IP)((unsigned short **)&(a))
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F16X4_MULF_F16X4(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F16X4_MULF_F16X4)(d0, d1)
#else
#define AE_F16X4_MULF_F16X4(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F16X4_MULF_F16X4)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT16X4_MUL_INT16X4(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16X4_MUL_INT16X4)(d0, d1)
#else
#define AE_INT16X4_MUL_INT16X4(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16X4_MUL_INT16X4)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT24X2_ADD_INT24X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24X2_ADD_INT24X2)(d0, d1)
#else
#define AE_INT24X2_ADD_INT24X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24X2_ADD_INT24X2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT24X2_SUB_INT24X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24X2_SUB_INT24X2)(d0, d1)
#else
#define AE_INT24X2_SUB_INT24X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24X2_SUB_INT24X2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT24X2_AND_INT24X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24X2_AND_INT24X2)(d0, d1)
#else
#define AE_INT24X2_AND_INT24X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24X2_AND_INT24X2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT24X2_XOR_INT24X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24X2_XOR_INT24X2)(d0, d1)
#else
#define AE_INT24X2_XOR_INT24X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24X2_XOR_INT24X2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT24X2_OR_INT24X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24X2_OR_INT24X2)(d0, d1)
#else
#define AE_INT24X2_OR_INT24X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24X2_OR_INT24X2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT24X2_MUL_INT24X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24X2_MUL_INT24X2)(d0, d1)
#else
#define AE_INT24X2_MUL_INT24X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24X2_MUL_INT24X2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT24X2_EQ_INT24X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24X2_EQ_INT24X2)(d0, d1)
#else
#define AE_INT24X2_EQ_INT24X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24X2_EQ_INT24X2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT24X2_LT_INT24X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24X2_LT_INT24X2)(d0, d1)
#else
#define AE_INT24X2_LT_INT24X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24X2_LT_INT24X2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT24X2_LE_INT24X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24X2_LE_INT24X2)(d0, d1)
#else
#define AE_INT24X2_LE_INT24X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24X2_LE_INT24X2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT24X2_GT_INT24X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24X2_GT_INT24X2)(d0, d1)
#else
#define AE_INT24X2_GT_INT24X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24X2_GT_INT24X2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT24X2_GE_INT24X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24X2_GE_INT24X2)(d0, d1)
#else
#define AE_INT24X2_GE_INT24X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24X2_GE_INT24X2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT24X2_ADD_INT24(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24X2_ADD_INT24)(d0, d1)
#else
#define AE_INT24X2_ADD_INT24(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24X2_ADD_INT24)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT24X2_SUB_INT24(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24X2_SUB_INT24)(d0, d1)
#else
#define AE_INT24X2_SUB_INT24(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24X2_SUB_INT24)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT24X2_AND_INT24(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24X2_AND_INT24)(d0, d1)
#else
#define AE_INT24X2_AND_INT24(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24X2_AND_INT24)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT24X2_XOR_INT24(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24X2_XOR_INT24)(d0, d1)
#else
#define AE_INT24X2_XOR_INT24(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24X2_XOR_INT24)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT24X2_OR_INT24(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24X2_OR_INT24)(d0, d1)
#else
#define AE_INT24X2_OR_INT24(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24X2_OR_INT24)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT24X2_NEG(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24X2_NEG)(d0)
#else
#define AE_INT24X2_NEG(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24X2_NEG)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT24X2_BNOT(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24X2_BNOT)(d0)
#else
#define AE_INT24X2_BNOT(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24X2_BNOT)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT24X2_SLA(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24X2_SLA)(d0, sa)
#else
#define AE_INT24X2_SLA(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24X2_SLA)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT24X2_SRA(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24X2_SRA)(d0, sa)
#else
#define AE_INT24X2_SRA(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24X2_SRA)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT24X2_SLAI(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24X2_SLAI)(d0, sa)
#else
#define AE_INT24X2_SLAI(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24X2_SLAI)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT24X2_SRAI(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24X2_SRAI)(d0, sa)
#else
#define AE_INT24X2_SRAI(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24X2_SRAI)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT24_ADD_INT24X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24_ADD_INT24X2)(d0, d1)
#else
#define AE_INT24_ADD_INT24X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24_ADD_INT24X2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT24_SUB_INT24X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24_SUB_INT24X2)(d0, d1)
#else
#define AE_INT24_SUB_INT24X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24_SUB_INT24X2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT24_AND_INT24X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24_AND_INT24X2)(d0, d1)
#else
#define AE_INT24_AND_INT24X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24_AND_INT24X2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT24_XOR_INT24X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24_XOR_INT24X2)(d0, d1)
#else
#define AE_INT24_XOR_INT24X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24_XOR_INT24X2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT24_OR_INT24X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24_OR_INT24X2)(d0, d1)
#else
#define AE_INT24_OR_INT24X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24_OR_INT24X2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT24_ADD_INT24(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24_ADD_INT24)(d0, d1)
#else
#define AE_INT24_ADD_INT24(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24_ADD_INT24)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT24_SUB_INT24(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24_SUB_INT24)(d0, d1)
#else
#define AE_INT24_SUB_INT24(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24_SUB_INT24)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT24_AND_INT24(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24_AND_INT24)(d0, d1)
#else
#define AE_INT24_AND_INT24(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24_AND_INT24)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT24_XOR_INT24(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24_XOR_INT24)(d0, d1)
#else
#define AE_INT24_XOR_INT24(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24_XOR_INT24)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT24_OR_INT24(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24_OR_INT24)(d0, d1)
#else
#define AE_INT24_OR_INT24(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24_OR_INT24)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT24_MUL_INT24(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24_MUL_INT24)(d0, d1)
#else
#define AE_INT24_MUL_INT24(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24_MUL_INT24)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT24_NEG(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24_NEG)(d0)
#else
#define AE_INT24_NEG(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24_NEG)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT24_BNOT(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24_BNOT)(d0)
#else
#define AE_INT24_BNOT(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24_BNOT)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT24_SLA(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24_SLA)(d0, sa)
#else
#define AE_INT24_SLA(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24_SLA)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT24_SRA(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24_SRA)(d0, sa)
#else
#define AE_INT24_SRA(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24_SRA)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT24_SLAI(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24_SLAI)(d0, sa)
#else
#define AE_INT24_SLAI(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24_SLAI)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT24_SRAI(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24_SRAI)(d0, sa)
#else
#define AE_INT24_SRAI(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24_SRAI)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F24X2_ADDS_F24X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F24X2_ADDS_F24X2)(d0, d1)
#else
#define AE_F24X2_ADDS_F24X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F24X2_ADDS_F24X2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F24X2_SUBS_F24X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F24X2_SUBS_F24X2)(d0, d1)
#else
#define AE_F24X2_SUBS_F24X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F24X2_SUBS_F24X2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F24X2_AND_F24X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F24X2_AND_F24X2)(d0, d1)
#else
#define AE_F24X2_AND_F24X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F24X2_AND_F24X2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F24X2_XOR_F24X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F24X2_XOR_F24X2)(d0, d1)
#else
#define AE_F24X2_XOR_F24X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F24X2_XOR_F24X2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F24X2_OR_F24X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F24X2_OR_F24X2)(d0, d1)
#else
#define AE_F24X2_OR_F24X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F24X2_OR_F24X2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F24X2_MULF_F24X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F24X2_MULF_F24X2)(d0, d1)
#else
#define AE_F24X2_MULF_F24X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F24X2_MULF_F24X2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F24X2_EQ_F24X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F24X2_EQ_F24X2)(d0, d1)
#else
#define AE_F24X2_EQ_F24X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F24X2_EQ_F24X2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F24X2_LT_F24X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F24X2_LT_F24X2)(d0, d1)
#else
#define AE_F24X2_LT_F24X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F24X2_LT_F24X2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F24X2_LE_F24X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F24X2_LE_F24X2)(d0, d1)
#else
#define AE_F24X2_LE_F24X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F24X2_LE_F24X2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F24X2_GT_F24X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F24X2_GT_F24X2)(d0, d1)
#else
#define AE_F24X2_GT_F24X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F24X2_GT_F24X2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F24X2_GE_F24X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F24X2_GE_F24X2)(d0, d1)
#else
#define AE_F24X2_GE_F24X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F24X2_GE_F24X2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F24X2_ADDS_F24(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F24X2_ADDS_F24)(d0, d1)
#else
#define AE_F24X2_ADDS_F24(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F24X2_ADDS_F24)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F24X2_SUBS_F24(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F24X2_SUBS_F24)(d0, d1)
#else
#define AE_F24X2_SUBS_F24(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F24X2_SUBS_F24)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F24X2_AND_F24(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F24X2_AND_F24)(d0, d1)
#else
#define AE_F24X2_AND_F24(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F24X2_AND_F24)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F24X2_XOR_F24(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F24X2_XOR_F24)(d0, d1)
#else
#define AE_F24X2_XOR_F24(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F24X2_XOR_F24)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F24X2_OR_F24(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F24X2_OR_F24)(d0, d1)
#else
#define AE_F24X2_OR_F24(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F24X2_OR_F24)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F24X2_NEGS(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_F24X2_NEGS)(d0)
#else
#define AE_F24X2_NEGS(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_F24X2_NEGS)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F24X2_BNOT(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_F24X2_BNOT)(d0)
#else
#define AE_F24X2_BNOT(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_F24X2_BNOT)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F24X2_SLA(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_F24X2_SLA)(d0, sa)
#else
#define AE_F24X2_SLA(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_F24X2_SLA)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F24X2_SRA(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_F24X2_SRA)(d0, sa)
#else
#define AE_F24X2_SRA(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_F24X2_SRA)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F24X2_SLAI(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_F24X2_SLAI)(d0, sa)
#else
#define AE_F24X2_SLAI(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_F24X2_SLAI)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F24X2_SRAI(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_F24X2_SRAI)(d0, sa)
#else
#define AE_F24X2_SRAI(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_F24X2_SRAI)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F24_ADDS_F24X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F24_ADDS_F24X2)(d0, d1)
#else
#define AE_F24_ADDS_F24X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F24_ADDS_F24X2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F24_SUBS_F24X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F24_SUBS_F24X2)(d0, d1)
#else
#define AE_F24_SUBS_F24X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F24_SUBS_F24X2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F24_AND_F24X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F24_AND_F24X2)(d0, d1)
#else
#define AE_F24_AND_F24X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F24_AND_F24X2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F24_XOR_F24X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F24_XOR_F24X2)(d0, d1)
#else
#define AE_F24_XOR_F24X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F24_XOR_F24X2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F24_OR_F24X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F24_OR_F24X2)(d0, d1)
#else
#define AE_F24_OR_F24X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F24_OR_F24X2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F24_ADDS_F24(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F24_ADDS_F24)(d0, d1)
#else
#define AE_F24_ADDS_F24(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F24_ADDS_F24)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F24_SUBS_F24(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F24_SUBS_F24)(d0, d1)
#else
#define AE_F24_SUBS_F24(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F24_SUBS_F24)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F24_AND_F24(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F24_AND_F24)(d0, d1)
#else
#define AE_F24_AND_F24(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F24_AND_F24)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F24_XOR_F24(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F24_XOR_F24)(d0, d1)
#else
#define AE_F24_XOR_F24(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F24_XOR_F24)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F24_OR_F24(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F24_OR_F24)(d0, d1)
#else
#define AE_F24_OR_F24(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F24_OR_F24)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F24_MULF_F24(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F24_MULF_F24)(d0, d1)
#else
#define AE_F24_MULF_F24(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F24_MULF_F24)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F24_NEGS(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_F24_NEGS)(d0)
#else
#define AE_F24_NEGS(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_F24_NEGS)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F24_BNOT(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_F24_BNOT)(d0)
#else
#define AE_F24_BNOT(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_F24_BNOT)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F24_SLA(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_F24_SLA)(d0, sa)
#else
#define AE_F24_SLA(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_F24_SLA)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F24_SRA(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_F24_SRA)(d0, sa)
#else
#define AE_F24_SRA(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_F24_SRA)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F24_SLAI(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_F24_SLAI)(d0, sa)
#else
#define AE_F24_SLAI(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_F24_SLAI)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F24_SRAI(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_F24_SRAI)(d0, sa)
#else
#define AE_F24_SRAI(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_F24_SRAI)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT16X4_ADD_INT16X4(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16X4_ADD_INT16X4)(d0, d1)
#else
#define AE_INT16X4_ADD_INT16X4(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16X4_ADD_INT16X4)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT16X4_SUB_INT16X4(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16X4_SUB_INT16X4)(d0, d1)
#else
#define AE_INT16X4_SUB_INT16X4(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16X4_SUB_INT16X4)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT16X4_AND_INT16X4(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16X4_AND_INT16X4)(d0, d1)
#else
#define AE_INT16X4_AND_INT16X4(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16X4_AND_INT16X4)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT16X4_XOR_INT16X4(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16X4_XOR_INT16X4)(d0, d1)
#else
#define AE_INT16X4_XOR_INT16X4(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16X4_XOR_INT16X4)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT16X4_OR_INT16X4(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16X4_OR_INT16X4)(d0, d1)
#else
#define AE_INT16X4_OR_INT16X4(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16X4_OR_INT16X4)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT16X4_EQ_INT16X4(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16X4_EQ_INT16X4)(d0, d1)
#else
#define AE_INT16X4_EQ_INT16X4(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16X4_EQ_INT16X4)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT16X4_LT_INT16X4(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16X4_LT_INT16X4)(d0, d1)
#else
#define AE_INT16X4_LT_INT16X4(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16X4_LT_INT16X4)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT16X4_LE_INT16X4(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16X4_LE_INT16X4)(d0, d1)
#else
#define AE_INT16X4_LE_INT16X4(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16X4_LE_INT16X4)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT16X4_GT_INT16X4(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16X4_GT_INT16X4)(d0, d1)
#else
#define AE_INT16X4_GT_INT16X4(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16X4_GT_INT16X4)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT16X4_GE_INT16X4(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16X4_GE_INT16X4)(d0, d1)
#else
#define AE_INT16X4_GE_INT16X4(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16X4_GE_INT16X4)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT16X4_ADD_INT16(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16X4_ADD_INT16)(d0, d1)
#else
#define AE_INT16X4_ADD_INT16(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16X4_ADD_INT16)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT16X4_SUB_INT16(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16X4_SUB_INT16)(d0, d1)
#else
#define AE_INT16X4_SUB_INT16(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16X4_SUB_INT16)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT16X4_AND_INT16(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16X4_AND_INT16)(d0, d1)
#else
#define AE_INT16X4_AND_INT16(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16X4_AND_INT16)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT16X4_XOR_INT16(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16X4_XOR_INT16)(d0, d1)
#else
#define AE_INT16X4_XOR_INT16(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16X4_XOR_INT16)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT16X4_OR_INT16(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16X4_OR_INT16)(d0, d1)
#else
#define AE_INT16X4_OR_INT16(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16X4_OR_INT16)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT16X4_NEG(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16X4_NEG)(d0)
#else
#define AE_INT16X4_NEG(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16X4_NEG)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT16X4_BNOT(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16X4_BNOT)(d0)
#else
#define AE_INT16X4_BNOT(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16X4_BNOT)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT16X4_SRA(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16X4_SRA)(d0, sa)
#else
#define AE_INT16X4_SRA(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16X4_SRA)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT16X4_SRAI(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16X4_SRAI)(d0, sa)
#else
#define AE_INT16X4_SRAI(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16X4_SRAI)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT16_ADD_INT16X4(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16_ADD_INT16X4)(d0, d1)
#else
#define AE_INT16_ADD_INT16X4(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16_ADD_INT16X4)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT16_SUB_INT16X4(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16_SUB_INT16X4)(d0, d1)
#else
#define AE_INT16_SUB_INT16X4(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16_SUB_INT16X4)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT16_AND_INT16X4(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16_AND_INT16X4)(d0, d1)
#else
#define AE_INT16_AND_INT16X4(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16_AND_INT16X4)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT16_XOR_INT16X4(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16_XOR_INT16X4)(d0, d1)
#else
#define AE_INT16_XOR_INT16X4(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16_XOR_INT16X4)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT16_OR_INT16X4(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16_OR_INT16X4)(d0, d1)
#else
#define AE_INT16_OR_INT16X4(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16_OR_INT16X4)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT16_ADD_INT16(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16_ADD_INT16)(d0, d1)
#else
#define AE_INT16_ADD_INT16(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16_ADD_INT16)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT16_SUB_INT16(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16_SUB_INT16)(d0, d1)
#else
#define AE_INT16_SUB_INT16(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16_SUB_INT16)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT16_AND_INT16(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16_AND_INT16)(d0, d1)
#else
#define AE_INT16_AND_INT16(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16_AND_INT16)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT16_XOR_INT16(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16_XOR_INT16)(d0, d1)
#else
#define AE_INT16_XOR_INT16(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16_XOR_INT16)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT16_OR_INT16(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16_OR_INT16)(d0, d1)
#else
#define AE_INT16_OR_INT16(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16_OR_INT16)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT16_NEG(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16_NEG)(d0)
#else
#define AE_INT16_NEG(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16_NEG)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT16_BNOT(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16_BNOT)(d0)
#else
#define AE_INT16_BNOT(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16_BNOT)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT16_SRA(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16_SRA)(d0, sa)
#else
#define AE_INT16_SRA(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16_SRA)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT16_SRAI(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16_SRAI)(d0, sa)
#else
#define AE_INT16_SRAI(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16_SRAI)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F16X4_ADDS_F16X4(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F16X4_ADDS_F16X4)(d0, d1)
#else
#define AE_F16X4_ADDS_F16X4(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F16X4_ADDS_F16X4)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F16X4_SUBS_F16X4(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F16X4_SUBS_F16X4)(d0, d1)
#else
#define AE_F16X4_SUBS_F16X4(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F16X4_SUBS_F16X4)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F16X4_AND_F16X4(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F16X4_AND_F16X4)(d0, d1)
#else
#define AE_F16X4_AND_F16X4(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F16X4_AND_F16X4)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F16X4_XOR_F16X4(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F16X4_XOR_F16X4)(d0, d1)
#else
#define AE_F16X4_XOR_F16X4(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F16X4_XOR_F16X4)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F16X4_OR_F16X4(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F16X4_OR_F16X4)(d0, d1)
#else
#define AE_F16X4_OR_F16X4(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F16X4_OR_F16X4)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F16X4_EQ_F16X4(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F16X4_EQ_F16X4)(d0, d1)
#else
#define AE_F16X4_EQ_F16X4(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F16X4_EQ_F16X4)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F16X4_LT_F16X4(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F16X4_LT_F16X4)(d0, d1)
#else
#define AE_F16X4_LT_F16X4(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F16X4_LT_F16X4)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F16X4_LE_F16X4(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F16X4_LE_F16X4)(d0, d1)
#else
#define AE_F16X4_LE_F16X4(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F16X4_LE_F16X4)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F16X4_GT_F16X4(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F16X4_GT_F16X4)(d0, d1)
#else
#define AE_F16X4_GT_F16X4(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F16X4_GT_F16X4)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F16X4_GE_F16X4(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F16X4_GE_F16X4)(d0, d1)
#else
#define AE_F16X4_GE_F16X4(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F16X4_GE_F16X4)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F16X4_ADDS_F16(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F16X4_ADDS_F16)(d0, d1)
#else
#define AE_F16X4_ADDS_F16(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F16X4_ADDS_F16)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F16X4_SUBS_F16(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F16X4_SUBS_F16)(d0, d1)
#else
#define AE_F16X4_SUBS_F16(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F16X4_SUBS_F16)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F16X4_AND_F16(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F16X4_AND_F16)(d0, d1)
#else
#define AE_F16X4_AND_F16(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F16X4_AND_F16)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F16X4_XOR_F16(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F16X4_XOR_F16)(d0, d1)
#else
#define AE_F16X4_XOR_F16(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F16X4_XOR_F16)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F16X4_OR_F16(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F16X4_OR_F16)(d0, d1)
#else
#define AE_F16X4_OR_F16(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F16X4_OR_F16)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F16X4_NEGS(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_F16X4_NEGS)(d0)
#else
#define AE_F16X4_NEGS(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_F16X4_NEGS)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F16X4_BNOT(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_F16X4_BNOT)(d0)
#else
#define AE_F16X4_BNOT(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_F16X4_BNOT)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F16X4_SLAS(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_F16X4_SLAS)(d0, sa)
#else
#define AE_F16X4_SLAS(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_F16X4_SLAS)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F16X4_SRA(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_F16X4_SRA)(d0, sa)
#else
#define AE_F16X4_SRA(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_F16X4_SRA)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F16X4_SLAIS(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_F16X4_SLAIS)(d0, sa)
#else
#define AE_F16X4_SLAIS(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_F16X4_SLAIS)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F16X4_SRAI(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_F16X4_SRAI)(d0, sa)
#else
#define AE_F16X4_SRAI(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_F16X4_SRAI)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F16_ADDS_F16X4(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F16_ADDS_F16X4)(d0, d1)
#else
#define AE_F16_ADDS_F16X4(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F16_ADDS_F16X4)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F16_SUBS_F16X4(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F16_SUBS_F16X4)(d0, d1)
#else
#define AE_F16_SUBS_F16X4(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F16_SUBS_F16X4)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F16_AND_F16X4(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F16_AND_F16X4)(d0, d1)
#else
#define AE_F16_AND_F16X4(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F16_AND_F16X4)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F16_XOR_F16X4(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F16_XOR_F16X4)(d0, d1)
#else
#define AE_F16_XOR_F16X4(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F16_XOR_F16X4)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F16_OR_F16X4(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F16_OR_F16X4)(d0, d1)
#else
#define AE_F16_OR_F16X4(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F16_OR_F16X4)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F16_ADDS_F16(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F16_ADDS_F16)(d0, d1)
#else
#define AE_F16_ADDS_F16(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F16_ADDS_F16)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F16_SUBS_F16(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F16_SUBS_F16)(d0, d1)
#else
#define AE_F16_SUBS_F16(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F16_SUBS_F16)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F16_AND_F16(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F16_AND_F16)(d0, d1)
#else
#define AE_F16_AND_F16(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F16_AND_F16)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F16_XOR_F16(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F16_XOR_F16)(d0, d1)
#else
#define AE_F16_XOR_F16(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F16_XOR_F16)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F16_OR_F16(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F16_OR_F16)(d0, d1)
#else
#define AE_F16_OR_F16(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F16_OR_F16)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F16_NEGS(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_F16_NEGS)(d0)
#else
#define AE_F16_NEGS(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_F16_NEGS)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F16_BNOT(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_F16_BNOT)(d0)
#else
#define AE_F16_BNOT(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_F16_BNOT)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F16_SLAS(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_F16_SLAS)(d0, sa)
#else
#define AE_F16_SLAS(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_F16_SLAS)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F16_SRA(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_F16_SRA)(d0, sa)
#else
#define AE_F16_SRA(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_F16_SRA)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F16_SLAIS(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_F16_SLAIS)(d0, sa)
#else
#define AE_F16_SLAIS(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_F16_SLAIS)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F16_SRAI(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_F16_SRAI)(d0, sa)
#else
#define AE_F16_SRAI(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_F16_SRAI)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT32X2_ADD_INT32X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_ADD_INT32X2)(d0, d1)
#else
#define AE_INT32X2_ADD_INT32X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_ADD_INT32X2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT32X2_SUB_INT32X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_SUB_INT32X2)(d0, d1)
#else
#define AE_INT32X2_SUB_INT32X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_SUB_INT32X2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT32X2_AND_INT32X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_AND_INT32X2)(d0, d1)
#else
#define AE_INT32X2_AND_INT32X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_AND_INT32X2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT32X2_XOR_INT32X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_XOR_INT32X2)(d0, d1)
#else
#define AE_INT32X2_XOR_INT32X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_XOR_INT32X2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT32X2_OR_INT32X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_OR_INT32X2)(d0, d1)
#else
#define AE_INT32X2_OR_INT32X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_OR_INT32X2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT32X2_MUL_INT32X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_MUL_INT32X2)(d0, d1)
#else
#define AE_INT32X2_MUL_INT32X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_MUL_INT32X2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT32X2_EQ_INT32X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_EQ_INT32X2)(d0, d1)
#else
#define AE_INT32X2_EQ_INT32X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_EQ_INT32X2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT32X2_LT_INT32X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_LT_INT32X2)(d0, d1)
#else
#define AE_INT32X2_LT_INT32X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_LT_INT32X2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT32X2_LE_INT32X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_LE_INT32X2)(d0, d1)
#else
#define AE_INT32X2_LE_INT32X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_LE_INT32X2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT32X2_GT_INT32X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_GT_INT32X2)(d0, d1)
#else
#define AE_INT32X2_GT_INT32X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_GT_INT32X2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT32X2_GE_INT32X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_GE_INT32X2)(d0, d1)
#else
#define AE_INT32X2_GE_INT32X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_GE_INT32X2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT32X2_ADD_INT32(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_ADD_INT32)(d0, d1)
#else
#define AE_INT32X2_ADD_INT32(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_ADD_INT32)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT32X2_SUB_INT32(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_SUB_INT32)(d0, d1)
#else
#define AE_INT32X2_SUB_INT32(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_SUB_INT32)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT32X2_AND_INT32(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_AND_INT32)(d0, d1)
#else
#define AE_INT32X2_AND_INT32(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_AND_INT32)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT32X2_XOR_INT32(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_XOR_INT32)(d0, d1)
#else
#define AE_INT32X2_XOR_INT32(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_XOR_INT32)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT32X2_OR_INT32(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_OR_INT32)(d0, d1)
#else
#define AE_INT32X2_OR_INT32(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_OR_INT32)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT32X2_NEG(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_NEG)(d0)
#else
#define AE_INT32X2_NEG(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_NEG)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT32X2_BNOT(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_BNOT)(d0)
#else
#define AE_INT32X2_BNOT(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_BNOT)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT32X2_SLA(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_SLA)(d0, sa)
#else
#define AE_INT32X2_SLA(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_SLA)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT32X2_SRA(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_SRA)(d0, sa)
#else
#define AE_INT32X2_SRA(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_SRA)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT32X2_SLAI(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_SLAI)(d0, sa)
#else
#define AE_INT32X2_SLAI(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_SLAI)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT32X2_SRAI(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_SRAI)(d0, sa)
#else
#define AE_INT32X2_SRAI(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_SRAI)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT32_ADD_INT32X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32_ADD_INT32X2)(d0, d1)
#else
#define AE_INT32_ADD_INT32X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32_ADD_INT32X2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT32_SUB_INT32X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32_SUB_INT32X2)(d0, d1)
#else
#define AE_INT32_SUB_INT32X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32_SUB_INT32X2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT32_AND_INT32X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32_AND_INT32X2)(d0, d1)
#else
#define AE_INT32_AND_INT32X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32_AND_INT32X2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT32_XOR_INT32X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32_XOR_INT32X2)(d0, d1)
#else
#define AE_INT32_XOR_INT32X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32_XOR_INT32X2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT32_OR_INT32X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32_OR_INT32X2)(d0, d1)
#else
#define AE_INT32_OR_INT32X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32_OR_INT32X2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT32_ADD_INT32(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32_ADD_INT32)(d0, d1)
#else
#define AE_INT32_ADD_INT32(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32_ADD_INT32)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT32_SUB_INT32(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32_SUB_INT32)(d0, d1)
#else
#define AE_INT32_SUB_INT32(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32_SUB_INT32)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT32_AND_INT32(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32_AND_INT32)(d0, d1)
#else
#define AE_INT32_AND_INT32(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32_AND_INT32)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT32_XOR_INT32(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32_XOR_INT32)(d0, d1)
#else
#define AE_INT32_XOR_INT32(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32_XOR_INT32)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT32_OR_INT32(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32_OR_INT32)(d0, d1)
#else
#define AE_INT32_OR_INT32(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32_OR_INT32)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT32_MUL_INT32(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32_MUL_INT32)(d0, d1)
#else
#define AE_INT32_MUL_INT32(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32_MUL_INT32)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT32_NEG(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32_NEG)(d0)
#else
#define AE_INT32_NEG(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32_NEG)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT32_BNOT(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32_BNOT)(d0)
#else
#define AE_INT32_BNOT(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32_BNOT)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT32_SLA(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32_SLA)(d0, sa)
#else
#define AE_INT32_SLA(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32_SLA)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT32_SRA(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32_SRA)(d0, sa)
#else
#define AE_INT32_SRA(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32_SRA)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT32_SLAI(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32_SLAI)(d0, sa)
#else
#define AE_INT32_SLAI(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32_SLAI)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT32_SRAI(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32_SRAI)(d0, sa)
#else
#define AE_INT32_SRAI(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32_SRAI)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F32X2_ADDS_F32X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F32X2_ADDS_F32X2)(d0, d1)
#else
#define AE_F32X2_ADDS_F32X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F32X2_ADDS_F32X2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F32X2_SUBS_F32X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F32X2_SUBS_F32X2)(d0, d1)
#else
#define AE_F32X2_SUBS_F32X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F32X2_SUBS_F32X2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F32X2_AND_F32X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F32X2_AND_F32X2)(d0, d1)
#else
#define AE_F32X2_AND_F32X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F32X2_AND_F32X2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F32X2_XOR_F32X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F32X2_XOR_F32X2)(d0, d1)
#else
#define AE_F32X2_XOR_F32X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F32X2_XOR_F32X2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F32X2_OR_F32X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F32X2_OR_F32X2)(d0, d1)
#else
#define AE_F32X2_OR_F32X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F32X2_OR_F32X2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F32X2_MULF_F32X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F32X2_MULF_F32X2)(d0, d1)
#else
#define AE_F32X2_MULF_F32X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F32X2_MULF_F32X2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F32X2_EQ_F32X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F32X2_EQ_F32X2)(d0, d1)
#else
#define AE_F32X2_EQ_F32X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F32X2_EQ_F32X2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F32X2_LT_F32X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F32X2_LT_F32X2)(d0, d1)
#else
#define AE_F32X2_LT_F32X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F32X2_LT_F32X2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F32X2_LE_F32X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F32X2_LE_F32X2)(d0, d1)
#else
#define AE_F32X2_LE_F32X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F32X2_LE_F32X2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F32X2_GT_F32X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F32X2_GT_F32X2)(d0, d1)
#else
#define AE_F32X2_GT_F32X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F32X2_GT_F32X2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F32X2_GE_F32X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F32X2_GE_F32X2)(d0, d1)
#else
#define AE_F32X2_GE_F32X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F32X2_GE_F32X2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F32X2_ADDS_F32(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F32X2_ADDS_F32)(d0, d1)
#else
#define AE_F32X2_ADDS_F32(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F32X2_ADDS_F32)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F32X2_SUBS_F32(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F32X2_SUBS_F32)(d0, d1)
#else
#define AE_F32X2_SUBS_F32(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F32X2_SUBS_F32)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F32X2_AND_F32(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F32X2_AND_F32)(d0, d1)
#else
#define AE_F32X2_AND_F32(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F32X2_AND_F32)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F32X2_XOR_F32(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F32X2_XOR_F32)(d0, d1)
#else
#define AE_F32X2_XOR_F32(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F32X2_XOR_F32)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F32X2_OR_F32(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F32X2_OR_F32)(d0, d1)
#else
#define AE_F32X2_OR_F32(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F32X2_OR_F32)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F32X2_NEGS(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_F32X2_NEGS)(d0)
#else
#define AE_F32X2_NEGS(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_F32X2_NEGS)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F32X2_BNOT(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_F32X2_BNOT)(d0)
#else
#define AE_F32X2_BNOT(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_F32X2_BNOT)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F32X2_SLAS(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_F32X2_SLAS)(d0, sa)
#else
#define AE_F32X2_SLAS(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_F32X2_SLAS)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F32X2_SRA(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_F32X2_SRA)(d0, sa)
#else
#define AE_F32X2_SRA(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_F32X2_SRA)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F32X2_SLAIS(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_F32X2_SLAIS)(d0, sa)
#else
#define AE_F32X2_SLAIS(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_F32X2_SLAIS)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F32X2_SRAI(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_F32X2_SRAI)(d0, sa)
#else
#define AE_F32X2_SRAI(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_F32X2_SRAI)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F32_ADDS_F32X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F32_ADDS_F32X2)(d0, d1)
#else
#define AE_F32_ADDS_F32X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F32_ADDS_F32X2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F32_SUBS_F32X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F32_SUBS_F32X2)(d0, d1)
#else
#define AE_F32_SUBS_F32X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F32_SUBS_F32X2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F32_AND_F32X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F32_AND_F32X2)(d0, d1)
#else
#define AE_F32_AND_F32X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F32_AND_F32X2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F32_XOR_F32X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F32_XOR_F32X2)(d0, d1)
#else
#define AE_F32_XOR_F32X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F32_XOR_F32X2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F32_OR_F32X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F32_OR_F32X2)(d0, d1)
#else
#define AE_F32_OR_F32X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F32_OR_F32X2)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F32_ADDS_F32(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F32_ADDS_F32)(d0, d1)
#else
#define AE_F32_ADDS_F32(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F32_ADDS_F32)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F32_SUBS_F32(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F32_SUBS_F32)(d0, d1)
#else
#define AE_F32_SUBS_F32(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F32_SUBS_F32)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F32_AND_F32(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F32_AND_F32)(d0, d1)
#else
#define AE_F32_AND_F32(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F32_AND_F32)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F32_XOR_F32(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F32_XOR_F32)(d0, d1)
#else
#define AE_F32_XOR_F32(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F32_XOR_F32)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F32_OR_F32(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F32_OR_F32)(d0, d1)
#else
#define AE_F32_OR_F32(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F32_OR_F32)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F32_MULF_F32(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F32_MULF_F32)(d0, d1)
#else
#define AE_F32_MULF_F32(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F32_MULF_F32)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F32_NEGS(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_F32_NEGS)(d0)
#else
#define AE_F32_NEGS(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_F32_NEGS)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F32_BNOT(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_F32_BNOT)(d0)
#else
#define AE_F32_BNOT(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_F32_BNOT)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F32_SLAS(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_F32_SLAS)(d0, sa)
#else
#define AE_F32_SLAS(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_F32_SLAS)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F32_SRA(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_F32_SRA)(d0, sa)
#else
#define AE_F32_SRA(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_F32_SRA)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F32_SLAIS(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_F32_SLAIS)(d0, sa)
#else
#define AE_F32_SLAIS(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_F32_SLAIS)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F32_SRAI(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_F32_SRAI)(d0, sa)
#else
#define AE_F32_SRAI(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_F32_SRAI)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT64_ADD(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT64_ADD)(d0, d1)
#else
#define AE_INT64_ADD(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT64_ADD)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT64_SUB(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT64_SUB)(d0, d1)
#else
#define AE_INT64_SUB(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT64_SUB)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT64_AND(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT64_AND)(d0, d1)
#else
#define AE_INT64_AND(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT64_AND)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT64_XOR(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT64_XOR)(d0, d1)
#else
#define AE_INT64_XOR(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT64_XOR)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT64_OR(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT64_OR)(d0, d1)
#else
#define AE_INT64_OR(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT64_OR)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT64_NEG(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_INT64_NEG)(d0)
#else
#define AE_INT64_NEG(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_INT64_NEG)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT64_BNOT(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_INT64_BNOT)(d0)
#else
#define AE_INT64_BNOT(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_INT64_BNOT)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT64_SLA(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_INT64_SLA)(d0, sa)
#else
#define AE_INT64_SLA(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_INT64_SLA)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT64_SRA(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_INT64_SRA)(d0, sa)
#else
#define AE_INT64_SRA(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_INT64_SRA)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT64_SLAI(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_INT64_SLAI)(d0, sa)
#else
#define AE_INT64_SLAI(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_INT64_SLAI)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT64_SRAI(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_INT64_SRAI)(d0, sa)
#else
#define AE_INT64_SRAI(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_INT64_SRAI)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT64_EQ(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT64_EQ)(d0, d1)
#else
#define AE_INT64_EQ(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT64_EQ)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT64_LT(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT64_LT)(d0, d1)
#else
#define AE_INT64_LT(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT64_LT)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT64_LE(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT64_LE)(d0, d1)
#else
#define AE_INT64_LE(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT64_LE)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT64_GT(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT64_GT)(d0, d1)
#else
#define AE_INT64_GT(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT64_GT)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT64_GE(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT64_GE)(d0, d1)
#else
#define AE_INT64_GE(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT64_GE)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F64_ADDS(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F64_ADDS)(d0, d1)
#else
#define AE_F64_ADDS(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F64_ADDS)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F64_SUBS(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F64_SUBS)(d0, d1)
#else
#define AE_F64_SUBS(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F64_SUBS)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F64_AND(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F64_AND)(d0, d1)
#else
#define AE_F64_AND(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F64_AND)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F64_XOR(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F64_XOR)(d0, d1)
#else
#define AE_F64_XOR(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F64_XOR)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F64_OR(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F64_OR)(d0, d1)
#else
#define AE_F64_OR(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F64_OR)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F64_NEGS(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_F64_NEGS)(d0)
#else
#define AE_F64_NEGS(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_F64_NEGS)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F64_BNOT(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_F64_BNOT)(d0)
#else
#define AE_F64_BNOT(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_F64_BNOT)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F64_SLAS(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_F64_SLAS)(d0, sa)
#else
#define AE_F64_SLAS(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_F64_SLAS)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F64_SRA(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_F64_SRA)(d0, sa)
#else
#define AE_F64_SRA(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_F64_SRA)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F64_SLAIS(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_F64_SLAIS)(d0, sa)
#else
#define AE_F64_SLAIS(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_F64_SLAIS)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F64_SRAI(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_F64_SRAI)(d0, sa)
#else
#define AE_F64_SRAI(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_F64_SRAI)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F64_EQ(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F64_EQ)(d0, d1)
#else
#define AE_F64_EQ(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F64_EQ)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F64_LT(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F64_LT)(d0, d1)
#else
#define AE_F64_LT(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F64_LT)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F64_LE(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F64_LE)(d0, d1)
#else
#define AE_F64_LE(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F64_LE)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F64_GT(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F64_GT)(d0, d1)
#else
#define AE_F64_GT(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F64_GT)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F64_GE(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F64_GE)(d0, d1)
#else
#define AE_F64_GE(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F64_GE)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT32_MUL_INT16(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32_MUL_INT16)(d0, d1)
#else
#define AE_INT32_MUL_INT16(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32_MUL_INT16)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F32_MUL_F16(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F32_MUL_F16)(d0, d1)
#else
#define AE_F32_MUL_F16(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F32_MUL_F16)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24X2S_ADDS_P24X2S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2S_ADDS_P24X2S)(d0, d1)
#else
#define AE_P24X2S_ADDS_P24X2S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2S_ADDS_P24X2S)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24X2S_SUBS_P24X2S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2S_SUBS_P24X2S)(d0, d1)
#else
#define AE_P24X2S_SUBS_P24X2S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2S_SUBS_P24X2S)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24X2S_AND_P24X2S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2S_AND_P24X2S)(d0, d1)
#else
#define AE_P24X2S_AND_P24X2S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2S_AND_P24X2S)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24X2S_XOR_P24X2S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2S_XOR_P24X2S)(d0, d1)
#else
#define AE_P24X2S_XOR_P24X2S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2S_XOR_P24X2S)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24X2S_OR_P24X2S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2S_OR_P24X2S)(d0, d1)
#else
#define AE_P24X2S_OR_P24X2S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2S_OR_P24X2S)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24X2S_MULF_P24X2S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2S_MULF_P24X2S)(d0, d1)
#else
#define AE_P24X2S_MULF_P24X2S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2S_MULF_P24X2S)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24X2S_EQ_P24X2S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2S_EQ_P24X2S)(d0, d1)
#else
#define AE_P24X2S_EQ_P24X2S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2S_EQ_P24X2S)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24X2S_LT_P24X2S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2S_LT_P24X2S)(d0, d1)
#else
#define AE_P24X2S_LT_P24X2S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2S_LT_P24X2S)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24X2S_LE_P24X2S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2S_LE_P24X2S)(d0, d1)
#else
#define AE_P24X2S_LE_P24X2S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2S_LE_P24X2S)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24X2S_GT_P24X2S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2S_GT_P24X2S)(d0, d1)
#else
#define AE_P24X2S_GT_P24X2S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2S_GT_P24X2S)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24X2S_GE_P24X2S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2S_GE_P24X2S)(d0, d1)
#else
#define AE_P24X2S_GE_P24X2S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2S_GE_P24X2S)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24X2S_ADDS_P24X2F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2S_ADDS_P24X2F)(d0, d1)
#else
#define AE_P24X2S_ADDS_P24X2F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2S_ADDS_P24X2F)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24X2S_SUBS_P24X2F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2S_SUBS_P24X2F)(d0, d1)
#else
#define AE_P24X2S_SUBS_P24X2F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2S_SUBS_P24X2F)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24X2S_AND_P24X2F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2S_AND_P24X2F)(d0, d1)
#else
#define AE_P24X2S_AND_P24X2F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2S_AND_P24X2F)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24X2S_XOR_P24X2F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2S_XOR_P24X2F)(d0, d1)
#else
#define AE_P24X2S_XOR_P24X2F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2S_XOR_P24X2F)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24X2S_OR_P24X2F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2S_OR_P24X2F)(d0, d1)
#else
#define AE_P24X2S_OR_P24X2F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2S_OR_P24X2F)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24X2S_MULF_P24X2F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2S_MULF_P24X2F)(d0, d1)
#else
#define AE_P24X2S_MULF_P24X2F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2S_MULF_P24X2F)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24X2S_EQ_P24X2F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2S_EQ_P24X2F)(d0, d1)
#else
#define AE_P24X2S_EQ_P24X2F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2S_EQ_P24X2F)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24X2S_LT_P24X2F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2S_LT_P24X2F)(d0, d1)
#else
#define AE_P24X2S_LT_P24X2F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2S_LT_P24X2F)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24X2S_LE_P24X2F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2S_LE_P24X2F)(d0, d1)
#else
#define AE_P24X2S_LE_P24X2F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2S_LE_P24X2F)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24X2S_GT_P24X2F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2S_GT_P24X2F)(d0, d1)
#else
#define AE_P24X2S_GT_P24X2F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2S_GT_P24X2F)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24X2S_GE_P24X2F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2S_GE_P24X2F)(d0, d1)
#else
#define AE_P24X2S_GE_P24X2F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2S_GE_P24X2F)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24X2S_ADDS_P24S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2S_ADDS_P24S)(d0, d1)
#else
#define AE_P24X2S_ADDS_P24S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2S_ADDS_P24S)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24X2S_SUBS_P24S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2S_SUBS_P24S)(d0, d1)
#else
#define AE_P24X2S_SUBS_P24S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2S_SUBS_P24S)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24X2S_AND_P24S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2S_AND_P24S)(d0, d1)
#else
#define AE_P24X2S_AND_P24S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2S_AND_P24S)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24X2S_XOR_P24S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2S_XOR_P24S)(d0, d1)
#else
#define AE_P24X2S_XOR_P24S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2S_XOR_P24S)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24X2S_OR_P24S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2S_OR_P24S)(d0, d1)
#else
#define AE_P24X2S_OR_P24S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2S_OR_P24S)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24X2S_ADDS_P24F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2S_ADDS_P24F)(d0, d1)
#else
#define AE_P24X2S_ADDS_P24F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2S_ADDS_P24F)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24X2S_SUBS_P24F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2S_SUBS_P24F)(d0, d1)
#else
#define AE_P24X2S_SUBS_P24F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2S_SUBS_P24F)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24X2S_AND_P24F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2S_AND_P24F)(d0, d1)
#else
#define AE_P24X2S_AND_P24F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2S_AND_P24F)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24X2S_XOR_P24F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2S_XOR_P24F)(d0, d1)
#else
#define AE_P24X2S_XOR_P24F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2S_XOR_P24F)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24X2S_OR_P24F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2S_OR_P24F)(d0, d1)
#else
#define AE_P24X2S_OR_P24F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2S_OR_P24F)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24X2S_NEGS(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2S_NEGS)(d0)
#else
#define AE_P24X2S_NEGS(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2S_NEGS)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24X2S_BNOT(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2S_BNOT)(d0)
#else
#define AE_P24X2S_BNOT(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2S_BNOT)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24X2S_SLAS(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2S_SLAS)(d0, sa)
#else
#define AE_P24X2S_SLAS(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2S_SLAS)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24X2S_SRA(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2S_SRA)(d0, sa)
#else
#define AE_P24X2S_SRA(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2S_SRA)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24X2S_SLAIS(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2S_SLAIS)(d0, sa)
#else
#define AE_P24X2S_SLAIS(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2S_SLAIS)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24X2S_SRAI(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2S_SRAI)(d0, sa)
#else
#define AE_P24X2S_SRAI(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2S_SRAI)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24X2F_ADDS_P24X2S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2F_ADDS_P24X2S)(d0, d1)
#else
#define AE_P24X2F_ADDS_P24X2S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2F_ADDS_P24X2S)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24X2F_SUBS_P24X2S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2F_SUBS_P24X2S)(d0, d1)
#else
#define AE_P24X2F_SUBS_P24X2S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2F_SUBS_P24X2S)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24X2F_AND_P24X2S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2F_AND_P24X2S)(d0, d1)
#else
#define AE_P24X2F_AND_P24X2S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2F_AND_P24X2S)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24X2F_XOR_P24X2S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2F_XOR_P24X2S)(d0, d1)
#else
#define AE_P24X2F_XOR_P24X2S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2F_XOR_P24X2S)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24X2F_OR_P24X2S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2F_OR_P24X2S)(d0, d1)
#else
#define AE_P24X2F_OR_P24X2S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2F_OR_P24X2S)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24X2F_MULF_P24X2S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2F_MULF_P24X2S)(d0, d1)
#else
#define AE_P24X2F_MULF_P24X2S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2F_MULF_P24X2S)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24X2F_EQ_P24X2S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2F_EQ_P24X2S)(d0, d1)
#else
#define AE_P24X2F_EQ_P24X2S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2F_EQ_P24X2S)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24X2F_LT_P24X2S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2F_LT_P24X2S)(d0, d1)
#else
#define AE_P24X2F_LT_P24X2S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2F_LT_P24X2S)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24X2F_LE_P24X2S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2F_LE_P24X2S)(d0, d1)
#else
#define AE_P24X2F_LE_P24X2S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2F_LE_P24X2S)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24X2F_GT_P24X2S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2F_GT_P24X2S)(d0, d1)
#else
#define AE_P24X2F_GT_P24X2S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2F_GT_P24X2S)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24X2F_GE_P24X2S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2F_GE_P24X2S)(d0, d1)
#else
#define AE_P24X2F_GE_P24X2S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2F_GE_P24X2S)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24X2F_ADDS_P24X2F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2F_ADDS_P24X2F)(d0, d1)
#else
#define AE_P24X2F_ADDS_P24X2F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2F_ADDS_P24X2F)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24X2F_SUBS_P24X2F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2F_SUBS_P24X2F)(d0, d1)
#else
#define AE_P24X2F_SUBS_P24X2F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2F_SUBS_P24X2F)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24X2F_AND_P24X2F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2F_AND_P24X2F)(d0, d1)
#else
#define AE_P24X2F_AND_P24X2F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2F_AND_P24X2F)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24X2F_XOR_P24X2F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2F_XOR_P24X2F)(d0, d1)
#else
#define AE_P24X2F_XOR_P24X2F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2F_XOR_P24X2F)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24X2F_OR_P24X2F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2F_OR_P24X2F)(d0, d1)
#else
#define AE_P24X2F_OR_P24X2F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2F_OR_P24X2F)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24X2F_MULF_P24X2F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2F_MULF_P24X2F)(d0, d1)
#else
#define AE_P24X2F_MULF_P24X2F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2F_MULF_P24X2F)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24X2F_EQ_P24X2F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2F_EQ_P24X2F)(d0, d1)
#else
#define AE_P24X2F_EQ_P24X2F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2F_EQ_P24X2F)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24X2F_LT_P24X2F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2F_LT_P24X2F)(d0, d1)
#else
#define AE_P24X2F_LT_P24X2F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2F_LT_P24X2F)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24X2F_LE_P24X2F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2F_LE_P24X2F)(d0, d1)
#else
#define AE_P24X2F_LE_P24X2F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2F_LE_P24X2F)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24X2F_GT_P24X2F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2F_GT_P24X2F)(d0, d1)
#else
#define AE_P24X2F_GT_P24X2F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2F_GT_P24X2F)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24X2F_GE_P24X2F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2F_GE_P24X2F)(d0, d1)
#else
#define AE_P24X2F_GE_P24X2F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2F_GE_P24X2F)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24X2F_ADDS_P24S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2F_ADDS_P24S)(d0, d1)
#else
#define AE_P24X2F_ADDS_P24S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2F_ADDS_P24S)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24X2F_SUBS_P24S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2F_SUBS_P24S)(d0, d1)
#else
#define AE_P24X2F_SUBS_P24S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2F_SUBS_P24S)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24X2F_AND_P24S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2F_AND_P24S)(d0, d1)
#else
#define AE_P24X2F_AND_P24S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2F_AND_P24S)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24X2F_XOR_P24S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2F_XOR_P24S)(d0, d1)
#else
#define AE_P24X2F_XOR_P24S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2F_XOR_P24S)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24X2F_OR_P24S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2F_OR_P24S)(d0, d1)
#else
#define AE_P24X2F_OR_P24S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2F_OR_P24S)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24X2F_ADDS_P24F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2F_ADDS_P24F)(d0, d1)
#else
#define AE_P24X2F_ADDS_P24F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2F_ADDS_P24F)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24X2F_SUBS_P24F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2F_SUBS_P24F)(d0, d1)
#else
#define AE_P24X2F_SUBS_P24F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2F_SUBS_P24F)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24X2F_AND_P24F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2F_AND_P24F)(d0, d1)
#else
#define AE_P24X2F_AND_P24F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2F_AND_P24F)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24X2F_XOR_P24F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2F_XOR_P24F)(d0, d1)
#else
#define AE_P24X2F_XOR_P24F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2F_XOR_P24F)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24X2F_OR_P24F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2F_OR_P24F)(d0, d1)
#else
#define AE_P24X2F_OR_P24F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2F_OR_P24F)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24X2F_NEGS(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2F_NEGS)(d0)
#else
#define AE_P24X2F_NEGS(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2F_NEGS)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24X2F_BNOT(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2F_BNOT)(d0)
#else
#define AE_P24X2F_BNOT(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2F_BNOT)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24X2F_SLAS(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2F_SLAS)(d0, sa)
#else
#define AE_P24X2F_SLAS(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2F_SLAS)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24X2F_SRA(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2F_SRA)(d0, sa)
#else
#define AE_P24X2F_SRA(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2F_SRA)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24X2F_SLAIS(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2F_SLAIS)(d0, sa)
#else
#define AE_P24X2F_SLAIS(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2F_SLAIS)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24X2F_SRAI(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2F_SRAI)(d0, sa)
#else
#define AE_P24X2F_SRAI(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2F_SRAI)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24S_ADDS_P24X2S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24S_ADDS_P24X2S)(d0, d1)
#else
#define AE_P24S_ADDS_P24X2S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24S_ADDS_P24X2S)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24S_SUBS_P24X2S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24S_SUBS_P24X2S)(d0, d1)
#else
#define AE_P24S_SUBS_P24X2S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24S_SUBS_P24X2S)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24S_AND_P24X2S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24S_AND_P24X2S)(d0, d1)
#else
#define AE_P24S_AND_P24X2S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24S_AND_P24X2S)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24S_XOR_P24X2S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24S_XOR_P24X2S)(d0, d1)
#else
#define AE_P24S_XOR_P24X2S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24S_XOR_P24X2S)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24S_OR_P24X2S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24S_OR_P24X2S)(d0, d1)
#else
#define AE_P24S_OR_P24X2S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24S_OR_P24X2S)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24S_ADDS_P24X2F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24S_ADDS_P24X2F)(d0, d1)
#else
#define AE_P24S_ADDS_P24X2F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24S_ADDS_P24X2F)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24S_SUBS_P24X2F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24S_SUBS_P24X2F)(d0, d1)
#else
#define AE_P24S_SUBS_P24X2F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24S_SUBS_P24X2F)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24S_AND_P24X2F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24S_AND_P24X2F)(d0, d1)
#else
#define AE_P24S_AND_P24X2F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24S_AND_P24X2F)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24S_XOR_P24X2F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24S_XOR_P24X2F)(d0, d1)
#else
#define AE_P24S_XOR_P24X2F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24S_XOR_P24X2F)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24S_OR_P24X2F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24S_OR_P24X2F)(d0, d1)
#else
#define AE_P24S_OR_P24X2F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24S_OR_P24X2F)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24S_ADDS_P24S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24S_ADDS_P24S)(d0, d1)
#else
#define AE_P24S_ADDS_P24S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24S_ADDS_P24S)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24S_SUBS_P24S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24S_SUBS_P24S)(d0, d1)
#else
#define AE_P24S_SUBS_P24S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24S_SUBS_P24S)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24S_AND_P24S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24S_AND_P24S)(d0, d1)
#else
#define AE_P24S_AND_P24S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24S_AND_P24S)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24S_XOR_P24S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24S_XOR_P24S)(d0, d1)
#else
#define AE_P24S_XOR_P24S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24S_XOR_P24S)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24S_OR_P24S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24S_OR_P24S)(d0, d1)
#else
#define AE_P24S_OR_P24S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24S_OR_P24S)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24S_MULF_P24S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24S_MULF_P24S)(d0, d1)
#else
#define AE_P24S_MULF_P24S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24S_MULF_P24S)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24S_ADDS_P24F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24S_ADDS_P24F)(d0, d1)
#else
#define AE_P24S_ADDS_P24F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24S_ADDS_P24F)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24S_SUBS_P24F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24S_SUBS_P24F)(d0, d1)
#else
#define AE_P24S_SUBS_P24F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24S_SUBS_P24F)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24S_AND_P24F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24S_AND_P24F)(d0, d1)
#else
#define AE_P24S_AND_P24F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24S_AND_P24F)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24S_XOR_P24F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24S_XOR_P24F)(d0, d1)
#else
#define AE_P24S_XOR_P24F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24S_XOR_P24F)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24S_OR_P24F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24S_OR_P24F)(d0, d1)
#else
#define AE_P24S_OR_P24F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24S_OR_P24F)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24S_MULF_P24F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24S_MULF_P24F)(d0, d1)
#else
#define AE_P24S_MULF_P24F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24S_MULF_P24F)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24S_NEGS(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_P24S_NEGS)(d0)
#else
#define AE_P24S_NEGS(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_P24S_NEGS)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24S_BNOT(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_P24S_BNOT)(d0)
#else
#define AE_P24S_BNOT(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_P24S_BNOT)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24S_SLAS(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_P24S_SLAS)(d0, sa)
#else
#define AE_P24S_SLAS(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_P24S_SLAS)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24S_SRA(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_P24S_SRA)(d0, sa)
#else
#define AE_P24S_SRA(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_P24S_SRA)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24S_SLAIS(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_P24S_SLAIS)(d0, sa)
#else
#define AE_P24S_SLAIS(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_P24S_SLAIS)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24S_SRAI(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_P24S_SRAI)(d0, sa)
#else
#define AE_P24S_SRAI(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_P24S_SRAI)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24F_ADDS_P24X2S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24F_ADDS_P24X2S)(d0, d1)
#else
#define AE_P24F_ADDS_P24X2S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24F_ADDS_P24X2S)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24F_SUBS_P24X2S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24F_SUBS_P24X2S)(d0, d1)
#else
#define AE_P24F_SUBS_P24X2S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24F_SUBS_P24X2S)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24F_AND_P24X2S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24F_AND_P24X2S)(d0, d1)
#else
#define AE_P24F_AND_P24X2S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24F_AND_P24X2S)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24F_XOR_P24X2S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24F_XOR_P24X2S)(d0, d1)
#else
#define AE_P24F_XOR_P24X2S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24F_XOR_P24X2S)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24F_OR_P24X2S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24F_OR_P24X2S)(d0, d1)
#else
#define AE_P24F_OR_P24X2S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24F_OR_P24X2S)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24F_ADDS_P24X2F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24F_ADDS_P24X2F)(d0, d1)
#else
#define AE_P24F_ADDS_P24X2F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24F_ADDS_P24X2F)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24F_SUBS_P24X2F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24F_SUBS_P24X2F)(d0, d1)
#else
#define AE_P24F_SUBS_P24X2F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24F_SUBS_P24X2F)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24F_AND_P24X2F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24F_AND_P24X2F)(d0, d1)
#else
#define AE_P24F_AND_P24X2F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24F_AND_P24X2F)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24F_XOR_P24X2F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24F_XOR_P24X2F)(d0, d1)
#else
#define AE_P24F_XOR_P24X2F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24F_XOR_P24X2F)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24F_OR_P24X2F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24F_OR_P24X2F)(d0, d1)
#else
#define AE_P24F_OR_P24X2F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24F_OR_P24X2F)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24F_ADDS_P24S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24F_ADDS_P24S)(d0, d1)
#else
#define AE_P24F_ADDS_P24S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24F_ADDS_P24S)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24F_SUBS_P24S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24F_SUBS_P24S)(d0, d1)
#else
#define AE_P24F_SUBS_P24S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24F_SUBS_P24S)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24F_AND_P24S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24F_AND_P24S)(d0, d1)
#else
#define AE_P24F_AND_P24S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24F_AND_P24S)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24F_XOR_P24S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24F_XOR_P24S)(d0, d1)
#else
#define AE_P24F_XOR_P24S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24F_XOR_P24S)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24F_OR_P24S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24F_OR_P24S)(d0, d1)
#else
#define AE_P24F_OR_P24S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24F_OR_P24S)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24F_MULF_P24S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24F_MULF_P24S)(d0, d1)
#else
#define AE_P24F_MULF_P24S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24F_MULF_P24S)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24F_ADDS_P24F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24F_ADDS_P24F)(d0, d1)
#else
#define AE_P24F_ADDS_P24F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24F_ADDS_P24F)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24F_SUBS_P24F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24F_SUBS_P24F)(d0, d1)
#else
#define AE_P24F_SUBS_P24F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24F_SUBS_P24F)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24F_AND_P24F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24F_AND_P24F)(d0, d1)
#else
#define AE_P24F_AND_P24F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24F_AND_P24F)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24F_XOR_P24F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24F_XOR_P24F)(d0, d1)
#else
#define AE_P24F_XOR_P24F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24F_XOR_P24F)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24F_OR_P24F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24F_OR_P24F)(d0, d1)
#else
#define AE_P24F_OR_P24F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24F_OR_P24F)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24F_MULF_P24F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24F_MULF_P24F)(d0, d1)
#else
#define AE_P24F_MULF_P24F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24F_MULF_P24F)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24F_NEGS(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_P24F_NEGS)(d0)
#else
#define AE_P24F_NEGS(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_P24F_NEGS)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24F_BNOT(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_P24F_BNOT)(d0)
#else
#define AE_P24F_BNOT(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_P24F_BNOT)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24F_SLAS(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_P24F_SLAS)(d0, sa)
#else
#define AE_P24F_SLAS(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_P24F_SLAS)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24F_SRA(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_P24F_SRA)(d0, sa)
#else
#define AE_P24F_SRA(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_P24F_SRA)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24F_SLAIS(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_P24F_SLAIS)(d0, sa)
#else
#define AE_P24F_SLAIS(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_P24F_SLAIS)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_P24F_SRAI(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_P24F_SRAI)(d0, sa)
#else
#define AE_P24F_SRAI(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_P24F_SRAI)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_Q56S_ADD(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_Q56S_ADD)(d0, d1)
#else
#define AE_Q56S_ADD(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_Q56S_ADD)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_Q56S_SUB(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_Q56S_SUB)(d0, d1)
#else
#define AE_Q56S_SUB(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_Q56S_SUB)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_Q56S_AND(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_Q56S_AND)(d0, d1)
#else
#define AE_Q56S_AND(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_Q56S_AND)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_Q56S_XOR(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_Q56S_XOR)(d0, d1)
#else
#define AE_Q56S_XOR(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_Q56S_XOR)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_Q56S_OR(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_Q56S_OR)(d0, d1)
#else
#define AE_Q56S_OR(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_Q56S_OR)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_Q56S_NEG(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_Q56S_NEG)(d0)
#else
#define AE_Q56S_NEG(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_Q56S_NEG)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_Q56S_BNOT(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_Q56S_BNOT)(d0)
#else
#define AE_Q56S_BNOT(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_Q56S_BNOT)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_Q56S_SLA(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_Q56S_SLA)(d0, sa)
#else
#define AE_Q56S_SLA(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_Q56S_SLA)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_Q56S_SRA(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_Q56S_SRA)(d0, sa)
#else
#define AE_Q56S_SRA(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_Q56S_SRA)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_Q56S_SRAI(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_Q56S_SRAI)(d0, sa)
#else
#define AE_Q56S_SRAI(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_Q56S_SRAI)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_Q56S_EQ(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_Q56S_EQ)(d0, d1)
#else
#define AE_Q56S_EQ(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_Q56S_EQ)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_Q56S_LT(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_Q56S_LT)(d0, d1)
#else
#define AE_Q56S_LT(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_Q56S_LT)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_Q56S_LE(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_Q56S_LE)(d0, d1)
#else
#define AE_Q56S_LE(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_Q56S_LE)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_Q56S_GT(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_Q56S_GT)(d0, d1)
#else
#define AE_Q56S_GT(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_Q56S_GT)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_Q56S_GE(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_Q56S_GE)(d0, d1)
#else
#define AE_Q56S_GE(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_Q56S_GE)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int32x4_loadi(b, c) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x4_loadi)(b, c)
#else
#define ae_int32x4_loadi(b, c) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x4_loadi)(b, c)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int32x4_storei(d, b, c) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x4_storei)(d, b, c)
#else
#define ae_int32x4_storei(d, b, c) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x4_storei)(d, b, c)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int32x4_move(b) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x4_move)(b)
#else
#define ae_int32x4_move(b) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x4_move)(b)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT32X2_NOT(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_NOT)(d0)
#else
#define AE_INT32X2_NOT(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_NOT)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_f32x4_loadi(b, c) \
	CSTUB_(_TIE_xt_hifi2_ae_f32x4_loadi)(b, c)
#else
#define ae_f32x4_loadi(b, c) \
	CSTUB_(_TIE_xt_hifi2_ae_f32x4_loadi)(b, c)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_f32x4_storei(d, b, c) \
	CSTUB_(_TIE_xt_hifi2_ae_f32x4_storei)(d, b, c)
#else
#define ae_f32x4_storei(d, b, c) \
	CSTUB_(_TIE_xt_hifi2_ae_f32x4_storei)(d, b, c)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_f32x4_move(b) \
	CSTUB_(_TIE_xt_hifi2_ae_f32x4_move)(b)
#else
#define ae_f32x4_move(b) \
	CSTUB_(_TIE_xt_hifi2_ae_f32x4_move)(b)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SEL16X4IR(v0, v1, i) \
	CSTUB_(_TIE_xt_hifi2_AE_SEL16X4IR)(v0, v1, i)
#else
#define AE_SEL16X4IR(v0, v1, i) \
	CSTUB_(_TIE_xt_hifi2_AE_SEL16X4IR)(v0, v1, i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SEL32X2IR(v0, v1, i) \
	CSTUB_(_TIE_xt_hifi2_AE_SEL32X2IR)(v0, v1, i)
#else
#define AE_SEL32X2IR(v0, v1, i) \
	CSTUB_(_TIE_xt_hifi2_AE_SEL32X2IR)(v0, v1, i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SELF32X2IR(v0, v1, i) \
	CSTUB_(_TIE_xt_hifi2_AE_SELF32X2IR)(v0, v1, i)
#else
#define AE_SELF32X2IR(v0, v1, i) \
	CSTUB_(_TIE_xt_hifi2_AE_SELF32X2IR)(v0, v1, i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT32X2_AND_rinit(a) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_AND_rinit)(a)
#else
#define AE_INT32X2_AND_rinit(a) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_AND_rinit)(a)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT32X2_AND_rvec(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_AND_rvec)(d0, d1)
#else
#define AE_INT32X2_AND_rvec(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_AND_rvec)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT32X2_AND_rfini(d) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_AND_rfini)(d)
#else
#define AE_INT32X2_AND_rfini(d) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_AND_rfini)(d)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT32X2_OR_rinit(a) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_OR_rinit)(a)
#else
#define AE_INT32X2_OR_rinit(a) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_OR_rinit)(a)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT32X2_OR_rvec(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_OR_rvec)(d0, d1)
#else
#define AE_INT32X2_OR_rvec(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_OR_rvec)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT32X2_OR_rfini(d) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_OR_rfini)(d)
#else
#define AE_INT32X2_OR_rfini(d) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_OR_rfini)(d)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT32X2_XOR_rinit(a) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_XOR_rinit)(a)
#else
#define AE_INT32X2_XOR_rinit(a) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_XOR_rinit)(a)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT32X2_XOR_rvec(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_XOR_rvec)(d0, d1)
#else
#define AE_INT32X2_XOR_rvec(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_XOR_rvec)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT32X2_XOR_rfini(d) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_XOR_rfini)(d)
#else
#define AE_INT32X2_XOR_rfini(d) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_XOR_rfini)(d)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT32X2_RMIN(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_RMIN)(d0)
#else
#define AE_INT32X2_RMIN(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_RMIN)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT32X2_RMAX(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_RMAX)(d0)
#else
#define AE_INT32X2_RMAX(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_RMAX)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT32X2_RADD(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_RADD)(d0)
#else
#define AE_INT32X2_RADD(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_RADD)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F32X2_RADD(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_F32X2_RADD)(d0)
#else
#define AE_F32X2_RADD(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_F32X2_RADD)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_ABS32S_scalar(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_ABS32S_scalar)(d0)
#else
#define AE_ABS32S_scalar(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_ABS32S_scalar)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT32X4_ABS32S(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X4_ABS32S)(d0)
#else
#define AE_INT32X4_ABS32S(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X4_ABS32S)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT32X2_ABS32S(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_ABS32S)(d0)
#else
#define AE_INT32X2_ABS32S(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_ABS32S)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_ADD32S_scalar(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_ADD32S_scalar)(d0, d1)
#else
#define AE_ADD32S_scalar(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_ADD32S_scalar)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT32X4_ADD32S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X4_ADD32S)(d0, d1)
#else
#define AE_INT32X4_ADD32S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X4_ADD32S)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT32X2_ADD32S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_ADD32S)(d0, d1)
#else
#define AE_INT32X2_ADD32S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_ADD32S)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_NEG32S_scalar(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_NEG32S_scalar)(d0)
#else
#define AE_NEG32S_scalar(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_NEG32S_scalar)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT32X4_NEG32S(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X4_NEG32S)(d0)
#else
#define AE_INT32X4_NEG32S(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X4_NEG32S)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT32X2_NEG32S(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_NEG32S)(d0)
#else
#define AE_INT32X2_NEG32S(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_NEG32S)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SUB32S_scalar(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SUB32S_scalar)(d0, d1)
#else
#define AE_SUB32S_scalar(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SUB32S_scalar)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT32X4_SUB32S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X4_SUB32S)(d0, d1)
#else
#define AE_INT32X4_SUB32S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X4_SUB32S)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT32X2_SUB32S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_SUB32S)(d0, d1)
#else
#define AE_INT32X2_SUB32S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_SUB32S)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SLAA32S_scalar(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SLAA32S_scalar)(d0, sa)
#else
#define AE_SLAA32S_scalar(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SLAA32S_scalar)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SLAA32S_vector(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SLAA32S_vector)(d0, sa)
#else
#define AE_SLAA32S_vector(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SLAA32S_vector)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SRAA32S_scalar(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SRAA32S_scalar)(d0, sa)
#else
#define AE_SRAA32S_scalar(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SRAA32S_scalar)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SRAA32S_vector(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SRAA32S_vector)(d0, sa)
#else
#define AE_SRAA32S_vector(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SRAA32S_vector)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SRAA32RS_scalar(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SRAA32RS_scalar)(d0, sa)
#else
#define AE_SRAA32RS_scalar(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SRAA32RS_scalar)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SRAA32RS_vector(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SRAA32RS_vector)(d0, sa)
#else
#define AE_SRAA32RS_vector(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SRAA32RS_vector)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT16X4_NAND_INT16X4(a, b) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16X4_NAND_INT16X4)(a, b)
#else
#define AE_INT16X4_NAND_INT16X4(a, b) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16X4_NAND_INT16X4)(a, b)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_ABS16S_scalar(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_ABS16S_scalar)(d0)
#else
#define AE_ABS16S_scalar(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_ABS16S_scalar)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_ABS16S_vector(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_ABS16S_vector)(d0)
#else
#define AE_ABS16S_vector(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_ABS16S_vector)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_ADD16S_scalar(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_ADD16S_scalar)(d0, d1)
#else
#define AE_ADD16S_scalar(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_ADD16S_scalar)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_ADD16S_vector(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_ADD16S_vector)(d0, d1)
#else
#define AE_ADD16S_vector(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_ADD16S_vector)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULFP16X4S_scalar(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFP16X4S_scalar)(d0, d1)
#else
#define AE_MULFP16X4S_scalar(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFP16X4S_scalar)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULFP16X4S_vector(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFP16X4S_vector)(d0, d1)
#else
#define AE_MULFP16X4S_vector(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFP16X4S_vector)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULFP16X4RAS_scalar(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFP16X4RAS_scalar)(d0, d1)
#else
#define AE_MULFP16X4RAS_scalar(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFP16X4RAS_scalar)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULFP16X4RAS_vector(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFP16X4RAS_vector)(d0, d1)
#else
#define AE_MULFP16X4RAS_vector(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFP16X4RAS_vector)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_NSAZ16_0_scalar(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_NSAZ16_0_scalar)(d0)
#else
#define AE_NSAZ16_0_scalar(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_NSAZ16_0_scalar)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SAT16X4_scalar(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_SAT16X4_scalar)(d0)
#else
#define AE_SAT16X4_scalar(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_SAT16X4_scalar)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SAT16X4_vector(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_SAT16X4_vector)(d0)
#else
#define AE_SAT16X4_vector(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_SAT16X4_vector)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULF16X4SS_scalar(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF16X4SS_scalar)(d0, d1)
#else
#define AE_MULF16X4SS_scalar(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF16X4SS_scalar)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULF16X4SS_vector(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF16X4SS_vector)(d0, d1)
#else
#define AE_MULF16X4SS_vector(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF16X4SS_vector)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MUL16X4_vector(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MUL16X4_vector)(d0, d1)
#else
#define AE_MUL16X4_vector(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MUL16X4_vector)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULA16X4_vector(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULA16X4_vector)(d, d0, d1)
#else
#define AE_MULA16X4_vector(d, d0, d1) { \
	ae_int32x4 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULA16X4_vector)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAAR16P16X4S_vector(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAR16P16X4S_vector)(d, d0, d1)
#else
#define AE_MULAAR16P16X4S_vector(d, d0, d1) { \
	ae_int16x4 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAR16P16X4S_vector)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULR16P16X4S_vector(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULR16P16X4S_vector)(d0, d1)
#else
#define AE_MULR16P16X4S_vector(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULR16P16X4S_vector)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAF16X4SS_scalar(ain, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF16X4SS_scalar)(ain, d0, d1)
#else
#define AE_MULAF16X4SS_scalar(ain, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF16X4SS_scalar)(ain, d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAF16X4SS_vector(pin, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF16X4SS_vector)(pin, d0, d1)
#else
#define AE_MULAF16X4SS_vector(pin, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF16X4SS_vector)(pin, d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSF16X4SS_scalar(ain, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF16X4SS_scalar)(ain, d0, d1)
#else
#define AE_MULSF16X4SS_scalar(ain, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF16X4SS_scalar)(ain, d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULSF16X4SS_vector(pin, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF16X4SS_vector)(pin, d0, d1)
#else
#define AE_MULSF16X4SS_vector(pin, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF16X4SS_vector)(pin, d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_RLmac_rinit(a) \
	CSTUB_(_TIE_xt_hifi2_AE_RLmac_rinit)(a)
#else
#define AE_RLmac_rinit(a) \
	CSTUB_(_TIE_xt_hifi2_AE_RLmac_rinit)(a)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_RLmac_rvec(din, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_RLmac_rvec)(din, d0, d1)
#else
#define AE_RLmac_rvec(din, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_RLmac_rvec)(din, d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_RLmac_rfini(d) \
	CSTUB_(_TIE_xt_hifi2_AE_RLmac_rfini)(d)
#else
#define AE_RLmac_rfini(d) \
	CSTUB_(_TIE_xt_hifi2_AE_RLmac_rfini)(d)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_RLmsu_rinit(a) \
	CSTUB_(_TIE_xt_hifi2_AE_RLmsu_rinit)(a)
#else
#define AE_RLmsu_rinit(a) \
	CSTUB_(_TIE_xt_hifi2_AE_RLmsu_rinit)(a)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_RLmsu_rvec(din, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_RLmsu_rvec)(din, d0, d1)
#else
#define AE_RLmsu_rvec(din, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_RLmsu_rvec)(din, d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_RLmsu_rfini(d) \
	CSTUB_(_TIE_xt_hifi2_AE_RLmsu_rfini)(d)
#else
#define AE_RLmsu_rfini(d) \
	CSTUB_(_TIE_xt_hifi2_AE_RLmsu_rfini)(d)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_RLadd_rinit(a) \
	CSTUB_(_TIE_xt_hifi2_AE_RLadd_rinit)(a)
#else
#define AE_RLadd_rinit(a) \
	CSTUB_(_TIE_xt_hifi2_AE_RLadd_rinit)(a)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_RLadd_rvec(din, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_RLadd_rvec)(din, d0)
#else
#define AE_RLadd_rvec(din, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_RLadd_rvec)(din, d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_RLadd_rfini(d) \
	CSTUB_(_TIE_xt_hifi2_AE_RLadd_rfini)(d)
#else
#define AE_RLadd_rfini(d) \
	CSTUB_(_TIE_xt_hifi2_AE_RLadd_rfini)(d)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_RLadd4_rinit(a) \
	CSTUB_(_TIE_xt_hifi2_AE_RLadd4_rinit)(a)
#else
#define AE_RLadd4_rinit(a) \
	CSTUB_(_TIE_xt_hifi2_AE_RLadd4_rinit)(a)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_RLadd4_rvec(din, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_RLadd4_rvec)(din, d0)
#else
#define AE_RLadd4_rvec(din, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_RLadd4_rvec)(din, d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_RLadd4_rfini(d) \
	CSTUB_(_TIE_xt_hifi2_AE_RLadd4_rfini)(d)
#else
#define AE_RLadd4_rfini(d) \
	CSTUB_(_TIE_xt_hifi2_AE_RLadd4_rfini)(d)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_RLsub_rinit(a) \
	CSTUB_(_TIE_xt_hifi2_AE_RLsub_rinit)(a)
#else
#define AE_RLsub_rinit(a) \
	CSTUB_(_TIE_xt_hifi2_AE_RLsub_rinit)(a)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_RLsub_rvec(din, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_RLsub_rvec)(din, d0)
#else
#define AE_RLsub_rvec(din, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_RLsub_rvec)(din, d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_RLsub_rfini(d) \
	CSTUB_(_TIE_xt_hifi2_AE_RLsub_rfini)(d)
#else
#define AE_RLsub_rfini(d) \
	CSTUB_(_TIE_xt_hifi2_AE_RLsub_rfini)(d)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_RLsub4_rinit(a) \
	CSTUB_(_TIE_xt_hifi2_AE_RLsub4_rinit)(a)
#else
#define AE_RLsub4_rinit(a) \
	CSTUB_(_TIE_xt_hifi2_AE_RLsub4_rinit)(a)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_RLsub4_rvec(din, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_RLsub4_rvec)(din, d0)
#else
#define AE_RLsub4_rvec(din, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_RLsub4_rvec)(din, d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_RLsub4_rfini(d) \
	CSTUB_(_TIE_xt_hifi2_AE_RLsub4_rfini)(d)
#else
#define AE_RLsub4_rfini(d) \
	CSTUB_(_TIE_xt_hifi2_AE_RLsub4_rfini)(d)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_NEG16S_scalar(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_NEG16S_scalar)(d0)
#else
#define AE_NEG16S_scalar(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_NEG16S_scalar)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_NEG16S_vector(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_NEG16S_vector)(d0)
#else
#define AE_NEG16S_vector(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_NEG16S_vector)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_ROUND16X4F32SASYM_scalar(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_ROUND16X4F32SASYM_scalar)(d0)
#else
#define AE_ROUND16X4F32SASYM_scalar(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_ROUND16X4F32SASYM_scalar)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_ROUND16X4F32SASYM_vector(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_ROUND16X4F32SASYM_vector)(d0)
#else
#define AE_ROUND16X4F32SASYM_vector(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_ROUND16X4F32SASYM_vector)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SUB16S_scalar(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SUB16S_scalar)(d0, d1)
#else
#define AE_SUB16S_scalar(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SUB16S_scalar)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SUB16S_vector(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SUB16S_vector)(d0, d1)
#else
#define AE_SUB16S_vector(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SUB16S_vector)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SLAA16S_scalar(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SLAA16S_scalar)(d0, sa)
#else
#define AE_SLAA16S_scalar(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SLAA16S_scalar)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SLAA16S_vector(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SLAA16S_vector)(d0, sa)
#else
#define AE_SLAA16S_vector(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SLAA16S_vector)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SRAA16S_scalar(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SRAA16S_scalar)(d0, sa)
#else
#define AE_SRAA16S_scalar(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SRAA16S_scalar)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SRAA16S_vector(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SRAA16S_vector)(d0, sa)
#else
#define AE_SRAA16S_vector(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SRAA16S_vector)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SRAA16RS_scalar(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SRAA16RS_scalar)(d0, sa)
#else
#define AE_SRAA16RS_scalar(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SRAA16RS_scalar)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SRAA16RS_vector(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SRAA16RS_vector)(d0, sa)
#else
#define AE_SRAA16RS_vector(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SRAA16RS_vector)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_CVT16X4_scalar(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_CVT16X4_scalar)(d0)
#else
#define AE_CVT16X4_scalar(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_CVT16X4_scalar)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_CVT16X4_vector(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_CVT16X4_vector)(d0)
#else
#define AE_CVT16X4_vector(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_CVT16X4_vector)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_TRUNC16X4F32_scalar(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_TRUNC16X4F32_scalar)(d0)
#else
#define AE_TRUNC16X4F32_scalar(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_TRUNC16X4F32_scalar)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_TRUNC16X4F32_vector(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_TRUNC16X4F32_vector)(d0)
#else
#define AE_TRUNC16X4F32_vector(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_TRUNC16X4F32_vector)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SEXT32X2D16_10_scalar(p) \
	CSTUB_(_TIE_xt_hifi2_AE_SEXT32X2D16_10_scalar)(p)
#else
#define AE_SEXT32X2D16_10_scalar(p) \
	CSTUB_(_TIE_xt_hifi2_AE_SEXT32X2D16_10_scalar)(p)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SEXT32X2D16_10_vector(p) \
	CSTUB_(_TIE_xt_hifi2_AE_SEXT32X2D16_10_vector)(p)
#else
#define AE_SEXT32X2D16_10_vector(p) \
	CSTUB_(_TIE_xt_hifi2_AE_SEXT32X2D16_10_vector)(p)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_CVT32X2F16_10_scalar(p) \
	CSTUB_(_TIE_xt_hifi2_AE_CVT32X2F16_10_scalar)(p)
#else
#define AE_CVT32X2F16_10_scalar(p) \
	CSTUB_(_TIE_xt_hifi2_AE_CVT32X2F16_10_scalar)(p)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_CVT32X2F16_10_vector(p) \
	CSTUB_(_TIE_xt_hifi2_AE_CVT32X2F16_10_vector)(p)
#else
#define AE_CVT32X2F16_10_vector(p) \
	CSTUB_(_TIE_xt_hifi2_AE_CVT32X2F16_10_vector)(p)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int16x4_rtor_ae_int32x4(b) \
	CSTUB_(_TIE_xt_hifi2_ae_int16x4_rtor_ae_int32x4)(b)
#else
#define ae_int16x4_rtor_ae_int32x4(b) \
	CSTUB_(_TIE_xt_hifi2_ae_int16x4_rtor_ae_int32x4)(b)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int32x4_rtor_ae_int16x4(b) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x4_rtor_ae_int16x4)(b)
#else
#define ae_int32x4_rtor_ae_int16x4(b) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x4_rtor_ae_int16x4)(b)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SRAA16_VECTOR(b, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SRAA16_VECTOR)(b, sa)
#else
#define AE_SRAA16_VECTOR(b, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SRAA16_VECTOR)(b, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F32X4_RADD(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_F32X4_RADD)(d0)
#else
#define AE_F32X4_RADD(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_F32X4_RADD)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT32X4_RADD(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X4_RADD)(d0)
#else
#define AE_INT32X4_RADD(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X4_RADD)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT32X4_ADD(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X4_ADD)(d0, d1)
#else
#define AE_INT32X4_ADD(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X4_ADD)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT32X4_SUB(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X4_SUB)(d0, d1)
#else
#define AE_INT32X4_SUB(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X4_SUB)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT32X4_AND(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X4_AND)(d0, d1)
#else
#define AE_INT32X4_AND(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X4_AND)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT32X4_OR(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X4_OR)(d0, d1)
#else
#define AE_INT32X4_OR(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X4_OR)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT32X4_XOR(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X4_XOR)(d0, d1)
#else
#define AE_INT32X4_XOR(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X4_XOR)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT32X4_BNOT(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X4_BNOT)(d0)
#else
#define AE_INT32X4_BNOT(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X4_BNOT)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT32X4_INT16X4_MUL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X4_INT16X4_MUL)(d0, d1)
#else
#define AE_INT32X4_INT16X4_MUL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X4_INT16X4_MUL)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT16X4_INT32X4_MUL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16X4_INT32X4_MUL)(d0, d1)
#else
#define AE_INT16X4_INT32X4_MUL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16X4_INT32X4_MUL)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT32X4_SRAI32(d0, i) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X4_SRAI32)(d0, i)
#else
#define AE_INT32X4_SRAI32(d0, i) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X4_SRAI32)(d0, i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT32X4_SRAA32(d0, a) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X4_SRAA32)(d0, a)
#else
#define AE_INT32X4_SRAA32(d0, a) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X4_SRAA32)(d0, a)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT32X4_SLAI32(d0, i) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X4_SLAI32)(d0, i)
#else
#define AE_INT32X4_SLAI32(d0, i) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X4_SLAI32)(d0, i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT32X4_SLAA32(d0, a) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X4_SLAA32)(d0, a)
#else
#define AE_INT32X4_SLAA32(d0, a) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X4_SLAA32)(d0, a)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT32X4_NEG32(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X4_NEG32)(d0)
#else
#define AE_INT32X4_NEG32(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X4_NEG32)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT32X4_ABS32(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X4_ABS32)(d0)
#else
#define AE_INT32X4_ABS32(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X4_ABS32)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT32X4_MAX(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X4_MAX)(d0, d1)
#else
#define AE_INT32X4_MAX(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X4_MAX)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT32X4_MIN(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X4_MIN)(d0, d1)
#else
#define AE_INT32X4_MIN(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X4_MIN)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT16X4_MIN(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16X4_MIN)(d0, d1)
#else
#define AE_INT16X4_MIN(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16X4_MIN)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT16X4_MAX(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16X4_MAX)(d0, d1)
#else
#define AE_INT16X4_MAX(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16X4_MAX)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT16X4_RMAX(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16X4_RMAX)(d0)
#else
#define AE_INT16X4_RMAX(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16X4_RMAX)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT16X4_RMIN(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16X4_RMIN)(d0)
#else
#define AE_INT16X4_RMIN(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16X4_RMIN)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT16X4_RADD(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16X4_RADD)(d0)
#else
#define AE_INT16X4_RADD(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16X4_RADD)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F32X4_ADD(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F32X4_ADD)(d0, d1)
#else
#define AE_F32X4_ADD(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F32X4_ADD)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F32X4_SUB(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F32X4_SUB)(d0, d1)
#else
#define AE_F32X4_SUB(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F32X4_SUB)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F32X4_NEG32(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_F32X4_NEG32)(d0)
#else
#define AE_F32X4_NEG32(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_F32X4_NEG32)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F32X4_F16X4_MUL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F32X4_F16X4_MUL)(d0, d1)
#else
#define AE_F32X4_F16X4_MUL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F32X4_F16X4_MUL)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F16X4_F32X4_MUL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F16X4_F32X4_MUL)(d0, d1)
#else
#define AE_F16X4_F32X4_MUL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F16X4_F32X4_MUL)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F32X4_AND(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F32X4_AND)(d0, d1)
#else
#define AE_F32X4_AND(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F32X4_AND)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F32X4_OR(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F32X4_OR)(d0, d1)
#else
#define AE_F32X4_OR(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F32X4_OR)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F32X4_XOR(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F32X4_XOR)(d0, d1)
#else
#define AE_F32X4_XOR(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F32X4_XOR)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F32X4_BNOT(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_F32X4_BNOT)(d0)
#else
#define AE_F32X4_BNOT(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_F32X4_BNOT)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F32X4_SLAI32S(d0, i) \
	CSTUB_(_TIE_xt_hifi2_AE_F32X4_SLAI32S)(d0, i)
#else
#define AE_F32X4_SLAI32S(d0, i) \
	CSTUB_(_TIE_xt_hifi2_AE_F32X4_SLAI32S)(d0, i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F32X4_SLAA32S(d0, a) \
	CSTUB_(_TIE_xt_hifi2_AE_F32X4_SLAA32S)(d0, a)
#else
#define AE_F32X4_SLAA32S(d0, a) \
	CSTUB_(_TIE_xt_hifi2_AE_F32X4_SLAA32S)(d0, a)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F32X4_SRAI32(d0, i) \
	CSTUB_(_TIE_xt_hifi2_AE_F32X4_SRAI32)(d0, i)
#else
#define AE_F32X4_SRAI32(d0, i) \
	CSTUB_(_TIE_xt_hifi2_AE_F32X4_SRAI32)(d0, i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_F32X4_SRAA32(d0, a) \
	CSTUB_(_TIE_xt_hifi2_AE_F32X4_SRAA32)(d0, a)
#else
#define AE_F32X4_SRAA32(d0, a) \
	CSTUB_(_TIE_xt_hifi2_AE_F32X4_SRAA32)(d0, a)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int16x4_aligning_load_prime(a) \
	CSTUB_(_TIE_xt_hifi2_ae_int16x4_aligning_load_prime)(a)
#else
#define ae_int16x4_aligning_load_prime(a) \
	CSTUB_(_TIE_xt_hifi2_ae_int16x4_aligning_load_prime)(a)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int16x4_aligning_load_post_update_positive(v, u, a) \
	CSTUB_(_TIE_xt_hifi2_ae_int16x4_aligning_load_post_update_positive)(v, u, (const ae_int16x4 **)&(a))
#else
#define ae_int16x4_aligning_load_post_update_positive(v, u, a) { \
	ae_int16x4 __v; \
	ae_valign __u = u; \
	CSTUB_(_TIE_xt_hifi2_ae_int16x4_aligning_load_post_update_positive)(__v, __u, (const ae_int16x4 **)&(a)); \
	(v) = __v; \
	(u) = __u; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int16x4_aligning_load_post_update_negative(v, u, a) \
	CSTUB_(_TIE_xt_hifi2_ae_int16x4_aligning_load_post_update_negative)(v, u, (const ae_int16x4 **)&(a))
#else
#define ae_int16x4_aligning_load_post_update_negative(v, u, a) { \
	ae_int16x4 __v; \
	ae_valign __u = u; \
	CSTUB_(_TIE_xt_hifi2_ae_int16x4_aligning_load_post_update_negative)(__v, __u, (const ae_int16x4 **)&(a)); \
	(v) = __v; \
	(u) = __u; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int16x4_load_post_update_positive(v, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int16x4_load_post_update_positive)(v, (const ae_int16x4 **)&(a), off)
#else
#define ae_int16x4_load_post_update_positive(v, a, off) { \
	ae_int16x4 __v; \
	CSTUB_(_TIE_xt_hifi2_ae_int16x4_load_post_update_positive)(__v, (const ae_int16x4 **)&(a), off); \
	(v) = __v; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int16x4_load_post_update_negative(v, a) \
	CSTUB_(_TIE_xt_hifi2_ae_int16x4_load_post_update_negative)(v, (const ae_int16x4 **)&(a))
#else
#define ae_int16x4_load_post_update_negative(v, a) { \
	ae_int16x4 __v; \
	CSTUB_(_TIE_xt_hifi2_ae_int16x4_load_post_update_negative)(__v, (const ae_int16x4 **)&(a)); \
	(v) = __v; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int16x4_aligning_store_prime() \
	CSTUB_(_TIE_xt_hifi2_ae_int16x4_aligning_store_prime)()
#else
#define ae_int16x4_aligning_store_prime() \
	CSTUB_(_TIE_xt_hifi2_ae_int16x4_aligning_store_prime)()
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int16x4_aligning_store_post_update_positive(v, u, a) \
	CSTUB_(_TIE_xt_hifi2_ae_int16x4_aligning_store_post_update_positive)(v, u, (ae_int16x4 **)&(a))
#else
#define ae_int16x4_aligning_store_post_update_positive(v, u, a) { \
	ae_valign __u = u; \
	CSTUB_(_TIE_xt_hifi2_ae_int16x4_aligning_store_post_update_positive)(v, __u, (ae_int16x4 **)&(a)); \
	(u) = __u; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int16x4_aligning_store_post_update_negative(v, u, a) \
	CSTUB_(_TIE_xt_hifi2_ae_int16x4_aligning_store_post_update_negative)(v, u, (ae_int16x4 **)&(a))
#else
#define ae_int16x4_aligning_store_post_update_negative(v, u, a) { \
	ae_valign __u = u; \
	CSTUB_(_TIE_xt_hifi2_ae_int16x4_aligning_store_post_update_negative)(v, __u, (ae_int16x4 **)&(a)); \
	(u) = __u; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int16x4_store_post_update_positive(v, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int16x4_store_post_update_positive)(v, (ae_int16x4 **)&(a), off)
#else
#define ae_int16x4_store_post_update_positive(v, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int16x4_store_post_update_positive)(v, (ae_int16x4 **)&(a), off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int16x4_store_post_update_negative(v, a) \
	CSTUB_(_TIE_xt_hifi2_ae_int16x4_store_post_update_negative)(v, (ae_int16x4 **)&(a))
#else
#define ae_int16x4_store_post_update_negative(v, a) \
	CSTUB_(_TIE_xt_hifi2_ae_int16x4_store_post_update_negative)(v, (ae_int16x4 **)&(a))
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int16x4_aligning_store_flush_positive(u, a) \
	CSTUB_(_TIE_xt_hifi2_ae_int16x4_aligning_store_flush_positive)(u, a)
#else
#define ae_int16x4_aligning_store_flush_positive(u, a) { \
	ae_valign __u = u; \
	CSTUB_(_TIE_xt_hifi2_ae_int16x4_aligning_store_flush_positive)(__u, a); \
	(u) = __u; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int16x4_aligning_store_flush_negative(u, a) \
	CSTUB_(_TIE_xt_hifi2_ae_int16x4_aligning_store_flush_negative)(u, a)
#else
#define ae_int16x4_aligning_store_flush_negative(u, a) { \
	ae_valign __u = u; \
	CSTUB_(_TIE_xt_hifi2_ae_int16x4_aligning_store_flush_negative)(__u, a); \
	(u) = __u; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int32x2_aligning_load_prime(a) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x2_aligning_load_prime)(a)
#else
#define ae_int32x2_aligning_load_prime(a) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x2_aligning_load_prime)(a)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int32x2_aligning_load_post_update_positive(v, u, a) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x2_aligning_load_post_update_positive)(v, u, (const ae_int32x2 **)&(a))
#else
#define ae_int32x2_aligning_load_post_update_positive(v, u, a) { \
	ae_int32x2 __v; \
	ae_valign __u = u; \
	CSTUB_(_TIE_xt_hifi2_ae_int32x2_aligning_load_post_update_positive)(__v, __u, (const ae_int32x2 **)&(a)); \
	(v) = __v; \
	(u) = __u; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int32x2_aligning_load_post_update_negative(v, u, a) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x2_aligning_load_post_update_negative)(v, u, (const ae_int32x2 **)&(a))
#else
#define ae_int32x2_aligning_load_post_update_negative(v, u, a) { \
	ae_int32x2 __v; \
	ae_valign __u = u; \
	CSTUB_(_TIE_xt_hifi2_ae_int32x2_aligning_load_post_update_negative)(__v, __u, (const ae_int32x2 **)&(a)); \
	(v) = __v; \
	(u) = __u; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int32x2_load_post_update_positive(v, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x2_load_post_update_positive)(v, (const ae_int32x2 **)&(a), off)
#else
#define ae_int32x2_load_post_update_positive(v, a, off) { \
	ae_int32x2 __v; \
	CSTUB_(_TIE_xt_hifi2_ae_int32x2_load_post_update_positive)(__v, (const ae_int32x2 **)&(a), off); \
	(v) = __v; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int32x2_load_post_update_negative(v, a) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x2_load_post_update_negative)(v, (const ae_int32x2 **)&(a))
#else
#define ae_int32x2_load_post_update_negative(v, a) { \
	ae_int32x2 __v; \
	CSTUB_(_TIE_xt_hifi2_ae_int32x2_load_post_update_negative)(__v, (const ae_int32x2 **)&(a)); \
	(v) = __v; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int32x2_aligning_store_prime() \
	CSTUB_(_TIE_xt_hifi2_ae_int32x2_aligning_store_prime)()
#else
#define ae_int32x2_aligning_store_prime() \
	CSTUB_(_TIE_xt_hifi2_ae_int32x2_aligning_store_prime)()
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int32x2_aligning_store_post_update_positive(v, u, a) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x2_aligning_store_post_update_positive)(v, u, (ae_int32x2 **)&(a))
#else
#define ae_int32x2_aligning_store_post_update_positive(v, u, a) { \
	ae_valign __u = u; \
	CSTUB_(_TIE_xt_hifi2_ae_int32x2_aligning_store_post_update_positive)(v, __u, (ae_int32x2 **)&(a)); \
	(u) = __u; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int32x2_aligning_store_post_update_negative(v, u, a) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x2_aligning_store_post_update_negative)(v, u, (ae_int32x2 **)&(a))
#else
#define ae_int32x2_aligning_store_post_update_negative(v, u, a) { \
	ae_valign __u = u; \
	CSTUB_(_TIE_xt_hifi2_ae_int32x2_aligning_store_post_update_negative)(v, __u, (ae_int32x2 **)&(a)); \
	(u) = __u; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int32x2_store_post_update_positive(v, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x2_store_post_update_positive)(v, (ae_int32x2 **)&(a), off)
#else
#define ae_int32x2_store_post_update_positive(v, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x2_store_post_update_positive)(v, (ae_int32x2 **)&(a), off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int32x2_store_post_update_negative(v, a) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x2_store_post_update_negative)(v, (ae_int32x2 **)&(a))
#else
#define ae_int32x2_store_post_update_negative(v, a) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x2_store_post_update_negative)(v, (ae_int32x2 **)&(a))
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int32x2_aligning_store_flush_positive(u, a) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x2_aligning_store_flush_positive)(u, a)
#else
#define ae_int32x2_aligning_store_flush_positive(u, a) { \
	ae_valign __u = u; \
	CSTUB_(_TIE_xt_hifi2_ae_int32x2_aligning_store_flush_positive)(__u, a); \
	(u) = __u; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int32x2_aligning_store_flush_negative(u, a) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x2_aligning_store_flush_negative)(u, a)
#else
#define ae_int32x2_aligning_store_flush_negative(u, a) { \
	ae_valign __u = u; \
	CSTUB_(_TIE_xt_hifi2_ae_int32x2_aligning_store_flush_negative)(__u, a); \
	(u) = __u; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int32x4_aligning_load_prime(a) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x4_aligning_load_prime)(a)
#else
#define ae_int32x4_aligning_load_prime(a) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x4_aligning_load_prime)(a)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int32x4_aligning_load_post_update_positive(v, u, a) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x4_aligning_load_post_update_positive)(v, u, (const ae_int32x4 **)&(a))
#else
#define ae_int32x4_aligning_load_post_update_positive(v, u, a) { \
	ae_int32x4 __v; \
	ae_valign __u = u; \
	CSTUB_(_TIE_xt_hifi2_ae_int32x4_aligning_load_post_update_positive)(__v, __u, (const ae_int32x4 **)&(a)); \
	(v) = __v; \
	(u) = __u; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int32x4_aligning_load_post_update_negative(v, u, a) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x4_aligning_load_post_update_negative)(v, u, (const ae_int32x4 **)&(a))
#else
#define ae_int32x4_aligning_load_post_update_negative(v, u, a) { \
	ae_int32x4 __v; \
	ae_valign __u = u; \
	CSTUB_(_TIE_xt_hifi2_ae_int32x4_aligning_load_post_update_negative)(__v, __u, (const ae_int32x4 **)&(a)); \
	(v) = __v; \
	(u) = __u; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int32x4_load_post_update_positive(v, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x4_load_post_update_positive)(v, (const ae_int32x4 **)&(a), off)
#else
#define ae_int32x4_load_post_update_positive(v, a, off) { \
	ae_int32x4 __v; \
	CSTUB_(_TIE_xt_hifi2_ae_int32x4_load_post_update_positive)(__v, (const ae_int32x4 **)&(a), off); \
	(v) = __v; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int32x4_load_post_update_negative(v, a) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x4_load_post_update_negative)(v, (const ae_int32x4 **)&(a))
#else
#define ae_int32x4_load_post_update_negative(v, a) { \
	ae_int32x4 __v; \
	CSTUB_(_TIE_xt_hifi2_ae_int32x4_load_post_update_negative)(__v, (const ae_int32x4 **)&(a)); \
	(v) = __v; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int32x4_aligning_store_prime() \
	CSTUB_(_TIE_xt_hifi2_ae_int32x4_aligning_store_prime)()
#else
#define ae_int32x4_aligning_store_prime() \
	CSTUB_(_TIE_xt_hifi2_ae_int32x4_aligning_store_prime)()
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int32x4_aligning_store_post_update_positive(v, u, a) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x4_aligning_store_post_update_positive)(v, u, (ae_int32x4 **)&(a))
#else
#define ae_int32x4_aligning_store_post_update_positive(v, u, a) { \
	ae_valign __u = u; \
	CSTUB_(_TIE_xt_hifi2_ae_int32x4_aligning_store_post_update_positive)(v, __u, (ae_int32x4 **)&(a)); \
	(u) = __u; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int32x4_aligning_store_post_update_negative(v, u, a) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x4_aligning_store_post_update_negative)(v, u, (ae_int32x4 **)&(a))
#else
#define ae_int32x4_aligning_store_post_update_negative(v, u, a) { \
	ae_valign __u = u; \
	CSTUB_(_TIE_xt_hifi2_ae_int32x4_aligning_store_post_update_negative)(v, __u, (ae_int32x4 **)&(a)); \
	(u) = __u; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int32x4_store_post_update_positive(v, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x4_store_post_update_positive)(v, (ae_int32x4 **)&(a), off)
#else
#define ae_int32x4_store_post_update_positive(v, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x4_store_post_update_positive)(v, (ae_int32x4 **)&(a), off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int32x4_store_post_update_negative(v, a) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x4_store_post_update_negative)(v, (ae_int32x4 **)&(a))
#else
#define ae_int32x4_store_post_update_negative(v, a) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x4_store_post_update_negative)(v, (ae_int32x4 **)&(a))
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int32x4_aligning_store_flush_positive(u, a) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x4_aligning_store_flush_positive)(u, a)
#else
#define ae_int32x4_aligning_store_flush_positive(u, a) { \
	ae_valign __u = u; \
	CSTUB_(_TIE_xt_hifi2_ae_int32x4_aligning_store_flush_positive)(__u, a); \
	(u) = __u; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int32x4_aligning_store_flush_negative(u, a) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x4_aligning_store_flush_negative)(u, a)
#else
#define ae_int32x4_aligning_store_flush_negative(u, a) { \
	ae_valign __u = u; \
	CSTUB_(_TIE_xt_hifi2_ae_int32x4_aligning_store_flush_negative)(__u, a); \
	(u) = __u; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int32x2_vextract_0_p32s(d) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x2_vextract_0_p32s)(d)
#else
#define ae_int32x2_vextract_0_p32s(d) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x2_vextract_0_p32s)(d)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int32x2_vextract_1_p32s(d) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x2_vextract_1_p32s)(d)
#else
#define ae_int32x2_vextract_1_p32s(d) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x2_vextract_1_p32s)(d)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int32x2_vpack_p32s(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x2_vpack_p32s)(d1, d0)
#else
#define ae_int32x2_vpack_p32s(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x2_vpack_p32s)(d1, d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int32x2_vextract_0_ae_int32(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x2_vextract_0_ae_int32)(d0)
#else
#define ae_int32x2_vextract_0_ae_int32(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x2_vextract_0_ae_int32)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int32x2_vextract_1_ae_int32(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x2_vextract_1_ae_int32)(d0)
#else
#define ae_int32x2_vextract_1_ae_int32(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x2_vextract_1_ae_int32)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int32x2_vpack_ae_int32(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x2_vpack_ae_int32)(d1, d0)
#else
#define ae_int32x2_vpack_ae_int32(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x2_vpack_ae_int32)(d1, d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define int32_rtor_ae_int64(a) \
	CSTUB_(_TIE_xt_hifi2_int32_rtor_ae_int64)(a)
#else
#define int32_rtor_ae_int64(a) \
	CSTUB_(_TIE_xt_hifi2_int32_rtor_ae_int64)(a)
#endif

#ifdef _STRICT_ARG_TYPE
#define int16_rtor_ae_int64(a) \
	CSTUB_(_TIE_xt_hifi2_int16_rtor_ae_int64)(a)
#else
#define int16_rtor_ae_int64(a) \
	CSTUB_(_TIE_xt_hifi2_int16_rtor_ae_int64)(a)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int32_rtor_ae_int64(a) \
	CSTUB_(_TIE_xt_hifi2_ae_int32_rtor_ae_int64)(a)
#else
#define ae_int32_rtor_ae_int64(a) \
	CSTUB_(_TIE_xt_hifi2_ae_int32_rtor_ae_int64)(a)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int16_rtor_ae_int64(a) \
	CSTUB_(_TIE_xt_hifi2_ae_int16_rtor_ae_int64)(a)
#else
#define ae_int16_rtor_ae_int64(a) \
	CSTUB_(_TIE_xt_hifi2_ae_int16_rtor_ae_int64)(a)
#endif

#ifdef _STRICT_ARG_TYPE
#define int32_rtor_ae_f64(a) \
	CSTUB_(_TIE_xt_hifi2_int32_rtor_ae_f64)(a)
#else
#define int32_rtor_ae_f64(a) \
	CSTUB_(_TIE_xt_hifi2_int32_rtor_ae_f64)(a)
#endif

#ifdef _STRICT_ARG_TYPE
#define int16_rtor_ae_f64(a) \
	CSTUB_(_TIE_xt_hifi2_int16_rtor_ae_f64)(a)
#else
#define int16_rtor_ae_f64(a) \
	CSTUB_(_TIE_xt_hifi2_int16_rtor_ae_f64)(a)
#endif

#ifdef _STRICT_ARG_TYPE
#define int64_rtor_ae_f64(a) \
	CSTUB_(_TIE_xt_hifi2_int64_rtor_ae_f64)(a)
#else
#define int64_rtor_ae_f64(a) \
	CSTUB_(_TIE_xt_hifi2_int64_rtor_ae_f64)(a)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_f64_rtor_int64(d) \
	CSTUB_(_TIE_xt_hifi2_ae_f64_rtor_int64)(d)
#else
#define ae_f64_rtor_int64(d) \
	CSTUB_(_TIE_xt_hifi2_ae_f64_rtor_int64)(d)
#endif

#ifdef _STRICT_ARG_TYPE
#define int64_rtor_ae_int64(a) \
	CSTUB_(_TIE_xt_hifi2_int64_rtor_ae_int64)(a)
#else
#define int64_rtor_ae_int64(a) \
	CSTUB_(_TIE_xt_hifi2_int64_rtor_ae_int64)(a)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int64_rtor_int64(d) \
	CSTUB_(_TIE_xt_hifi2_ae_int64_rtor_int64)(d)
#else
#define ae_int64_rtor_int64(d) \
	CSTUB_(_TIE_xt_hifi2_ae_int64_rtor_int64)(d)
#endif

#ifdef _STRICT_ARG_TYPE
#define uint64_rtor_ae_int64(a) \
	CSTUB_(_TIE_xt_hifi2_uint64_rtor_ae_int64)(a)
#else
#define uint64_rtor_ae_int64(a) \
	CSTUB_(_TIE_xt_hifi2_uint64_rtor_ae_int64)(a)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int64_rtor_uint64(d) \
	CSTUB_(_TIE_xt_hifi2_ae_int64_rtor_uint64)(d)
#else
#define ae_int64_rtor_uint64(d) \
	CSTUB_(_TIE_xt_hifi2_ae_int64_rtor_uint64)(d)
#endif

#ifdef _STRICT_ARG_TYPE
#define int32_rtor_ae_int32(a) \
	CSTUB_(_TIE_xt_hifi2_int32_rtor_ae_int32)(a)
#else
#define int32_rtor_ae_int32(a) \
	CSTUB_(_TIE_xt_hifi2_int32_rtor_ae_int32)(a)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int32_rtor_int32(d) \
	CSTUB_(_TIE_xt_hifi2_ae_int32_rtor_int32)(d)
#else
#define ae_int32_rtor_int32(d) \
	CSTUB_(_TIE_xt_hifi2_ae_int32_rtor_int32)(d)
#endif

#ifdef _STRICT_ARG_TYPE
#define int32_rtor_ae_f32(a) \
	CSTUB_(_TIE_xt_hifi2_int32_rtor_ae_f32)(a)
#else
#define int32_rtor_ae_f32(a) \
	CSTUB_(_TIE_xt_hifi2_int32_rtor_ae_f32)(a)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_f32_rtor_int32(d) \
	CSTUB_(_TIE_xt_hifi2_ae_f32_rtor_int32)(d)
#else
#define ae_f32_rtor_int32(d) \
	CSTUB_(_TIE_xt_hifi2_ae_f32_rtor_int32)(d)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_f24_rtor_int32(d) \
	CSTUB_(_TIE_xt_hifi2_ae_f24_rtor_int32)(d)
#else
#define ae_f24_rtor_int32(d) \
	CSTUB_(_TIE_xt_hifi2_ae_f24_rtor_int32)(d)
#endif

#ifdef _STRICT_ARG_TYPE
#define int32_rtor_ae_f24(a) \
	CSTUB_(_TIE_xt_hifi2_int32_rtor_ae_f24)(a)
#else
#define int32_rtor_ae_f24(a) \
	CSTUB_(_TIE_xt_hifi2_int32_rtor_ae_f24)(a)
#endif

#ifdef _STRICT_ARG_TYPE
#define int32_rtor_ae_int24(a) \
	CSTUB_(_TIE_xt_hifi2_int32_rtor_ae_int24)(a)
#else
#define int32_rtor_ae_int24(a) \
	CSTUB_(_TIE_xt_hifi2_int32_rtor_ae_int24)(a)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int24_rtor_int32(d) \
	CSTUB_(_TIE_xt_hifi2_ae_int24_rtor_int32)(d)
#else
#define ae_int24_rtor_int32(d) \
	CSTUB_(_TIE_xt_hifi2_ae_int24_rtor_int32)(d)
#endif

#ifdef _STRICT_ARG_TYPE
#define uint32_rtor_ae_int32(a) \
	CSTUB_(_TIE_xt_hifi2_uint32_rtor_ae_int32)(a)
#else
#define uint32_rtor_ae_int32(a) \
	CSTUB_(_TIE_xt_hifi2_uint32_rtor_ae_int32)(a)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int32_rtor_uint32(d) \
	CSTUB_(_TIE_xt_hifi2_ae_int32_rtor_uint32)(d)
#else
#define ae_int32_rtor_uint32(d) \
	CSTUB_(_TIE_xt_hifi2_ae_int32_rtor_uint32)(d)
#endif

#ifdef _STRICT_ARG_TYPE
#define uint32_rtor_ae_int32u(a) \
	CSTUB_(_TIE_xt_hifi2_uint32_rtor_ae_int32u)(a)
#else
#define uint32_rtor_ae_int32u(a) \
	CSTUB_(_TIE_xt_hifi2_uint32_rtor_ae_int32u)(a)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int32u_rtor_uint32(d) \
	CSTUB_(_TIE_xt_hifi2_ae_int32u_rtor_uint32)(d)
#else
#define ae_int32u_rtor_uint32(d) \
	CSTUB_(_TIE_xt_hifi2_ae_int32u_rtor_uint32)(d)
#endif

#ifdef _STRICT_ARG_TYPE
#define int32_rtor_ae_int16(a) \
	CSTUB_(_TIE_xt_hifi2_int32_rtor_ae_int16)(a)
#else
#define int32_rtor_ae_int16(a) \
	CSTUB_(_TIE_xt_hifi2_int32_rtor_ae_int16)(a)
#endif

#ifdef _STRICT_ARG_TYPE
#define int32_rtor_ae_int16x4(a) \
	CSTUB_(_TIE_xt_hifi2_int32_rtor_ae_int16x4)(a)
#else
#define int32_rtor_ae_int16x4(a) \
	CSTUB_(_TIE_xt_hifi2_int32_rtor_ae_int16x4)(a)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int16_rtor_int32(d) \
	CSTUB_(_TIE_xt_hifi2_ae_int16_rtor_int32)(d)
#else
#define ae_int16_rtor_int32(d) \
	CSTUB_(_TIE_xt_hifi2_ae_int16_rtor_int32)(d)
#endif

#ifdef _STRICT_ARG_TYPE
#define int32_rtor_ae_f16(a) \
	CSTUB_(_TIE_xt_hifi2_int32_rtor_ae_f16)(a)
#else
#define int32_rtor_ae_f16(a) \
	CSTUB_(_TIE_xt_hifi2_int32_rtor_ae_f16)(a)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_f16_rtor_int32(d) \
	CSTUB_(_TIE_xt_hifi2_ae_f16_rtor_int32)(d)
#else
#define ae_f16_rtor_int32(d) \
	CSTUB_(_TIE_xt_hifi2_ae_f16_rtor_int32)(d)
#endif

#ifdef _STRICT_ARG_TYPE
#define int16_rtor_ae_int16(a) \
	CSTUB_(_TIE_xt_hifi2_int16_rtor_ae_int16)(a)
#else
#define int16_rtor_ae_int16(a) \
	CSTUB_(_TIE_xt_hifi2_int16_rtor_ae_int16)(a)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int16_rtor_int16(d) \
	CSTUB_(_TIE_xt_hifi2_ae_int16_rtor_int16)(d)
#else
#define ae_int16_rtor_int16(d) \
	CSTUB_(_TIE_xt_hifi2_ae_int16_rtor_int16)(d)
#endif

#ifdef _STRICT_ARG_TYPE
#define int16_rtor_ae_f16(a) \
	CSTUB_(_TIE_xt_hifi2_int16_rtor_ae_f16)(a)
#else
#define int16_rtor_ae_f16(a) \
	CSTUB_(_TIE_xt_hifi2_int16_rtor_ae_f16)(a)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_f16_rtor_int16(d) \
	CSTUB_(_TIE_xt_hifi2_ae_f16_rtor_int16)(d)
#else
#define ae_f16_rtor_int16(d) \
	CSTUB_(_TIE_xt_hifi2_ae_f16_rtor_int16)(d)
#endif

#ifdef _STRICT_ARG_TYPE
#define int16_rtor_ae_f32(a) \
	CSTUB_(_TIE_xt_hifi2_int16_rtor_ae_f32)(a)
#else
#define int16_rtor_ae_f32(a) \
	CSTUB_(_TIE_xt_hifi2_int16_rtor_ae_f32)(a)
#endif

#ifdef _STRICT_ARG_TYPE
#define int16_rtor_ae_f24(a) \
	CSTUB_(_TIE_xt_hifi2_int16_rtor_ae_f24)(a)
#else
#define int16_rtor_ae_f24(a) \
	CSTUB_(_TIE_xt_hifi2_int16_rtor_ae_f24)(a)
#endif

#ifdef _STRICT_ARG_TYPE
#define int16_rtor_ae_int24(a) \
	CSTUB_(_TIE_xt_hifi2_int16_rtor_ae_int24)(a)
#else
#define int16_rtor_ae_int24(a) \
	CSTUB_(_TIE_xt_hifi2_int16_rtor_ae_int24)(a)
#endif

#ifdef _STRICT_ARG_TYPE
#define int16_rtor_ae_f32x2(a) \
	CSTUB_(_TIE_xt_hifi2_int16_rtor_ae_f32x2)(a)
#else
#define int16_rtor_ae_f32x2(a) \
	CSTUB_(_TIE_xt_hifi2_int16_rtor_ae_f32x2)(a)
#endif

#ifdef _STRICT_ARG_TYPE
#define int16_rtor_ae_f24x2(a) \
	CSTUB_(_TIE_xt_hifi2_int16_rtor_ae_f24x2)(a)
#else
#define int16_rtor_ae_f24x2(a) \
	CSTUB_(_TIE_xt_hifi2_int16_rtor_ae_f24x2)(a)
#endif

#ifdef _STRICT_ARG_TYPE
#define int16_rtor_ae_int24x2(a) \
	CSTUB_(_TIE_xt_hifi2_int16_rtor_ae_int24x2)(a)
#else
#define int16_rtor_ae_int24x2(a) \
	CSTUB_(_TIE_xt_hifi2_int16_rtor_ae_int24x2)(a)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int16u_rtor_uint16(d) \
	CSTUB_(_TIE_xt_hifi2_ae_int16u_rtor_uint16)(d)
#else
#define ae_int16u_rtor_uint16(d) \
	CSTUB_(_TIE_xt_hifi2_ae_int16u_rtor_uint16)(d)
#endif

#ifdef _STRICT_ARG_TYPE
#define uint16_rtor_ae_int16u(a) \
	CSTUB_(_TIE_xt_hifi2_uint16_rtor_ae_int16u)(a)
#else
#define uint16_rtor_ae_int16u(a) \
	CSTUB_(_TIE_xt_hifi2_uint16_rtor_ae_int16u)(a)
#endif

#ifdef _STRICT_ARG_TYPE
#define int32_rtor_ae_int32x2(a) \
	CSTUB_(_TIE_xt_hifi2_int32_rtor_ae_int32x2)(a)
#else
#define int32_rtor_ae_int32x2(a) \
	CSTUB_(_TIE_xt_hifi2_int32_rtor_ae_int32x2)(a)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int32x2_rtor_int32(d) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x2_rtor_int32)(d)
#else
#define ae_int32x2_rtor_int32(d) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x2_rtor_int32)(d)
#endif

#ifdef _STRICT_ARG_TYPE
#define int32_rtor_ae_f32x2(a) \
	CSTUB_(_TIE_xt_hifi2_int32_rtor_ae_f32x2)(a)
#else
#define int32_rtor_ae_f32x2(a) \
	CSTUB_(_TIE_xt_hifi2_int32_rtor_ae_f32x2)(a)
#endif

#ifdef _STRICT_ARG_TYPE
#define int32_rtor_ae_f24x2(a) \
	CSTUB_(_TIE_xt_hifi2_int32_rtor_ae_f24x2)(a)
#else
#define int32_rtor_ae_f24x2(a) \
	CSTUB_(_TIE_xt_hifi2_int32_rtor_ae_f24x2)(a)
#endif

#ifdef _STRICT_ARG_TYPE
#define int32_rtor_ae_int24x2(a) \
	CSTUB_(_TIE_xt_hifi2_int32_rtor_ae_int24x2)(a)
#else
#define int32_rtor_ae_int24x2(a) \
	CSTUB_(_TIE_xt_hifi2_int32_rtor_ae_int24x2)(a)
#endif

#ifdef _STRICT_ARG_TYPE
#define int32_rtor_ae_int32x4(a) \
	CSTUB_(_TIE_xt_hifi2_int32_rtor_ae_int32x4)(a)
#else
#define int32_rtor_ae_int32x4(a) \
	CSTUB_(_TIE_xt_hifi2_int32_rtor_ae_int32x4)(a)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int32x4_rtor_int32(d) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x4_rtor_int32)(d)
#else
#define ae_int32x4_rtor_int32(d) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x4_rtor_int32)(d)
#endif

#ifdef _STRICT_ARG_TYPE
#define int32_rtor_ae_f32x4(a) \
	CSTUB_(_TIE_xt_hifi2_int32_rtor_ae_f32x4)(a)
#else
#define int32_rtor_ae_f32x4(a) \
	CSTUB_(_TIE_xt_hifi2_int32_rtor_ae_f32x4)(a)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_f32x4_rtor_int32(d) \
	CSTUB_(_TIE_xt_hifi2_ae_f32x4_rtor_int32)(d)
#else
#define ae_f32x4_rtor_int32(d) \
	CSTUB_(_TIE_xt_hifi2_ae_f32x4_rtor_int32)(d)
#endif

#ifdef _STRICT_ARG_TYPE
#define uint32_rtor_ae_int32x2(a) \
	CSTUB_(_TIE_xt_hifi2_uint32_rtor_ae_int32x2)(a)
#else
#define uint32_rtor_ae_int32x2(a) \
	CSTUB_(_TIE_xt_hifi2_uint32_rtor_ae_int32x2)(a)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int32x2_rtor_uint32(d) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x2_rtor_uint32)(d)
#else
#define ae_int32x2_rtor_uint32(d) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x2_rtor_uint32)(d)
#endif

#ifdef _STRICT_ARG_TYPE
#define uint32_rtor_ae_f32x2(a) \
	CSTUB_(_TIE_xt_hifi2_uint32_rtor_ae_f32x2)(a)
#else
#define uint32_rtor_ae_f32x2(a) \
	CSTUB_(_TIE_xt_hifi2_uint32_rtor_ae_f32x2)(a)
#endif

#ifdef _STRICT_ARG_TYPE
#define uint32_rtor_ae_f24x2(a) \
	CSTUB_(_TIE_xt_hifi2_uint32_rtor_ae_f24x2)(a)
#else
#define uint32_rtor_ae_f24x2(a) \
	CSTUB_(_TIE_xt_hifi2_uint32_rtor_ae_f24x2)(a)
#endif

#ifdef _STRICT_ARG_TYPE
#define uint32_rtor_ae_int24x2(a) \
	CSTUB_(_TIE_xt_hifi2_uint32_rtor_ae_int24x2)(a)
#else
#define uint32_rtor_ae_int24x2(a) \
	CSTUB_(_TIE_xt_hifi2_uint32_rtor_ae_int24x2)(a)
#endif

#ifdef _STRICT_ARG_TYPE
#define uint32_rtor_ae_int32x4(a) \
	CSTUB_(_TIE_xt_hifi2_uint32_rtor_ae_int32x4)(a)
#else
#define uint32_rtor_ae_int32x4(a) \
	CSTUB_(_TIE_xt_hifi2_uint32_rtor_ae_int32x4)(a)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int32x4_rtor_uint32(d) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x4_rtor_uint32)(d)
#else
#define ae_int32x4_rtor_uint32(d) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x4_rtor_uint32)(d)
#endif

#ifdef _STRICT_ARG_TYPE
#define uint32_rtor_ae_f32x4(a) \
	CSTUB_(_TIE_xt_hifi2_uint32_rtor_ae_f32x4)(a)
#else
#define uint32_rtor_ae_f32x4(a) \
	CSTUB_(_TIE_xt_hifi2_uint32_rtor_ae_f32x4)(a)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_f32x4_rtor_uint32(d) \
	CSTUB_(_TIE_xt_hifi2_ae_f32x4_rtor_uint32)(d)
#else
#define ae_f32x4_rtor_uint32(d) \
	CSTUB_(_TIE_xt_hifi2_ae_f32x4_rtor_uint32)(d)
#endif

#ifdef _STRICT_ARG_TYPE
#define int16_rtor_ae_int32x2(a) \
	CSTUB_(_TIE_xt_hifi2_int16_rtor_ae_int32x2)(a)
#else
#define int16_rtor_ae_int32x2(a) \
	CSTUB_(_TIE_xt_hifi2_int16_rtor_ae_int32x2)(a)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int32x2_rtor_int16(d) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x2_rtor_int16)(d)
#else
#define ae_int32x2_rtor_int16(d) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x2_rtor_int16)(d)
#endif

#ifdef _STRICT_ARG_TYPE
#define int16_rtor_ae_int32(a) \
	CSTUB_(_TIE_xt_hifi2_int16_rtor_ae_int32)(a)
#else
#define int16_rtor_ae_int32(a) \
	CSTUB_(_TIE_xt_hifi2_int16_rtor_ae_int32)(a)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int32_rtor_int16(d) \
	CSTUB_(_TIE_xt_hifi2_ae_int32_rtor_int16)(d)
#else
#define ae_int32_rtor_int16(d) \
	CSTUB_(_TIE_xt_hifi2_ae_int32_rtor_int16)(d)
#endif

#ifdef _STRICT_ARG_TYPE
#define int16_rtor_ae_int16x4(a) \
	CSTUB_(_TIE_xt_hifi2_int16_rtor_ae_int16x4)(a)
#else
#define int16_rtor_ae_int16x4(a) \
	CSTUB_(_TIE_xt_hifi2_int16_rtor_ae_int16x4)(a)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int16x4_rtor_int16(d) \
	CSTUB_(_TIE_xt_hifi2_ae_int16x4_rtor_int16)(d)
#else
#define ae_int16x4_rtor_int16(d) \
	CSTUB_(_TIE_xt_hifi2_ae_int16x4_rtor_int16)(d)
#endif

#ifdef _STRICT_ARG_TYPE
#define int16_rtor_ae_f16x4(a) \
	CSTUB_(_TIE_xt_hifi2_int16_rtor_ae_f16x4)(a)
#else
#define int16_rtor_ae_f16x4(a) \
	CSTUB_(_TIE_xt_hifi2_int16_rtor_ae_f16x4)(a)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_f16x4_rtor_int16(d) \
	CSTUB_(_TIE_xt_hifi2_ae_f16x4_rtor_int16)(d)
#else
#define ae_f16x4_rtor_int16(d) \
	CSTUB_(_TIE_xt_hifi2_ae_f16x4_rtor_int16)(d)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int16_rtor_ae_int16u(b) \
	CSTUB_(_TIE_xt_hifi2_ae_int16_rtor_ae_int16u)(b)
#else
#define ae_int16_rtor_ae_int16u(b) \
	CSTUB_(_TIE_xt_hifi2_ae_int16_rtor_ae_int16u)(b)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int16u_rtor_ae_int16(b) \
	CSTUB_(_TIE_xt_hifi2_ae_int16u_rtor_ae_int16)(b)
#else
#define ae_int16u_rtor_ae_int16(b) \
	CSTUB_(_TIE_xt_hifi2_ae_int16u_rtor_ae_int16)(b)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int16u_rtor_ae_int32u(b) \
	CSTUB_(_TIE_xt_hifi2_ae_int16u_rtor_ae_int32u)(b)
#else
#define ae_int16u_rtor_ae_int32u(b) \
	CSTUB_(_TIE_xt_hifi2_ae_int16u_rtor_ae_int32u)(b)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int32u_rtor_ae_int16u(b) \
	CSTUB_(_TIE_xt_hifi2_ae_int32u_rtor_ae_int16u)(b)
#else
#define ae_int32u_rtor_ae_int16u(b) \
	CSTUB_(_TIE_xt_hifi2_ae_int32u_rtor_ae_int16u)(b)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int16u_rtor_ae_int32(b) \
	CSTUB_(_TIE_xt_hifi2_ae_int16u_rtor_ae_int32)(b)
#else
#define ae_int16u_rtor_ae_int32(b) \
	CSTUB_(_TIE_xt_hifi2_ae_int16u_rtor_ae_int32)(b)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int32_rtor_ae_int16u(b) \
	CSTUB_(_TIE_xt_hifi2_ae_int32_rtor_ae_int16u)(b)
#else
#define ae_int32_rtor_ae_int16u(b) \
	CSTUB_(_TIE_xt_hifi2_ae_int32_rtor_ae_int16u)(b)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int16_rtor_ae_int32u(b) \
	CSTUB_(_TIE_xt_hifi2_ae_int16_rtor_ae_int32u)(b)
#else
#define ae_int16_rtor_ae_int32u(b) \
	CSTUB_(_TIE_xt_hifi2_ae_int16_rtor_ae_int32u)(b)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int32u_rtor_ae_int16(b) \
	CSTUB_(_TIE_xt_hifi2_ae_int32u_rtor_ae_int16)(b)
#else
#define ae_int32u_rtor_ae_int16(b) \
	CSTUB_(_TIE_xt_hifi2_ae_int32u_rtor_ae_int16)(b)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int32u_rtor_ae_int32(b) \
	CSTUB_(_TIE_xt_hifi2_ae_int32u_rtor_ae_int32)(b)
#else
#define ae_int32u_rtor_ae_int32(b) \
	CSTUB_(_TIE_xt_hifi2_ae_int32u_rtor_ae_int32)(b)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int32_rtor_ae_int32u(b) \
	CSTUB_(_TIE_xt_hifi2_ae_int32_rtor_ae_int32u)(b)
#else
#define ae_int32_rtor_ae_int32u(b) \
	CSTUB_(_TIE_xt_hifi2_ae_int32_rtor_ae_int32u)(b)
#endif

#ifdef _STRICT_ARG_TYPE
#define uint16_rtor_ae_int32(a) \
	CSTUB_(_TIE_xt_hifi2_uint16_rtor_ae_int32)(a)
#else
#define uint16_rtor_ae_int32(a) \
	CSTUB_(_TIE_xt_hifi2_uint16_rtor_ae_int32)(a)
#endif

#ifdef _STRICT_ARG_TYPE
#define uint16_rtor_ae_int32x2(a) \
	CSTUB_(_TIE_xt_hifi2_uint16_rtor_ae_int32x2)(a)
#else
#define uint16_rtor_ae_int32x2(a) \
	CSTUB_(_TIE_xt_hifi2_uint16_rtor_ae_int32x2)(a)
#endif

#ifdef _STRICT_ARG_TYPE
#define uint8_rtor_ae_int32(a) \
	CSTUB_(_TIE_xt_hifi2_uint8_rtor_ae_int32)(a)
#else
#define uint8_rtor_ae_int32(a) \
	CSTUB_(_TIE_xt_hifi2_uint8_rtor_ae_int32)(a)
#endif

#ifdef _STRICT_ARG_TYPE
#define int8_rtor_ae_int32(a) \
	CSTUB_(_TIE_xt_hifi2_int8_rtor_ae_int32)(a)
#else
#define int8_rtor_ae_int32(a) \
	CSTUB_(_TIE_xt_hifi2_int8_rtor_ae_int32)(a)
#endif

#ifdef _STRICT_ARG_TYPE
#define uint8_rtor_ae_int32x2(a) \
	CSTUB_(_TIE_xt_hifi2_uint8_rtor_ae_int32x2)(a)
#else
#define uint8_rtor_ae_int32x2(a) \
	CSTUB_(_TIE_xt_hifi2_uint8_rtor_ae_int32x2)(a)
#endif

#ifdef _STRICT_ARG_TYPE
#define int8_rtor_ae_int32x2(a) \
	CSTUB_(_TIE_xt_hifi2_int8_rtor_ae_int32x2)(a)
#else
#define int8_rtor_ae_int32x2(a) \
	CSTUB_(_TIE_xt_hifi2_int8_rtor_ae_int32x2)(a)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int24x2_rtor_ae_f24(b) \
	CSTUB_(_TIE_xt_hifi2_ae_int24x2_rtor_ae_f24)(b)
#else
#define ae_int24x2_rtor_ae_f24(b) \
	CSTUB_(_TIE_xt_hifi2_ae_int24x2_rtor_ae_f24)(b)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_f24x2_rtor_ae_int24(b) \
	CSTUB_(_TIE_xt_hifi2_ae_f24x2_rtor_ae_int24)(b)
#else
#define ae_f24x2_rtor_ae_int24(b) \
	CSTUB_(_TIE_xt_hifi2_ae_f24x2_rtor_ae_int24)(b)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int24_rtor_ae_f24x2(b) \
	CSTUB_(_TIE_xt_hifi2_ae_int24_rtor_ae_f24x2)(b)
#else
#define ae_int24_rtor_ae_f24x2(b) \
	CSTUB_(_TIE_xt_hifi2_ae_int24_rtor_ae_f24x2)(b)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_f24_rtor_ae_int24x2(b) \
	CSTUB_(_TIE_xt_hifi2_ae_f24_rtor_ae_int24x2)(b)
#else
#define ae_f24_rtor_ae_int24x2(b) \
	CSTUB_(_TIE_xt_hifi2_ae_f24_rtor_ae_int24x2)(b)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int32x2_rtor_ae_f32(b) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x2_rtor_ae_f32)(b)
#else
#define ae_int32x2_rtor_ae_f32(b) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x2_rtor_ae_f32)(b)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_f32x2_rtor_ae_int32(b) \
	CSTUB_(_TIE_xt_hifi2_ae_f32x2_rtor_ae_int32)(b)
#else
#define ae_f32x2_rtor_ae_int32(b) \
	CSTUB_(_TIE_xt_hifi2_ae_f32x2_rtor_ae_int32)(b)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int32_rtor_ae_f32x2(b) \
	CSTUB_(_TIE_xt_hifi2_ae_int32_rtor_ae_f32x2)(b)
#else
#define ae_int32_rtor_ae_f32x2(b) \
	CSTUB_(_TIE_xt_hifi2_ae_int32_rtor_ae_f32x2)(b)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_f32_rtor_ae_int32x2(b) \
	CSTUB_(_TIE_xt_hifi2_ae_f32_rtor_ae_int32x2)(b)
#else
#define ae_f32_rtor_ae_int32x2(b) \
	CSTUB_(_TIE_xt_hifi2_ae_f32_rtor_ae_int32x2)(b)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int24x2_rtor_ae_f32(b) \
	CSTUB_(_TIE_xt_hifi2_ae_int24x2_rtor_ae_f32)(b)
#else
#define ae_int24x2_rtor_ae_f32(b) \
	CSTUB_(_TIE_xt_hifi2_ae_int24x2_rtor_ae_f32)(b)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_f24x2_rtor_ae_int32(b) \
	CSTUB_(_TIE_xt_hifi2_ae_f24x2_rtor_ae_int32)(b)
#else
#define ae_f24x2_rtor_ae_int32(b) \
	CSTUB_(_TIE_xt_hifi2_ae_f24x2_rtor_ae_int32)(b)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int24_rtor_ae_f32x2(b) \
	CSTUB_(_TIE_xt_hifi2_ae_int24_rtor_ae_f32x2)(b)
#else
#define ae_int24_rtor_ae_f32x2(b) \
	CSTUB_(_TIE_xt_hifi2_ae_int24_rtor_ae_f32x2)(b)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_f24_rtor_ae_int32x2(b) \
	CSTUB_(_TIE_xt_hifi2_ae_f24_rtor_ae_int32x2)(b)
#else
#define ae_f24_rtor_ae_int32x2(b) \
	CSTUB_(_TIE_xt_hifi2_ae_f24_rtor_ae_int32x2)(b)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_f24_rtor_ae_f32x2(b) \
	CSTUB_(_TIE_xt_hifi2_ae_f24_rtor_ae_f32x2)(b)
#else
#define ae_f24_rtor_ae_f32x2(b) \
	CSTUB_(_TIE_xt_hifi2_ae_f24_rtor_ae_f32x2)(b)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int24_rtor_ae_int32x2(b) \
	CSTUB_(_TIE_xt_hifi2_ae_int24_rtor_ae_int32x2)(b)
#else
#define ae_int24_rtor_ae_int32x2(b) \
	CSTUB_(_TIE_xt_hifi2_ae_int24_rtor_ae_int32x2)(b)
#endif

#ifdef _STRICT_ARG_TYPE
#define int64_mtor_ae_int64(a, i) \
	CSTUB_(_TIE_xt_hifi2_int64_mtor_ae_int64)(a, i)
#else
#define int64_mtor_ae_int64(a, i) \
	CSTUB_(_TIE_xt_hifi2_int64_mtor_ae_int64)(a, i)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int64_rtom_int64(d, a, i) \
	CSTUB_(_TIE_xt_hifi2_ae_int64_rtom_int64)(d, a, i)
#else
#define ae_int64_rtom_int64(d, a, i) \
	CSTUB_(_TIE_xt_hifi2_ae_int64_rtom_int64)(d, a, i)
#endif

#ifdef _STRICT_ARG_TYPE
#define uint64_mtor_ae_int64(a, i) \
	CSTUB_(_TIE_xt_hifi2_uint64_mtor_ae_int64)(a, i)
#else
#define uint64_mtor_ae_int64(a, i) \
	CSTUB_(_TIE_xt_hifi2_uint64_mtor_ae_int64)(a, i)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int64_rtom_uint64(d, a, i) \
	CSTUB_(_TIE_xt_hifi2_ae_int64_rtom_uint64)(d, a, i)
#else
#define ae_int64_rtom_uint64(d, a, i) \
	CSTUB_(_TIE_xt_hifi2_ae_int64_rtom_uint64)(d, a, i)
#endif

#ifdef _STRICT_ARG_TYPE
#define int32_mtor_ae_int32(a, i) \
	CSTUB_(_TIE_xt_hifi2_int32_mtor_ae_int32)(a, i)
#else
#define int32_mtor_ae_int32(a, i) \
	CSTUB_(_TIE_xt_hifi2_int32_mtor_ae_int32)(a, i)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int32_rtom_int32(d, a, i) \
	CSTUB_(_TIE_xt_hifi2_ae_int32_rtom_int32)(d, a, i)
#else
#define ae_int32_rtom_int32(d, a, i) \
	CSTUB_(_TIE_xt_hifi2_ae_int32_rtom_int32)(d, a, i)
#endif

#ifdef _STRICT_ARG_TYPE
#define uint32_mtor_ae_int32u(a, i) \
	CSTUB_(_TIE_xt_hifi2_uint32_mtor_ae_int32u)(a, i)
#else
#define uint32_mtor_ae_int32u(a, i) \
	CSTUB_(_TIE_xt_hifi2_uint32_mtor_ae_int32u)(a, i)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int32u_rtom_uint32(d, a, i) \
	CSTUB_(_TIE_xt_hifi2_ae_int32u_rtom_uint32)(d, a, i)
#else
#define ae_int32u_rtom_uint32(d, a, i) \
	CSTUB_(_TIE_xt_hifi2_ae_int32u_rtom_uint32)(d, a, i)
#endif

#ifdef _STRICT_ARG_TYPE
#define int16_mtor_ae_int16(a, i) \
	CSTUB_(_TIE_xt_hifi2_int16_mtor_ae_int16)(a, i)
#else
#define int16_mtor_ae_int16(a, i) \
	CSTUB_(_TIE_xt_hifi2_int16_mtor_ae_int16)(a, i)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int16_rtom_int16(d, a, i) \
	CSTUB_(_TIE_xt_hifi2_ae_int16_rtom_int16)(d, a, i)
#else
#define ae_int16_rtom_int16(d, a, i) \
	CSTUB_(_TIE_xt_hifi2_ae_int16_rtom_int16)(d, a, i)
#endif

#ifdef _STRICT_ARG_TYPE
#define uint16_mtor_ae_int16u(a, i) \
	CSTUB_(_TIE_xt_hifi2_uint16_mtor_ae_int16u)(a, i)
#else
#define uint16_mtor_ae_int16u(a, i) \
	CSTUB_(_TIE_xt_hifi2_uint16_mtor_ae_int16u)(a, i)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int16u_rtom_uint16(d, a, i) \
	CSTUB_(_TIE_xt_hifi2_ae_int16u_rtom_uint16)(d, a, i)
#else
#define ae_int16u_rtom_uint16(d, a, i) \
	CSTUB_(_TIE_xt_hifi2_ae_int16u_rtom_uint16)(d, a, i)
#endif

#ifdef _STRICT_ARG_TYPE
#define int32_mtor_ae_int32x2(a, i) \
	CSTUB_(_TIE_xt_hifi2_int32_mtor_ae_int32x2)(a, i)
#else
#define int32_mtor_ae_int32x2(a, i) \
	CSTUB_(_TIE_xt_hifi2_int32_mtor_ae_int32x2)(a, i)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int32x2_rtom_int32(d, a, i) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x2_rtom_int32)(d, a, i)
#else
#define ae_int32x2_rtom_int32(d, a, i) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x2_rtom_int32)(d, a, i)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int32x2_rtom_ae_int32(d, a, i) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x2_rtom_ae_int32)(d, a, i)
#else
#define ae_int32x2_rtom_ae_int32(d, a, i) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x2_rtom_ae_int32)(d, a, i)
#endif

#ifdef _STRICT_ARG_TYPE
#define int32_mtor_ae_int32x4(a, i) \
	CSTUB_(_TIE_xt_hifi2_int32_mtor_ae_int32x4)(a, i)
#else
#define int32_mtor_ae_int32x4(a, i) \
	CSTUB_(_TIE_xt_hifi2_int32_mtor_ae_int32x4)(a, i)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int32x4_rtom_int32(d, a, i) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x4_rtom_int32)(d, a, i)
#else
#define ae_int32x4_rtom_int32(d, a, i) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x4_rtom_int32)(d, a, i)
#endif

#ifdef _STRICT_ARG_TYPE
#define int32_mtor_ae_f32x4(a, i) \
	CSTUB_(_TIE_xt_hifi2_int32_mtor_ae_f32x4)(a, i)
#else
#define int32_mtor_ae_f32x4(a, i) \
	CSTUB_(_TIE_xt_hifi2_int32_mtor_ae_f32x4)(a, i)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_f32x4_rtom_int32(d, a, i) \
	CSTUB_(_TIE_xt_hifi2_ae_f32x4_rtom_int32)(d, a, i)
#else
#define ae_f32x4_rtom_int32(d, a, i) \
	CSTUB_(_TIE_xt_hifi2_ae_f32x4_rtom_int32)(d, a, i)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_p24s_rtor_ae_int24x2(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_p24s_rtor_ae_int24x2)(d0)
#else
#define ae_p24s_rtor_ae_int24x2(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_p24s_rtor_ae_int24x2)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int24x2_rtor_ae_p24s(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_int24x2_rtor_ae_p24s)(d0)
#else
#define ae_int24x2_rtor_ae_p24s(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_int24x2_rtor_ae_p24s)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_p24s_rtor_ae_f24x2(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_p24s_rtor_ae_f24x2)(d0)
#else
#define ae_p24s_rtor_ae_f24x2(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_p24s_rtor_ae_f24x2)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_f24x2_rtor_ae_p24s(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_f24x2_rtor_ae_p24s)(d0)
#else
#define ae_f24x2_rtor_ae_p24s(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_f24x2_rtor_ae_p24s)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_p24f_rtor_ae_int24x2(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_p24f_rtor_ae_int24x2)(d0)
#else
#define ae_p24f_rtor_ae_int24x2(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_p24f_rtor_ae_int24x2)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int24x2_rtor_ae_p24f(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_int24x2_rtor_ae_p24f)(d0)
#else
#define ae_int24x2_rtor_ae_p24f(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_int24x2_rtor_ae_p24f)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_p24f_rtor_ae_f24x2(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_p24f_rtor_ae_f24x2)(d0)
#else
#define ae_p24f_rtor_ae_f24x2(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_p24f_rtor_ae_f24x2)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_f24x2_rtor_ae_p24f(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_f24x2_rtor_ae_p24f)(d0)
#else
#define ae_f24x2_rtor_ae_p24f(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_f24x2_rtor_ae_p24f)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_p24x2s_rtor_ae_int24x2(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2s_rtor_ae_int24x2)(d0)
#else
#define ae_p24x2s_rtor_ae_int24x2(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2s_rtor_ae_int24x2)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int24x2_rtor_ae_p24x2s(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_int24x2_rtor_ae_p24x2s)(d0)
#else
#define ae_int24x2_rtor_ae_p24x2s(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_int24x2_rtor_ae_p24x2s)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_p24x2s_rtor_ae_f24x2(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2s_rtor_ae_f24x2)(d0)
#else
#define ae_p24x2s_rtor_ae_f24x2(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2s_rtor_ae_f24x2)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_f24x2_rtor_ae_p24x2s(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_f24x2_rtor_ae_p24x2s)(d0)
#else
#define ae_f24x2_rtor_ae_p24x2s(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_f24x2_rtor_ae_p24x2s)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_p24x2f_rtor_ae_int24x2(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2f_rtor_ae_int24x2)(d0)
#else
#define ae_p24x2f_rtor_ae_int24x2(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2f_rtor_ae_int24x2)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int24x2_rtor_ae_p24x2f(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_int24x2_rtor_ae_p24x2f)(d0)
#else
#define ae_int24x2_rtor_ae_p24x2f(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_int24x2_rtor_ae_p24x2f)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_p24x2f_rtor_ae_f24x2(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2f_rtor_ae_f24x2)(d0)
#else
#define ae_p24x2f_rtor_ae_f24x2(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2f_rtor_ae_f24x2)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_f24x2_rtor_ae_p24x2f(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_f24x2_rtor_ae_p24x2f)(d0)
#else
#define ae_f24x2_rtor_ae_p24x2f(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_f24x2_rtor_ae_p24x2f)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_p16s_rtor_ae_int24x2(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_p16s_rtor_ae_int24x2)(d0)
#else
#define ae_p16s_rtor_ae_int24x2(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_p16s_rtor_ae_int24x2)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int24x2_rtor_ae_p16s(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_int24x2_rtor_ae_p16s)(d0)
#else
#define ae_int24x2_rtor_ae_p16s(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_int24x2_rtor_ae_p16s)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_p16s_rtor_ae_f24x2(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_p16s_rtor_ae_f24x2)(d0)
#else
#define ae_p16s_rtor_ae_f24x2(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_p16s_rtor_ae_f24x2)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_f24x2_rtor_ae_p16s(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_f24x2_rtor_ae_p16s)(d0)
#else
#define ae_f24x2_rtor_ae_p16s(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_f24x2_rtor_ae_p16s)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_p16x2s_rtor_ae_int24x2(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_p16x2s_rtor_ae_int24x2)(d0)
#else
#define ae_p16x2s_rtor_ae_int24x2(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_p16x2s_rtor_ae_int24x2)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int24x2_rtor_ae_p16x2s(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_int24x2_rtor_ae_p16x2s)(d0)
#else
#define ae_int24x2_rtor_ae_p16x2s(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_int24x2_rtor_ae_p16x2s)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_p16x2s_rtor_ae_f24x2(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_p16x2s_rtor_ae_f24x2)(d0)
#else
#define ae_p16x2s_rtor_ae_f24x2(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_p16x2s_rtor_ae_f24x2)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_f24x2_rtor_ae_p16x2s(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_f24x2_rtor_ae_p16x2s)(d0)
#else
#define ae_f24x2_rtor_ae_p16x2s(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_f24x2_rtor_ae_p16x2s)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_q56s_rtor_ae_int64(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_q56s_rtor_ae_int64)(d0)
#else
#define ae_q56s_rtor_ae_int64(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_q56s_rtor_ae_int64)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int64_rtor_ae_q56s(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_int64_rtor_ae_q56s)(d0)
#else
#define ae_int64_rtor_ae_q56s(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_int64_rtor_ae_q56s)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_q56s_rtor_ae_f64(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_q56s_rtor_ae_f64)(d0)
#else
#define ae_q56s_rtor_ae_f64(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_q56s_rtor_ae_f64)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_f64_rtor_ae_q56s(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_f64_rtor_ae_q56s)(d0)
#else
#define ae_f64_rtor_ae_q56s(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_f64_rtor_ae_q56s)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_f32_rtor_ae_int32(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_f32_rtor_ae_int32)(d0)
#else
#define ae_f32_rtor_ae_int32(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_f32_rtor_ae_int32)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int32_rtor_ae_f32(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_int32_rtor_ae_f32)(d0)
#else
#define ae_int32_rtor_ae_f32(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_int32_rtor_ae_f32)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_f32x2_rtor_ae_int32x2(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_f32x2_rtor_ae_int32x2)(d0)
#else
#define ae_f32x2_rtor_ae_int32x2(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_f32x2_rtor_ae_int32x2)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int32x2_rtor_ae_f32x2(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x2_rtor_ae_f32x2)(d0)
#else
#define ae_int32x2_rtor_ae_f32x2(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x2_rtor_ae_f32x2)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_f24_rtor_ae_int24(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_f24_rtor_ae_int24)(d0)
#else
#define ae_f24_rtor_ae_int24(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_f24_rtor_ae_int24)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int24_rtor_ae_f24(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_int24_rtor_ae_f24)(d0)
#else
#define ae_int24_rtor_ae_f24(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_int24_rtor_ae_f24)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_f24x2_rtor_ae_int24x2(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_f24x2_rtor_ae_int24x2)(d0)
#else
#define ae_f24x2_rtor_ae_int24x2(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_f24x2_rtor_ae_int24x2)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int24x2_rtor_ae_f24x2(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_int24x2_rtor_ae_f24x2)(d0)
#else
#define ae_int24x2_rtor_ae_f24x2(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_int24x2_rtor_ae_f24x2)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_f64_rtor_ae_int64(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_f64_rtor_ae_int64)(d0)
#else
#define ae_f64_rtor_ae_int64(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_f64_rtor_ae_int64)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int64_rtor_ae_f64(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_int64_rtor_ae_f64)(d0)
#else
#define ae_int64_rtor_ae_f64(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_int64_rtor_ae_f64)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_f16_rtor_ae_int16(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_f16_rtor_ae_int16)(d0)
#else
#define ae_f16_rtor_ae_int16(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_f16_rtor_ae_int16)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int16_rtor_ae_f16(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_int16_rtor_ae_f16)(d0)
#else
#define ae_int16_rtor_ae_f16(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_int16_rtor_ae_f16)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_f16x4_rtor_ae_int16x4(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_f16x4_rtor_ae_int16x4)(d0)
#else
#define ae_f16x4_rtor_ae_int16x4(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_f16x4_rtor_ae_int16x4)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int16x4_rtor_ae_f16x4(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_int16x4_rtor_ae_f16x4)(d0)
#else
#define ae_int16x4_rtor_ae_f16x4(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_int16x4_rtor_ae_f16x4)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_f24_rtor_ae_f32(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_f24_rtor_ae_f32)(d0)
#else
#define ae_f24_rtor_ae_f32(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_f24_rtor_ae_f32)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_f24x2_rtor_ae_f32x2(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_f24x2_rtor_ae_f32x2)(d0)
#else
#define ae_f24x2_rtor_ae_f32x2(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_f24x2_rtor_ae_f32x2)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int24_rtor_ae_int32(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_int24_rtor_ae_int32)(d0)
#else
#define ae_int24_rtor_ae_int32(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_int24_rtor_ae_int32)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int24x2_rtor_ae_int32x2(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_int24x2_rtor_ae_int32x2)(d0)
#else
#define ae_int24x2_rtor_ae_int32x2(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_int24x2_rtor_ae_int32x2)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_f24_rtor_ae_int32(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_f24_rtor_ae_int32)(d0)
#else
#define ae_f24_rtor_ae_int32(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_f24_rtor_ae_int32)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_f24x2_rtor_ae_int32x2(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_f24x2_rtor_ae_int32x2)(d0)
#else
#define ae_f24x2_rtor_ae_int32x2(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_f24x2_rtor_ae_int32x2)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int24_rtor_ae_f32(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_int24_rtor_ae_f32)(d0)
#else
#define ae_int24_rtor_ae_f32(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_int24_rtor_ae_f32)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int24x2_rtor_ae_f32x2(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_int24x2_rtor_ae_f32x2)(d0)
#else
#define ae_int24x2_rtor_ae_f32x2(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_int24x2_rtor_ae_f32x2)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_f32_rtor_ae_f32x2(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_f32_rtor_ae_f32x2)(d0)
#else
#define ae_f32_rtor_ae_f32x2(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_f32_rtor_ae_f32x2)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_f32x2_rtor_ae_f32(d01) \
	CSTUB_(_TIE_xt_hifi2_ae_f32x2_rtor_ae_f32)(d01)
#else
#define ae_f32x2_rtor_ae_f32(d01) \
	CSTUB_(_TIE_xt_hifi2_ae_f32x2_rtor_ae_f32)(d01)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int32_rtor_ae_int32x2(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_int32_rtor_ae_int32x2)(d0)
#else
#define ae_int32_rtor_ae_int32x2(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_int32_rtor_ae_int32x2)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int32x2_rtor_ae_int32(d01) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x2_rtor_ae_int32)(d01)
#else
#define ae_int32x2_rtor_ae_int32(d01) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x2_rtor_ae_int32)(d01)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int32u_rtor_ae_int32x2(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_int32u_rtor_ae_int32x2)(d0)
#else
#define ae_int32u_rtor_ae_int32x2(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_int32u_rtor_ae_int32x2)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int32x2_rtor_ae_int32u(d01) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x2_rtor_ae_int32u)(d01)
#else
#define ae_int32x2_rtor_ae_int32u(d01) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x2_rtor_ae_int32u)(d01)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_f24_rtor_ae_f24x2(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_f24_rtor_ae_f24x2)(d0)
#else
#define ae_f24_rtor_ae_f24x2(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_f24_rtor_ae_f24x2)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_f24x2_rtor_ae_f24(d01) \
	CSTUB_(_TIE_xt_hifi2_ae_f24x2_rtor_ae_f24)(d01)
#else
#define ae_f24x2_rtor_ae_f24(d01) \
	CSTUB_(_TIE_xt_hifi2_ae_f24x2_rtor_ae_f24)(d01)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int24_rtor_ae_int24x2(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_int24_rtor_ae_int24x2)(d0)
#else
#define ae_int24_rtor_ae_int24x2(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_int24_rtor_ae_int24x2)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int24x2_rtor_ae_int24(d01) \
	CSTUB_(_TIE_xt_hifi2_ae_int24x2_rtor_ae_int24)(d01)
#else
#define ae_int24x2_rtor_ae_int24(d01) \
	CSTUB_(_TIE_xt_hifi2_ae_int24x2_rtor_ae_int24)(d01)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int16_rtor_ae_int16x4(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_int16_rtor_ae_int16x4)(d0)
#else
#define ae_int16_rtor_ae_int16x4(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_int16_rtor_ae_int16x4)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_f16_rtor_ae_f16x4(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_f16_rtor_ae_f16x4)(d0)
#else
#define ae_f16_rtor_ae_f16x4(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_f16_rtor_ae_f16x4)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_f16_rtor_ae_int16x4(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_f16_rtor_ae_int16x4)(d0)
#else
#define ae_f16_rtor_ae_int16x4(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_f16_rtor_ae_int16x4)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int16x4_rtom_ae_int16(v, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int16x4_rtom_ae_int16)(v, a, off)
#else
#define ae_int16x4_rtom_ae_int16(v, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int16x4_rtom_ae_int16)(v, a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_f16x4_rtom_ae_f16(v, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f16x4_rtom_ae_f16)(v, a, off)
#else
#define ae_f16x4_rtom_ae_f16(v, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f16x4_rtom_ae_f16)(v, a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int16x4_rtom_ae_f16(v, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int16x4_rtom_ae_f16)(v, a, off)
#else
#define ae_int16x4_rtom_ae_f16(v, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int16x4_rtom_ae_f16)(v, a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_f16x4_rtom_ae_int16(v, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f16x4_rtom_ae_int16)(v, a, off)
#else
#define ae_f16x4_rtom_ae_int16(v, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f16x4_rtom_ae_int16)(v, a, off)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int32_rtor_ae_int32x4(b) \
	CSTUB_(_TIE_xt_hifi2_ae_int32_rtor_ae_int32x4)(b)
#else
#define ae_int32_rtor_ae_int32x4(b) \
	CSTUB_(_TIE_xt_hifi2_ae_int32_rtor_ae_int32x4)(b)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_f32_rtor_ae_f32x4(b) \
	CSTUB_(_TIE_xt_hifi2_ae_f32_rtor_ae_f32x4)(b)
#else
#define ae_f32_rtor_ae_f32x4(b) \
	CSTUB_(_TIE_xt_hifi2_ae_f32_rtor_ae_f32x4)(b)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int16_rtor_ae_int32(b) \
	CSTUB_(_TIE_xt_hifi2_ae_int16_rtor_ae_int32)(b)
#else
#define ae_int16_rtor_ae_int32(b) \
	CSTUB_(_TIE_xt_hifi2_ae_int16_rtor_ae_int32)(b)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int32_rtor_ae_int16(b) \
	CSTUB_(_TIE_xt_hifi2_ae_int32_rtor_ae_int16)(b)
#else
#define ae_int32_rtor_ae_int16(b) \
	CSTUB_(_TIE_xt_hifi2_ae_int32_rtor_ae_int16)(b)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_f16_rtor_ae_f32(b) \
	CSTUB_(_TIE_xt_hifi2_ae_f16_rtor_ae_f32)(b)
#else
#define ae_f16_rtor_ae_f32(b) \
	CSTUB_(_TIE_xt_hifi2_ae_f16_rtor_ae_f32)(b)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_f32_rtor_ae_f16(b) \
	CSTUB_(_TIE_xt_hifi2_ae_f32_rtor_ae_f16)(b)
#else
#define ae_f32_rtor_ae_f16(b) \
	CSTUB_(_TIE_xt_hifi2_ae_f32_rtor_ae_f16)(b)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int16_rtor_ae_int24(b) \
	CSTUB_(_TIE_xt_hifi2_ae_int16_rtor_ae_int24)(b)
#else
#define ae_int16_rtor_ae_int24(b) \
	CSTUB_(_TIE_xt_hifi2_ae_int16_rtor_ae_int24)(b)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int24_rtor_ae_int16(b) \
	CSTUB_(_TIE_xt_hifi2_ae_int24_rtor_ae_int16)(b)
#else
#define ae_int24_rtor_ae_int16(b) \
	CSTUB_(_TIE_xt_hifi2_ae_int24_rtor_ae_int16)(b)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_f16_rtor_ae_f24(b) \
	CSTUB_(_TIE_xt_hifi2_ae_f16_rtor_ae_f24)(b)
#else
#define ae_f16_rtor_ae_f24(b) \
	CSTUB_(_TIE_xt_hifi2_ae_f16_rtor_ae_f24)(b)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_f24_rtor_ae_f16(b) \
	CSTUB_(_TIE_xt_hifi2_ae_f24_rtor_ae_f16)(b)
#else
#define ae_f24_rtor_ae_f16(b) \
	CSTUB_(_TIE_xt_hifi2_ae_f24_rtor_ae_f16)(b)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVINT16X4_FROMINT16(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT16X4_FROMINT16)(i)
#else
#define AE_MOVINT16X4_FROMINT16(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT16X4_FROMINT16)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVINT24_FROMINT16(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT24_FROMINT16)(i)
#else
#define AE_MOVINT24_FROMINT16(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT24_FROMINT16)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVINT24X2_FROMINT16(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT24X2_FROMINT16)(i)
#else
#define AE_MOVINT24X2_FROMINT16(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT24X2_FROMINT16)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVINT32_FROMINT16(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT32_FROMINT16)(i)
#else
#define AE_MOVINT32_FROMINT16(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT32_FROMINT16)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVINT32X2_FROMINT16(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT32X2_FROMINT16)(i)
#else
#define AE_MOVINT32X2_FROMINT16(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT32X2_FROMINT16)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVINT64_FROMINT16(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT64_FROMINT16)(i)
#else
#define AE_MOVINT64_FROMINT16(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT64_FROMINT16)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVF16_FROMINT16(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF16_FROMINT16)(i)
#else
#define AE_MOVF16_FROMINT16(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF16_FROMINT16)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVF16X4_FROMINT16(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF16X4_FROMINT16)(i)
#else
#define AE_MOVF16X4_FROMINT16(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF16X4_FROMINT16)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVF24_FROMINT16(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF24_FROMINT16)(i)
#else
#define AE_MOVF24_FROMINT16(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF24_FROMINT16)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVF24X2_FROMINT16(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF24X2_FROMINT16)(i)
#else
#define AE_MOVF24X2_FROMINT16(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF24X2_FROMINT16)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVF32_FROMINT16(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF32_FROMINT16)(i)
#else
#define AE_MOVF32_FROMINT16(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF32_FROMINT16)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVF32X2_FROMINT16(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF32X2_FROMINT16)(i)
#else
#define AE_MOVF32X2_FROMINT16(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF32X2_FROMINT16)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVF64_FROMINT16(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF64_FROMINT16)(i)
#else
#define AE_MOVF64_FROMINT16(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF64_FROMINT16)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVINT16_FROMINT16X4(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT16_FROMINT16X4)(i)
#else
#define AE_MOVINT16_FROMINT16X4(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT16_FROMINT16X4)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVINT24_FROMINT16X4(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT24_FROMINT16X4)(i)
#else
#define AE_MOVINT24_FROMINT16X4(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT24_FROMINT16X4)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVINT24X2_FROMINT16X4(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT24X2_FROMINT16X4)(i)
#else
#define AE_MOVINT24X2_FROMINT16X4(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT24X2_FROMINT16X4)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVINT32_FROMINT16X4(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT32_FROMINT16X4)(i)
#else
#define AE_MOVINT32_FROMINT16X4(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT32_FROMINT16X4)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVINT32X2_FROMINT16X4(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT32X2_FROMINT16X4)(i)
#else
#define AE_MOVINT32X2_FROMINT16X4(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT32X2_FROMINT16X4)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVINT64_FROMINT16X4(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT64_FROMINT16X4)(i)
#else
#define AE_MOVINT64_FROMINT16X4(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT64_FROMINT16X4)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVF16_FROMINT16X4(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF16_FROMINT16X4)(i)
#else
#define AE_MOVF16_FROMINT16X4(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF16_FROMINT16X4)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVF16X4_FROMINT16X4(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF16X4_FROMINT16X4)(i)
#else
#define AE_MOVF16X4_FROMINT16X4(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF16X4_FROMINT16X4)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVF24_FROMINT16X4(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF24_FROMINT16X4)(i)
#else
#define AE_MOVF24_FROMINT16X4(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF24_FROMINT16X4)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVF24X2_FROMINT16X4(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF24X2_FROMINT16X4)(i)
#else
#define AE_MOVF24X2_FROMINT16X4(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF24X2_FROMINT16X4)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVF32_FROMINT16X4(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF32_FROMINT16X4)(i)
#else
#define AE_MOVF32_FROMINT16X4(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF32_FROMINT16X4)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVF32X2_FROMINT16X4(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF32X2_FROMINT16X4)(i)
#else
#define AE_MOVF32X2_FROMINT16X4(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF32X2_FROMINT16X4)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVF64_FROMINT16X4(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF64_FROMINT16X4)(i)
#else
#define AE_MOVF64_FROMINT16X4(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF64_FROMINT16X4)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVINT16_FROMINT24(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT16_FROMINT24)(i)
#else
#define AE_MOVINT16_FROMINT24(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT16_FROMINT24)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVINT16X4_FROMINT24(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT16X4_FROMINT24)(i)
#else
#define AE_MOVINT16X4_FROMINT24(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT16X4_FROMINT24)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVINT24X2_FROMINT24(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT24X2_FROMINT24)(i)
#else
#define AE_MOVINT24X2_FROMINT24(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT24X2_FROMINT24)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVINT32_FROMINT24(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT32_FROMINT24)(i)
#else
#define AE_MOVINT32_FROMINT24(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT32_FROMINT24)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVINT32X2_FROMINT24(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT32X2_FROMINT24)(i)
#else
#define AE_MOVINT32X2_FROMINT24(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT32X2_FROMINT24)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVINT64_FROMINT24(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT64_FROMINT24)(i)
#else
#define AE_MOVINT64_FROMINT24(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT64_FROMINT24)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVF16_FROMINT24(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF16_FROMINT24)(i)
#else
#define AE_MOVF16_FROMINT24(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF16_FROMINT24)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVF16X4_FROMINT24(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF16X4_FROMINT24)(i)
#else
#define AE_MOVF16X4_FROMINT24(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF16X4_FROMINT24)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVF24_FROMINT24(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF24_FROMINT24)(i)
#else
#define AE_MOVF24_FROMINT24(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF24_FROMINT24)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVF24X2_FROMINT24(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF24X2_FROMINT24)(i)
#else
#define AE_MOVF24X2_FROMINT24(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF24X2_FROMINT24)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVF32_FROMINT24(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF32_FROMINT24)(i)
#else
#define AE_MOVF32_FROMINT24(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF32_FROMINT24)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVF32X2_FROMINT24(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF32X2_FROMINT24)(i)
#else
#define AE_MOVF32X2_FROMINT24(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF32X2_FROMINT24)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVF64_FROMINT24(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF64_FROMINT24)(i)
#else
#define AE_MOVF64_FROMINT24(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF64_FROMINT24)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVINT16_FROMINT24X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT16_FROMINT24X2)(i)
#else
#define AE_MOVINT16_FROMINT24X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT16_FROMINT24X2)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVINT16X4_FROMINT24X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT16X4_FROMINT24X2)(i)
#else
#define AE_MOVINT16X4_FROMINT24X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT16X4_FROMINT24X2)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVINT24_FROMINT24X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT24_FROMINT24X2)(i)
#else
#define AE_MOVINT24_FROMINT24X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT24_FROMINT24X2)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVINT32_FROMINT24X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT32_FROMINT24X2)(i)
#else
#define AE_MOVINT32_FROMINT24X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT32_FROMINT24X2)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVINT32X2_FROMINT24X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT32X2_FROMINT24X2)(i)
#else
#define AE_MOVINT32X2_FROMINT24X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT32X2_FROMINT24X2)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVINT64_FROMINT24X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT64_FROMINT24X2)(i)
#else
#define AE_MOVINT64_FROMINT24X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT64_FROMINT24X2)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVF16_FROMINT24X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF16_FROMINT24X2)(i)
#else
#define AE_MOVF16_FROMINT24X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF16_FROMINT24X2)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVF16X4_FROMINT24X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF16X4_FROMINT24X2)(i)
#else
#define AE_MOVF16X4_FROMINT24X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF16X4_FROMINT24X2)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVF24_FROMINT24X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF24_FROMINT24X2)(i)
#else
#define AE_MOVF24_FROMINT24X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF24_FROMINT24X2)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVF24X2_FROMINT24X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF24X2_FROMINT24X2)(i)
#else
#define AE_MOVF24X2_FROMINT24X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF24X2_FROMINT24X2)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVF32_FROMINT24X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF32_FROMINT24X2)(i)
#else
#define AE_MOVF32_FROMINT24X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF32_FROMINT24X2)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVF32X2_FROMINT24X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF32X2_FROMINT24X2)(i)
#else
#define AE_MOVF32X2_FROMINT24X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF32X2_FROMINT24X2)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVF64_FROMINT24X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF64_FROMINT24X2)(i)
#else
#define AE_MOVF64_FROMINT24X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF64_FROMINT24X2)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVINT16_FROMINT32(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT16_FROMINT32)(i)
#else
#define AE_MOVINT16_FROMINT32(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT16_FROMINT32)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVINT16X4_FROMINT32(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT16X4_FROMINT32)(i)
#else
#define AE_MOVINT16X4_FROMINT32(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT16X4_FROMINT32)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVINT24_FROMINT32(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT24_FROMINT32)(i)
#else
#define AE_MOVINT24_FROMINT32(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT24_FROMINT32)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVINT24X2_FROMINT32(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT24X2_FROMINT32)(i)
#else
#define AE_MOVINT24X2_FROMINT32(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT24X2_FROMINT32)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVINT32X2_FROMINT32(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT32X2_FROMINT32)(i)
#else
#define AE_MOVINT32X2_FROMINT32(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT32X2_FROMINT32)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVINT64_FROMINT32(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT64_FROMINT32)(i)
#else
#define AE_MOVINT64_FROMINT32(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT64_FROMINT32)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVF16_FROMINT32(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF16_FROMINT32)(i)
#else
#define AE_MOVF16_FROMINT32(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF16_FROMINT32)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVF16X4_FROMINT32(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF16X4_FROMINT32)(i)
#else
#define AE_MOVF16X4_FROMINT32(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF16X4_FROMINT32)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVF24_FROMINT32(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF24_FROMINT32)(i)
#else
#define AE_MOVF24_FROMINT32(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF24_FROMINT32)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVF24X2_FROMINT32(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF24X2_FROMINT32)(i)
#else
#define AE_MOVF24X2_FROMINT32(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF24X2_FROMINT32)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVF32_FROMINT32(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF32_FROMINT32)(i)
#else
#define AE_MOVF32_FROMINT32(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF32_FROMINT32)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVF32X2_FROMINT32(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF32X2_FROMINT32)(i)
#else
#define AE_MOVF32X2_FROMINT32(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF32X2_FROMINT32)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVF64_FROMINT32(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF64_FROMINT32)(i)
#else
#define AE_MOVF64_FROMINT32(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF64_FROMINT32)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVINT16_FROMINT32X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT16_FROMINT32X2)(i)
#else
#define AE_MOVINT16_FROMINT32X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT16_FROMINT32X2)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVINT16X4_FROMINT32X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT16X4_FROMINT32X2)(i)
#else
#define AE_MOVINT16X4_FROMINT32X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT16X4_FROMINT32X2)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVINT24_FROMINT32X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT24_FROMINT32X2)(i)
#else
#define AE_MOVINT24_FROMINT32X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT24_FROMINT32X2)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVINT24X2_FROMINT32X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT24X2_FROMINT32X2)(i)
#else
#define AE_MOVINT24X2_FROMINT32X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT24X2_FROMINT32X2)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVINT32_FROMINT32X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT32_FROMINT32X2)(i)
#else
#define AE_MOVINT32_FROMINT32X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT32_FROMINT32X2)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVINT64_FROMINT32X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT64_FROMINT32X2)(i)
#else
#define AE_MOVINT64_FROMINT32X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT64_FROMINT32X2)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVF16_FROMINT32X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF16_FROMINT32X2)(i)
#else
#define AE_MOVF16_FROMINT32X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF16_FROMINT32X2)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVF16X4_FROMINT32X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF16X4_FROMINT32X2)(i)
#else
#define AE_MOVF16X4_FROMINT32X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF16X4_FROMINT32X2)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVF24_FROMINT32X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF24_FROMINT32X2)(i)
#else
#define AE_MOVF24_FROMINT32X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF24_FROMINT32X2)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVF24X2_FROMINT32X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF24X2_FROMINT32X2)(i)
#else
#define AE_MOVF24X2_FROMINT32X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF24X2_FROMINT32X2)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVF32_FROMINT32X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF32_FROMINT32X2)(i)
#else
#define AE_MOVF32_FROMINT32X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF32_FROMINT32X2)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVF32X2_FROMINT32X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF32X2_FROMINT32X2)(i)
#else
#define AE_MOVF32X2_FROMINT32X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF32X2_FROMINT32X2)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVF64_FROMINT32X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF64_FROMINT32X2)(i)
#else
#define AE_MOVF64_FROMINT32X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF64_FROMINT32X2)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVINT16_FROMINT64(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT16_FROMINT64)(i)
#else
#define AE_MOVINT16_FROMINT64(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT16_FROMINT64)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVINT16X4_FROMINT64(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT16X4_FROMINT64)(i)
#else
#define AE_MOVINT16X4_FROMINT64(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT16X4_FROMINT64)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVINT24_FROMINT64(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT24_FROMINT64)(i)
#else
#define AE_MOVINT24_FROMINT64(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT24_FROMINT64)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVINT24X2_FROMINT64(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT24X2_FROMINT64)(i)
#else
#define AE_MOVINT24X2_FROMINT64(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT24X2_FROMINT64)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVINT32_FROMINT64(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT32_FROMINT64)(i)
#else
#define AE_MOVINT32_FROMINT64(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT32_FROMINT64)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVINT32X2_FROMINT64(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT32X2_FROMINT64)(i)
#else
#define AE_MOVINT32X2_FROMINT64(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT32X2_FROMINT64)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVF16_FROMINT64(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF16_FROMINT64)(i)
#else
#define AE_MOVF16_FROMINT64(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF16_FROMINT64)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVF16X4_FROMINT64(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF16X4_FROMINT64)(i)
#else
#define AE_MOVF16X4_FROMINT64(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF16X4_FROMINT64)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVF24_FROMINT64(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF24_FROMINT64)(i)
#else
#define AE_MOVF24_FROMINT64(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF24_FROMINT64)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVF24X2_FROMINT64(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF24X2_FROMINT64)(i)
#else
#define AE_MOVF24X2_FROMINT64(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF24X2_FROMINT64)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVF32_FROMINT64(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF32_FROMINT64)(i)
#else
#define AE_MOVF32_FROMINT64(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF32_FROMINT64)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVF32X2_FROMINT64(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF32X2_FROMINT64)(i)
#else
#define AE_MOVF32X2_FROMINT64(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF32X2_FROMINT64)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVF64_FROMINT64(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF64_FROMINT64)(i)
#else
#define AE_MOVF64_FROMINT64(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF64_FROMINT64)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVINT16_FROMF16(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT16_FROMF16)(i)
#else
#define AE_MOVINT16_FROMF16(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT16_FROMF16)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVINT16X4_FROMF16(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT16X4_FROMF16)(i)
#else
#define AE_MOVINT16X4_FROMF16(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT16X4_FROMF16)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVINT24_FROMF16(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT24_FROMF16)(i)
#else
#define AE_MOVINT24_FROMF16(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT24_FROMF16)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVINT24X2_FROMF16(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT24X2_FROMF16)(i)
#else
#define AE_MOVINT24X2_FROMF16(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT24X2_FROMF16)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVINT32_FROMF16(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT32_FROMF16)(i)
#else
#define AE_MOVINT32_FROMF16(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT32_FROMF16)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVINT32X2_FROMF16(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT32X2_FROMF16)(i)
#else
#define AE_MOVINT32X2_FROMF16(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT32X2_FROMF16)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVINT64_FROMF16(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT64_FROMF16)(i)
#else
#define AE_MOVINT64_FROMF16(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT64_FROMF16)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVF16X4_FROMF16(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF16X4_FROMF16)(i)
#else
#define AE_MOVF16X4_FROMF16(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF16X4_FROMF16)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVF24_FROMF16(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF24_FROMF16)(i)
#else
#define AE_MOVF24_FROMF16(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF24_FROMF16)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVF24X2_FROMF16(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF24X2_FROMF16)(i)
#else
#define AE_MOVF24X2_FROMF16(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF24X2_FROMF16)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVF32_FROMF16(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF32_FROMF16)(i)
#else
#define AE_MOVF32_FROMF16(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF32_FROMF16)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVF32X2_FROMF16(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF32X2_FROMF16)(i)
#else
#define AE_MOVF32X2_FROMF16(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF32X2_FROMF16)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVF64_FROMF16(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF64_FROMF16)(i)
#else
#define AE_MOVF64_FROMF16(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF64_FROMF16)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVINT16_FROMF16X4(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT16_FROMF16X4)(i)
#else
#define AE_MOVINT16_FROMF16X4(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT16_FROMF16X4)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVINT16X4_FROMF16X4(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT16X4_FROMF16X4)(i)
#else
#define AE_MOVINT16X4_FROMF16X4(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT16X4_FROMF16X4)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVINT24_FROMF16X4(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT24_FROMF16X4)(i)
#else
#define AE_MOVINT24_FROMF16X4(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT24_FROMF16X4)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVINT24X2_FROMF16X4(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT24X2_FROMF16X4)(i)
#else
#define AE_MOVINT24X2_FROMF16X4(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT24X2_FROMF16X4)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVINT32_FROMF16X4(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT32_FROMF16X4)(i)
#else
#define AE_MOVINT32_FROMF16X4(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT32_FROMF16X4)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVINT32X2_FROMF16X4(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT32X2_FROMF16X4)(i)
#else
#define AE_MOVINT32X2_FROMF16X4(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT32X2_FROMF16X4)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVINT64_FROMF16X4(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT64_FROMF16X4)(i)
#else
#define AE_MOVINT64_FROMF16X4(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT64_FROMF16X4)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVF16_FROMF16X4(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF16_FROMF16X4)(i)
#else
#define AE_MOVF16_FROMF16X4(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF16_FROMF16X4)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVF24_FROMF16X4(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF24_FROMF16X4)(i)
#else
#define AE_MOVF24_FROMF16X4(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF24_FROMF16X4)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVF24X2_FROMF16X4(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF24X2_FROMF16X4)(i)
#else
#define AE_MOVF24X2_FROMF16X4(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF24X2_FROMF16X4)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVF32_FROMF16X4(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF32_FROMF16X4)(i)
#else
#define AE_MOVF32_FROMF16X4(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF32_FROMF16X4)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVF32X2_FROMF16X4(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF32X2_FROMF16X4)(i)
#else
#define AE_MOVF32X2_FROMF16X4(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF32X2_FROMF16X4)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVF64_FROMF16X4(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF64_FROMF16X4)(i)
#else
#define AE_MOVF64_FROMF16X4(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF64_FROMF16X4)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVINT16_FROMF24(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT16_FROMF24)(i)
#else
#define AE_MOVINT16_FROMF24(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT16_FROMF24)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVINT16X4_FROMF24(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT16X4_FROMF24)(i)
#else
#define AE_MOVINT16X4_FROMF24(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT16X4_FROMF24)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVINT24_FROMF24(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT24_FROMF24)(i)
#else
#define AE_MOVINT24_FROMF24(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT24_FROMF24)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVINT24X2_FROMF24(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT24X2_FROMF24)(i)
#else
#define AE_MOVINT24X2_FROMF24(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT24X2_FROMF24)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVINT32_FROMF24(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT32_FROMF24)(i)
#else
#define AE_MOVINT32_FROMF24(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT32_FROMF24)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVINT32X2_FROMF24(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT32X2_FROMF24)(i)
#else
#define AE_MOVINT32X2_FROMF24(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT32X2_FROMF24)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVINT64_FROMF24(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT64_FROMF24)(i)
#else
#define AE_MOVINT64_FROMF24(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT64_FROMF24)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVF16_FROMF24(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF16_FROMF24)(i)
#else
#define AE_MOVF16_FROMF24(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF16_FROMF24)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVF16X4_FROMF24(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF16X4_FROMF24)(i)
#else
#define AE_MOVF16X4_FROMF24(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF16X4_FROMF24)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVF24X2_FROMF24(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF24X2_FROMF24)(i)
#else
#define AE_MOVF24X2_FROMF24(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF24X2_FROMF24)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVF32_FROMF24(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF32_FROMF24)(i)
#else
#define AE_MOVF32_FROMF24(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF32_FROMF24)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVF32X2_FROMF24(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF32X2_FROMF24)(i)
#else
#define AE_MOVF32X2_FROMF24(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF32X2_FROMF24)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVF64_FROMF24(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF64_FROMF24)(i)
#else
#define AE_MOVF64_FROMF24(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF64_FROMF24)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVINT16_FROMF24X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT16_FROMF24X2)(i)
#else
#define AE_MOVINT16_FROMF24X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT16_FROMF24X2)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVINT16X4_FROMF24X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT16X4_FROMF24X2)(i)
#else
#define AE_MOVINT16X4_FROMF24X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT16X4_FROMF24X2)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVINT24_FROMF24X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT24_FROMF24X2)(i)
#else
#define AE_MOVINT24_FROMF24X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT24_FROMF24X2)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVINT24X2_FROMF24X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT24X2_FROMF24X2)(i)
#else
#define AE_MOVINT24X2_FROMF24X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT24X2_FROMF24X2)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVINT32_FROMF24X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT32_FROMF24X2)(i)
#else
#define AE_MOVINT32_FROMF24X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT32_FROMF24X2)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVINT32X2_FROMF24X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT32X2_FROMF24X2)(i)
#else
#define AE_MOVINT32X2_FROMF24X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT32X2_FROMF24X2)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVINT64_FROMF24X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT64_FROMF24X2)(i)
#else
#define AE_MOVINT64_FROMF24X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT64_FROMF24X2)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVF16_FROMF24X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF16_FROMF24X2)(i)
#else
#define AE_MOVF16_FROMF24X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF16_FROMF24X2)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVF16X4_FROMF24X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF16X4_FROMF24X2)(i)
#else
#define AE_MOVF16X4_FROMF24X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF16X4_FROMF24X2)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVF24_FROMF24X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF24_FROMF24X2)(i)
#else
#define AE_MOVF24_FROMF24X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF24_FROMF24X2)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVF32_FROMF24X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF32_FROMF24X2)(i)
#else
#define AE_MOVF32_FROMF24X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF32_FROMF24X2)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVF32X2_FROMF24X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF32X2_FROMF24X2)(i)
#else
#define AE_MOVF32X2_FROMF24X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF32X2_FROMF24X2)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVF64_FROMF24X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF64_FROMF24X2)(i)
#else
#define AE_MOVF64_FROMF24X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF64_FROMF24X2)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVINT16_FROMF32(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT16_FROMF32)(i)
#else
#define AE_MOVINT16_FROMF32(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT16_FROMF32)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVINT16X4_FROMF32(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT16X4_FROMF32)(i)
#else
#define AE_MOVINT16X4_FROMF32(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT16X4_FROMF32)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVINT24_FROMF32(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT24_FROMF32)(i)
#else
#define AE_MOVINT24_FROMF32(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT24_FROMF32)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVINT24X2_FROMF32(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT24X2_FROMF32)(i)
#else
#define AE_MOVINT24X2_FROMF32(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT24X2_FROMF32)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVINT32_FROMF32(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT32_FROMF32)(i)
#else
#define AE_MOVINT32_FROMF32(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT32_FROMF32)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVINT32X2_FROMF32(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT32X2_FROMF32)(i)
#else
#define AE_MOVINT32X2_FROMF32(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT32X2_FROMF32)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVINT64_FROMF32(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT64_FROMF32)(i)
#else
#define AE_MOVINT64_FROMF32(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT64_FROMF32)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVF16_FROMF32(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF16_FROMF32)(i)
#else
#define AE_MOVF16_FROMF32(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF16_FROMF32)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVF16X4_FROMF32(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF16X4_FROMF32)(i)
#else
#define AE_MOVF16X4_FROMF32(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF16X4_FROMF32)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVF24_FROMF32(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF24_FROMF32)(i)
#else
#define AE_MOVF24_FROMF32(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF24_FROMF32)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVF24X2_FROMF32(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF24X2_FROMF32)(i)
#else
#define AE_MOVF24X2_FROMF32(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF24X2_FROMF32)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVF32X2_FROMF32(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF32X2_FROMF32)(i)
#else
#define AE_MOVF32X2_FROMF32(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF32X2_FROMF32)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVF64_FROMF32(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF64_FROMF32)(i)
#else
#define AE_MOVF64_FROMF32(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF64_FROMF32)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVINT16_FROMF32X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT16_FROMF32X2)(i)
#else
#define AE_MOVINT16_FROMF32X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT16_FROMF32X2)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVINT16X4_FROMF32X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT16X4_FROMF32X2)(i)
#else
#define AE_MOVINT16X4_FROMF32X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT16X4_FROMF32X2)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVINT24_FROMF32X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT24_FROMF32X2)(i)
#else
#define AE_MOVINT24_FROMF32X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT24_FROMF32X2)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVINT24X2_FROMF32X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT24X2_FROMF32X2)(i)
#else
#define AE_MOVINT24X2_FROMF32X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT24X2_FROMF32X2)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVINT32_FROMF32X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT32_FROMF32X2)(i)
#else
#define AE_MOVINT32_FROMF32X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT32_FROMF32X2)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVINT32X2_FROMF32X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT32X2_FROMF32X2)(i)
#else
#define AE_MOVINT32X2_FROMF32X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT32X2_FROMF32X2)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVINT64_FROMF32X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT64_FROMF32X2)(i)
#else
#define AE_MOVINT64_FROMF32X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT64_FROMF32X2)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVF16_FROMF32X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF16_FROMF32X2)(i)
#else
#define AE_MOVF16_FROMF32X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF16_FROMF32X2)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVF16X4_FROMF32X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF16X4_FROMF32X2)(i)
#else
#define AE_MOVF16X4_FROMF32X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF16X4_FROMF32X2)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVF24_FROMF32X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF24_FROMF32X2)(i)
#else
#define AE_MOVF24_FROMF32X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF24_FROMF32X2)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVF24X2_FROMF32X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF24X2_FROMF32X2)(i)
#else
#define AE_MOVF24X2_FROMF32X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF24X2_FROMF32X2)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVF32_FROMF32X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF32_FROMF32X2)(i)
#else
#define AE_MOVF32_FROMF32X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF32_FROMF32X2)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVF64_FROMF32X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF64_FROMF32X2)(i)
#else
#define AE_MOVF64_FROMF32X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF64_FROMF32X2)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVINT16_FROMF64(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT16_FROMF64)(i)
#else
#define AE_MOVINT16_FROMF64(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT16_FROMF64)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVINT16X4_FROMF64(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT16X4_FROMF64)(i)
#else
#define AE_MOVINT16X4_FROMF64(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT16X4_FROMF64)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVINT24_FROMF64(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT24_FROMF64)(i)
#else
#define AE_MOVINT24_FROMF64(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT24_FROMF64)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVINT24X2_FROMF64(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT24X2_FROMF64)(i)
#else
#define AE_MOVINT24X2_FROMF64(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT24X2_FROMF64)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVINT32_FROMF64(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT32_FROMF64)(i)
#else
#define AE_MOVINT32_FROMF64(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT32_FROMF64)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVINT32X2_FROMF64(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT32X2_FROMF64)(i)
#else
#define AE_MOVINT32X2_FROMF64(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT32X2_FROMF64)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVINT64_FROMF64(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT64_FROMF64)(i)
#else
#define AE_MOVINT64_FROMF64(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT64_FROMF64)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVF16_FROMF64(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF16_FROMF64)(i)
#else
#define AE_MOVF16_FROMF64(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF16_FROMF64)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVF16X4_FROMF64(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF16X4_FROMF64)(i)
#else
#define AE_MOVF16X4_FROMF64(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF16X4_FROMF64)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVF24_FROMF64(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF24_FROMF64)(i)
#else
#define AE_MOVF24_FROMF64(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF24_FROMF64)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVF24X2_FROMF64(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF24X2_FROMF64)(i)
#else
#define AE_MOVF24X2_FROMF64(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF24X2_FROMF64)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVF32_FROMF64(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF32_FROMF64)(i)
#else
#define AE_MOVF32_FROMF64(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF32_FROMF64)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVF32X2_FROMF64(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF32X2_FROMF64)(i)
#else
#define AE_MOVF32X2_FROMF64(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF32X2_FROMF64)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int32u_loadi(base, c) \
	CSTUB_(_TIE_xt_hifi2_ae_int32u_loadi)(base, c)
#else
#define ae_int32u_loadi(base, c) \
	CSTUB_(_TIE_xt_hifi2_ae_int32u_loadi)(base, c)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int32u_storei(a, base, c) \
	CSTUB_(_TIE_xt_hifi2_ae_int32u_storei)(a, base, c)
#else
#define ae_int32u_storei(a, base, c) \
	CSTUB_(_TIE_xt_hifi2_ae_int32u_storei)(a, base, c)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int32u_move(b) \
	CSTUB_(_TIE_xt_hifi2_ae_int32u_move)(b)
#else
#define ae_int32u_move(b) \
	CSTUB_(_TIE_xt_hifi2_ae_int32u_move)(b)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int16u_loadi(base, c) \
	CSTUB_(_TIE_xt_hifi2_ae_int16u_loadi)(base, c)
#else
#define ae_int16u_loadi(base, c) \
	CSTUB_(_TIE_xt_hifi2_ae_int16u_loadi)(base, c)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int16u_storei(a, base, c) \
	CSTUB_(_TIE_xt_hifi2_ae_int16u_storei)(a, base, c)
#else
#define ae_int16u_storei(a, base, c) \
	CSTUB_(_TIE_xt_hifi2_ae_int16u_storei)(a, base, c)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int16u_move(b) \
	CSTUB_(_TIE_xt_hifi2_ae_int16u_move)(b)
#else
#define ae_int16u_move(b) \
	CSTUB_(_TIE_xt_hifi2_ae_int16u_move)(b)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_ABS_32(b) \
	CSTUB_(_TIE_xt_hifi2_AE_ABS_32)(b)
#else
#define AE_ABS_32(b) \
	CSTUB_(_TIE_xt_hifi2_AE_ABS_32)(b)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOV_32(b) \
	CSTUB_(_TIE_xt_hifi2_AE_MOV_32)(b)
#else
#define AE_MOV_32(b) \
	CSTUB_(_TIE_xt_hifi2_AE_MOV_32)(b)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_NEG_32(b) \
	CSTUB_(_TIE_xt_hifi2_AE_NEG_32)(b)
#else
#define AE_NEG_32(b) \
	CSTUB_(_TIE_xt_hifi2_AE_NEG_32)(b)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_ADD_32(b, c) \
	CSTUB_(_TIE_xt_hifi2_AE_ADD_32)(b, c)
#else
#define AE_ADD_32(b, c) \
	CSTUB_(_TIE_xt_hifi2_AE_ADD_32)(b, c)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_ADDI_32(b, c) \
	CSTUB_(_TIE_xt_hifi2_AE_ADDI_32)(b, c)
#else
#define AE_ADDI_32(b, c) \
	CSTUB_(_TIE_xt_hifi2_AE_ADDI_32)(b, c)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_ADDMI_32(b, c) \
	CSTUB_(_TIE_xt_hifi2_AE_ADDMI_32)(b, c)
#else
#define AE_ADDMI_32(b, c) \
	CSTUB_(_TIE_xt_hifi2_AE_ADDMI_32)(b, c)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_ADDX2_32(b, c) \
	CSTUB_(_TIE_xt_hifi2_AE_ADDX2_32)(b, c)
#else
#define AE_ADDX2_32(b, c) \
	CSTUB_(_TIE_xt_hifi2_AE_ADDX2_32)(b, c)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_ADDX4_32(b, c) \
	CSTUB_(_TIE_xt_hifi2_AE_ADDX4_32)(b, c)
#else
#define AE_ADDX4_32(b, c) \
	CSTUB_(_TIE_xt_hifi2_AE_ADDX4_32)(b, c)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_ADDX8_32(b, c) \
	CSTUB_(_TIE_xt_hifi2_AE_ADDX8_32)(b, c)
#else
#define AE_ADDX8_32(b, c) \
	CSTUB_(_TIE_xt_hifi2_AE_ADDX8_32)(b, c)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SUBX2_32(b, c) \
	CSTUB_(_TIE_xt_hifi2_AE_SUBX2_32)(b, c)
#else
#define AE_SUBX2_32(b, c) \
	CSTUB_(_TIE_xt_hifi2_AE_SUBX2_32)(b, c)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SUBX4_32(b, c) \
	CSTUB_(_TIE_xt_hifi2_AE_SUBX4_32)(b, c)
#else
#define AE_SUBX4_32(b, c) \
	CSTUB_(_TIE_xt_hifi2_AE_SUBX4_32)(b, c)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SUBX8_32(b, c) \
	CSTUB_(_TIE_xt_hifi2_AE_SUBX8_32)(b, c)
#else
#define AE_SUBX8_32(b, c) \
	CSTUB_(_TIE_xt_hifi2_AE_SUBX8_32)(b, c)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SUB_32(b, c) \
	CSTUB_(_TIE_xt_hifi2_AE_SUB_32)(b, c)
#else
#define AE_SUB_32(b, c) \
	CSTUB_(_TIE_xt_hifi2_AE_SUB_32)(b, c)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SEXT_32(b, c) \
	CSTUB_(_TIE_xt_hifi2_AE_SEXT_32)(b, c)
#else
#define AE_SEXT_32(b, c) \
	CSTUB_(_TIE_xt_hifi2_AE_SEXT_32)(b, c)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SRAI_32(b, c) \
	CSTUB_(_TIE_xt_hifi2_AE_SRAI_32)(b, c)
#else
#define AE_SRAI_32(b, c) \
	CSTUB_(_TIE_xt_hifi2_AE_SRAI_32)(b, c)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SRLI_32(b, c) \
	CSTUB_(_TIE_xt_hifi2_AE_SRLI_32)(b, c)
#else
#define AE_SRLI_32(b, c) \
	CSTUB_(_TIE_xt_hifi2_AE_SRLI_32)(b, c)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SLLI_32(b, c) \
	CSTUB_(_TIE_xt_hifi2_AE_SLLI_32)(b, c)
#else
#define AE_SLLI_32(b, c) \
	CSTUB_(_TIE_xt_hifi2_AE_SLLI_32)(b, c)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_L_32(base, c) \
	CSTUB_(_TIE_xt_hifi2_AE_L_32)(base, c)
#else
#define AE_L_32(base, c) \
	CSTUB_(_TIE_xt_hifi2_AE_L_32)(base, c)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_S_32(a, base, c) \
	CSTUB_(_TIE_xt_hifi2_AE_S_32)(a, base, c)
#else
#define AE_S_32(a, base, c) \
	CSTUB_(_TIE_xt_hifi2_AE_S_32)(a, base, c)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_L_16(base, c) \
	CSTUB_(_TIE_xt_hifi2_AE_L_16)(base, c)
#else
#define AE_L_16(base, c) \
	CSTUB_(_TIE_xt_hifi2_AE_L_16)(base, c)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MAX_32_signed(b, c) \
	CSTUB_(_TIE_xt_hifi2_AE_MAX_32_signed)(b, c)
#else
#define AE_MAX_32_signed(b, c) \
	CSTUB_(_TIE_xt_hifi2_AE_MAX_32_signed)(b, c)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MIN_32_signed(b, c) \
	CSTUB_(_TIE_xt_hifi2_AE_MIN_32_signed)(b, c)
#else
#define AE_MIN_32_signed(b, c) \
	CSTUB_(_TIE_xt_hifi2_AE_MIN_32_signed)(b, c)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_AND_32(b, c) \
	CSTUB_(_TIE_xt_hifi2_AE_AND_32)(b, c)
#else
#define AE_AND_32(b, c) \
	CSTUB_(_TIE_xt_hifi2_AE_AND_32)(b, c)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAF16SS_00_scalar(a, b, c) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF16SS_00_scalar)(a, b, c)
#else
#define AE_MULAF16SS_00_scalar(a, b, c) { \
	ae_int32 __a = a; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF16SS_00_scalar)(__a, b, c); \
	(a) = __a; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULAF16SS_30_scalar(a, b, c) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF16SS_30_scalar)(a, b, c)
#else
#define AE_MULAF16SS_30_scalar(a, b, c) { \
	ae_int32 __a = a; \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF16SS_30_scalar)(__a, b, c); \
	(a) = __a; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULF16SS_30_scalar(b, c) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF16SS_30_scalar)(b, c)
#else
#define AE_MULF16SS_30_scalar(b, c) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF16SS_30_scalar)(b, c)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_OR_32(b, c) \
	CSTUB_(_TIE_xt_hifi2_AE_OR_32)(b, c)
#else
#define AE_OR_32(b, c) \
	CSTUB_(_TIE_xt_hifi2_AE_OR_32)(b, c)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_XOR_32(b, c) \
	CSTUB_(_TIE_xt_hifi2_AE_XOR_32)(b, c)
#else
#define AE_XOR_32(b, c) \
	CSTUB_(_TIE_xt_hifi2_AE_XOR_32)(b, c)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_NAND_32(b, c) \
	CSTUB_(_TIE_xt_hifi2_AE_NAND_32)(b, c)
#else
#define AE_NAND_32(b, c) \
	CSTUB_(_TIE_xt_hifi2_AE_NAND_32)(b, c)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVLTZ_32(a, b, test_value) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVLTZ_32)(a, b, test_value)
#else
#define AE_MOVLTZ_32(a, b, test_value) { \
	ae_int32 __a = a; \
	CSTUB_(_TIE_xt_hifi2_AE_MOVLTZ_32)(__a, b, test_value); \
	(a) = __a; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVGEZ_32(a, b, test_value) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVGEZ_32)(a, b, test_value)
#else
#define AE_MOVGEZ_32(a, b, test_value) { \
	ae_int32 __a = a; \
	CSTUB_(_TIE_xt_hifi2_AE_MOVGEZ_32)(__a, b, test_value); \
	(a) = __a; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVEQZ_32(a, b, test_value) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVEQZ_32)(a, b, test_value)
#else
#define AE_MOVEQZ_32(a, b, test_value) { \
	ae_int32 __a = a; \
	CSTUB_(_TIE_xt_hifi2_AE_MOVEQZ_32)(__a, b, test_value); \
	(a) = __a; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVNEZ_32(a, b, test_value) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVNEZ_32)(a, b, test_value)
#else
#define AE_MOVNEZ_32(a, b, test_value) { \
	ae_int32 __a = a; \
	CSTUB_(_TIE_xt_hifi2_AE_MOVNEZ_32)(__a, b, test_value); \
	(a) = __a; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVT_32(a, b, cond) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVT_32)(a, b, cond)
#else
#define AE_MOVT_32(a, b, cond) { \
	ae_int32 __a = a; \
	CSTUB_(_TIE_xt_hifi2_AE_MOVT_32)(__a, b, cond); \
	(a) = __a; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVI_32(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVI_32)(i)
#else
#define AE_MOVI_32(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVI_32)(i)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVT_32_unsigned(a, b, cond) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVT_32_unsigned)(a, b, cond)
#else
#define AE_MOVT_32_unsigned(a, b, cond) { \
	ae_int32u __a = a; \
	CSTUB_(_TIE_xt_hifi2_AE_MOVT_32_unsigned)(__a, b, cond); \
	(a) = __a; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVF_32(a, b, cond) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF_32)(a, b, cond)
#else
#define AE_MOVF_32(a, b, cond) { \
	ae_int32 __a = a; \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF_32)(__a, b, cond); \
	(a) = __a; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MOVF_32_unsigned(a, b, cond) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF_32_unsigned)(a, b, cond)
#else
#define AE_MOVF_32_unsigned(a, b, cond) { \
	ae_int32u __a = a; \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF_32_unsigned)(__a, b, cond); \
	(a) = __a; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_S_16(a, base, c) \
	CSTUB_(_TIE_xt_hifi2_AE_S_16)(a, base, c)
#else
#define AE_S_16(a, base, c) \
	CSTUB_(_TIE_xt_hifi2_AE_S_16)(a, base, c)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MUL16S(b, c) \
	CSTUB_(_TIE_xt_hifi2_AE_MUL16S)(b, c)
#else
#define AE_MUL16S(b, c) \
	CSTUB_(_TIE_xt_hifi2_AE_MUL16S)(b, c)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_L_16U(base, c) \
	CSTUB_(_TIE_xt_hifi2_AE_L_16U)(base, c)
#else
#define AE_L_16U(base, c) \
	CSTUB_(_TIE_xt_hifi2_AE_L_16U)(base, c)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MUL32(b, c) \
	CSTUB_(_TIE_xt_hifi2_AE_MUL32)(b, c)
#else
#define AE_MUL32(b, c) \
	CSTUB_(_TIE_xt_hifi2_AE_MUL32)(b, c)
#endif

#ifdef _STRICT_ARG_TYPE
#define xtbool_join_xtbool2(src0, src1) \
	CSTUB_(_TIE_xt_hifi2_xtbool_join_xtbool2)(src0, src1)
#else
#define xtbool_join_xtbool2(src0, src1) \
	CSTUB_(_TIE_xt_hifi2_xtbool_join_xtbool2)(src0, src1)
#endif

#ifdef _STRICT_ARG_TYPE
#define xtbool_join_xtbool4(src0, src1, src2, src3) \
	CSTUB_(_TIE_xt_hifi2_xtbool_join_xtbool4)(src0, src1, src2, src3)
#else
#define xtbool_join_xtbool4(src0, src1, src2, src3) \
	CSTUB_(_TIE_xt_hifi2_xtbool_join_xtbool4)(src0, src1, src2, src3)
#endif

#ifdef _STRICT_ARG_TYPE
#define xtbool2_extract_0(src) \
	CSTUB_(_TIE_xt_hifi2_xtbool2_extract_0)(src)
#else
#define xtbool2_extract_0(src) \
	CSTUB_(_TIE_xt_hifi2_xtbool2_extract_0)(src)
#endif

#ifdef _STRICT_ARG_TYPE
#define xtbool2_extract_1(src) \
	CSTUB_(_TIE_xt_hifi2_xtbool2_extract_1)(src)
#else
#define xtbool2_extract_1(src) \
	CSTUB_(_TIE_xt_hifi2_xtbool2_extract_1)(src)
#endif

#ifdef _STRICT_ARG_TYPE
#define xtbool4_extract_0(src) \
	CSTUB_(_TIE_xt_hifi2_xtbool4_extract_0)(src)
#else
#define xtbool4_extract_0(src) \
	CSTUB_(_TIE_xt_hifi2_xtbool4_extract_0)(src)
#endif

#ifdef _STRICT_ARG_TYPE
#define xtbool4_extract_1(src) \
	CSTUB_(_TIE_xt_hifi2_xtbool4_extract_1)(src)
#else
#define xtbool4_extract_1(src) \
	CSTUB_(_TIE_xt_hifi2_xtbool4_extract_1)(src)
#endif

#ifdef _STRICT_ARG_TYPE
#define xtbool4_extract_2(src) \
	CSTUB_(_TIE_xt_hifi2_xtbool4_extract_2)(src)
#else
#define xtbool4_extract_2(src) \
	CSTUB_(_TIE_xt_hifi2_xtbool4_extract_2)(src)
#endif

#ifdef _STRICT_ARG_TYPE
#define xtbool4_extract_3(src) \
	CSTUB_(_TIE_xt_hifi2_xtbool4_extract_3)(src)
#else
#define xtbool4_extract_3(src) \
	CSTUB_(_TIE_xt_hifi2_xtbool4_extract_3)(src)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int64x2_loadi(b, c) \
	CSTUB_(_TIE_xt_hifi2_ae_int64x2_loadi)(b, c)
#else
#define ae_int64x2_loadi(b, c) \
	CSTUB_(_TIE_xt_hifi2_ae_int64x2_loadi)(b, c)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int64x2_storei(d, b, c) \
	CSTUB_(_TIE_xt_hifi2_ae_int64x2_storei)(d, b, c)
#else
#define ae_int64x2_storei(d, b, c) \
	CSTUB_(_TIE_xt_hifi2_ae_int64x2_storei)(d, b, c)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int64x2_move(b) \
	CSTUB_(_TIE_xt_hifi2_ae_int64x2_move)(b)
#else
#define ae_int64x2_move(b) \
	CSTUB_(_TIE_xt_hifi2_ae_int64x2_move)(b)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SLAA64X2_vector(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SLAA64X2_vector)(d0, sa)
#else
#define AE_SLAA64X2_vector(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SLAA64X2_vector)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SLAI64X2_vector(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SLAI64X2_vector)(d0, sa)
#else
#define AE_SLAI64X2_vector(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SLAI64X2_vector)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SRAA64X2_vector(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SRAA64X2_vector)(d0, sa)
#else
#define AE_SRAA64X2_vector(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SRAA64X2_vector)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SRAI64X2_vector(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SRAI64X2_vector)(d0, sa)
#else
#define AE_SRAI64X2_vector(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SRAI64X2_vector)(d0, sa)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_NEG64X2_vector(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_NEG64X2_vector)(d0)
#else
#define AE_NEG64X2_vector(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_NEG64X2_vector)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_ADD64X2_vector(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_ADD64X2_vector)(d0, d1)
#else
#define AE_ADD64X2_vector(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_ADD64X2_vector)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SUB64X2_vector(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SUB64X2_vector)(d0, d1)
#else
#define AE_SUB64X2_vector(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SUB64X2_vector)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULA32X2_vector(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULA32X2_vector)(d, d0, d1)
#else
#define AE_MULA32X2_vector(d, d0, d1) { \
	ae_int64x2 __d = d; \
	CSTUB_(_TIE_xt_hifi2_AE_MULA32X2_vector)(__d, d0, d1); \
	(d) = __d; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MUL32X2_vector(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MUL32X2_vector)(d0, d1)
#else
#define AE_MUL32X2_vector(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MUL32X2_vector)(d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define ae_int32x2_rtor_ae_int64x2(b) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x2_rtor_ae_int64x2)(b)
#else
#define ae_int32x2_rtor_ae_int64x2(b) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x2_rtor_ae_int64x2)(b)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_INT64X2_RADD(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_INT64X2_RADD)(d0)
#else
#define AE_INT64X2_RADD(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_INT64X2_RADD)(d0)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SRLA32_vector(var1, var2) \
	CSTUB_(_TIE_xt_hifi2_AE_SRLA32_vector)(var1, var2)
#else
#define AE_SRLA32_vector(var1, var2) \
	CSTUB_(_TIE_xt_hifi2_AE_SRLA32_vector)(var1, var2)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SRLA32_scalar(var1, var2) \
	CSTUB_(_TIE_xt_hifi2_AE_SRLA32_scalar)(var1, var2)
#else
#define AE_SRLA32_scalar(var1, var2) \
	CSTUB_(_TIE_xt_hifi2_AE_SRLA32_scalar)(var1, var2)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SRLA16_vector(var1, var2) \
	CSTUB_(_TIE_xt_hifi2_AE_SRLA16_vector)(var1, var2)
#else
#define AE_SRLA16_vector(var1, var2) \
	CSTUB_(_TIE_xt_hifi2_AE_SRLA16_vector)(var1, var2)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_SRLA16_scalar(var1, var2) \
	CSTUB_(_TIE_xt_hifi2_AE_SRLA16_scalar)(var1, var2)
#else
#define AE_SRLA16_scalar(var1, var2) \
	CSTUB_(_TIE_xt_hifi2_AE_SRLA16_scalar)(var1, var2)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULA16S_scalar(ain, var1, var2) \
	CSTUB_(_TIE_xt_hifi2_AE_MULA16S_scalar)(ain, var1, var2)
#else
#define AE_MULA16S_scalar(ain, var1, var2) \
	CSTUB_(_TIE_xt_hifi2_AE_MULA16S_scalar)(ain, var1, var2)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULA16S_vector(ain, var1, var2) \
	CSTUB_(_TIE_xt_hifi2_AE_MULA16S_vector)(ain, var1, var2)
#else
#define AE_MULA16S_vector(ain, var1, var2) \
	CSTUB_(_TIE_xt_hifi2_AE_MULA16S_vector)(ain, var1, var2)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULS16S_scalar(ain, var1, var2) \
	CSTUB_(_TIE_xt_hifi2_AE_MULS16S_scalar)(ain, var1, var2)
#else
#define AE_MULS16S_scalar(ain, var1, var2) \
	CSTUB_(_TIE_xt_hifi2_AE_MULS16S_scalar)(ain, var1, var2)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_MULS16S_vector(ain, var1, var2) \
	CSTUB_(_TIE_xt_hifi2_AE_MULS16S_vector)(ain, var1, var2)
#else
#define AE_MULS16S_vector(ain, var1, var2) \
	CSTUB_(_TIE_xt_hifi2_AE_MULS16S_vector)(ain, var1, var2)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_RLmula0_rinit(a) \
	CSTUB_(_TIE_xt_hifi2_AE_RLmula0_rinit)(a)
#else
#define AE_RLmula0_rinit(a) \
	CSTUB_(_TIE_xt_hifi2_AE_RLmula0_rinit)(a)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_RLmula0_rvec(din, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_RLmula0_rvec)(din, d0, d1)
#else
#define AE_RLmula0_rvec(din, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_RLmula0_rvec)(din, d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_RLmula0_rfini(d) \
	CSTUB_(_TIE_xt_hifi2_AE_RLmula0_rfini)(d)
#else
#define AE_RLmula0_rfini(d) \
	CSTUB_(_TIE_xt_hifi2_AE_RLmula0_rfini)(d)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_RLmuls0_rinit(a) \
	CSTUB_(_TIE_xt_hifi2_AE_RLmuls0_rinit)(a)
#else
#define AE_RLmuls0_rinit(a) \
	CSTUB_(_TIE_xt_hifi2_AE_RLmuls0_rinit)(a)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_RLmuls0_rvec(din, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_RLmuls0_rvec)(din, d0, d1)
#else
#define AE_RLmuls0_rvec(din, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_RLmuls0_rvec)(din, d0, d1)
#endif

#ifdef _STRICT_ARG_TYPE
#define AE_RLmuls0_rfini(d) \
	CSTUB_(_TIE_xt_hifi2_AE_RLmuls0_rfini)(d)
#else
#define AE_RLmuls0_rfini(d) \
	CSTUB_(_TIE_xt_hifi2_AE_RLmuls0_rfini)(d)
#endif

#ifdef _STRICT_ARG_TYPE
#define READ_IPQ() \
	CSTUB_(_TIE_xt_ioports_READ_IPQ)()
#else
#define READ_IPQ() \
	CSTUB_(_TIE_xt_ioports_READ_IPQ)()
#endif

#ifdef _STRICT_ARG_TYPE
#define CHECK_IPQ() \
	CSTUB_(_TIE_xt_ioports_CHECK_IPQ)()
#else
#define CHECK_IPQ() \
	CSTUB_(_TIE_xt_ioports_CHECK_IPQ)()
#endif

#ifdef _STRICT_ARG_TYPE
#define WRITE_OPQ(a) \
	CSTUB_(_TIE_xt_ioports_WRITE_OPQ)(a)
#else
#define WRITE_OPQ(a) \
	CSTUB_(_TIE_xt_ioports_WRITE_OPQ)(a)
#endif

#ifdef _STRICT_ARG_TYPE
#define CHECK_OPQ() \
	CSTUB_(_TIE_xt_ioports_CHECK_OPQ)()
#else
#define CHECK_OPQ() \
	CSTUB_(_TIE_xt_ioports_CHECK_OPQ)()
#endif

#ifdef _STRICT_ARG_TYPE
#define RUR_EXPSTATE() \
	CSTUB_(_TIE_xt_ioports_RUR_EXPSTATE)()
#else
#define RUR_EXPSTATE() \
	CSTUB_(_TIE_xt_ioports_RUR_EXPSTATE)()
#endif

#ifdef _STRICT_ARG_TYPE
#define WUR_EXPSTATE(v) \
	CSTUB_(_TIE_xt_ioports_WUR_EXPSTATE)(v)
#else
#define WUR_EXPSTATE(v) \
	CSTUB_(_TIE_xt_ioports_WUR_EXPSTATE)(v)
#endif

#ifdef _STRICT_ARG_TYPE
#define st_BBR(a, b, c) \
	CSTUB_(_TIE_hmd1a_common_tie_st_BBR)(a, b, c)
#else
#define st_BBR(a, b, c) \
	CSTUB_(_TIE_hmd1a_common_tie_st_BBR)(a, b, c)
#endif

#ifdef _STRICT_ARG_TYPE
#define ld_BBR(b, c) \
	CSTUB_(_TIE_hmd1a_common_tie_ld_BBR)(b, c)
#else
#define ld_BBR(b, c) \
	CSTUB_(_TIE_hmd1a_common_tie_ld_BBR)(b, c)
#endif

#ifdef _STRICT_ARG_TYPE
#define mv_BBR(b) \
	CSTUB_(_TIE_hmd1a_common_tie_mv_BBR)(b)
#else
#define mv_BBR(b) \
	CSTUB_(_TIE_hmd1a_common_tie_mv_BBR)(b)
#endif

#ifdef _STRICT_ARG_TYPE
#define st_ULSR(a, b, c) \
	CSTUB_(_TIE_hmd1a_common_tie_st_ULSR)(a, b, c)
#else
#define st_ULSR(a, b, c) \
	CSTUB_(_TIE_hmd1a_common_tie_st_ULSR)(a, b, c)
#endif

#ifdef _STRICT_ARG_TYPE
#define ld_ULSR(b, c) \
	CSTUB_(_TIE_hmd1a_common_tie_ld_ULSR)(b, c)
#else
#define ld_ULSR(b, c) \
	CSTUB_(_TIE_hmd1a_common_tie_ld_ULSR)(b, c)
#endif

#ifdef _STRICT_ARG_TYPE
#define st_MIR(a, b, c) \
	CSTUB_(_TIE_hmd1a_common_tie_st_MIR)(a, b, c)
#else
#define st_MIR(a, b, c) \
	CSTUB_(_TIE_hmd1a_common_tie_st_MIR)(a, b, c)
#endif

#ifdef _STRICT_ARG_TYPE
#define ld_MIR(b, c) \
	CSTUB_(_TIE_hmd1a_common_tie_ld_MIR)(b, c)
#else
#define ld_MIR(b, c) \
	CSTUB_(_TIE_hmd1a_common_tie_ld_MIR)(b, c)
#endif

#ifdef _STRICT_ARG_TYPE
#define st_CR(a, b, c) \
	CSTUB_(_TIE_hmd1a_common_tie_st_CR)(a, b, c)
#else
#define st_CR(a, b, c) \
	CSTUB_(_TIE_hmd1a_common_tie_st_CR)(a, b, c)
#endif

#ifdef _STRICT_ARG_TYPE
#define ld_CR(b, c) \
	CSTUB_(_TIE_hmd1a_common_tie_ld_CR)(b, c)
#else
#define ld_CR(b, c) \
	CSTUB_(_TIE_hmd1a_common_tie_ld_CR)(b, c)
#endif

#ifdef _STRICT_ARG_TYPE
#define dma_ld(src) \
	CSTUB_(_TIE_hmd1a_common_tie_dma_ld)(src)
#else
#define dma_ld(src) \
	CSTUB_(_TIE_hmd1a_common_tie_dma_ld)(src)
#endif

#ifdef _STRICT_ARG_TYPE
#define dma_align_ld(src, dst) \
	CSTUB_(_TIE_hmd1a_common_tie_dma_align_ld)((const unsigned int **)&(src),(unsigned *)( dst))
#else
#define dma_align_ld(src, dst) \
	CSTUB_(_TIE_hmd1a_common_tie_dma_align_ld)((const unsigned int **)&(src),(unsigned *)( dst))
#endif

#ifdef _STRICT_ARG_TYPE
#define dma_ldu(src) \
	CSTUB_(_TIE_hmd1a_common_tie_dma_ldu)((const unsigned int **)&(src))
#else
#define dma_ldu(src) \
	CSTUB_(_TIE_hmd1a_common_tie_dma_ldu)((const unsigned int **)&(src))
#endif

#ifdef _STRICT_ARG_TYPE
#define dma_flush_ld(src, dst) \
	CSTUB_(_TIE_hmd1a_common_tie_dma_flush_ld)((const unsigned int **)&(src),(unsigned *)( dst))
#else
#define dma_flush_ld(src, dst) \
	CSTUB_(_TIE_hmd1a_common_tie_dma_flush_ld)((const unsigned int **)&(src),(unsigned *)( dst))
#endif

#ifdef _STRICT_ARG_TYPE
#define dma_st(src, dst) \
	CSTUB_(_TIE_hmd1a_common_tie_dma_st)(src, dst)
#else
#define dma_st(src, dst) \
	CSTUB_(_TIE_hmd1a_common_tie_dma_st)(src, dst)
#endif

#ifdef _STRICT_ARG_TYPE
#define dma_align_st(src, dst) \
	CSTUB_(_TIE_hmd1a_common_tie_dma_align_st)((unsigned *)(src), (unsigned int **)&(dst))
#else
#define dma_align_st(src, dst) \
	CSTUB_(_TIE_hmd1a_common_tie_dma_align_st)((unsigned *)(src), (unsigned int **)&(dst))
#endif

#ifdef _STRICT_ARG_TYPE
#define dma_stu(src, dst) \
	CSTUB_(_TIE_hmd1a_common_tie_dma_stu)((unsigned *)(src), (unsigned int **)&(dst))
#else
#define dma_stu(src, dst) \
	CSTUB_(_TIE_hmd1a_common_tie_dma_stu)((unsigned *)(src), (unsigned int **)&(dst))
#endif

#ifdef _STRICT_ARG_TYPE
#define dma_flush_st(src, dst) \
	CSTUB_(_TIE_hmd1a_common_tie_dma_flush_st)((unsigned *)(src), (unsigned *) ( dst))
#else
#define dma_flush_st(src, dst) \
	CSTUB_(_TIE_hmd1a_common_tie_dma_flush_st)((unsigned *)(src), (unsigned *) ( dst))
#endif

#ifdef _STRICT_ARG_TYPE
#define dma_buf_save(dst) \
	CSTUB_(_TIE_hmd1a_common_tie_dma_buf_save)((unsigned int **)&(dst))
#else
#define dma_buf_save(dst) \
	CSTUB_(_TIE_hmd1a_common_tie_dma_buf_save)((unsigned int **)&(dst))
#endif

#ifdef _STRICT_ARG_TYPE
#define load32x2_vr_idxR(ptr, ofst) \
	CSTUB_(_TIE_hmd1a_common_tie_load32x2_vr_idxR)((unsigned *)(ptr), ofst)
#else
#define load32x2_vr_idxR(ptr, ofst) \
	CSTUB_(_TIE_hmd1a_common_tie_load32x2_vr_idxR)((unsigned *)(ptr), ofst)
#endif

#ifdef _STRICT_ARG_TYPE
#define load32x2_vr_idxI(ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_load32x2_vr_idxI)((unsigned *)(ptr), ofst2)
#else
#define load32x2_vr_idxI(ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_load32x2_vr_idxI)((unsigned *)(ptr), ofst2)
#endif

#ifdef _STRICT_ARG_TYPE
#define load32x2_vr_postR(z, ptr, ofst) \
	CSTUB_(_TIE_hmd1a_common_tie_load32x2_vr_postR)(z, (const unsigned int **)&(ptr), ofst)
#else
#define load32x2_vr_postR(z, ptr, ofst) { \
	vr64 __z; \
	CSTUB_(_TIE_hmd1a_common_tie_load32x2_vr_postR)(__z, (const unsigned int **)&(ptr), ofst); \
	(z) = __z; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define load32x2_vr_postI(z, ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_load32x2_vr_postI)(z, (const unsigned int **)&(ptr), ofst2)
#else
#define load32x2_vr_postI(z, ptr, ofst2) { \
	vr64 __z; \
	CSTUB_(_TIE_hmd1a_common_tie_load32x2_vr_postI)(__z, (const unsigned int **)&(ptr), ofst2); \
	(z) = __z; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define load32x2_vr_circI(z, ptr, ofst1, c) \
	CSTUB_(_TIE_hmd1a_common_tie_load32x2_vr_circI)(z, (const unsigned int **)&(ptr), ofst1, c)
#else
#define load32x2_vr_circI(z, ptr, ofst1, c) { \
	vr64 __z; \
	CSTUB_(_TIE_hmd1a_common_tie_load32x2_vr_circI)(__z, (const unsigned int **)&(ptr), ofst1, c); \
	(z) = __z; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define load32x1_vr_idxR(z, ptr, ofst, sel1) \
	CSTUB_(_TIE_hmd1a_common_tie_load32x1_vr_idxR)(z,(unsigned *)( ptr), ofst, sel1)
#else
#define load32x1_vr_idxR(z, ptr, ofst, sel1) { \
	vr64 __z = z; \
	CSTUB_(_TIE_hmd1a_common_tie_load32x1_vr_idxR)(__z,(unsigned *)( ptr), ofst, sel1); \
	(z) = __z; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define load32x1_vr_idxI(z, ptr, ofst2, sel1) \
	CSTUB_(_TIE_hmd1a_common_tie_load32x1_vr_idxI)(z,(unsigned *)( ptr), ofst2, sel1)
#else
#define load32x1_vr_idxI(z, ptr, ofst2, sel1) { \
	vr64 __z = z; \
	CSTUB_(_TIE_hmd1a_common_tie_load32x1_vr_idxI)(__z,(unsigned *)( ptr), ofst2, sel1); \
	(z) = __z; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define load32x1_vr_postR(z, ptr, ofst, sel1) \
	CSTUB_(_TIE_hmd1a_common_tie_load32x1_vr_postR)(z, (const unsigned int **)&(ptr), ofst, sel1)
#else
#define load32x1_vr_postR(z, ptr, ofst, sel1) { \
	vr64 __z = z; \
	CSTUB_(_TIE_hmd1a_common_tie_load32x1_vr_postR)(__z, (const unsigned int **)&(ptr), ofst, sel1); \
	(z) = __z; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define load32x1_vr_postI(z, ptr, ofst2, sel1) \
	CSTUB_(_TIE_hmd1a_common_tie_load32x1_vr_postI)(z, (const unsigned int **)&(ptr), ofst2, sel1)
#else
#define load32x1_vr_postI(z, ptr, ofst2, sel1) { \
	vr64 __z = z; \
	CSTUB_(_TIE_hmd1a_common_tie_load32x1_vr_postI)(__z, (const unsigned int **)&(ptr), ofst2, sel1); \
	(z) = __z; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define load32x1_vr_circI(z, ptr, ofst1, c, sel1) \
	CSTUB_(_TIE_hmd1a_common_tie_load32x1_vr_circI)(z, (const unsigned int **)&(ptr), ofst1, c, sel1)
#else
#define load32x1_vr_circI(z, ptr, ofst1, c, sel1) { \
	vr64 __z = z; \
	CSTUB_(_TIE_hmd1a_common_tie_load32x1_vr_circI)(__z, (const unsigned int **)&(ptr), ofst1, c, sel1); \
	(z) = __z; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define load32x2_vr_bdir(ptr, ofst) \
	CSTUB_(_TIE_hmd1a_common_tie_load32x2_vr_bdir)((unsigned *)(ptr), ofst)
#else
#define load32x2_vr_bdir(ptr, ofst) \
	CSTUB_(_TIE_hmd1a_common_tie_load32x2_vr_bdir)((unsigned *)(ptr), ofst)
#endif

#ifdef _STRICT_ARG_TYPE
#define load32x2_vr_brev(ptr, ofst) \
	CSTUB_(_TIE_hmd1a_common_tie_load32x2_vr_brev)((unsigned *)(ptr), ofst)
#else
#define load32x2_vr_brev(ptr, ofst) \
	CSTUB_(_TIE_hmd1a_common_tie_load32x2_vr_brev)((unsigned *)(ptr), ofst)
#endif

#ifdef _STRICT_ARG_TYPE
#define load32x2_vr_idxR_perm(z, ptr, ofst, perm) \
	CSTUB_(_TIE_hmd1a_common_tie_load32x2_vr_idxR_perm)(z,(unsigned *)( ptr), ofst, perm)
#else
#define load32x2_vr_idxR_perm(z, ptr, ofst, perm) { \
	vr64 __z = z; \
	CSTUB_(_TIE_hmd1a_common_tie_load32x2_vr_idxR_perm)(__z,(unsigned *)( ptr), ofst, perm); \
	(z) = __z; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define load32x2_vr_idxI_perm_vr(z, ptr, ofst2, perm) \
	CSTUB_(_TIE_hmd1a_common_tie_load32x2_vr_idxI_perm_vr)(z,(unsigned *)( ptr), ofst2, perm)
#else
#define load32x2_vr_idxI_perm_vr(z, ptr, ofst2, perm) \
	CSTUB_(_TIE_hmd1a_common_tie_load32x2_vr_idxI_perm_vr)(z,(unsigned *)( ptr), ofst2, perm)
#endif

#ifdef _STRICT_ARG_TYPE
#define load32x2_vr_postR_perm(z, ptr, ofst, perm) \
	CSTUB_(_TIE_hmd1a_common_tie_load32x2_vr_postR_perm)(z, (const unsigned int **)&(ptr), ofst, perm)
#else
#define load32x2_vr_postR_perm(z, ptr, ofst, perm) { \
	vr64 __z = z; \
	CSTUB_(_TIE_hmd1a_common_tie_load32x2_vr_postR_perm)(__z, (const unsigned int **)&(ptr), ofst, perm); \
	(z) = __z; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define load32x2_vr_postI_perm_vr(r, z, ptr, ofst2, perm) \
	CSTUB_(_TIE_hmd1a_common_tie_load32x2_vr_postI_perm_vr)(r, z, (const unsigned int **)&(ptr), ofst2, perm)
#else
#define load32x2_vr_postI_perm_vr(r, z, ptr, ofst2, perm) { \
	vr64 __r; \
	CSTUB_(_TIE_hmd1a_common_tie_load32x2_vr_postI_perm_vr)(__r, z, (const unsigned int **)&(ptr), ofst2, perm); \
	(r) = __r; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define load32x2_vr_circI_perm(z, ptr, ofst1, c, perm) \
	CSTUB_(_TIE_hmd1a_common_tie_load32x2_vr_circI_perm)(z, (const unsigned int **)&(ptr), ofst1, c, perm)
#else
#define load32x2_vr_circI_perm(z, ptr, ofst1, c, perm) { \
	vr64 __z = z; \
	CSTUB_(_TIE_hmd1a_common_tie_load32x2_vr_circI_perm)(__z, (const unsigned int **)&(ptr), ofst1, c, perm); \
	(z) = __z; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define load32x1_vr_idxR_perm(z, ptr, ofst, perm) \
	CSTUB_(_TIE_hmd1a_common_tie_load32x1_vr_idxR_perm)(z,(unsigned *)( ptr), ofst, perm)
#else
#define load32x1_vr_idxR_perm(z, ptr, ofst, perm) { \
	vr64 __z = z; \
	CSTUB_(_TIE_hmd1a_common_tie_load32x1_vr_idxR_perm)(__z,(unsigned *)( ptr), ofst, perm); \
	(z) = __z; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define load32x1_vr_idxI_perm_vr(z, ptr, ofst2, perm) \
	CSTUB_(_TIE_hmd1a_common_tie_load32x1_vr_idxI_perm_vr)(z,(unsigned *)( ptr), ofst2, perm)
#else
#define load32x1_vr_idxI_perm_vr(z, ptr, ofst2, perm) \
	CSTUB_(_TIE_hmd1a_common_tie_load32x1_vr_idxI_perm_vr)(z,(unsigned *)( ptr), ofst2, perm)
#endif

#ifdef _STRICT_ARG_TYPE
#define load32x1_vr_postR_perm(z, ptr, ofst, perm) \
	CSTUB_(_TIE_hmd1a_common_tie_load32x1_vr_postR_perm)(z, (const unsigned int **)&(ptr), ofst, perm)
#else
#define load32x1_vr_postR_perm(z, ptr, ofst, perm) { \
	vr64 __z = z; \
	CSTUB_(_TIE_hmd1a_common_tie_load32x1_vr_postR_perm)(__z, (const unsigned int **)&(ptr), ofst, perm); \
	(z) = __z; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define load32x1_vr_postI_perm_vr(r, z, ptr, ofst2, perm) \
	CSTUB_(_TIE_hmd1a_common_tie_load32x1_vr_postI_perm_vr)(r, z, (const unsigned int **)&(ptr), ofst2, perm)
#else
#define load32x1_vr_postI_perm_vr(r, z, ptr, ofst2, perm) { \
	vr64 __r; \
	CSTUB_(_TIE_hmd1a_common_tie_load32x1_vr_postI_perm_vr)(__r, z, (const unsigned int **)&(ptr), ofst2, perm); \
	(r) = __r; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define load32x1_vr_circI_perm(z, ptr, ofst1, c, perm) \
	CSTUB_(_TIE_hmd1a_common_tie_load32x1_vr_circI_perm)(z, (const unsigned int **)&(ptr), ofst1, c, perm)
#else
#define load32x1_vr_circI_perm(z, ptr, ofst1, c, perm) { \
	vr64 __z = z; \
	CSTUB_(_TIE_hmd1a_common_tie_load32x1_vr_circI_perm)(__z, (const unsigned int **)&(ptr), ofst1, c, perm); \
	(z) = __z; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define load16x2_vr_idxR(ptr, ofst) \
	CSTUB_(_TIE_hmd1a_common_tie_load16x2_vr_idxR)((unsigned *)(ptr), ofst)
#else
#define load16x2_vr_idxR(ptr, ofst) \
	CSTUB_(_TIE_hmd1a_common_tie_load16x2_vr_idxR)((unsigned *)(ptr), ofst)
#endif

#ifdef _STRICT_ARG_TYPE
#define load16x2_vr_idxI(ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_load16x2_vr_idxI)((unsigned *)(ptr), ofst2)
#else
#define load16x2_vr_idxI(ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_load16x2_vr_idxI)((unsigned *)(ptr), ofst2)
#endif

#ifdef _STRICT_ARG_TYPE
#define load16x2_vr_postR(z, ptr, ofst) \
	CSTUB_(_TIE_hmd1a_common_tie_load16x2_vr_postR)(z, (const unsigned int **)&(ptr), ofst)
#else
#define load16x2_vr_postR(z, ptr, ofst) { \
	vr64 __z; \
	CSTUB_(_TIE_hmd1a_common_tie_load16x2_vr_postR)(__z, (const unsigned int **)&(ptr), ofst); \
	(z) = __z; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define load16x2_vr_postI(z, ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_load16x2_vr_postI)(z, (const unsigned int **)&(ptr), ofst2)
#else
#define load16x2_vr_postI(z, ptr, ofst2) { \
	vr64 __z; \
	CSTUB_(_TIE_hmd1a_common_tie_load16x2_vr_postI)(__z, (const unsigned int **)&(ptr), ofst2); \
	(z) = __z; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define load16x2_vr_circI(z, ptr, ofst1, c) \
	CSTUB_(_TIE_hmd1a_common_tie_load16x2_vr_circI)(z, (const unsigned int **)&(ptr), ofst1, c)
#else
#define load16x2_vr_circI(z, ptr, ofst1, c) { \
	vr64 __z; \
	CSTUB_(_TIE_hmd1a_common_tie_load16x2_vr_circI)(__z, (const unsigned int **)&(ptr), ofst1, c); \
	(z) = __z; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define load16x1_vr_idxR(z, ptr, ofst, sel1) \
	CSTUB_(_TIE_hmd1a_common_tie_load16x1_vr_idxR)(z, ptr, ofst, sel1)
#else
#define load16x1_vr_idxR(z, ptr, ofst, sel1) { \
	vr64 __z = z; \
	CSTUB_(_TIE_hmd1a_common_tie_load16x1_vr_idxR)(__z, ptr, ofst, sel1); \
	(z) = __z; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define load16x1_vr_idxI(z, ptr, ofst2, sel1) \
	CSTUB_(_TIE_hmd1a_common_tie_load16x1_vr_idxI)(z, ptr, ofst2, sel1)
#else
#define load16x1_vr_idxI(z, ptr, ofst2, sel1) { \
	vr64 __z = z; \
	CSTUB_(_TIE_hmd1a_common_tie_load16x1_vr_idxI)(__z, ptr, ofst2, sel1); \
	(z) = __z; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define load16x1_vr_postR(z, ptr, ofst, sel1) \
	CSTUB_(_TIE_hmd1a_common_tie_load16x1_vr_postR)(z, (const unsigned int **)&(ptr), ofst, sel1)
#else
#define load16x1_vr_postR(z, ptr, ofst, sel1) { \
	vr64 __z = z; \
	CSTUB_(_TIE_hmd1a_common_tie_load16x1_vr_postR)(__z, (const unsigned int **)&(ptr), ofst, sel1); \
	(z) = __z; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define load16x1_vr_postI(z, ptr, ofst2, sel1) \
	CSTUB_(_TIE_hmd1a_common_tie_load16x1_vr_postI)(z, (const unsigned int **)&(ptr), ofst2, sel1)
#else
#define load16x1_vr_postI(z, ptr, ofst2, sel1) { \
	vr64 __z = z; \
	CSTUB_(_TIE_hmd1a_common_tie_load16x1_vr_postI)(__z, (const unsigned int **)&(ptr), ofst2, sel1); \
	(z) = __z; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define load16x1_vr_circI(z, ptr, ofst1, c, sel1) \
	CSTUB_(_TIE_hmd1a_common_tie_load16x1_vr_circI)(z, (const unsigned int **)&(ptr), ofst1, c, sel1)
#else
#define load16x1_vr_circI(z, ptr, ofst1, c, sel1) { \
	vr64 __z = z; \
	CSTUB_(_TIE_hmd1a_common_tie_load16x1_vr_circI)(__z, (const unsigned int **)&(ptr), ofst1, c, sel1); \
	(z) = __z; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define load8x2_vr_idxR(ptr, ofst) \
	CSTUB_(_TIE_hmd1a_common_tie_load8x2_vr_idxR)((unsigned *)(ptr), ofst)
#else
#define load8x2_vr_idxR(ptr, ofst) \
	CSTUB_(_TIE_hmd1a_common_tie_load8x2_vr_idxR)((unsigned *)(ptr), ofst)
#endif

#ifdef _STRICT_ARG_TYPE
#define load8x2_vr_idxI(ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_load8x2_vr_idxI)((unsigned *)(ptr), ofst2)
#else
#define load8x2_vr_idxI(ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_load8x2_vr_idxI)((unsigned *)(ptr), ofst2)
#endif

#ifdef _STRICT_ARG_TYPE
#define load8x2_vr_postR(z, ptr, ofst) \
	CSTUB_(_TIE_hmd1a_common_tie_load8x2_vr_postR)(z, (const unsigned int **)&(ptr), ofst)
#else
#define load8x2_vr_postR(z, ptr, ofst) { \
	vr64 __z; \
	CSTUB_(_TIE_hmd1a_common_tie_load8x2_vr_postR)(__z, (const unsigned int **)&(ptr), ofst); \
	(z) = __z; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define load8x2_vr_postI(z, ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_load8x2_vr_postI)(z, (const unsigned int **)&(ptr), ofst2)
#else
#define load8x2_vr_postI(z, ptr, ofst2) { \
	vr64 __z; \
	CSTUB_(_TIE_hmd1a_common_tie_load8x2_vr_postI)(__z, (const unsigned int **)&(ptr), ofst2); \
	(z) = __z; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define load8x2_vr_circI(z, ptr, ofst1, c) \
	CSTUB_(_TIE_hmd1a_common_tie_load8x2_vr_circI)(z, (const unsigned int **)&(ptr), ofst1, c)
#else
#define load8x2_vr_circI(z, ptr, ofst1, c) { \
	vr64 __z; \
	CSTUB_(_TIE_hmd1a_common_tie_load8x2_vr_circI)(__z, (const unsigned int **)&(ptr), ofst1, c); \
	(z) = __z; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define load8x1_vr_idxR(z, ptr, ofst, sel1) \
	CSTUB_(_TIE_hmd1a_common_tie_load8x1_vr_idxR)(z, ptr, ofst, sel1)
#else
#define load8x1_vr_idxR(z, ptr, ofst, sel1) { \
	vr64 __z = z; \
	CSTUB_(_TIE_hmd1a_common_tie_load8x1_vr_idxR)(__z, ptr, ofst, sel1); \
	(z) = __z; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define load8x1_vr_idxI(z, ptr, ofst2, sel1) \
	CSTUB_(_TIE_hmd1a_common_tie_load8x1_vr_idxI)(z, ptr, ofst2, sel1)
#else
#define load8x1_vr_idxI(z, ptr, ofst2, sel1) { \
	vr64 __z = z; \
	CSTUB_(_TIE_hmd1a_common_tie_load8x1_vr_idxI)(__z, ptr, ofst2, sel1); \
	(z) = __z; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define load8x1_vr_postR(z, ptr, ofst, sel1) \
	CSTUB_(_TIE_hmd1a_common_tie_load8x1_vr_postR)(z, (const unsigned int **)&(ptr), ofst, sel1)
#else
#define load8x1_vr_postR(z, ptr, ofst, sel1) { \
	vr64 __z = z; \
	CSTUB_(_TIE_hmd1a_common_tie_load8x1_vr_postR)(__z, (const unsigned int **)&(ptr), ofst, sel1); \
	(z) = __z; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define load8x1_vr_postI(z, ptr, ofst2, sel1) \
	CSTUB_(_TIE_hmd1a_common_tie_load8x1_vr_postI)(z, (const unsigned int **)&(ptr), ofst2, sel1)
#else
#define load8x1_vr_postI(z, ptr, ofst2, sel1) { \
	vr64 __z = z; \
	CSTUB_(_TIE_hmd1a_common_tie_load8x1_vr_postI)(__z, (const unsigned int **)&(ptr), ofst2, sel1); \
	(z) = __z; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define load8x1_vr_circI(z, ptr, ofst1, c, sel1) \
	CSTUB_(_TIE_hmd1a_common_tie_load8x1_vr_circI)(z, (const unsigned int **)&(ptr), ofst1, c, sel1)
#else
#define load8x1_vr_circI(z, ptr, ofst1, c, sel1) { \
	vr64 __z = z; \
	CSTUB_(_TIE_hmd1a_common_tie_load8x1_vr_circI)(__z, (const unsigned int **)&(ptr), ofst1, c, sel1); \
	(z) = __z; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define align_32x2_load(ptr) \
	CSTUB_(_TIE_hmd1a_common_tie_align_32x2_load)((unsigned *)(ptr))
#else
#define align_32x2_load(ptr) \
	CSTUB_(_TIE_hmd1a_common_tie_align_32x2_load)((unsigned *)(ptr))
#endif

#ifdef _STRICT_ARG_TYPE
#define load_32x2_vr_a(z, buf, ptr) \
	CSTUB_(_TIE_hmd1a_common_tie_load_32x2_vr_a)(z, buf, (const unsigned int **)&(ptr))
#else
#define load_32x2_vr_a(z, buf, ptr) { \
	vr64 __z; \
	ulsr32 __buf = buf; \
	CSTUB_(_TIE_hmd1a_common_tie_load_32x2_vr_a)(__z, __buf, (const unsigned int **)&(ptr)); \
	(z) = __z; \
	(buf) = __buf; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define load_24x2_vr_a(z, buf, ptr) \
	CSTUB_(_TIE_hmd1a_common_tie_load_24x2_vr_a)(z, buf, (const unsigned int **)&(ptr))
#else
#define load_24x2_vr_a(z, buf, ptr) { \
	vr64 __z; \
	ulsr32 __buf = buf; \
	CSTUB_(_TIE_hmd1a_common_tie_load_24x2_vr_a)(__z, __buf, (const unsigned int **)&(ptr)); \
	(z) = __z; \
	(buf) = __buf; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define load_32x2_vr_a_circ(z, buf, ptr, c) \
	CSTUB_(_TIE_hmd1a_common_tie_load_32x2_vr_a_circ)(z, buf, (const unsigned int **)&(ptr), c)
#else
#define load_32x2_vr_a_circ(z, buf, ptr, c) { \
	vr64 __z; \
	ulsr32 __buf = buf; \
	CSTUB_(_TIE_hmd1a_common_tie_load_32x2_vr_a_circ)(__z, __buf, (const unsigned int **)&(ptr), c); \
	(z) = __z; \
	(buf) = __buf; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define store32x2_vr_idxR(z, ptr, ofst) \
	CSTUB_(_TIE_hmd1a_common_tie_store32x2_vr_idxR)(z,(unsigned *)( ptr), ofst)
#else
#define store32x2_vr_idxR(z, ptr, ofst) \
	CSTUB_(_TIE_hmd1a_common_tie_store32x2_vr_idxR)(z,(unsigned *)( ptr), ofst)
#endif

#ifdef _STRICT_ARG_TYPE
#define store32x2_vr_idxI(z, ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_store32x2_vr_idxI)(z,(unsigned *)( ptr), ofst2)
#else
#define store32x2_vr_idxI(z, ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_store32x2_vr_idxI)(z,(unsigned *)( ptr), ofst2)
#endif

#ifdef _STRICT_ARG_TYPE
#define store32x2_vr_postR(z, ptr, ofst) \
	CSTUB_(_TIE_hmd1a_common_tie_store32x2_vr_postR)(z, (unsigned int **)&(ptr), ofst)
#else
#define store32x2_vr_postR(z, ptr, ofst) \
	CSTUB_(_TIE_hmd1a_common_tie_store32x2_vr_postR)(z, (unsigned int **)&(ptr), ofst)
#endif

#ifdef _STRICT_ARG_TYPE
#define store32x2_vr_postI(z, ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_store32x2_vr_postI)(z, (unsigned int **)&(ptr), ofst2)
#else
#define store32x2_vr_postI(z, ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_store32x2_vr_postI)(z, (unsigned int **)&(ptr), ofst2)
#endif

#ifdef _STRICT_ARG_TYPE
#define store32x2_vr_circI(z, ptr, ofst1, c) \
	CSTUB_(_TIE_hmd1a_common_tie_store32x2_vr_circI)(z, (unsigned int **)&(ptr), ofst1, c)
#else
#define store32x2_vr_circI(z, ptr, ofst1, c) \
	CSTUB_(_TIE_hmd1a_common_tie_store32x2_vr_circI)(z, (unsigned int **)&(ptr), ofst1, c)
#endif

#ifdef _STRICT_ARG_TYPE
#define store32x1_vr_idxR(z, ptr, ofst, sel1) \
	CSTUB_(_TIE_hmd1a_common_tie_store32x1_vr_idxR)(z,(unsigned *)( ptr), ofst, sel1)
#else
#define store32x1_vr_idxR(z, ptr, ofst, sel1) \
	CSTUB_(_TIE_hmd1a_common_tie_store32x1_vr_idxR)(z,(unsigned *)( ptr), ofst, sel1)
#endif

#ifdef _STRICT_ARG_TYPE
#define store32x1_vr_idxI(z, ptr, ofst2, sel1) \
	CSTUB_(_TIE_hmd1a_common_tie_store32x1_vr_idxI)(z,(unsigned *)( ptr), ofst2, sel1)
#else
#define store32x1_vr_idxI(z, ptr, ofst2, sel1) \
	CSTUB_(_TIE_hmd1a_common_tie_store32x1_vr_idxI)(z,(unsigned *)( ptr), ofst2, sel1)
#endif

#ifdef _STRICT_ARG_TYPE
#define store32x1_vr_postR(z, ptr, ofst, sel1) \
	CSTUB_(_TIE_hmd1a_common_tie_store32x1_vr_postR)(z, (unsigned int **)&(ptr), ofst, sel1)
#else
#define store32x1_vr_postR(z, ptr, ofst, sel1) \
	CSTUB_(_TIE_hmd1a_common_tie_store32x1_vr_postR)(z, (unsigned int **)&(ptr), ofst, sel1)
#endif

#ifdef _STRICT_ARG_TYPE
#define store32x1_vr_postI(z, ptr, ofst2, sel1) \
	CSTUB_(_TIE_hmd1a_common_tie_store32x1_vr_postI)(z, (unsigned int **)&(ptr), ofst2, sel1)
#else
#define store32x1_vr_postI(z, ptr, ofst2, sel1) \
	CSTUB_(_TIE_hmd1a_common_tie_store32x1_vr_postI)(z, (unsigned int **)&(ptr), ofst2, sel1)
#endif

#ifdef _STRICT_ARG_TYPE
#define store32x1_vr_circI(z, ptr, ofst1, c, sel1) \
	CSTUB_(_TIE_hmd1a_common_tie_store32x1_vr_circI)(z, (unsigned int **)&(ptr), ofst1, c, sel1)
#else
#define store32x1_vr_circI(z, ptr, ofst1, c, sel1) \
	CSTUB_(_TIE_hmd1a_common_tie_store32x1_vr_circI)(z, (unsigned int **)&(ptr), ofst1, c, sel1)
#endif

#ifdef _STRICT_ARG_TYPE
#define store32x2_vr_br_idxR(z, gate, ptr, ofst) \
	CSTUB_(_TIE_hmd1a_common_tie_store32x2_vr_br_idxR)(z, gate, ptr, ofst)
#else
#define store32x2_vr_br_idxR(z, gate, ptr, ofst) \
	CSTUB_(_TIE_hmd1a_common_tie_store32x2_vr_br_idxR)(z, gate, ptr, ofst)
#endif

#ifdef _STRICT_ARG_TYPE
#define store32x2_vr_br_idxI(z, gate, ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_store32x2_vr_br_idxI)(z, gate, ptr, ofst2)
#else
#define store32x2_vr_br_idxI(z, gate, ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_store32x2_vr_br_idxI)(z, gate, ptr, ofst2)
#endif

#ifdef _STRICT_ARG_TYPE
#define store32x2_vr_br_postR(z, gate, ptr, ofst) \
	CSTUB_(_TIE_hmd1a_common_tie_store32x2_vr_br_postR)(z, gate, (unsigned int **)&(ptr), ofst)
#else
#define store32x2_vr_br_postR(z, gate, ptr, ofst) \
	CSTUB_(_TIE_hmd1a_common_tie_store32x2_vr_br_postR)(z, gate, (unsigned int **)&(ptr), ofst)
#endif

#ifdef _STRICT_ARG_TYPE
#define store32x2_vr_br_postI(z, gate, ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_store32x2_vr_br_postI)(z, gate, (unsigned int **)&(ptr), ofst2)
#else
#define store32x2_vr_br_postI(z, gate, ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_store32x2_vr_br_postI)(z, gate, (unsigned int **)&(ptr), ofst2)
#endif

#ifdef _STRICT_ARG_TYPE
#define store32x2_vr_br_circI(z, gate, ptr, ofst1, c) \
	CSTUB_(_TIE_hmd1a_common_tie_store32x2_vr_br_circI)(z, gate, (unsigned int **)&(ptr), ofst1, c)
#else
#define store32x2_vr_br_circI(z, gate, ptr, ofst1, c) \
	CSTUB_(_TIE_hmd1a_common_tie_store32x2_vr_br_circI)(z, gate, (unsigned int **)&(ptr), ofst1, c)
#endif

#ifdef _STRICT_ARG_TYPE
#define store32x1_vr_br_idxR(z, gate, ptr, ofst, sel1) \
	CSTUB_(_TIE_hmd1a_common_tie_store32x1_vr_br_idxR)(z, gate, ptr, ofst, sel1)
#else
#define store32x1_vr_br_idxR(z, gate, ptr, ofst, sel1) \
	CSTUB_(_TIE_hmd1a_common_tie_store32x1_vr_br_idxR)(z, gate, ptr, ofst, sel1)
#endif

#ifdef _STRICT_ARG_TYPE
#define store32x1_vr_br_idxI(z, gate, ptr, ofst2, sel1) \
	CSTUB_(_TIE_hmd1a_common_tie_store32x1_vr_br_idxI)(z, gate, ptr, ofst2, sel1)
#else
#define store32x1_vr_br_idxI(z, gate, ptr, ofst2, sel1) \
	CSTUB_(_TIE_hmd1a_common_tie_store32x1_vr_br_idxI)(z, gate, ptr, ofst2, sel1)
#endif

#ifdef _STRICT_ARG_TYPE
#define store32x1_vr_br_postR(z, gate, ptr, ofst, sel1) \
	CSTUB_(_TIE_hmd1a_common_tie_store32x1_vr_br_postR)(z, gate, (unsigned int **)&(ptr), ofst, sel1)
#else
#define store32x1_vr_br_postR(z, gate, ptr, ofst, sel1) \
	CSTUB_(_TIE_hmd1a_common_tie_store32x1_vr_br_postR)(z, gate, (unsigned int **)&(ptr), ofst, sel1)
#endif

#ifdef _STRICT_ARG_TYPE
#define store32x1_vr_br_postI(z, gate, ptr, ofst2, sel1) \
	CSTUB_(_TIE_hmd1a_common_tie_store32x1_vr_br_postI)(z, gate, (unsigned int **)&(ptr), ofst2, sel1)
#else
#define store32x1_vr_br_postI(z, gate, ptr, ofst2, sel1) \
	CSTUB_(_TIE_hmd1a_common_tie_store32x1_vr_br_postI)(z, gate, (unsigned int **)&(ptr), ofst2, sel1)
#endif

#ifdef _STRICT_ARG_TYPE
#define store32x1_vr_br_circI(z, gate, ptr, ofst1, c, sel1) \
	CSTUB_(_TIE_hmd1a_common_tie_store32x1_vr_br_circI)(z, gate, (unsigned int **)&(ptr), ofst1, c, sel1)
#else
#define store32x1_vr_br_circI(z, gate, ptr, ofst1, c, sel1) \
	CSTUB_(_TIE_hmd1a_common_tie_store32x1_vr_br_circI)(z, gate, (unsigned int **)&(ptr), ofst1, c, sel1)
#endif

#ifdef _STRICT_ARG_TYPE
#define store32x2_vr_br_bdir(z, gate, ptr, ofst) \
	CSTUB_(_TIE_hmd1a_common_tie_store32x2_vr_br_bdir)(z, gate,(unsigned *)( ptr), ofst)
#else
#define store32x2_vr_br_bdir(z, gate, ptr, ofst) \
	CSTUB_(_TIE_hmd1a_common_tie_store32x2_vr_br_bdir)(z, gate,(unsigned *)( ptr), ofst)
#endif

#ifdef _STRICT_ARG_TYPE
#define store32x2_vr_br_brev(z, gate, ptr, ofst) \
	CSTUB_(_TIE_hmd1a_common_tie_store32x2_vr_br_brev)(z, gate,(unsigned *)( ptr), ofst)
#else
#define store32x2_vr_br_brev(z, gate, ptr, ofst) \
	CSTUB_(_TIE_hmd1a_common_tie_store32x2_vr_br_brev)(z, gate,(unsigned *)( ptr), ofst)
#endif

#ifdef _STRICT_ARG_TYPE
#define store16x2_vr_idxR(z, ptr, ofst) \
	CSTUB_(_TIE_hmd1a_common_tie_store16x2_vr_idxR)(z,(unsigned *)( ptr), ofst)
#else
#define store16x2_vr_idxR(z, ptr, ofst) \
	CSTUB_(_TIE_hmd1a_common_tie_store16x2_vr_idxR)(z,(unsigned *)( ptr), ofst)
#endif

#ifdef _STRICT_ARG_TYPE
#define store16x2_vr_idxI(z, ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_store16x2_vr_idxI)(z,(unsigned *)( ptr), ofst2)
#else
#define store16x2_vr_idxI(z, ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_store16x2_vr_idxI)(z,(unsigned *)( ptr), ofst2)
#endif

#ifdef _STRICT_ARG_TYPE
#define store16x2_vr_postR(z, ptr, ofst) \
	CSTUB_(_TIE_hmd1a_common_tie_store16x2_vr_postR)(z, (unsigned int **)&(ptr), ofst)
#else
#define store16x2_vr_postR(z, ptr, ofst) \
	CSTUB_(_TIE_hmd1a_common_tie_store16x2_vr_postR)(z, (unsigned int **)&(ptr), ofst)
#endif

#ifdef _STRICT_ARG_TYPE
#define store16x2_vr_postI(z, ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_store16x2_vr_postI)(z, (unsigned int **)&(ptr), ofst2)
#else
#define store16x2_vr_postI(z, ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_store16x2_vr_postI)(z, (unsigned int **)&(ptr), ofst2)
#endif

#ifdef _STRICT_ARG_TYPE
#define store16x2_vr_circI(z, ptr, ofst1, c) \
	CSTUB_(_TIE_hmd1a_common_tie_store16x2_vr_circI)(z, (unsigned int **)&(ptr), ofst1, c)
#else
#define store16x2_vr_circI(z, ptr, ofst1, c) \
	CSTUB_(_TIE_hmd1a_common_tie_store16x2_vr_circI)(z, (unsigned int **)&(ptr), ofst1, c)
#endif

#ifdef _STRICT_ARG_TYPE
#define store16x1_vr_idxR(z, ptr, ofst, sel1) \
	CSTUB_(_TIE_hmd1a_common_tie_store16x1_vr_idxR)(z, ptr, ofst, sel1)
#else
#define store16x1_vr_idxR(z, ptr, ofst, sel1) \
	CSTUB_(_TIE_hmd1a_common_tie_store16x1_vr_idxR)(z, ptr, ofst, sel1)
#endif

#ifdef _STRICT_ARG_TYPE
#define store16x1_vr_idxI(z, ptr, ofst2, sel1) \
	CSTUB_(_TIE_hmd1a_common_tie_store16x1_vr_idxI)(z, ptr, ofst2, sel1)
#else
#define store16x1_vr_idxI(z, ptr, ofst2, sel1) \
	CSTUB_(_TIE_hmd1a_common_tie_store16x1_vr_idxI)(z, ptr, ofst2, sel1)
#endif

#ifdef _STRICT_ARG_TYPE
#define store16x1_vr_postR(z, ptr, ofst, sel1) \
	CSTUB_(_TIE_hmd1a_common_tie_store16x1_vr_postR)(z, (unsigned int **)&(ptr), ofst, sel1)
#else
#define store16x1_vr_postR(z, ptr, ofst, sel1) \
	CSTUB_(_TIE_hmd1a_common_tie_store16x1_vr_postR)(z, (unsigned int **)&(ptr), ofst, sel1)
#endif

#ifdef _STRICT_ARG_TYPE
#define store16x1_vr_postI(z, ptr, ofst2, sel1) \
	CSTUB_(_TIE_hmd1a_common_tie_store16x1_vr_postI)(z, (unsigned int **)&(ptr), ofst2, sel1)
#else
#define store16x1_vr_postI(z, ptr, ofst2, sel1) \
	CSTUB_(_TIE_hmd1a_common_tie_store16x1_vr_postI)(z, (unsigned int **)&(ptr), ofst2, sel1)
#endif

#ifdef _STRICT_ARG_TYPE
#define store16x1_vr_circI(z, ptr, ofst1, c, sel1) \
	CSTUB_(_TIE_hmd1a_common_tie_store16x1_vr_circI)(z, (unsigned int **)&(ptr), ofst1, c, sel1)
#else
#define store16x1_vr_circI(z, ptr, ofst1, c, sel1) \
	CSTUB_(_TIE_hmd1a_common_tie_store16x1_vr_circI)(z, (unsigned int **)&(ptr), ofst1, c, sel1)
#endif

#ifdef _STRICT_ARG_TYPE
#define store8x2_vr_idxR(z, ptr, ofst) \
	CSTUB_(_TIE_hmd1a_common_tie_store8x2_vr_idxR)(z,(unsigned *)( ptr), ofst)
#else
#define store8x2_vr_idxR(z, ptr, ofst) \
	CSTUB_(_TIE_hmd1a_common_tie_store8x2_vr_idxR)(z,(unsigned *)( ptr), ofst)
#endif

#ifdef _STRICT_ARG_TYPE
#define store8x2_vr_idxI(z, ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_store8x2_vr_idxI)(z,(unsigned *)( ptr), ofst2)
#else
#define store8x2_vr_idxI(z, ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_store8x2_vr_idxI)(z,(unsigned *)( ptr), ofst2)
#endif

#ifdef _STRICT_ARG_TYPE
#define store8x2_vr_postR(z, ptr, ofst) \
	CSTUB_(_TIE_hmd1a_common_tie_store8x2_vr_postR)(z, (unsigned int **)&(ptr), ofst)
#else
#define store8x2_vr_postR(z, ptr, ofst) \
	CSTUB_(_TIE_hmd1a_common_tie_store8x2_vr_postR)(z, (unsigned int **)&(ptr), ofst)
#endif

#ifdef _STRICT_ARG_TYPE
#define store8x2_vr_postI(z, ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_store8x2_vr_postI)(z, (unsigned int **)&(ptr), ofst2)
#else
#define store8x2_vr_postI(z, ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_store8x2_vr_postI)(z, (unsigned int **)&(ptr), ofst2)
#endif

#ifdef _STRICT_ARG_TYPE
#define store8x2_vr_circI(z, ptr, ofst1, c) \
	CSTUB_(_TIE_hmd1a_common_tie_store8x2_vr_circI)(z, (unsigned int **)&(ptr), ofst1, c)
#else
#define store8x2_vr_circI(z, ptr, ofst1, c) \
	CSTUB_(_TIE_hmd1a_common_tie_store8x2_vr_circI)(z, (unsigned int **)&(ptr), ofst1, c)
#endif

#ifdef _STRICT_ARG_TYPE
#define store8x1_vr_idxR(z, ptr, ofst, sel1) \
	CSTUB_(_TIE_hmd1a_common_tie_store8x1_vr_idxR)(z, ptr, ofst, sel1)
#else
#define store8x1_vr_idxR(z, ptr, ofst, sel1) \
	CSTUB_(_TIE_hmd1a_common_tie_store8x1_vr_idxR)(z, ptr, ofst, sel1)
#endif

#ifdef _STRICT_ARG_TYPE
#define store8x1_vr_idxI(z, ptr, ofst2, sel1) \
	CSTUB_(_TIE_hmd1a_common_tie_store8x1_vr_idxI)(z, ptr, ofst2, sel1)
#else
#define store8x1_vr_idxI(z, ptr, ofst2, sel1) \
	CSTUB_(_TIE_hmd1a_common_tie_store8x1_vr_idxI)(z, ptr, ofst2, sel1)
#endif

#ifdef _STRICT_ARG_TYPE
#define store8x1_vr_postR(z, ptr, ofst, sel1) \
	CSTUB_(_TIE_hmd1a_common_tie_store8x1_vr_postR)(z, (unsigned int **)&(ptr), ofst, sel1)
#else
#define store8x1_vr_postR(z, ptr, ofst, sel1) \
	CSTUB_(_TIE_hmd1a_common_tie_store8x1_vr_postR)(z, (unsigned int **)&(ptr), ofst, sel1)
#endif

#ifdef _STRICT_ARG_TYPE
#define store8x1_vr_postI(z, ptr, ofst2, sel1) \
	CSTUB_(_TIE_hmd1a_common_tie_store8x1_vr_postI)(z, (unsigned int **)&(ptr), ofst2, sel1)
#else
#define store8x1_vr_postI(z, ptr, ofst2, sel1) \
	CSTUB_(_TIE_hmd1a_common_tie_store8x1_vr_postI)(z, (unsigned int **)&(ptr), ofst2, sel1)
#endif

#ifdef _STRICT_ARG_TYPE
#define store8x1_vr_circI(z, ptr, ofst1, c, sel1) \
	CSTUB_(_TIE_hmd1a_common_tie_store8x1_vr_circI)(z, (unsigned int **)&(ptr), ofst1, c, sel1)
#else
#define store8x1_vr_circI(z, ptr, ofst1, c, sel1) \
	CSTUB_(_TIE_hmd1a_common_tie_store8x1_vr_circI)(z, (unsigned int **)&(ptr), ofst1, c, sel1)
#endif

#ifdef _STRICT_ARG_TYPE
#define align_32x2_store(ptr) \
	CSTUB_(_TIE_hmd1a_common_tie_align_32x2_store)((unsigned *)(ptr))
#else
#define align_32x2_store(ptr) \
	CSTUB_(_TIE_hmd1a_common_tie_align_32x2_store)((unsigned *)(ptr))
#endif

#ifdef _STRICT_ARG_TYPE
#define store_32x2_vr_a(z, buf, ptr) \
	CSTUB_(_TIE_hmd1a_common_tie_store_32x2_vr_a)(z, buf, (unsigned int **)&(ptr))
#else
#define store_32x2_vr_a(z, buf, ptr) { \
	ulsr32 __buf = buf; \
	CSTUB_(_TIE_hmd1a_common_tie_store_32x2_vr_a)(z, __buf, (unsigned int **)&(ptr)); \
	(buf) = __buf; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define store_24x2_vr_a(z, buf, ptr) \
	CSTUB_(_TIE_hmd1a_common_tie_store_24x2_vr_a)(z, buf, (unsigned int **)&(ptr))
#else
#define store_24x2_vr_a(z, buf, ptr) { \
	ulsr32 __buf = buf; \
	CSTUB_(_TIE_hmd1a_common_tie_store_24x2_vr_a)(z, __buf, (unsigned int **)&(ptr)); \
	(buf) = __buf; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define store_32x2_vr_a_circ(z, buf, ptr, c) \
	CSTUB_(_TIE_hmd1a_common_tie_store_32x2_vr_a_circ)(z, buf, (unsigned int **)&(ptr), c)
#else
#define store_32x2_vr_a_circ(z, buf, ptr, c) { \
	ulsr32 __buf = buf; \
	CSTUB_(_TIE_hmd1a_common_tie_store_32x2_vr_a_circ)(z, __buf, (unsigned int **)&(ptr), c); \
	(buf) = __buf; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define flush_32x2(buf, ptr) \
	CSTUB_(_TIE_hmd1a_common_tie_flush_32x2)(buf,(unsigned *)( ptr))
#else
#define flush_32x2(buf, ptr) \
	CSTUB_(_TIE_hmd1a_common_tie_flush_32x2)(buf,(unsigned *)( ptr))
#endif

#ifdef _STRICT_ARG_TYPE
#define load_fr_postI(fx, ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_load_fr_postI)(fx, (const unsigned int **)&(ptr), ofst2)
#else
#define load_fr_postI(fx, ptr, ofst2) { \
	fr32 __fx; \
	CSTUB_(_TIE_hmd1a_common_tie_load_fr_postI)(__fx, (const unsigned int **)&(ptr), ofst2); \
	(fx) = __fx; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define store_fr_postI(fx, ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_store_fr_postI)(fx, (unsigned int **)&(ptr), ofst2)
#else
#define store_fr_postI(fx, ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_store_fr_postI)(fx, (unsigned int **)&(ptr), ofst2)
#endif

#ifdef _STRICT_ARG_TYPE
#define brev_upd(gate, idx_out, idx_in) \
	CSTUB_(_TIE_hmd1a_common_tie_brev_upd)(gate, idx_out, idx_in)
#else
#define brev_upd(gate, idx_out, idx_in) { \
	atbool __gate; \
	unsigned int __idx_out; \
	CSTUB_(_TIE_hmd1a_common_tie_brev_upd)(__gate, __idx_out, idx_in); \
	(gate) = __gate; \
	(idx_out) = __idx_out; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define brev_upd_ext(gate, idx_out) \
	CSTUB_(_TIE_hmd1a_common_tie_brev_upd_ext)(gate, idx_out)
#else
#define brev_upd_ext(gate, idx_out) { \
	atbool __gate = gate; \
	unsigned int __idx_out = idx_out; \
	CSTUB_(_TIE_hmd1a_common_tie_brev_upd_ext)(__gate, __idx_out); \
	(gate) = __gate; \
	(idx_out) = __idx_out; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define move32_ar_vr(x, sel1) \
	CSTUB_(_TIE_hmd1a_common_tie_move32_ar_vr)(x, sel1)
#else
#define move32_ar_vr(x, sel1) \
	CSTUB_(_TIE_hmd1a_common_tie_move32_ar_vr)(x, sel1)
#endif

#ifdef _STRICT_ARG_TYPE
#define move32_vr_ar(z, sel1, a) \
	CSTUB_(_TIE_hmd1a_common_tie_move32_vr_ar)(z, sel1, a)
#else
#define move32_vr_ar(z, sel1, a) { \
	vr64 __z = z; \
	CSTUB_(_TIE_hmd1a_common_tie_move32_vr_ar)(__z, sel1, a); \
	(z) = __z; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define move32_ar_vr_idx(x, idx) \
	CSTUB_(_TIE_hmd1a_common_tie_move32_ar_vr_idx)(x, idx)
#else
#define move32_ar_vr_idx(x, idx) \
	CSTUB_(_TIE_hmd1a_common_tie_move32_ar_vr_idx)(x, idx)
#endif

#ifdef _STRICT_ARG_TYPE
#define move32_fr_vr_idx(x, idx) \
	CSTUB_(_TIE_hmd1a_common_tie_move32_fr_vr_idx)(x, idx)
#else
#define move32_fr_vr_idx(x, idx) \
	CSTUB_(_TIE_hmd1a_common_tie_move32_fr_vr_idx)(x, idx)
#endif

#ifdef _STRICT_ARG_TYPE
#define move_fr_eqz(z, x, y) \
	CSTUB_(_TIE_hmd1a_common_tie_move_fr_eqz)(z, x, y)
#else
#define move_fr_eqz(z, x, y) { \
	fr32 __z = z; \
	CSTUB_(_TIE_hmd1a_common_tie_move_fr_eqz)(__z, x, y); \
	(z) = __z; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define move_fr_gez(z, x, y) \
	CSTUB_(_TIE_hmd1a_common_tie_move_fr_gez)(z, x, y)
#else
#define move_fr_gez(z, x, y) { \
	fr32 __z = z; \
	CSTUB_(_TIE_hmd1a_common_tie_move_fr_gez)(__z, x, y); \
	(z) = __z; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define move_fr_gtz(z, x, y) \
	CSTUB_(_TIE_hmd1a_common_tie_move_fr_gtz)(z, x, y)
#else
#define move_fr_gtz(z, x, y) { \
	fr32 __z = z; \
	CSTUB_(_TIE_hmd1a_common_tie_move_fr_gtz)(__z, x, y); \
	(z) = __z; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define move_fr_lez(z, x, y) \
	CSTUB_(_TIE_hmd1a_common_tie_move_fr_lez)(z, x, y)
#else
#define move_fr_lez(z, x, y) { \
	fr32 __z = z; \
	CSTUB_(_TIE_hmd1a_common_tie_move_fr_lez)(__z, x, y); \
	(z) = __z; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define move_fr_ltz(z, x, y) \
	CSTUB_(_TIE_hmd1a_common_tie_move_fr_ltz)(z, x, y)
#else
#define move_fr_ltz(z, x, y) { \
	fr32 __z = z; \
	CSTUB_(_TIE_hmd1a_common_tie_move_fr_ltz)(__z, x, y); \
	(z) = __z; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define move_fr_nez(z, x, y) \
	CSTUB_(_TIE_hmd1a_common_tie_move_fr_nez)(z, x, y)
#else
#define move_fr_nez(z, x, y) { \
	fr32 __z = z; \
	CSTUB_(_TIE_hmd1a_common_tie_move_fr_nez)(__z, x, y); \
	(z) = __z; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define move_fr_sat(z, x, y) \
	CSTUB_(_TIE_hmd1a_common_tie_move_fr_sat)(z, x, y)
#else
#define move_fr_sat(z, x, y) { \
	fr32 __z = z; \
	CSTUB_(_TIE_hmd1a_common_tie_move_fr_sat)(__z, x, y); \
	(z) = __z; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define move_fr_arnz(z, x, ax) \
	CSTUB_(_TIE_hmd1a_common_tie_move_fr_arnz)(z, x, ax)
#else
#define move_fr_arnz(z, x, ax) { \
	fr32 __z = z; \
	CSTUB_(_TIE_hmd1a_common_tie_move_fr_arnz)(__z, x, ax); \
	(z) = __z; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define vmove_vr_eqz(z, x, y) \
	CSTUB_(_TIE_hmd1a_common_tie_vmove_vr_eqz)(z, x, y)
#else
#define vmove_vr_eqz(z, x, y) { \
	vr64 __z = z; \
	CSTUB_(_TIE_hmd1a_common_tie_vmove_vr_eqz)(__z, x, y); \
	(z) = __z; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define vmove_vr_gez(z, x, y) \
	CSTUB_(_TIE_hmd1a_common_tie_vmove_vr_gez)(z, x, y)
#else
#define vmove_vr_gez(z, x, y) { \
	vr64 __z = z; \
	CSTUB_(_TIE_hmd1a_common_tie_vmove_vr_gez)(__z, x, y); \
	(z) = __z; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define vmove_vr_gtz(z, x, y) \
	CSTUB_(_TIE_hmd1a_common_tie_vmove_vr_gtz)(z, x, y)
#else
#define vmove_vr_gtz(z, x, y) { \
	vr64 __z = z; \
	CSTUB_(_TIE_hmd1a_common_tie_vmove_vr_gtz)(__z, x, y); \
	(z) = __z; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define vmove_vr_lez(z, x, y) \
	CSTUB_(_TIE_hmd1a_common_tie_vmove_vr_lez)(z, x, y)
#else
#define vmove_vr_lez(z, x, y) { \
	vr64 __z = z; \
	CSTUB_(_TIE_hmd1a_common_tie_vmove_vr_lez)(__z, x, y); \
	(z) = __z; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define vmove_vr_ltz(z, x, y) \
	CSTUB_(_TIE_hmd1a_common_tie_vmove_vr_ltz)(z, x, y)
#else
#define vmove_vr_ltz(z, x, y) { \
	vr64 __z = z; \
	CSTUB_(_TIE_hmd1a_common_tie_vmove_vr_ltz)(__z, x, y); \
	(z) = __z; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define vmove_vr_nez(z, x, y) \
	CSTUB_(_TIE_hmd1a_common_tie_vmove_vr_nez)(z, x, y)
#else
#define vmove_vr_nez(z, x, y) { \
	vr64 __z = z; \
	CSTUB_(_TIE_hmd1a_common_tie_vmove_vr_nez)(__z, x, y); \
	(z) = __z; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define vmove_vr_sat(z, x, y) \
	CSTUB_(_TIE_hmd1a_common_tie_vmove_vr_sat)(z, x, y)
#else
#define vmove_vr_sat(z, x, y) { \
	vr64 __z = z; \
	CSTUB_(_TIE_hmd1a_common_tie_vmove_vr_sat)(__z, x, y); \
	(z) = __z; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define replicate(z, sel_code, x, el_x) \
	CSTUB_(_TIE_hmd1a_common_tie_replicate)(z, sel_code, x, el_x)
#else
#define replicate(z, sel_code, x, el_x) { \
	vr64 __z = z; \
	CSTUB_(_TIE_hmd1a_common_tie_replicate)(__z, sel_code, x, el_x); \
	(z) = __z; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define replicate_ar(z, sel_code, ar) \
	CSTUB_(_TIE_hmd1a_common_tie_replicate_ar)(z, sel_code, ar)
#else
#define replicate_ar(z, sel_code, ar) { \
	vr64 __z = z; \
	CSTUB_(_TIE_hmd1a_common_tie_replicate_ar)(__z, sel_code, ar); \
	(z) = __z; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define vreplicate(x, el_x) \
	CSTUB_(_TIE_hmd1a_common_tie_vreplicate)(x, el_x)
#else
#define vreplicate(x, el_x) \
	CSTUB_(_TIE_hmd1a_common_tie_vreplicate)(x, el_x)
#endif

#ifdef _STRICT_ARG_TYPE
#define vreplicate_fr(fx) \
	CSTUB_(_TIE_hmd1a_common_tie_vreplicate_fr)(fx)
#else
#define vreplicate_fr(fx) \
	CSTUB_(_TIE_hmd1a_common_tie_vreplicate_fr)(fx)
#endif

#ifdef _STRICT_ARG_TYPE
#define convert_16I_to_32F_x1(z, exp_fxp, el) \
	CSTUB_(_TIE_hmd1a_common_tie_convert_16I_to_32F_x1)(z, exp_fxp, el)
#else
#define convert_16I_to_32F_x1(z, exp_fxp, el) { \
	vr64 __z = z; \
	CSTUB_(_TIE_hmd1a_common_tie_convert_16I_to_32F_x1)(__z, exp_fxp, el); \
	(z) = __z; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define convert_16I_to_32F_x2(z, exp_fxp) \
	CSTUB_(_TIE_hmd1a_common_tie_convert_16I_to_32F_x2)(z, exp_fxp)
#else
#define convert_16I_to_32F_x2(z, exp_fxp) { \
	vr64 __z = z; \
	CSTUB_(_TIE_hmd1a_common_tie_convert_16I_to_32F_x2)(__z, exp_fxp); \
	(z) = __z; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define convert_32F_to_16I_x1(z, exp_fxp, rnd, el) \
	CSTUB_(_TIE_hmd1a_common_tie_convert_32F_to_16I_x1)(z, exp_fxp, rnd, el)
#else
#define convert_32F_to_16I_x1(z, exp_fxp, rnd, el) { \
	vr64 __z = z; \
	CSTUB_(_TIE_hmd1a_common_tie_convert_32F_to_16I_x1)(__z, exp_fxp, rnd, el); \
	(z) = __z; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define convert_32F_to_16I_x2(z, exp_fxp, rnd) \
	CSTUB_(_TIE_hmd1a_common_tie_convert_32F_to_16I_x2)(z, exp_fxp, rnd)
#else
#define convert_32F_to_16I_x2(z, exp_fxp, rnd) { \
	vr64 __z = z; \
	CSTUB_(_TIE_hmd1a_common_tie_convert_32F_to_16I_x2)(__z, exp_fxp, rnd); \
	(z) = __z; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define convert_32F_to_16F_x1(z, is_signed, exp_bits, bias, round, el) \
	CSTUB_(_TIE_hmd1a_common_tie_convert_32F_to_16F_x1)(z, is_signed, exp_bits, bias, round, el)
#else
#define convert_32F_to_16F_x1(z, is_signed, exp_bits, bias, round, el) { \
	vr64 __z = z; \
	CSTUB_(_TIE_hmd1a_common_tie_convert_32F_to_16F_x1)(__z, is_signed, exp_bits, bias, round, el); \
	(z) = __z; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define convert_32F_to_16F_x2(z, is_signed, exp_bits, bias, round) \
	CSTUB_(_TIE_hmd1a_common_tie_convert_32F_to_16F_x2)(z, is_signed, exp_bits, bias, round)
#else
#define convert_32F_to_16F_x2(z, is_signed, exp_bits, bias, round) { \
	vr64 __z = z; \
	CSTUB_(_TIE_hmd1a_common_tie_convert_32F_to_16F_x2)(__z, is_signed, exp_bits, bias, round); \
	(z) = __z; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define convert_16F_to_32F_x1(z, is_signed, exp_bits, bias, el) \
	CSTUB_(_TIE_hmd1a_common_tie_convert_16F_to_32F_x1)(z, is_signed, exp_bits, bias, el)
#else
#define convert_16F_to_32F_x1(z, is_signed, exp_bits, bias, el) { \
	vr64 __z = z; \
	CSTUB_(_TIE_hmd1a_common_tie_convert_16F_to_32F_x1)(__z, is_signed, exp_bits, bias, el); \
	(z) = __z; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define convert_16F_to_32F_x2(z, is_signed, exp_bits, bias) \
	CSTUB_(_TIE_hmd1a_common_tie_convert_16F_to_32F_x2)(z, is_signed, exp_bits, bias)
#else
#define convert_16F_to_32F_x2(z, is_signed, exp_bits, bias) { \
	vr64 __z = z; \
	CSTUB_(_TIE_hmd1a_common_tie_convert_16F_to_32F_x2)(__z, is_signed, exp_bits, bias); \
	(z) = __z; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define convert_32I_to_32F_x1(z, exp_fxp, el) \
	CSTUB_(_TIE_hmd1a_common_tie_convert_32I_to_32F_x1)(z, exp_fxp, el)
#else
#define convert_32I_to_32F_x1(z, exp_fxp, el) { \
	vr64 __z = z; \
	CSTUB_(_TIE_hmd1a_common_tie_convert_32I_to_32F_x1)(__z, exp_fxp, el); \
	(z) = __z; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define convert_32F_to_32I_x1(z, exp_fxp, rnd, el) \
	CSTUB_(_TIE_hmd1a_common_tie_convert_32F_to_32I_x1)(z, exp_fxp, rnd, el)
#else
#define convert_32F_to_32I_x1(z, exp_fxp, rnd, el) { \
	vr64 __z = z; \
	CSTUB_(_TIE_hmd1a_common_tie_convert_32F_to_32I_x1)(__z, exp_fxp, rnd, el); \
	(z) = __z; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define convert_IEEE_float_to_32F_x2(z) \
	CSTUB_(_TIE_hmd1a_common_tie_convert_IEEE_float_to_32F_x2)(z)
#else
#define convert_IEEE_float_to_32F_x2(z) { \
	vr64 __z = z; \
	CSTUB_(_TIE_hmd1a_common_tie_convert_IEEE_float_to_32F_x2)(__z); \
	(z) = __z; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define convert_32F_to_IEEE_float_x2(z) \
	CSTUB_(_TIE_hmd1a_common_tie_convert_32F_to_IEEE_float_x2)(z)
#else
#define convert_32F_to_IEEE_float_x2(z) { \
	vr64 __z = z; \
	CSTUB_(_TIE_hmd1a_common_tie_convert_32F_to_IEEE_float_x2)(__z); \
	(z) = __z; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define convert_32I_to_64F(x) \
	CSTUB_(_TIE_hmd1a_common_tie_convert_32I_to_64F)(x)
#else
#define convert_32I_to_64F(x) \
	CSTUB_(_TIE_hmd1a_common_tie_convert_32I_to_64F)(x)
#endif

#ifdef _STRICT_ARG_TYPE
#define convert_64F_to_32I(x, rnd) \
	CSTUB_(_TIE_hmd1a_common_tie_convert_64F_to_32I)(x, rnd)
#else
#define convert_64F_to_32I(x, rnd) \
	CSTUB_(_TIE_hmd1a_common_tie_convert_64F_to_32I)(x, rnd)
#endif

#ifdef _STRICT_ARG_TYPE
#define convert_32F_to_64F(fx) \
	CSTUB_(_TIE_hmd1a_common_tie_convert_32F_to_64F)(fx)
#else
#define convert_32F_to_64F(fx) \
	CSTUB_(_TIE_hmd1a_common_tie_convert_32F_to_64F)(fx)
#endif

#ifdef _STRICT_ARG_TYPE
#define convert_64F_to_32F(x) \
	CSTUB_(_TIE_hmd1a_common_tie_convert_64F_to_32F)(x)
#else
#define convert_64F_to_32F(x) \
	CSTUB_(_TIE_hmd1a_common_tie_convert_64F_to_32F)(x)
#endif

#ifdef _STRICT_ARG_TYPE
#define convert_IEEE_double_to_64F(z) \
	CSTUB_(_TIE_hmd1a_common_tie_convert_IEEE_double_to_64F)(z)
#else
#define convert_IEEE_double_to_64F(z) { \
	vr64 __z = z; \
	CSTUB_(_TIE_hmd1a_common_tie_convert_IEEE_double_to_64F)(__z); \
	(z) = __z; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define convert_64F_to_IEEE_double(z) \
	CSTUB_(_TIE_hmd1a_common_tie_convert_64F_to_IEEE_double)(z)
#else
#define convert_64F_to_IEEE_double(z) { \
	vr64 __z = z; \
	CSTUB_(_TIE_hmd1a_common_tie_convert_64F_to_IEEE_double)(__z); \
	(z) = __z; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define vadd_perm(x, y, selin_h, selin_l, signs4, div_by_2_op) \
	CSTUB_(_TIE_hmd1a_common_tie_vadd_perm)(x, y, selin_h, selin_l, signs4, div_by_2_op)
#else
#define vadd_perm(x, y, selin_h, selin_l, signs4, div_by_2_op) \
	CSTUB_(_TIE_hmd1a_common_tie_vadd_perm)(x, y, selin_h, selin_l, signs4, div_by_2_op)
#endif

#ifdef _STRICT_ARG_TYPE
#define vsum_perm(z, x, y, selin_h, selin_l, signs4, sign_z) \
	CSTUB_(_TIE_hmd1a_common_tie_vsum_perm)(z, x, y, selin_h, selin_l, signs4, sign_z)
#else
#define vsum_perm(z, x, y, selin_h, selin_l, signs4, sign_z) \
	CSTUB_(_TIE_hmd1a_common_tie_vsum_perm)(z, x, y, selin_h, selin_l, signs4, sign_z)
#endif

#ifdef _STRICT_ARG_TYPE
#define vmul_perm(x, y, selin_h, selin_l, signs2, div_by_2_op) \
	CSTUB_(_TIE_hmd1a_common_tie_vmul_perm)(x, y, selin_h, selin_l, signs2, div_by_2_op)
#else
#define vmul_perm(x, y, selin_h, selin_l, signs2, div_by_2_op) \
	CSTUB_(_TIE_hmd1a_common_tie_vmul_perm)(x, y, selin_h, selin_l, signs2, div_by_2_op)
#endif

#ifdef _STRICT_ARG_TYPE
#define vmac_perm(z, x, y, selin_h, selin_l, signs2, sign_z, swap_z, div_by_2_op) \
	CSTUB_(_TIE_hmd1a_common_tie_vmac_perm)(z, x, y, selin_h, selin_l, signs2, sign_z, swap_z, div_by_2_op)
#else
#define vmac_perm(z, x, y, selin_h, selin_l, signs2, sign_z, swap_z, div_by_2_op) \
	CSTUB_(_TIE_hmd1a_common_tie_vmac_perm)(z, x, y, selin_h, selin_l, signs2, sign_z, swap_z, div_by_2_op)
#endif

#ifdef _STRICT_ARG_TYPE
#define vmac_boost(z, x, y, selin_h, selin_l, signs2, boost) \
	CSTUB_(_TIE_hmd1a_common_tie_vmac_boost)(z, x, y, selin_h, selin_l, signs2, boost)
#else
#define vmac_boost(z, x, y, selin_h, selin_l, signs2, boost) \
	CSTUB_(_TIE_hmd1a_common_tie_vmac_boost)(z, x, y, selin_h, selin_l, signs2, boost)
#endif

#ifdef _STRICT_ARG_TYPE
#define vblend(x, y, selin_h, selin_l, signs4, div_by_2_op) \
	CSTUB_(_TIE_hmd1a_common_tie_vblend)(x, y, selin_h, selin_l, signs4, div_by_2_op)
#else
#define vblend(x, y, selin_h, selin_l, signs4, div_by_2_op) \
	CSTUB_(_TIE_hmd1a_common_tie_vblend)(x, y, selin_h, selin_l, signs4, div_by_2_op)
#endif

#ifdef _STRICT_ARG_TYPE
#define vblend_add(z, x, y, selin_h, selin_l, signs4, sign_z, swap_z, div_by_2_op) \
	CSTUB_(_TIE_hmd1a_common_tie_vblend_add)(z, x, y, selin_h, selin_l, signs4, sign_z, swap_z, div_by_2_op)
#else
#define vblend_add(z, x, y, selin_h, selin_l, signs4, sign_z, swap_z, div_by_2_op) \
	CSTUB_(_TIE_hmd1a_common_tie_vblend_add)(z, x, y, selin_h, selin_l, signs4, sign_z, swap_z, div_by_2_op)
#endif

#ifdef _STRICT_ARG_TYPE
#define vblend_boost(z, x, y, selin_h, selin_l, signs4, boost) \
	CSTUB_(_TIE_hmd1a_common_tie_vblend_boost)(z, x, y, selin_h, selin_l, signs4, boost)
#else
#define vblend_boost(z, x, y, selin_h, selin_l, signs4, boost) \
	CSTUB_(_TIE_hmd1a_common_tie_vblend_boost)(z, x, y, selin_h, selin_l, signs4, boost)
#endif

#ifdef _STRICT_ARG_TYPE
#define fadds(fx, fy, signs2) \
	CSTUB_(_TIE_hmd1a_common_tie_fadds)(fx, fy, signs2)
#else
#define fadds(fx, fy, signs2) \
	CSTUB_(_TIE_hmd1a_common_tie_fadds)(fx, fy, signs2)
#endif

#ifdef _STRICT_ARG_TYPE
#define fmuls(fx, fy, signs2) \
	CSTUB_(_TIE_hmd1a_common_tie_fmuls)(fx, fy, signs2)
#else
#define fmuls(fx, fy, signs2) \
	CSTUB_(_TIE_hmd1a_common_tie_fmuls)(fx, fy, signs2)
#endif

#ifdef _STRICT_ARG_TYPE
#define fmacs(fz, fx, fy, signs2) \
	CSTUB_(_TIE_hmd1a_common_tie_fmacs)(fz, fx, fy, signs2)
#else
#define fmacs(fz, fx, fy, signs2) \
	CSTUB_(_TIE_hmd1a_common_tie_fmacs)(fz, fx, fy, signs2)
#endif

#ifdef _STRICT_ARG_TYPE
#define dadds(z, x, signs2) \
	CSTUB_(_TIE_hmd1a_common_tie_dadds)(z, x, signs2)
#else
#define dadds(z, x, signs2) \
	CSTUB_(_TIE_hmd1a_common_tie_dadds)(z, x, signs2)
#endif

#ifdef _STRICT_ARG_TYPE
#define dmuls(x, y, signs2) \
	CSTUB_(_TIE_hmd1a_common_tie_dmuls)(x, y, signs2)
#else
#define dmuls(x, y, signs2) \
	CSTUB_(_TIE_hmd1a_common_tie_dmuls)(x, y, signs2)
#endif

#ifdef _STRICT_ARG_TYPE
#define dmacs(z, x, y, signs2) \
	CSTUB_(_TIE_hmd1a_common_tie_dmacs)(z, x, y, signs2)
#else
#define dmacs(z, x, y, signs2) \
	CSTUB_(_TIE_hmd1a_common_tie_dmacs)(z, x, y, signs2)
#endif

#ifdef _STRICT_ARG_TYPE
#define vadds(x, y, signs4) \
	CSTUB_(_TIE_hmd1a_common_tie_vadds)(x, y, signs4)
#else
#define vadds(x, y, signs4) \
	CSTUB_(_TIE_hmd1a_common_tie_vadds)(x, y, signs4)
#endif

#ifdef _STRICT_ARG_TYPE
#define vmuls(x, y, signs2) \
	CSTUB_(_TIE_hmd1a_common_tie_vmuls)(x, y, signs2)
#else
#define vmuls(x, y, signs2) \
	CSTUB_(_TIE_hmd1a_common_tie_vmuls)(x, y, signs2)
#endif

#ifdef _STRICT_ARG_TYPE
#define vmacs(z, x, y, signs2, sign_z) \
	CSTUB_(_TIE_hmd1a_common_tie_vmacs)(z, x, y, signs2, sign_z)
#else
#define vmacs(z, x, y, signs2, sign_z) \
	CSTUB_(_TIE_hmd1a_common_tie_vmacs)(z, x, y, signs2, sign_z)
#endif

#ifdef _STRICT_ARG_TYPE
#define cmul(x, y, conj) \
	CSTUB_(_TIE_hmd1a_common_tie_cmul)(x, y, conj)
#else
#define cmul(x, y, conj) \
	CSTUB_(_TIE_hmd1a_common_tie_cmul)(x, y, conj)
#endif

#ifdef _STRICT_ARG_TYPE
#define cmac(z, x, y, conj) \
	CSTUB_(_TIE_hmd1a_common_tie_cmac)(z, x, y, conj)
#else
#define cmac(z, x, y, conj) \
	CSTUB_(_TIE_hmd1a_common_tie_cmac)(z, x, y, conj)
#endif

#ifdef _STRICT_ARG_TYPE
#define cmas(z, x, y, conj) \
	CSTUB_(_TIE_hmd1a_common_tie_cmas)(z, x, y, conj)
#else
#define cmas(z, x, y, conj) \
	CSTUB_(_TIE_hmd1a_common_tie_cmas)(z, x, y, conj)
#endif

#ifdef _STRICT_ARG_TYPE
#define vmulf(x, fy, signs2) \
	CSTUB_(_TIE_hmd1a_common_tie_vmulf)(x, fy, signs2)
#else
#define vmulf(x, fy, signs2) \
	CSTUB_(_TIE_hmd1a_common_tie_vmulf)(x, fy, signs2)
#endif

#ifdef _STRICT_ARG_TYPE
#define vmacf(z, x, fy, signs2, sign_z) \
	CSTUB_(_TIE_hmd1a_common_tie_vmacf)(z, x, fy, signs2, sign_z)
#else
#define vmacf(z, x, fy, signs2, sign_z) \
	CSTUB_(_TIE_hmd1a_common_tie_vmacf)(z, x, fy, signs2, sign_z)
#endif

#ifdef _STRICT_ARG_TYPE
#define vabs(x) \
	CSTUB_(_TIE_hmd1a_common_tie_vabs)(x)
#else
#define vabs(x) \
	CSTUB_(_TIE_hmd1a_common_tie_vabs)(x)
#endif

#ifdef _STRICT_ARG_TYPE
#define vexp_adj(x, exp_adj_ar) \
	CSTUB_(_TIE_hmd1a_common_tie_vexp_adj)(x, exp_adj_ar)
#else
#define vexp_adj(x, exp_adj_ar) \
	CSTUB_(_TIE_hmd1a_common_tie_vexp_adj)(x, exp_adj_ar)
#endif

#ifdef _STRICT_ARG_TYPE
#define vexp_adji(x, exp_adj_imm) \
	CSTUB_(_TIE_hmd1a_common_tie_vexp_adji)(x, exp_adj_imm)
#else
#define vexp_adji(x, exp_adj_imm) \
	CSTUB_(_TIE_hmd1a_common_tie_vexp_adji)(x, exp_adj_imm)
#endif

#ifdef _STRICT_ARG_TYPE
#define vpermi(x, y, sel4) \
	CSTUB_(_TIE_hmd1a_common_tie_vpermi)(x, y, sel4)
#else
#define vpermi(x, y, sel4) \
	CSTUB_(_TIE_hmd1a_common_tie_vpermi)(x, y, sel4)
#endif

#ifdef _STRICT_ARG_TYPE
#define seta_vr(z, sel_code, const_idx, exp_adj_const) \
	CSTUB_(_TIE_hmd1a_common_tie_seta_vr)(z, sel_code, const_idx, exp_adj_const)
#else
#define seta_vr(z, sel_code, const_idx, exp_adj_const) { \
	vr64 __z = z; \
	CSTUB_(_TIE_hmd1a_common_tie_seta_vr)(__z, sel_code, const_idx, exp_adj_const); \
	(z) = __z; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define vseta_vr(const_idx, exp_adj_const) \
	CSTUB_(_TIE_hmd1a_common_tie_vseta_vr)(const_idx, exp_adj_const)
#else
#define vseta_vr(const_idx, exp_adj_const) \
	CSTUB_(_TIE_hmd1a_common_tie_vseta_vr)(const_idx, exp_adj_const)
#endif

#ifdef _STRICT_ARG_TYPE
#define seta_ar(const_idx, exp_adj_const) \
	CSTUB_(_TIE_hmd1a_common_tie_seta_ar)(const_idx, exp_adj_const)
#else
#define seta_ar(const_idx, exp_adj_const) \
	CSTUB_(_TIE_hmd1a_common_tie_seta_ar)(const_idx, exp_adj_const)
#endif

#ifdef _STRICT_ARG_TYPE
#define seta_fr(const_idx, exp_adj_const) \
	CSTUB_(_TIE_hmd1a_common_tie_seta_fr)(const_idx, exp_adj_const)
#else
#define seta_fr(const_idx, exp_adj_const) \
	CSTUB_(_TIE_hmd1a_common_tie_seta_fr)(const_idx, exp_adj_const)
#endif

#ifdef _STRICT_ARG_TYPE
#define load_AccExtend_postI(ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_load_AccExtend_postI)((const unsigned int **)&(ptr), ofst2)
#else
#define load_AccExtend_postI(ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_load_AccExtend_postI)((const unsigned int **)&(ptr), ofst2)
#endif

#ifdef _STRICT_ARG_TYPE
#define load32x1_vr_idx16vr(z, ptr, vidx16, ptr_sel) \
	CSTUB_(_TIE_hmd1a_common_tie_load32x1_vr_idx16vr)(z,(unsigned *)( ptr), vidx16, ptr_sel)
#else
#define load32x1_vr_idx16vr(z, ptr, vidx16, ptr_sel) { \
	vr64 __z = z; \
	CSTUB_(_TIE_hmd1a_common_tie_load32x1_vr_idx16vr)(__z,(unsigned *)( ptr), vidx16, ptr_sel); \
	(z) = __z; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define load_BB0_postI(ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_load_BB0_postI)((const unsigned int **)&(ptr), ofst2)
#else
#define load_BB0_postI(ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_load_BB0_postI)((const unsigned int **)&(ptr), ofst2)
#endif

#ifdef _STRICT_ARG_TYPE
#define load_BB1_postI(ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_load_BB1_postI)((const unsigned int **)&(ptr), ofst2)
#else
#define load_BB1_postI(ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_load_BB1_postI)((const unsigned int **)&(ptr), ofst2)
#endif

#ifdef _STRICT_ARG_TYPE
#define load_BB2_postI(ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_load_BB2_postI)((const unsigned int **)&(ptr), ofst2)
#else
#define load_BB2_postI(ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_load_BB2_postI)((const unsigned int **)&(ptr), ofst2)
#endif

#ifdef _STRICT_ARG_TYPE
#define load_BB3_postI(ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_load_BB3_postI)((const unsigned int **)&(ptr), ofst2)
#else
#define load_BB3_postI(ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_load_BB3_postI)((const unsigned int **)&(ptr), ofst2)
#endif

#ifdef _STRICT_ARG_TYPE
#define load_VB1_postI(ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_load_VB1_postI)((const unsigned int **)&(ptr), ofst2)
#else
#define load_VB1_postI(ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_load_VB1_postI)((const unsigned int **)&(ptr), ofst2)
#endif

#ifdef _STRICT_ARG_TYPE
#define load_VB2_postI(ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_load_VB2_postI)((const unsigned int **)&(ptr), ofst2)
#else
#define load_VB2_postI(ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_load_VB2_postI)((const unsigned int **)&(ptr), ofst2)
#endif

#ifdef _STRICT_ARG_TYPE
#define load_VB3_postI(ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_load_VB3_postI)((const unsigned int **)&(ptr), ofst2)
#else
#define load_VB3_postI(ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_load_VB3_postI)((const unsigned int **)&(ptr), ofst2)
#endif

#ifdef _STRICT_ARG_TYPE
#define load_VB4_postI(ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_load_VB4_postI)((const unsigned int **)&(ptr), ofst2)
#else
#define load_VB4_postI(ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_load_VB4_postI)((const unsigned int **)&(ptr), ofst2)
#endif

#ifdef _STRICT_ARG_TYPE
#define load_VB5_postI(ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_load_VB5_postI)((const unsigned int **)&(ptr), ofst2)
#else
#define load_VB5_postI(ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_load_VB5_postI)((const unsigned int **)&(ptr), ofst2)
#endif

#ifdef _STRICT_ARG_TYPE
#define load_VB6_postI(ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_load_VB6_postI)((const unsigned int **)&(ptr), ofst2)
#else
#define load_VB6_postI(ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_load_VB6_postI)((const unsigned int **)&(ptr), ofst2)
#endif

#ifdef _STRICT_ARG_TYPE
#define load_VB7_postI(ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_load_VB7_postI)((const unsigned int **)&(ptr), ofst2)
#else
#define load_VB7_postI(ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_load_VB7_postI)((const unsigned int **)&(ptr), ofst2)
#endif

#ifdef _STRICT_ARG_TYPE
#define load_32x2_vr_a_bounded(z, buf, ptr, count) \
	CSTUB_(_TIE_hmd1a_common_tie_load_32x2_vr_a_bounded)(z, buf, (const unsigned int **)&(ptr), count)
#else
#define load_32x2_vr_a_bounded(z, buf, ptr, count) { \
	vr64 __z; \
	ulsr32 __buf = buf; \
	mir18 __count = count; \
	CSTUB_(_TIE_hmd1a_common_tie_load_32x2_vr_a_bounded)(__z, __buf, (const unsigned int **)&(ptr), __count); \
	(z) = __z; \
	(buf) = __buf; \
	(count) = __count; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define load_BBx_VB67_a_bounded(buf, ptr, count, sel) \
	CSTUB_(_TIE_hmd1a_common_tie_load_BBx_VB67_a_bounded)(buf, (const unsigned int **)&(ptr), count, sel)
#else
#define load_BBx_VB67_a_bounded(buf, ptr, count, sel) { \
	ulsr32 __buf = buf; \
	mir18 __count = count; \
	CSTUB_(_TIE_hmd1a_common_tie_load_BBx_VB67_a_bounded)(__buf, (const unsigned int **)&(ptr), __count, sel); \
	(buf) = __buf; \
	(count) = __count; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define flush_32x2_bounded(buf, ptr, count) \
	CSTUB_(_TIE_hmd1a_common_tie_flush_32x2_bounded)(buf, (unsigned int **)&(ptr), count)
#else
#define flush_32x2_bounded(buf, ptr, count) { \
	mir18 __count = count; \
	CSTUB_(_TIE_hmd1a_common_tie_flush_32x2_bounded)(buf, (unsigned int **)&(ptr), __count); \
	(count) = __count; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define store_32x2_vr_a_bounded(z, buf, ptr, count) \
	CSTUB_(_TIE_hmd1a_common_tie_store_32x2_vr_a_bounded)(z, buf, (unsigned int **)&(ptr), count)
#else
#define store_32x2_vr_a_bounded(z, buf, ptr, count) { \
	ulsr32 __buf = buf; \
	mir18 __count = count; \
	CSTUB_(_TIE_hmd1a_common_tie_store_32x2_vr_a_bounded)(z, __buf, (unsigned int **)&(ptr), __count); \
	(buf) = __buf; \
	(count) = __count; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define store_AccExtend_postI(ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_store_AccExtend_postI)((unsigned int **)&(ptr), ofst2)
#else
#define store_AccExtend_postI(ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_store_AccExtend_postI)((unsigned int **)&(ptr), ofst2)
#endif

#ifdef _STRICT_ARG_TYPE
#define store_BB0_postI(ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_store_BB0_postI)((unsigned int **)&(ptr), ofst2)
#else
#define store_BB0_postI(ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_store_BB0_postI)((unsigned int **)&(ptr), ofst2)
#endif

#ifdef _STRICT_ARG_TYPE
#define store_BB1_postI(ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_store_BB1_postI)((unsigned int **)&(ptr), ofst2)
#else
#define store_BB1_postI(ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_store_BB1_postI)((unsigned int **)&(ptr), ofst2)
#endif

#ifdef _STRICT_ARG_TYPE
#define store_BB2_postI(ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_store_BB2_postI)((unsigned int **)&(ptr), ofst2)
#else
#define store_BB2_postI(ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_store_BB2_postI)((unsigned int **)&(ptr), ofst2)
#endif

#ifdef _STRICT_ARG_TYPE
#define store_BB3_postI(ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_store_BB3_postI)((unsigned int **)&(ptr), ofst2)
#else
#define store_BB3_postI(ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_store_BB3_postI)((unsigned int **)&(ptr), ofst2)
#endif

#ifdef _STRICT_ARG_TYPE
#define store_VB1_postI(ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_store_VB1_postI)((unsigned int **)&(ptr), ofst2)
#else
#define store_VB1_postI(ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_store_VB1_postI)((unsigned int **)&(ptr), ofst2)
#endif

#ifdef _STRICT_ARG_TYPE
#define store_VB2_postI(ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_store_VB2_postI)((unsigned int **)&(ptr), ofst2)
#else
#define store_VB2_postI(ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_store_VB2_postI)((unsigned int **)&(ptr), ofst2)
#endif

#ifdef _STRICT_ARG_TYPE
#define store_VB3_postI(ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_store_VB3_postI)((unsigned int **)&(ptr), ofst2)
#else
#define store_VB3_postI(ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_store_VB3_postI)((unsigned int **)&(ptr), ofst2)
#endif

#ifdef _STRICT_ARG_TYPE
#define store_VB4_postI(ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_store_VB4_postI)((unsigned int **)&(ptr), ofst2)
#else
#define store_VB4_postI(ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_store_VB4_postI)((unsigned int **)&(ptr), ofst2)
#endif

#ifdef _STRICT_ARG_TYPE
#define store_VB5_postI(ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_store_VB5_postI)((unsigned int **)&(ptr), ofst2)
#else
#define store_VB5_postI(ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_store_VB5_postI)((unsigned int **)&(ptr), ofst2)
#endif

#ifdef _STRICT_ARG_TYPE
#define store_VB6_postI(ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_store_VB6_postI)((unsigned int **)&(ptr), ofst2)
#else
#define store_VB6_postI(ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_store_VB6_postI)((unsigned int **)&(ptr), ofst2)
#endif

#ifdef _STRICT_ARG_TYPE
#define store_VB7_postI(ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_store_VB7_postI)((unsigned int **)&(ptr), ofst2)
#else
#define store_VB7_postI(ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_store_VB7_postI)((unsigned int **)&(ptr), ofst2)
#endif

#ifdef _STRICT_ARG_TYPE
#define afloat_exp_extract(x) \
	CSTUB_(_TIE_hmd1a_common_tie_afloat_exp_extract)(x)
#else
#define afloat_exp_extract(x) \
	CSTUB_(_TIE_hmd1a_common_tie_afloat_exp_extract)(x)
#endif

#ifdef _STRICT_ARG_TYPE
#define mov_AccExtend_vr(x) \
	CSTUB_(_TIE_hmd1a_common_tie_mov_AccExtend_vr)(x)
#else
#define mov_AccExtend_vr(x) \
	CSTUB_(_TIE_hmd1a_common_tie_mov_AccExtend_vr)(x)
#endif

#ifdef _STRICT_ARG_TYPE
#define mov_vr_AccExtend() \
	CSTUB_(_TIE_hmd1a_common_tie_mov_vr_AccExtend)()
#else
#define mov_vr_AccExtend() \
	CSTUB_(_TIE_hmd1a_common_tie_mov_vr_AccExtend)()
#endif

#ifdef _STRICT_ARG_TYPE
#define mov_BB_VB67_to_vrVB_VB45() \
	CSTUB_(_TIE_hmd1a_common_tie_mov_BB_VB67_to_vrVB_VB45)()
#else
#define mov_BB_VB67_to_vrVB_VB45() \
	CSTUB_(_TIE_hmd1a_common_tie_mov_BB_VB67_to_vrVB_VB45)()
#endif

#ifdef _STRICT_ARG_TYPE
#define mov_vrVB_VB45_to_BB_VB67(x) \
	CSTUB_(_TIE_hmd1a_common_tie_mov_vrVB_VB45_to_BB_VB67)(x)
#else
#define mov_vrVB_VB45_to_BB_VB67(x) \
	CSTUB_(_TIE_hmd1a_common_tie_mov_vrVB_VB45_to_BB_VB67)(x)
#endif

#ifdef _STRICT_ARG_TYPE
#define precess_16bits(x, y) \
	CSTUB_(_TIE_hmd1a_common_tie_precess_16bits)(x, y)
#else
#define precess_16bits(x, y) \
	CSTUB_(_TIE_hmd1a_common_tie_precess_16bits)(x, y)
#endif

#ifdef _STRICT_ARG_TYPE
#define set_BB_vrVB67_zero() \
	CSTUB_(_TIE_hmd1a_common_tie_set_BB_vrVB67_zero)()
#else
#define set_BB_vrVB67_zero() \
	CSTUB_(_TIE_hmd1a_common_tie_set_BB_vrVB67_zero)()
#endif

#ifdef _STRICT_ARG_TYPE
#define exp_shift_amount(input1, input2) \
	CSTUB_(_TIE_hmd1a_common_tie_exp_shift_amount)(input1, input2)
#else
#define exp_shift_amount(input1, input2) \
	CSTUB_(_TIE_hmd1a_common_tie_exp_shift_amount)(input1, input2)
#endif

#ifdef _STRICT_ARG_TYPE
#define rnd_sat_pack(z, el32, x, y, sgn) \
	CSTUB_(_TIE_hmd1a_common_tie_rnd_sat_pack)(z, el32, x, y, sgn)
#else
#define rnd_sat_pack(z, el32, x, y, sgn) { \
	vr64 __z = z; \
	CSTUB_(_TIE_hmd1a_common_tie_rnd_sat_pack)(__z, el32, x, y, sgn); \
	(z) = __z; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define rectify32_into8(z, x, shift, rnd, el32, half) \
	CSTUB_(_TIE_hmd1a_common_tie_rectify32_into8)(z, x, shift, rnd, el32, half)
#else
#define rectify32_into8(z, x, shift, rnd, el32, half) { \
	vr64 __z = z; \
	CSTUB_(_TIE_hmd1a_common_tie_rectify32_into8)(__z, x, shift, rnd, el32, half); \
	(z) = __z; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define shift8_into32_arith(x, shift, rnd, el32, half) \
	CSTUB_(_TIE_hmd1a_common_tie_shift8_into32_arith)(x, shift, rnd, el32, half)
#else
#define shift8_into32_arith(x, shift, rnd, el32, half) \
	CSTUB_(_TIE_hmd1a_common_tie_shift8_into32_arith)(x, shift, rnd, el32, half)
#endif

#ifdef _STRICT_ARG_TYPE
#define shift32_arith(x, shift, rnd) \
	CSTUB_(_TIE_hmd1a_common_tie_shift32_arith)(x, shift, rnd)
#else
#define shift32_arith(x, shift, rnd) \
	CSTUB_(_TIE_hmd1a_common_tie_shift32_arith)(x, shift, rnd)
#endif

#ifdef _STRICT_ARG_TYPE
#define mac8bx8b(z, x, y, signed_xy) \
	CSTUB_(_TIE_hmd1a_common_tie_mac8bx8b)(z, x, y, signed_xy)
#else
#define mac8bx8b(z, x, y, signed_xy) { \
	vr64 __z = z; \
	CSTUB_(_TIE_hmd1a_common_tie_mac8bx8b)(__z, x, y, signed_xy); \
	(z) = __z; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define mac8bx8b_sparse(z, x, y, signed_xy) \
	CSTUB_(_TIE_hmd1a_common_tie_mac8bx8b_sparse)(z, x, y, signed_xy)
#else
#define mac8bx8b_sparse(z, x, y, signed_xy) { \
	vr64 __z = z; \
	CSTUB_(_TIE_hmd1a_common_tie_mac8bx8b_sparse)(__z, x, y, signed_xy); \
	(z) = __z; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define mac8bx8b_conv(z, x, signed_xy, shift_in) \
	CSTUB_(_TIE_hmd1a_common_tie_mac8bx8b_conv)(z, x, signed_xy, shift_in)
#else
#define mac8bx8b_conv(z, x, signed_xy, shift_in) { \
	vr64 __z = z; \
	CSTUB_(_TIE_hmd1a_common_tie_mac8bx8b_conv)(__z, x, signed_xy, shift_in); \
	(z) = __z; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define mir_init(low) \
	CSTUB_(_TIE_hmd1a_common_tie_mir_init)(low)
#else
#define mir_init(low) \
	CSTUB_(_TIE_hmd1a_common_tie_mir_init)(low)
#endif

#ifdef _STRICT_ARG_TYPE
#define f_abs(z, el_z, x, el_x) \
	CSTUB_(_TIE_hmd1a_common_tie_f_abs)(z, el_z, x, el_x)
#else
#define f_abs(z, el_z, x, el_x) { \
	vr64 __z = z; \
	CSTUB_(_TIE_hmd1a_common_tie_f_abs)(__z, el_z, x, el_x); \
	(z) = __z; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define fclamp(z, el_z, x, el_x, y, el_y) \
	CSTUB_(_TIE_hmd1a_common_tie_fclamp)(z, el_z, x, el_x, y, el_y)
#else
#define fclamp(z, el_z, x, el_x, y, el_y) { \
	vr64 __z = z; \
	CSTUB_(_TIE_hmd1a_common_tie_fclamp)(__z, el_z, x, el_x, y, el_y); \
	(z) = __z; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define fclamp_bp(z, el_z, x, el_x, y, el_y) \
	CSTUB_(_TIE_hmd1a_common_tie_fclamp_bp)(z, el_z, x, el_x, y, el_y)
#else
#define fclamp_bp(z, el_z, x, el_x, y, el_y) { \
	vr64 __z = z; \
	CSTUB_(_TIE_hmd1a_common_tie_fclamp_bp)(__z, el_z, x, el_x, y, el_y); \
	(z) = __z; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define fclamp_one(z, el_z, x, el_x) \
	CSTUB_(_TIE_hmd1a_common_tie_fclamp_one)(z, el_z, x, el_x)
#else
#define fclamp_one(z, el_z, x, el_x) { \
	vr64 __z = z; \
	CSTUB_(_TIE_hmd1a_common_tie_fclamp_one)(__z, el_z, x, el_x); \
	(z) = __z; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define fmax(z, el_z, x, el_x, y, el_y) \
	CSTUB_(_TIE_hmd1a_common_tie_fmax)(z, el_z, x, el_x, y, el_y)
#else
#define fmax(z, el_z, x, el_x, y, el_y) { \
	vr64 __z = z; \
	CSTUB_(_TIE_hmd1a_common_tie_fmax)(__z, el_z, x, el_x, y, el_y); \
	(z) = __z; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define fmin(z, el_z, x, el_x, y, el_y) \
	CSTUB_(_TIE_hmd1a_common_tie_fmin)(z, el_z, x, el_x, y, el_y)
#else
#define fmin(z, el_z, x, el_x, y, el_y) { \
	vr64 __z = z; \
	CSTUB_(_TIE_hmd1a_common_tie_fmin)(__z, el_z, x, el_x, y, el_y); \
	(z) = __z; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define max_fr(fx, fy) \
	CSTUB_(_TIE_hmd1a_common_tie_max_fr)(fx, fy)
#else
#define max_fr(fx, fy) \
	CSTUB_(_TIE_hmd1a_common_tie_max_fr)(fx, fy)
#endif

#ifdef _STRICT_ARG_TYPE
#define min_fr(fx, fy) \
	CSTUB_(_TIE_hmd1a_common_tie_min_fr)(fx, fy)
#else
#define min_fr(fx, fy) \
	CSTUB_(_TIE_hmd1a_common_tie_min_fr)(fx, fy)
#endif

#ifdef _STRICT_ARG_TYPE
#define log2(x) \
	CSTUB_(_TIE_hmd1a_common_tie_log2)(x)
#else
#define log2(x) \
	CSTUB_(_TIE_hmd1a_common_tie_log2)(x)
#endif

#ifdef _STRICT_ARG_TYPE
#define pow2(x) \
	CSTUB_(_TIE_hmd1a_common_tie_pow2)(x)
#else
#define pow2(x) \
	CSTUB_(_TIE_hmd1a_common_tie_pow2)(x)
#endif

#ifdef _STRICT_ARG_TYPE
#define sigmoid(x) \
	CSTUB_(_TIE_hmd1a_common_tie_sigmoid)(x)
#else
#define sigmoid(x) \
	CSTUB_(_TIE_hmd1a_common_tie_sigmoid)(x)
#endif

#ifdef _STRICT_ARG_TYPE
#define inv(x) \
	CSTUB_(_TIE_hmd1a_common_tie_inv)(x)
#else
#define inv(x) \
	CSTUB_(_TIE_hmd1a_common_tie_inv)(x)
#endif

#ifdef _STRICT_ARG_TYPE
#define ratio(z, x, y, bz) \
	CSTUB_(_TIE_hmd1a_common_tie_ratio)(z, x, y, bz)
#else
#define ratio(z, x, y, bz) { \
	fr32 __z; \
	atbool __bz; \
	CSTUB_(_TIE_hmd1a_common_tie_ratio)(__z, x, y, __bz); \
	(z) = __z; \
	(bz) = __bz; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define atanratio(x, bx) \
	CSTUB_(_TIE_hmd1a_common_tie_atanratio)(x, bx)
#else
#define atanratio(x, bx) \
	CSTUB_(_TIE_hmd1a_common_tie_atanratio)(x, bx)
#endif

#ifdef _STRICT_ARG_TYPE
#define invsqrt(x) \
	CSTUB_(_TIE_hmd1a_common_tie_invsqrt)(x)
#else
#define invsqrt(x) \
	CSTUB_(_TIE_hmd1a_common_tie_invsqrt)(x)
#endif

#ifdef _STRICT_ARG_TYPE
#define sine(x) \
	CSTUB_(_TIE_hmd1a_common_tie_sine)(x)
#else
#define sine(x) \
	CSTUB_(_TIE_hmd1a_common_tie_sine)(x)
#endif

#ifdef _STRICT_ARG_TYPE
#define cosine(x) \
	CSTUB_(_TIE_hmd1a_common_tie_cosine)(x)
#else
#define cosine(x) \
	CSTUB_(_TIE_hmd1a_common_tie_cosine)(x)
#endif

#ifdef _STRICT_ARG_TYPE
#define log2mul(z, x, y, bz) \
	CSTUB_(_TIE_hmd1a_common_tie_log2mul)(z, x, y, bz)
#else
#define log2mul(z, x, y, bz) { \
	fr32 __z; \
	atbool __bz; \
	CSTUB_(_TIE_hmd1a_common_tie_log2mul)(__z, x, y, __bz); \
	(z) = __z; \
	(bz) = __bz; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define cspow2(x, bx) \
	CSTUB_(_TIE_hmd1a_common_tie_cspow2)(x, bx)
#else
#define cspow2(x, bx) \
	CSTUB_(_TIE_hmd1a_common_tie_cspow2)(x, bx)
#endif

#ifdef _STRICT_ARG_TYPE
#define comp(x, el_x, y, el_y) \
	CSTUB_(_TIE_hmd1a_common_tie_comp)(x, el_x, y, el_y)
#else
#define comp(x, el_x, y, el_y) \
	CSTUB_(_TIE_hmd1a_common_tie_comp)(x, el_x, y, el_y)
#endif

#ifdef _STRICT_ARG_TYPE
#define eq(x, el_x, y, el_y) \
	CSTUB_(_TIE_hmd1a_common_tie_eq)(x, el_x, y, el_y)
#else
#define eq(x, el_x, y, el_y) \
	CSTUB_(_TIE_hmd1a_common_tie_eq)(x, el_x, y, el_y)
#endif

#ifdef _STRICT_ARG_TYPE
#define ge(x, el_x, y, el_y) \
	CSTUB_(_TIE_hmd1a_common_tie_ge)(x, el_x, y, el_y)
#else
#define ge(x, el_x, y, el_y) \
	CSTUB_(_TIE_hmd1a_common_tie_ge)(x, el_x, y, el_y)
#endif

#ifdef _STRICT_ARG_TYPE
#define gt(x, el_x, y, el_y) \
	CSTUB_(_TIE_hmd1a_common_tie_gt)(x, el_x, y, el_y)
#else
#define gt(x, el_x, y, el_y) \
	CSTUB_(_TIE_hmd1a_common_tie_gt)(x, el_x, y, el_y)
#endif

#ifdef _STRICT_ARG_TYPE
#define le(x, el_x, y, el_y) \
	CSTUB_(_TIE_hmd1a_common_tie_le)(x, el_x, y, el_y)
#else
#define le(x, el_x, y, el_y) \
	CSTUB_(_TIE_hmd1a_common_tie_le)(x, el_x, y, el_y)
#endif

#ifdef _STRICT_ARG_TYPE
#define lt(x, el_x, y, el_y) \
	CSTUB_(_TIE_hmd1a_common_tie_lt)(x, el_x, y, el_y)
#else
#define lt(x, el_x, y, el_y) \
	CSTUB_(_TIE_hmd1a_common_tie_lt)(x, el_x, y, el_y)
#endif

#ifdef _STRICT_ARG_TYPE
#define ne(x, el_x, y, el_y) \
	CSTUB_(_TIE_hmd1a_common_tie_ne)(x, el_x, y, el_y)
#else
#define ne(x, el_x, y, el_y) \
	CSTUB_(_TIE_hmd1a_common_tie_ne)(x, el_x, y, el_y)
#endif

#ifdef _STRICT_ARG_TYPE
#define comp_const(x, el_x, const_idx, exp_adj_const) \
	CSTUB_(_TIE_hmd1a_common_tie_comp_const)(x, el_x, const_idx, exp_adj_const)
#else
#define comp_const(x, el_x, const_idx, exp_adj_const) \
	CSTUB_(_TIE_hmd1a_common_tie_comp_const)(x, el_x, const_idx, exp_adj_const)
#endif

#ifdef _STRICT_ARG_TYPE
#define eq_const(x, el_x, const_idx, exp_adj_const) \
	CSTUB_(_TIE_hmd1a_common_tie_eq_const)(x, el_x, const_idx, exp_adj_const)
#else
#define eq_const(x, el_x, const_idx, exp_adj_const) \
	CSTUB_(_TIE_hmd1a_common_tie_eq_const)(x, el_x, const_idx, exp_adj_const)
#endif

#ifdef _STRICT_ARG_TYPE
#define ge_const(x, el_x, const_idx, exp_adj_const) \
	CSTUB_(_TIE_hmd1a_common_tie_ge_const)(x, el_x, const_idx, exp_adj_const)
#else
#define ge_const(x, el_x, const_idx, exp_adj_const) \
	CSTUB_(_TIE_hmd1a_common_tie_ge_const)(x, el_x, const_idx, exp_adj_const)
#endif

#ifdef _STRICT_ARG_TYPE
#define gt_const(x, el_x, const_idx, exp_adj_const) \
	CSTUB_(_TIE_hmd1a_common_tie_gt_const)(x, el_x, const_idx, exp_adj_const)
#else
#define gt_const(x, el_x, const_idx, exp_adj_const) \
	CSTUB_(_TIE_hmd1a_common_tie_gt_const)(x, el_x, const_idx, exp_adj_const)
#endif

#ifdef _STRICT_ARG_TYPE
#define le_const(x, el_x, const_idx, exp_adj_const) \
	CSTUB_(_TIE_hmd1a_common_tie_le_const)(x, el_x, const_idx, exp_adj_const)
#else
#define le_const(x, el_x, const_idx, exp_adj_const) \
	CSTUB_(_TIE_hmd1a_common_tie_le_const)(x, el_x, const_idx, exp_adj_const)
#endif

#ifdef _STRICT_ARG_TYPE
#define lt_const(x, el_x, const_idx, exp_adj_const) \
	CSTUB_(_TIE_hmd1a_common_tie_lt_const)(x, el_x, const_idx, exp_adj_const)
#else
#define lt_const(x, el_x, const_idx, exp_adj_const) \
	CSTUB_(_TIE_hmd1a_common_tie_lt_const)(x, el_x, const_idx, exp_adj_const)
#endif

#ifdef _STRICT_ARG_TYPE
#define ne_const(x, el_x, const_idx, exp_adj_const) \
	CSTUB_(_TIE_hmd1a_common_tie_ne_const)(x, el_x, const_idx, exp_adj_const)
#else
#define ne_const(x, el_x, const_idx, exp_adj_const) \
	CSTUB_(_TIE_hmd1a_common_tie_ne_const)(x, el_x, const_idx, exp_adj_const)
#endif

#ifdef _STRICT_ARG_TYPE
#define comp_fr(fx, fy) \
	CSTUB_(_TIE_hmd1a_common_tie_comp_fr)(fx, fy)
#else
#define comp_fr(fx, fy) \
	CSTUB_(_TIE_hmd1a_common_tie_comp_fr)(fx, fy)
#endif

#ifdef _STRICT_ARG_TYPE
#define eq_fr(fx, fy) \
	CSTUB_(_TIE_hmd1a_common_tie_eq_fr)(fx, fy)
#else
#define eq_fr(fx, fy) \
	CSTUB_(_TIE_hmd1a_common_tie_eq_fr)(fx, fy)
#endif

#ifdef _STRICT_ARG_TYPE
#define ge_fr(fx, fy) \
	CSTUB_(_TIE_hmd1a_common_tie_ge_fr)(fx, fy)
#else
#define ge_fr(fx, fy) \
	CSTUB_(_TIE_hmd1a_common_tie_ge_fr)(fx, fy)
#endif

#ifdef _STRICT_ARG_TYPE
#define gt_fr(fx, fy) \
	CSTUB_(_TIE_hmd1a_common_tie_gt_fr)(fx, fy)
#else
#define gt_fr(fx, fy) \
	CSTUB_(_TIE_hmd1a_common_tie_gt_fr)(fx, fy)
#endif

#ifdef _STRICT_ARG_TYPE
#define le_fr(fx, fy) \
	CSTUB_(_TIE_hmd1a_common_tie_le_fr)(fx, fy)
#else
#define le_fr(fx, fy) \
	CSTUB_(_TIE_hmd1a_common_tie_le_fr)(fx, fy)
#endif

#ifdef _STRICT_ARG_TYPE
#define lt_fr(fx, fy) \
	CSTUB_(_TIE_hmd1a_common_tie_lt_fr)(fx, fy)
#else
#define lt_fr(fx, fy) \
	CSTUB_(_TIE_hmd1a_common_tie_lt_fr)(fx, fy)
#endif

#ifdef _STRICT_ARG_TYPE
#define ne_fr(fx, fy) \
	CSTUB_(_TIE_hmd1a_common_tie_ne_fr)(fx, fy)
#else
#define ne_fr(fx, fy) \
	CSTUB_(_TIE_hmd1a_common_tie_ne_fr)(fx, fy)
#endif

#ifdef _STRICT_ARG_TYPE
#define neg_fr(fx) \
	CSTUB_(_TIE_hmd1a_common_tie_neg_fr)(fx)
#else
#define neg_fr(fx) \
	CSTUB_(_TIE_hmd1a_common_tie_neg_fr)(fx)
#endif

#ifdef _STRICT_ARG_TYPE
#define abs_fr(fx) \
	CSTUB_(_TIE_hmd1a_common_tie_abs_fr)(fx)
#else
#define abs_fr(fx) \
	CSTUB_(_TIE_hmd1a_common_tie_abs_fr)(fx)
#endif

#ifdef _STRICT_ARG_TYPE
#define deqz(x) \
	CSTUB_(_TIE_hmd1a_common_tie_deqz)(x)
#else
#define deqz(x) \
	CSTUB_(_TIE_hmd1a_common_tie_deqz)(x)
#endif

#ifdef _STRICT_ARG_TYPE
#define dgez(x) \
	CSTUB_(_TIE_hmd1a_common_tie_dgez)(x)
#else
#define dgez(x) \
	CSTUB_(_TIE_hmd1a_common_tie_dgez)(x)
#endif

#ifdef _STRICT_ARG_TYPE
#define dgtz(x) \
	CSTUB_(_TIE_hmd1a_common_tie_dgtz)(x)
#else
#define dgtz(x) \
	CSTUB_(_TIE_hmd1a_common_tie_dgtz)(x)
#endif

#ifdef _STRICT_ARG_TYPE
#define dlez(x) \
	CSTUB_(_TIE_hmd1a_common_tie_dlez)(x)
#else
#define dlez(x) \
	CSTUB_(_TIE_hmd1a_common_tie_dlez)(x)
#endif

#ifdef _STRICT_ARG_TYPE
#define dltz(x) \
	CSTUB_(_TIE_hmd1a_common_tie_dltz)(x)
#else
#define dltz(x) \
	CSTUB_(_TIE_hmd1a_common_tie_dltz)(x)
#endif

#ifdef _STRICT_ARG_TYPE
#define dnez(x) \
	CSTUB_(_TIE_hmd1a_common_tie_dnez)(x)
#else
#define dnez(x) \
	CSTUB_(_TIE_hmd1a_common_tie_dnez)(x)
#endif

#ifdef _STRICT_ARG_TYPE
#define veq(x, y) \
	CSTUB_(_TIE_hmd1a_common_tie_veq)(x, y)
#else
#define veq(x, y) \
	CSTUB_(_TIE_hmd1a_common_tie_veq)(x, y)
#endif

#ifdef _STRICT_ARG_TYPE
#define vge(x, y) \
	CSTUB_(_TIE_hmd1a_common_tie_vge)(x, y)
#else
#define vge(x, y) \
	CSTUB_(_TIE_hmd1a_common_tie_vge)(x, y)
#endif

#ifdef _STRICT_ARG_TYPE
#define vgt(x, y) \
	CSTUB_(_TIE_hmd1a_common_tie_vgt)(x, y)
#else
#define vgt(x, y) \
	CSTUB_(_TIE_hmd1a_common_tie_vgt)(x, y)
#endif

#ifdef _STRICT_ARG_TYPE
#define vle(x, y) \
	CSTUB_(_TIE_hmd1a_common_tie_vle)(x, y)
#else
#define vle(x, y) \
	CSTUB_(_TIE_hmd1a_common_tie_vle)(x, y)
#endif

#ifdef _STRICT_ARG_TYPE
#define vlt(x, y) \
	CSTUB_(_TIE_hmd1a_common_tie_vlt)(x, y)
#else
#define vlt(x, y) \
	CSTUB_(_TIE_hmd1a_common_tie_vlt)(x, y)
#endif

#ifdef _STRICT_ARG_TYPE
#define vne(x, y) \
	CSTUB_(_TIE_hmd1a_common_tie_vne)(x, y)
#else
#define vne(x, y) \
	CSTUB_(_TIE_hmd1a_common_tie_vne)(x, y)
#endif

#ifdef _STRICT_ARG_TYPE
#define veq_const(x, const_idx, exp_adj_const) \
	CSTUB_(_TIE_hmd1a_common_tie_veq_const)(x, const_idx, exp_adj_const)
#else
#define veq_const(x, const_idx, exp_adj_const) \
	CSTUB_(_TIE_hmd1a_common_tie_veq_const)(x, const_idx, exp_adj_const)
#endif

#ifdef _STRICT_ARG_TYPE
#define vge_const(x, const_idx, exp_adj_const) \
	CSTUB_(_TIE_hmd1a_common_tie_vge_const)(x, const_idx, exp_adj_const)
#else
#define vge_const(x, const_idx, exp_adj_const) \
	CSTUB_(_TIE_hmd1a_common_tie_vge_const)(x, const_idx, exp_adj_const)
#endif

#ifdef _STRICT_ARG_TYPE
#define vgt_const(x, const_idx, exp_adj_const) \
	CSTUB_(_TIE_hmd1a_common_tie_vgt_const)(x, const_idx, exp_adj_const)
#else
#define vgt_const(x, const_idx, exp_adj_const) \
	CSTUB_(_TIE_hmd1a_common_tie_vgt_const)(x, const_idx, exp_adj_const)
#endif

#ifdef _STRICT_ARG_TYPE
#define vle_const(x, const_idx, exp_adj_const) \
	CSTUB_(_TIE_hmd1a_common_tie_vle_const)(x, const_idx, exp_adj_const)
#else
#define vle_const(x, const_idx, exp_adj_const) \
	CSTUB_(_TIE_hmd1a_common_tie_vle_const)(x, const_idx, exp_adj_const)
#endif

#ifdef _STRICT_ARG_TYPE
#define vlt_const(x, const_idx, exp_adj_const) \
	CSTUB_(_TIE_hmd1a_common_tie_vlt_const)(x, const_idx, exp_adj_const)
#else
#define vlt_const(x, const_idx, exp_adj_const) \
	CSTUB_(_TIE_hmd1a_common_tie_vlt_const)(x, const_idx, exp_adj_const)
#endif

#ifdef _STRICT_ARG_TYPE
#define vne_const(x, const_idx, exp_adj_const) \
	CSTUB_(_TIE_hmd1a_common_tie_vne_const)(x, const_idx, exp_adj_const)
#else
#define vne_const(x, const_idx, exp_adj_const) \
	CSTUB_(_TIE_hmd1a_common_tie_vne_const)(x, const_idx, exp_adj_const)
#endif

#ifdef _STRICT_ARG_TYPE
#define sel_1b2(fx, fy, bx, el_bx1) \
	CSTUB_(_TIE_hmd1a_common_tie_sel_1b2)(fx, fy, bx, el_bx1)
#else
#define sel_1b2(fx, fy, bx, el_bx1) \
	CSTUB_(_TIE_hmd1a_common_tie_sel_1b2)(fx, fy, bx, el_bx1)
#endif

#ifdef _STRICT_ARG_TYPE
#define sel_eq(fx, fy, bx) \
	CSTUB_(_TIE_hmd1a_common_tie_sel_eq)(fx, fy, bx)
#else
#define sel_eq(fx, fy, bx) \
	CSTUB_(_TIE_hmd1a_common_tie_sel_eq)(fx, fy, bx)
#endif

#ifdef _STRICT_ARG_TYPE
#define sel_ge(fx, fy, bx) \
	CSTUB_(_TIE_hmd1a_common_tie_sel_ge)(fx, fy, bx)
#else
#define sel_ge(fx, fy, bx) \
	CSTUB_(_TIE_hmd1a_common_tie_sel_ge)(fx, fy, bx)
#endif

#ifdef _STRICT_ARG_TYPE
#define sel_gt(fx, fy, bx) \
	CSTUB_(_TIE_hmd1a_common_tie_sel_gt)(fx, fy, bx)
#else
#define sel_gt(fx, fy, bx) \
	CSTUB_(_TIE_hmd1a_common_tie_sel_gt)(fx, fy, bx)
#endif

#ifdef _STRICT_ARG_TYPE
#define sel_le(fx, fy, bx) \
	CSTUB_(_TIE_hmd1a_common_tie_sel_le)(fx, fy, bx)
#else
#define sel_le(fx, fy, bx) \
	CSTUB_(_TIE_hmd1a_common_tie_sel_le)(fx, fy, bx)
#endif

#ifdef _STRICT_ARG_TYPE
#define sel_lt(fx, fy, bx) \
	CSTUB_(_TIE_hmd1a_common_tie_sel_lt)(fx, fy, bx)
#else
#define sel_lt(fx, fy, bx) \
	CSTUB_(_TIE_hmd1a_common_tie_sel_lt)(fx, fy, bx)
#endif

#ifdef _STRICT_ARG_TYPE
#define sel_ne(fx, fy, bx) \
	CSTUB_(_TIE_hmd1a_common_tie_sel_ne)(fx, fy, bx)
#else
#define sel_ne(fx, fy, bx) \
	CSTUB_(_TIE_hmd1a_common_tie_sel_ne)(fx, fy, bx)
#endif

#ifdef _STRICT_ARG_TYPE
#define sel_ar(fx, fy, sel) \
	CSTUB_(_TIE_hmd1a_common_tie_sel_ar)(fx, fy, sel)
#else
#define sel_ar(fx, fy, sel) \
	CSTUB_(_TIE_hmd1a_common_tie_sel_ar)(fx, fy, sel)
#endif

#ifdef _STRICT_ARG_TYPE
#define vsel(x, y, bx) \
	CSTUB_(_TIE_hmd1a_common_tie_vsel)(x, y, bx)
#else
#define vsel(x, y, bx) \
	CSTUB_(_TIE_hmd1a_common_tie_vsel)(x, y, bx)
#endif

#ifdef _STRICT_ARG_TYPE
#define vsel_ar(x, y, sel) \
	CSTUB_(_TIE_hmd1a_common_tie_vsel_ar)(x, y, sel)
#else
#define vsel_ar(x, y, sel) \
	CSTUB_(_TIE_hmd1a_common_tie_vsel_ar)(x, y, sel)
#endif

#ifdef _STRICT_ARG_TYPE
#define andb2(bx, by) \
	CSTUB_(_TIE_hmd1a_common_tie_andb2)(bx, by)
#else
#define andb2(bx, by) \
	CSTUB_(_TIE_hmd1a_common_tie_andb2)(bx, by)
#endif

#ifdef _STRICT_ARG_TYPE
#define andbc2(bx, by) \
	CSTUB_(_TIE_hmd1a_common_tie_andbc2)(bx, by)
#else
#define andbc2(bx, by) \
	CSTUB_(_TIE_hmd1a_common_tie_andbc2)(bx, by)
#endif

#ifdef _STRICT_ARG_TYPE
#define orb2(bx, by) \
	CSTUB_(_TIE_hmd1a_common_tie_orb2)(bx, by)
#else
#define orb2(bx, by) \
	CSTUB_(_TIE_hmd1a_common_tie_orb2)(bx, by)
#endif

#ifdef _STRICT_ARG_TYPE
#define orbc2(bx, by) \
	CSTUB_(_TIE_hmd1a_common_tie_orbc2)(bx, by)
#else
#define orbc2(bx, by) \
	CSTUB_(_TIE_hmd1a_common_tie_orbc2)(bx, by)
#endif

#ifdef _STRICT_ARG_TYPE
#define xorb2(bx, by) \
	CSTUB_(_TIE_hmd1a_common_tie_xorb2)(bx, by)
#else
#define xorb2(bx, by) \
	CSTUB_(_TIE_hmd1a_common_tie_xorb2)(bx, by)
#endif

#ifdef _STRICT_ARG_TYPE
#define bcount0_maskI(bx, imask) \
	CSTUB_(_TIE_hmd1a_common_tie_bcount0_maskI)(bx, imask)
#else
#define bcount0_maskI(bx, imask) \
	CSTUB_(_TIE_hmd1a_common_tie_bcount0_maskI)(bx, imask)
#endif

#ifdef _STRICT_ARG_TYPE
#define bcount0_maskR(bx, by) \
	CSTUB_(_TIE_hmd1a_common_tie_bcount0_maskR)(bx, by)
#else
#define bcount0_maskR(bx, by) \
	CSTUB_(_TIE_hmd1a_common_tie_bcount0_maskR)(bx, by)
#endif

#ifdef _STRICT_ARG_TYPE
#define bcount1_maskI(bx, imask) \
	CSTUB_(_TIE_hmd1a_common_tie_bcount1_maskI)(bx, imask)
#else
#define bcount1_maskI(bx, imask) \
	CSTUB_(_TIE_hmd1a_common_tie_bcount1_maskI)(bx, imask)
#endif

#ifdef _STRICT_ARG_TYPE
#define bcount1_maskR(bx, by) \
	CSTUB_(_TIE_hmd1a_common_tie_bcount1_maskR)(bx, by)
#else
#define bcount1_maskR(bx, by) \
	CSTUB_(_TIE_hmd1a_common_tie_bcount1_maskR)(bx, by)
#endif

#ifdef _STRICT_ARG_TYPE
#define bfirst0_maskI(bx, imask) \
	CSTUB_(_TIE_hmd1a_common_tie_bfirst0_maskI)(bx, imask)
#else
#define bfirst0_maskI(bx, imask) \
	CSTUB_(_TIE_hmd1a_common_tie_bfirst0_maskI)(bx, imask)
#endif

#ifdef _STRICT_ARG_TYPE
#define bfirst0_maskR(bx, by) \
	CSTUB_(_TIE_hmd1a_common_tie_bfirst0_maskR)(bx, by)
#else
#define bfirst0_maskR(bx, by) \
	CSTUB_(_TIE_hmd1a_common_tie_bfirst0_maskR)(bx, by)
#endif

#ifdef _STRICT_ARG_TYPE
#define bfirst1_maskI(bx, imask) \
	CSTUB_(_TIE_hmd1a_common_tie_bfirst1_maskI)(bx, imask)
#else
#define bfirst1_maskI(bx, imask) \
	CSTUB_(_TIE_hmd1a_common_tie_bfirst1_maskI)(bx, imask)
#endif

#ifdef _STRICT_ARG_TYPE
#define bfirst1_maskR(bx, by) \
	CSTUB_(_TIE_hmd1a_common_tie_bfirst1_maskR)(bx, by)
#else
#define bfirst1_maskR(bx, by) \
	CSTUB_(_TIE_hmd1a_common_tie_bfirst1_maskR)(bx, by)
#endif

#ifdef _STRICT_ARG_TYPE
#define blast0_maskI(bx, imask) \
	CSTUB_(_TIE_hmd1a_common_tie_blast0_maskI)(bx, imask)
#else
#define blast0_maskI(bx, imask) \
	CSTUB_(_TIE_hmd1a_common_tie_blast0_maskI)(bx, imask)
#endif

#ifdef _STRICT_ARG_TYPE
#define blast0_maskR(bx, by) \
	CSTUB_(_TIE_hmd1a_common_tie_blast0_maskR)(bx, by)
#else
#define blast0_maskR(bx, by) \
	CSTUB_(_TIE_hmd1a_common_tie_blast0_maskR)(bx, by)
#endif

#ifdef _STRICT_ARG_TYPE
#define blast1_maskI(bx, imask) \
	CSTUB_(_TIE_hmd1a_common_tie_blast1_maskI)(bx, imask)
#else
#define blast1_maskI(bx, imask) \
	CSTUB_(_TIE_hmd1a_common_tie_blast1_maskI)(bx, imask)
#endif

#ifdef _STRICT_ARG_TYPE
#define blast1_maskR(bx, by) \
	CSTUB_(_TIE_hmd1a_common_tie_blast1_maskR)(bx, by)
#else
#define blast1_maskR(bx, by) \
	CSTUB_(_TIE_hmd1a_common_tie_blast1_maskR)(bx, by)
#endif

#ifdef _STRICT_ARG_TYPE
#define bgetI(bx, ipos) \
	CSTUB_(_TIE_hmd1a_common_tie_bgetI)(bx, ipos)
#else
#define bgetI(bx, ipos) \
	CSTUB_(_TIE_hmd1a_common_tie_bgetI)(bx, ipos)
#endif

#ifdef _STRICT_ARG_TYPE
#define bgetR(bx, rpos) \
	CSTUB_(_TIE_hmd1a_common_tie_bgetR)(bx, rpos)
#else
#define bgetR(bx, rpos) \
	CSTUB_(_TIE_hmd1a_common_tie_bgetR)(bx, rpos)
#endif

#ifdef _STRICT_ARG_TYPE
#define bsetI(bx, rpos, ibit) \
	CSTUB_(_TIE_hmd1a_common_tie_bsetI)(bx, rpos, ibit)
#else
#define bsetI(bx, rpos, ibit) \
	CSTUB_(_TIE_hmd1a_common_tie_bsetI)(bx, rpos, ibit)
#endif

#ifdef _STRICT_ARG_TYPE
#define bsetR(bx, rpos, by) \
	CSTUB_(_TIE_hmd1a_common_tie_bsetR)(bx, rpos, by)
#else
#define bsetR(bx, rpos, by) \
	CSTUB_(_TIE_hmd1a_common_tie_bsetR)(bx, rpos, by)
#endif

#ifdef _STRICT_ARG_TYPE
#define exp_adj(z, el_z, x, el_x, exp_adj_ar) \
	CSTUB_(_TIE_hmd1a_common_tie_exp_adj)(z, el_z, x, el_x, exp_adj_ar)
#else
#define exp_adj(z, el_z, x, el_x, exp_adj_ar) { \
	vr64 __z = z; \
	CSTUB_(_TIE_hmd1a_common_tie_exp_adj)(__z, el_z, x, el_x, exp_adj_ar); \
	(z) = __z; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define exp_adji(z, el_z, x, el_x, exp_adj_imm) \
	CSTUB_(_TIE_hmd1a_common_tie_exp_adji)(z, el_z, x, el_x, exp_adj_imm)
#else
#define exp_adji(z, el_z, x, el_x, exp_adj_imm) { \
	vr64 __z = z; \
	CSTUB_(_TIE_hmd1a_common_tie_exp_adji)(__z, el_z, x, el_x, exp_adj_imm); \
	(z) = __z; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define exp_adj_fr(fx, exp_adj_ar) \
	CSTUB_(_TIE_hmd1a_common_tie_exp_adj_fr)(fx, exp_adj_ar)
#else
#define exp_adj_fr(fx, exp_adj_ar) \
	CSTUB_(_TIE_hmd1a_common_tie_exp_adj_fr)(fx, exp_adj_ar)
#endif

#ifdef _STRICT_ARG_TYPE
#define exp_adji_fr(fx, exp_adj_imm) \
	CSTUB_(_TIE_hmd1a_common_tie_exp_adji_fr)(fx, exp_adj_imm)
#else
#define exp_adji_fr(fx, exp_adj_imm) \
	CSTUB_(_TIE_hmd1a_common_tie_exp_adji_fr)(fx, exp_adj_imm)
#endif

#ifdef _STRICT_ARG_TYPE
#define s_neg(fx) \
	CSTUB_(_TIE_hmd1a_common_tie_s_neg)(fx)
#else
#define s_neg(fx) \
	CSTUB_(_TIE_hmd1a_common_tie_s_neg)(fx)
#endif

#ifdef _STRICT_ARG_TYPE
#define s_copy(fx, fy) \
	CSTUB_(_TIE_hmd1a_common_tie_s_copy)(fx, fy)
#else
#define s_copy(fx, fy) \
	CSTUB_(_TIE_hmd1a_common_tie_s_copy)(fx, fy)
#endif

#ifdef _STRICT_ARG_TYPE
#define s_and(fx, fy) \
	CSTUB_(_TIE_hmd1a_common_tie_s_and)(fx, fy)
#else
#define s_and(fx, fy) \
	CSTUB_(_TIE_hmd1a_common_tie_s_and)(fx, fy)
#endif

#ifdef _STRICT_ARG_TYPE
#define s_andc(fx, fy) \
	CSTUB_(_TIE_hmd1a_common_tie_s_andc)(fx, fy)
#else
#define s_andc(fx, fy) \
	CSTUB_(_TIE_hmd1a_common_tie_s_andc)(fx, fy)
#endif

#ifdef _STRICT_ARG_TYPE
#define s_or(fx, fy) \
	CSTUB_(_TIE_hmd1a_common_tie_s_or)(fx, fy)
#else
#define s_or(fx, fy) \
	CSTUB_(_TIE_hmd1a_common_tie_s_or)(fx, fy)
#endif

#ifdef _STRICT_ARG_TYPE
#define s_orc(fx, fy) \
	CSTUB_(_TIE_hmd1a_common_tie_s_orc)(fx, fy)
#else
#define s_orc(fx, fy) \
	CSTUB_(_TIE_hmd1a_common_tie_s_orc)(fx, fy)
#endif

#ifdef _STRICT_ARG_TYPE
#define s_xor(fx, fy) \
	CSTUB_(_TIE_hmd1a_common_tie_s_xor)(fx, fy)
#else
#define s_xor(fx, fy) \
	CSTUB_(_TIE_hmd1a_common_tie_s_xor)(fx, fy)
#endif

#ifdef _STRICT_ARG_TYPE
#define s_vneg(x) \
	CSTUB_(_TIE_hmd1a_common_tie_s_vneg)(x)
#else
#define s_vneg(x) \
	CSTUB_(_TIE_hmd1a_common_tie_s_vneg)(x)
#endif

#ifdef _STRICT_ARG_TYPE
#define s_vcopy(x, y) \
	CSTUB_(_TIE_hmd1a_common_tie_s_vcopy)(x, y)
#else
#define s_vcopy(x, y) \
	CSTUB_(_TIE_hmd1a_common_tie_s_vcopy)(x, y)
#endif

#ifdef _STRICT_ARG_TYPE
#define s_vand(x, y) \
	CSTUB_(_TIE_hmd1a_common_tie_s_vand)(x, y)
#else
#define s_vand(x, y) \
	CSTUB_(_TIE_hmd1a_common_tie_s_vand)(x, y)
#endif

#ifdef _STRICT_ARG_TYPE
#define s_vandc(x, y) \
	CSTUB_(_TIE_hmd1a_common_tie_s_vandc)(x, y)
#else
#define s_vandc(x, y) \
	CSTUB_(_TIE_hmd1a_common_tie_s_vandc)(x, y)
#endif

#ifdef _STRICT_ARG_TYPE
#define s_vor(x, y) \
	CSTUB_(_TIE_hmd1a_common_tie_s_vor)(x, y)
#else
#define s_vor(x, y) \
	CSTUB_(_TIE_hmd1a_common_tie_s_vor)(x, y)
#endif

#ifdef _STRICT_ARG_TYPE
#define s_vorc(x, y) \
	CSTUB_(_TIE_hmd1a_common_tie_s_vorc)(x, y)
#else
#define s_vorc(x, y) \
	CSTUB_(_TIE_hmd1a_common_tie_s_vorc)(x, y)
#endif

#ifdef _STRICT_ARG_TYPE
#define s_vxor(x, y) \
	CSTUB_(_TIE_hmd1a_common_tie_s_vxor)(x, y)
#else
#define s_vxor(x, y) \
	CSTUB_(_TIE_hmd1a_common_tie_s_vxor)(x, y)
#endif

#ifdef _STRICT_ARG_TYPE
#define floorp_frac(floor, z, el_z, x, el_x, nbits) \
	CSTUB_(_TIE_hmd1a_common_tie_floorp_frac)(floor, z, el_z, x, el_x, nbits)
#else
#define floorp_frac(floor, z, el_z, x, el_x, nbits) { \
	unsigned int __floor; \
	vr64 __z = z; \
	CSTUB_(_TIE_hmd1a_common_tie_floorp_frac)(__floor, __z, el_z, x, el_x, nbits); \
	(floor) = __floor; \
	(z) = __z; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define idx_frac(floor, z, el_z, input, nbits) \
	CSTUB_(_TIE_hmd1a_common_tie_idx_frac)(floor, z, el_z, input, nbits)
#else
#define idx_frac(floor, z, el_z, input, nbits) { \
	unsigned int __floor; \
	vr64 __z = z; \
	CSTUB_(_TIE_hmd1a_common_tie_idx_frac)(__floor, __z, el_z, input, nbits); \
	(floor) = __floor; \
	(z) = __z; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define truncate_fr(x) \
	CSTUB_(_TIE_hmd1a_common_tie_truncate_fr)(x)
#else
#define truncate_fr(x) \
	CSTUB_(_TIE_hmd1a_common_tie_truncate_fr)(x)
#endif

#ifdef _STRICT_ARG_TYPE
#define rmax_idx(a, fz, x, idx) \
	CSTUB_(_TIE_hmd1a_common_tie_rmax_idx)(a, fz, x, idx)
#else
#define rmax_idx(a, fz, x, idx) { \
	unsigned int __a; \
	fr32 __fz; \
	CSTUB_(_TIE_hmd1a_common_tie_rmax_idx)(__a, __fz, x, idx); \
	(a) = __a; \
	(fz) = __fz; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define rmin_idx(a, fz, x, idx) \
	CSTUB_(_TIE_hmd1a_common_tie_rmin_idx)(a, fz, x, idx)
#else
#define rmin_idx(a, fz, x, idx) { \
	unsigned int __a; \
	fr32 __fz; \
	CSTUB_(_TIE_hmd1a_common_tie_rmin_idx)(__a, __fz, x, idx); \
	(a) = __a; \
	(fz) = __fz; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define vmaxmin_init(z, x, idx) \
	CSTUB_(_TIE_hmd1a_common_tie_vmaxmin_init)(z, x, idx)
#else
#define vmaxmin_init(z, x, idx) { \
	vr64 __z; \
	mir18 __idx; \
	CSTUB_(_TIE_hmd1a_common_tie_vmaxmin_init)(__z, x, __idx); \
	(z) = __z; \
	(idx) = __idx; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define vmax_idx(z, x, idx) \
	CSTUB_(_TIE_hmd1a_common_tie_vmax_idx)(z, x, idx)
#else
#define vmax_idx(z, x, idx) { \
	vr64 __z = z; \
	mir18 __idx = idx; \
	CSTUB_(_TIE_hmd1a_common_tie_vmax_idx)(__z, x, __idx); \
	(z) = __z; \
	(idx) = __idx; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define vmin_idx(z, x, idx) \
	CSTUB_(_TIE_hmd1a_common_tie_vmin_idx)(z, x, idx)
#else
#define vmin_idx(z, x, idx) { \
	vr64 __z = z; \
	mir18 __idx = idx; \
	CSTUB_(_TIE_hmd1a_common_tie_vmin_idx)(__z, x, __idx); \
	(z) = __z; \
	(idx) = __idx; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define vmax(x, y) \
	CSTUB_(_TIE_hmd1a_common_tie_vmax)(x, y)
#else
#define vmax(x, y) \
	CSTUB_(_TIE_hmd1a_common_tie_vmax)(x, y)
#endif

#ifdef _STRICT_ARG_TYPE
#define vmin(x, y) \
	CSTUB_(_TIE_hmd1a_common_tie_vmin)(x, y)
#else
#define vmin(x, y) \
	CSTUB_(_TIE_hmd1a_common_tie_vmin)(x, y)
#endif

#ifdef _STRICT_ARG_TYPE
#define sortupd_asc_vr(a, z, x, y, el_y) \
	CSTUB_(_TIE_hmd1a_common_tie_sortupd_asc_vr)(a, z, x, y, el_y)
#else
#define sortupd_asc_vr(a, z, x, y, el_y) { \
	unsigned int __a; \
	vr64 __z; \
	CSTUB_(_TIE_hmd1a_common_tie_sortupd_asc_vr)(__a, __z, x, y, el_y); \
	(a) = __a; \
	(z) = __z; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define sortupd_des_vr(a, z, x, y, el_y) \
	CSTUB_(_TIE_hmd1a_common_tie_sortupd_des_vr)(a, z, x, y, el_y)
#else
#define sortupd_des_vr(a, z, x, y, el_y) { \
	unsigned int __a; \
	vr64 __z; \
	CSTUB_(_TIE_hmd1a_common_tie_sortupd_des_vr)(__a, __z, x, y, el_y); \
	(a) = __a; \
	(z) = __z; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define sortupd_asc_ar(a, z, x) \
	CSTUB_(_TIE_hmd1a_common_tie_sortupd_asc_ar)(a, z, x)
#else
#define sortupd_asc_ar(a, z, x) { \
	unsigned int __a = a; \
	vr64 __z; \
	CSTUB_(_TIE_hmd1a_common_tie_sortupd_asc_ar)(__a, __z, x); \
	(a) = __a; \
	(z) = __z; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define sortupd_des_ar(a, z, x) \
	CSTUB_(_TIE_hmd1a_common_tie_sortupd_des_ar)(a, z, x)
#else
#define sortupd_des_ar(a, z, x) { \
	unsigned int __a = a; \
	vr64 __z; \
	CSTUB_(_TIE_hmd1a_common_tie_sortupd_des_ar)(__a, __z, x); \
	(a) = __a; \
	(z) = __z; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define vbool(x, y, op) \
	CSTUB_(_TIE_hmd1a_common_tie_vbool)(x, y, op)
#else
#define vbool(x, y, op) \
	CSTUB_(_TIE_hmd1a_common_tie_vbool)(x, y, op)
#endif

#ifdef _STRICT_ARG_TYPE
#define align_up(val, option) \
	CSTUB_(_TIE_hmd1a_common_tie_align_up)((unsigned)(val), option)
#else
#define align_up(val, option) \
	CSTUB_(_TIE_hmd1a_common_tie_align_up)((unsigned)(val), option)
#endif

#ifdef _STRICT_ARG_TYPE
#define mv_MIR(b) \
	CSTUB_(_TIE_hmd1a_common_tie_mv_MIR)(b)
#else
#define mv_MIR(b) \
	CSTUB_(_TIE_hmd1a_common_tie_mv_MIR)(b)
#endif

#ifdef _STRICT_ARG_TYPE
#define mv_ULSR(b) \
	CSTUB_(_TIE_hmd1a_common_tie_mv_ULSR)(b)
#else
#define mv_ULSR(b) \
	CSTUB_(_TIE_hmd1a_common_tie_mv_ULSR)(b)
#endif

#ifdef _STRICT_ARG_TYPE
#define mv_CR(b) \
	CSTUB_(_TIE_hmd1a_common_tie_mv_CR)(b)
#else
#define mv_CR(b) \
	CSTUB_(_TIE_hmd1a_common_tie_mv_CR)(b)
#endif

#ifdef _STRICT_ARG_TYPE
#define ld_FR(addr, fimm) \
	CSTUB_(_TIE_hmd1a_common_tie_ld_FR)(addr, fimm)
#else
#define ld_FR(addr, fimm) \
	CSTUB_(_TIE_hmd1a_common_tie_ld_FR)(addr, fimm)
#endif

#ifdef _STRICT_ARG_TYPE
#define st_FR(fregin, addr, fimm) \
	CSTUB_(_TIE_hmd1a_common_tie_st_FR)(fregin, addr, fimm)
#else
#define st_FR(fregin, addr, fimm) \
	CSTUB_(_TIE_hmd1a_common_tie_st_FR)(fregin, addr, fimm)
#endif

#ifdef _STRICT_ARG_TYPE
#define ld_FR_idxR(addr, x) \
	CSTUB_(_TIE_hmd1a_common_tie_ld_FR_idxR)(addr, x)
#else
#define ld_FR_idxR(addr, x) \
	CSTUB_(_TIE_hmd1a_common_tie_ld_FR_idxR)(addr, x)
#endif

#ifdef _STRICT_ARG_TYPE
#define st_FR_idxR(fregin, addr, x) \
	CSTUB_(_TIE_hmd1a_common_tie_st_FR_idxR)(fregin, addr, x)
#else
#define st_FR_idxR(fregin, addr, x) \
	CSTUB_(_TIE_hmd1a_common_tie_st_FR_idxR)(fregin, addr, x)
#endif

#ifdef _STRICT_ARG_TYPE
#define ld_FR_postI(fregout, addr, fimm) \
	CSTUB_(_TIE_hmd1a_common_tie_ld_FR_postI)(fregout, (const fr32 **)&(addr), fimm)
#else
#define ld_FR_postI(fregout, addr, fimm) { \
	fr32 __fregout; \
	CSTUB_(_TIE_hmd1a_common_tie_ld_FR_postI)(__fregout, (const fr32 **)&(addr), fimm); \
	(fregout) = __fregout; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define st_FR_postI(fregin, addr, fimm) \
	CSTUB_(_TIE_hmd1a_common_tie_st_FR_postI)(fregin, (fr32 **)&(addr), fimm)
#else
#define st_FR_postI(fregin, addr, fimm) \
	CSTUB_(_TIE_hmd1a_common_tie_st_FR_postI)(fregin, (fr32 **)&(addr), fimm)
#endif

#ifdef _STRICT_ARG_TYPE
#define ld_FR_postR(fregout, addr, x) \
	CSTUB_(_TIE_hmd1a_common_tie_ld_FR_postR)(fregout, (const fr32 **)&(addr), x)
#else
#define ld_FR_postR(fregout, addr, x) { \
	fr32 __fregout; \
	CSTUB_(_TIE_hmd1a_common_tie_ld_FR_postR)(__fregout, (const fr32 **)&(addr), x); \
	(fregout) = __fregout; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define st_FR_postR(fregin, addr, x) \
	CSTUB_(_TIE_hmd1a_common_tie_st_FR_postR)(fregin, (fr32 **)&(addr), x)
#else
#define st_FR_postR(fregin, addr, x) \
	CSTUB_(_TIE_hmd1a_common_tie_st_FR_postR)(fregin, (fr32 **)&(addr), x)
#endif

#ifdef _STRICT_ARG_TYPE
#define ld_VR(addr, vimm) \
	CSTUB_(_TIE_hmd1a_common_tie_ld_VR)(addr, vimm)
#else
#define ld_VR(addr, vimm) \
	CSTUB_(_TIE_hmd1a_common_tie_ld_VR)(addr, vimm)
#endif

#ifdef _STRICT_ARG_TYPE
#define st_VR(vregin, addr, vimm) \
	CSTUB_(_TIE_hmd1a_common_tie_st_VR)(vregin, addr, vimm)
#else
#define st_VR(vregin, addr, vimm) \
	CSTUB_(_TIE_hmd1a_common_tie_st_VR)(vregin, addr, vimm)
#endif

#ifdef _STRICT_ARG_TYPE
#define ld_VR_idxR(addr, x) \
	CSTUB_(_TIE_hmd1a_common_tie_ld_VR_idxR)(addr, x)
#else
#define ld_VR_idxR(addr, x) \
	CSTUB_(_TIE_hmd1a_common_tie_ld_VR_idxR)(addr, x)
#endif

#ifdef _STRICT_ARG_TYPE
#define st_VR_idxR(vregin, addr, x) \
	CSTUB_(_TIE_hmd1a_common_tie_st_VR_idxR)(vregin, addr, x)
#else
#define st_VR_idxR(vregin, addr, x) \
	CSTUB_(_TIE_hmd1a_common_tie_st_VR_idxR)(vregin, addr, x)
#endif

#ifdef _STRICT_ARG_TYPE
#define ld_VR_postI(vregout, addr, vimm) \
	CSTUB_(_TIE_hmd1a_common_tie_ld_VR_postI)(vregout, (const vr64 **)&(addr), vimm)
#else
#define ld_VR_postI(vregout, addr, vimm) { \
	vr64 __vregout; \
	CSTUB_(_TIE_hmd1a_common_tie_ld_VR_postI)(__vregout, (const vr64 **)&(addr), vimm); \
	(vregout) = __vregout; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define st_VR_postI(vregin, addr, vimm) \
	CSTUB_(_TIE_hmd1a_common_tie_st_VR_postI)(vregin, (vr64 **)&(addr), vimm)
#else
#define st_VR_postI(vregin, addr, vimm) \
	CSTUB_(_TIE_hmd1a_common_tie_st_VR_postI)(vregin, (vr64 **)&(addr), vimm)
#endif

#ifdef _STRICT_ARG_TYPE
#define ld_VR_postR(vregout, addr, x) \
	CSTUB_(_TIE_hmd1a_common_tie_ld_VR_postR)(vregout, (const vr64 **)&(addr), x)
#else
#define ld_VR_postR(vregout, addr, x) { \
	vr64 __vregout; \
	CSTUB_(_TIE_hmd1a_common_tie_ld_VR_postR)(__vregout, (const vr64 **)&(addr), x); \
	(vregout) = __vregout; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define st_VR_postR(vregin, addr, x) \
	CSTUB_(_TIE_hmd1a_common_tie_st_VR_postR)(vregin, (vr64 **)&(addr), x)
#else
#define st_VR_postR(vregin, addr, x) \
	CSTUB_(_TIE_hmd1a_common_tie_st_VR_postR)(vregin, (vr64 **)&(addr), x)
#endif

#ifdef _STRICT_ARG_TYPE
#define mv_FR(b) \
	CSTUB_(_TIE_hmd1a_common_tie_mv_FR)(b)
#else
#define mv_FR(b) \
	CSTUB_(_TIE_hmd1a_common_tie_mv_FR)(b)
#endif

#ifdef _STRICT_ARG_TYPE
#define move_ar_fr(b) \
	CSTUB_(_TIE_hmd1a_common_tie_move_ar_fr)(b)
#else
#define move_ar_fr(b) \
	CSTUB_(_TIE_hmd1a_common_tie_move_ar_fr)(b)
#endif

#ifdef _STRICT_ARG_TYPE
#define move_fr_ar(b) \
	CSTUB_(_TIE_hmd1a_common_tie_move_fr_ar)(b)
#else
#define move_fr_ar(b) \
	CSTUB_(_TIE_hmd1a_common_tie_move_fr_ar)(b)
#endif

#ifdef _STRICT_ARG_TYPE
#define mv_VR(b) \
	CSTUB_(_TIE_hmd1a_common_tie_mv_VR)(b)
#else
#define mv_VR(b) \
	CSTUB_(_TIE_hmd1a_common_tie_mv_VR)(b)
#endif

#ifdef _STRICT_ARG_TYPE
#define move_ar_bbr(b) \
	CSTUB_(_TIE_hmd1a_common_tie_move_ar_bbr)(b)
#else
#define move_ar_bbr(b) \
	CSTUB_(_TIE_hmd1a_common_tie_move_ar_bbr)(b)
#endif

#ifdef _STRICT_ARG_TYPE
#define move_bbr_ar(a) \
	CSTUB_(_TIE_hmd1a_common_tie_move_bbr_ar)(a)
#else
#define move_bbr_ar(a) \
	CSTUB_(_TIE_hmd1a_common_tie_move_bbr_ar)(a)
#endif

#ifdef _STRICT_ARG_TYPE
#define shift_from_bbr(a, x) \
	CSTUB_(_TIE_hmd1a_common_tie_shift_from_bbr)(a, x)
#else
#define shift_from_bbr(a, x) { \
	unsigned int __a = a; \
	CSTUB_(_TIE_hmd1a_common_tie_shift_from_bbr)(__a, x); \
	(a) = __a; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define shift_to_bbr(a, z) \
	CSTUB_(_TIE_hmd1a_common_tie_shift_to_bbr)(a, z)
#else
#define shift_to_bbr(a, z) { \
	unsigned int __a = a; \
	atbool __z; \
	CSTUB_(_TIE_hmd1a_common_tie_shift_to_bbr)(__a, __z); \
	(a) = __a; \
	(z) = __z; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define ld_ar_x2(a1_out, a0_out, ptr, idx) \
	CSTUB_(_TIE_hmd1a_common_tie_ld_ar_x2)(a1_out, a0_out, ptr, idx)
#else
#define ld_ar_x2(a1_out, a0_out, ptr, idx) { \
	unsigned int __a1_out; \
	unsigned int __a0_out; \
	CSTUB_(_TIE_hmd1a_common_tie_ld_ar_x2)(__a1_out, __a0_out, ptr, idx); \
	(a1_out) = __a1_out; \
	(a0_out) = __a0_out; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define st_ar_x2(ptr, idx, a1_in, a0_in) \
	CSTUB_(_TIE_hmd1a_common_tie_st_ar_x2)(ptr, idx, a1_in, a0_in)
#else
#define st_ar_x2(ptr, idx, a1_in, a0_in) \
	CSTUB_(_TIE_hmd1a_common_tie_st_ar_x2)(ptr, idx, a1_in, a0_in)
#endif

#ifdef _STRICT_ARG_TYPE
#define atbool_storei(a, b, c) \
	CSTUB_(_TIE_hmd1a_common_tie_atbool_storei)(a, b, c)
#else
#define atbool_storei(a, b, c) \
	CSTUB_(_TIE_hmd1a_common_tie_atbool_storei)(a, b, c)
#endif

#ifdef _STRICT_ARG_TYPE
#define atbool_loadi(b, c) \
	CSTUB_(_TIE_hmd1a_common_tie_atbool_loadi)(b, c)
#else
#define atbool_loadi(b, c) \
	CSTUB_(_TIE_hmd1a_common_tie_atbool_loadi)(b, c)
#endif

#ifdef _STRICT_ARG_TYPE
#define atbool_move(b) \
	CSTUB_(_TIE_hmd1a_common_tie_atbool_move)(b)
#else
#define atbool_move(b) \
	CSTUB_(_TIE_hmd1a_common_tie_atbool_move)(b)
#endif

#ifdef _STRICT_ARG_TYPE
#define ulsr32_storei(a, b, c) \
	CSTUB_(_TIE_hmd1a_common_tie_ulsr32_storei)(a, b, c)
#else
#define ulsr32_storei(a, b, c) \
	CSTUB_(_TIE_hmd1a_common_tie_ulsr32_storei)(a, b, c)
#endif

#ifdef _STRICT_ARG_TYPE
#define ulsr32_loadi(b, c) \
	CSTUB_(_TIE_hmd1a_common_tie_ulsr32_loadi)(b, c)
#else
#define ulsr32_loadi(b, c) \
	CSTUB_(_TIE_hmd1a_common_tie_ulsr32_loadi)(b, c)
#endif

#ifdef _STRICT_ARG_TYPE
#define mir18_storei(a, b, c) \
	CSTUB_(_TIE_hmd1a_common_tie_mir18_storei)(a, b, c)
#else
#define mir18_storei(a, b, c) \
	CSTUB_(_TIE_hmd1a_common_tie_mir18_storei)(a, b, c)
#endif

#ifdef _STRICT_ARG_TYPE
#define mir18_loadi(b, c) \
	CSTUB_(_TIE_hmd1a_common_tie_mir18_loadi)(b, c)
#else
#define mir18_loadi(b, c) \
	CSTUB_(_TIE_hmd1a_common_tie_mir18_loadi)(b, c)
#endif

#ifdef _STRICT_ARG_TYPE
#define cr64_storei(a, b, c) \
	CSTUB_(_TIE_hmd1a_common_tie_cr64_storei)(a, b, c)
#else
#define cr64_storei(a, b, c) \
	CSTUB_(_TIE_hmd1a_common_tie_cr64_storei)(a, b, c)
#endif

#ifdef _STRICT_ARG_TYPE
#define cr64_loadi(b, c) \
	CSTUB_(_TIE_hmd1a_common_tie_cr64_loadi)(b, c)
#else
#define cr64_loadi(b, c) \
	CSTUB_(_TIE_hmd1a_common_tie_cr64_loadi)(b, c)
#endif

#ifdef _STRICT_ARG_TYPE
#define RUR_JammingBit() \
	CSTUB_(_TIE_hmd1a_common_tie_RUR_JammingBit)()
#else
#define RUR_JammingBit() \
	CSTUB_(_TIE_hmd1a_common_tie_RUR_JammingBit)()
#endif

#ifdef _STRICT_ARG_TYPE
#define WUR_JammingBit(v) \
	CSTUB_(_TIE_hmd1a_common_tie_WUR_JammingBit)(v)
#else
#define WUR_JammingBit(v) \
	CSTUB_(_TIE_hmd1a_common_tie_WUR_JammingBit)(v)
#endif

#ifdef _STRICT_ARG_TYPE
#define RUR_AccExtend_0() \
	CSTUB_(_TIE_hmd1a_common_tie_RUR_AccExtend_0)()
#else
#define RUR_AccExtend_0() \
	CSTUB_(_TIE_hmd1a_common_tie_RUR_AccExtend_0)()
#endif

#ifdef _STRICT_ARG_TYPE
#define WUR_AccExtend_0(v) \
	CSTUB_(_TIE_hmd1a_common_tie_WUR_AccExtend_0)(v)
#else
#define WUR_AccExtend_0(v) \
	CSTUB_(_TIE_hmd1a_common_tie_WUR_AccExtend_0)(v)
#endif

#ifdef _STRICT_ARG_TYPE
#define RUR_AccExtend_1() \
	CSTUB_(_TIE_hmd1a_common_tie_RUR_AccExtend_1)()
#else
#define RUR_AccExtend_1() \
	CSTUB_(_TIE_hmd1a_common_tie_RUR_AccExtend_1)()
#endif

#ifdef _STRICT_ARG_TYPE
#define WUR_AccExtend_1(v) \
	CSTUB_(_TIE_hmd1a_common_tie_WUR_AccExtend_1)(v)
#else
#define WUR_AccExtend_1(v) \
	CSTUB_(_TIE_hmd1a_common_tie_WUR_AccExtend_1)(v)
#endif

#ifdef _STRICT_ARG_TYPE
#define RUR_BB0_0() \
	CSTUB_(_TIE_hmd1a_common_tie_RUR_BB0_0)()
#else
#define RUR_BB0_0() \
	CSTUB_(_TIE_hmd1a_common_tie_RUR_BB0_0)()
#endif

#ifdef _STRICT_ARG_TYPE
#define WUR_BB0_0(v) \
	CSTUB_(_TIE_hmd1a_common_tie_WUR_BB0_0)(v)
#else
#define WUR_BB0_0(v) \
	CSTUB_(_TIE_hmd1a_common_tie_WUR_BB0_0)(v)
#endif

#ifdef _STRICT_ARG_TYPE
#define RUR_BB0_1() \
	CSTUB_(_TIE_hmd1a_common_tie_RUR_BB0_1)()
#else
#define RUR_BB0_1() \
	CSTUB_(_TIE_hmd1a_common_tie_RUR_BB0_1)()
#endif

#ifdef _STRICT_ARG_TYPE
#define WUR_BB0_1(v) \
	CSTUB_(_TIE_hmd1a_common_tie_WUR_BB0_1)(v)
#else
#define WUR_BB0_1(v) \
	CSTUB_(_TIE_hmd1a_common_tie_WUR_BB0_1)(v)
#endif

#ifdef _STRICT_ARG_TYPE
#define RUR_BB1_0() \
	CSTUB_(_TIE_hmd1a_common_tie_RUR_BB1_0)()
#else
#define RUR_BB1_0() \
	CSTUB_(_TIE_hmd1a_common_tie_RUR_BB1_0)()
#endif

#ifdef _STRICT_ARG_TYPE
#define WUR_BB1_0(v) \
	CSTUB_(_TIE_hmd1a_common_tie_WUR_BB1_0)(v)
#else
#define WUR_BB1_0(v) \
	CSTUB_(_TIE_hmd1a_common_tie_WUR_BB1_0)(v)
#endif

#ifdef _STRICT_ARG_TYPE
#define RUR_BB1_1() \
	CSTUB_(_TIE_hmd1a_common_tie_RUR_BB1_1)()
#else
#define RUR_BB1_1() \
	CSTUB_(_TIE_hmd1a_common_tie_RUR_BB1_1)()
#endif

#ifdef _STRICT_ARG_TYPE
#define WUR_BB1_1(v) \
	CSTUB_(_TIE_hmd1a_common_tie_WUR_BB1_1)(v)
#else
#define WUR_BB1_1(v) \
	CSTUB_(_TIE_hmd1a_common_tie_WUR_BB1_1)(v)
#endif

#ifdef _STRICT_ARG_TYPE
#define RUR_BB2_0() \
	CSTUB_(_TIE_hmd1a_common_tie_RUR_BB2_0)()
#else
#define RUR_BB2_0() \
	CSTUB_(_TIE_hmd1a_common_tie_RUR_BB2_0)()
#endif

#ifdef _STRICT_ARG_TYPE
#define WUR_BB2_0(v) \
	CSTUB_(_TIE_hmd1a_common_tie_WUR_BB2_0)(v)
#else
#define WUR_BB2_0(v) \
	CSTUB_(_TIE_hmd1a_common_tie_WUR_BB2_0)(v)
#endif

#ifdef _STRICT_ARG_TYPE
#define RUR_BB2_1() \
	CSTUB_(_TIE_hmd1a_common_tie_RUR_BB2_1)()
#else
#define RUR_BB2_1() \
	CSTUB_(_TIE_hmd1a_common_tie_RUR_BB2_1)()
#endif

#ifdef _STRICT_ARG_TYPE
#define WUR_BB2_1(v) \
	CSTUB_(_TIE_hmd1a_common_tie_WUR_BB2_1)(v)
#else
#define WUR_BB2_1(v) \
	CSTUB_(_TIE_hmd1a_common_tie_WUR_BB2_1)(v)
#endif

#ifdef _STRICT_ARG_TYPE
#define RUR_BB3_0() \
	CSTUB_(_TIE_hmd1a_common_tie_RUR_BB3_0)()
#else
#define RUR_BB3_0() \
	CSTUB_(_TIE_hmd1a_common_tie_RUR_BB3_0)()
#endif

#ifdef _STRICT_ARG_TYPE
#define WUR_BB3_0(v) \
	CSTUB_(_TIE_hmd1a_common_tie_WUR_BB3_0)(v)
#else
#define WUR_BB3_0(v) \
	CSTUB_(_TIE_hmd1a_common_tie_WUR_BB3_0)(v)
#endif

#ifdef _STRICT_ARG_TYPE
#define RUR_BB3_1() \
	CSTUB_(_TIE_hmd1a_common_tie_RUR_BB3_1)()
#else
#define RUR_BB3_1() \
	CSTUB_(_TIE_hmd1a_common_tie_RUR_BB3_1)()
#endif

#ifdef _STRICT_ARG_TYPE
#define WUR_BB3_1(v) \
	CSTUB_(_TIE_hmd1a_common_tie_WUR_BB3_1)(v)
#else
#define WUR_BB3_1(v) \
	CSTUB_(_TIE_hmd1a_common_tie_WUR_BB3_1)(v)
#endif

#ifdef _STRICT_ARG_TYPE
#define RUR_MvmAux() \
	CSTUB_(_TIE_hmd1a_common_tie_RUR_MvmAux)()
#else
#define RUR_MvmAux() \
	CSTUB_(_TIE_hmd1a_common_tie_RUR_MvmAux)()
#endif

#ifdef _STRICT_ARG_TYPE
#define WUR_MvmAux(v) \
	CSTUB_(_TIE_hmd1a_common_tie_WUR_MvmAux)(v)
#else
#define WUR_MvmAux(v) \
	CSTUB_(_TIE_hmd1a_common_tie_WUR_MvmAux)(v)
#endif

#ifdef _STRICT_ARG_TYPE
#define RUR_VB1_0() \
	CSTUB_(_TIE_hmd1a_common_tie_RUR_VB1_0)()
#else
#define RUR_VB1_0() \
	CSTUB_(_TIE_hmd1a_common_tie_RUR_VB1_0)()
#endif

#ifdef _STRICT_ARG_TYPE
#define WUR_VB1_0(v) \
	CSTUB_(_TIE_hmd1a_common_tie_WUR_VB1_0)(v)
#else
#define WUR_VB1_0(v) \
	CSTUB_(_TIE_hmd1a_common_tie_WUR_VB1_0)(v)
#endif

#ifdef _STRICT_ARG_TYPE
#define RUR_VB1_1() \
	CSTUB_(_TIE_hmd1a_common_tie_RUR_VB1_1)()
#else
#define RUR_VB1_1() \
	CSTUB_(_TIE_hmd1a_common_tie_RUR_VB1_1)()
#endif

#ifdef _STRICT_ARG_TYPE
#define WUR_VB1_1(v) \
	CSTUB_(_TIE_hmd1a_common_tie_WUR_VB1_1)(v)
#else
#define WUR_VB1_1(v) \
	CSTUB_(_TIE_hmd1a_common_tie_WUR_VB1_1)(v)
#endif

#ifdef _STRICT_ARG_TYPE
#define RUR_VB2_0() \
	CSTUB_(_TIE_hmd1a_common_tie_RUR_VB2_0)()
#else
#define RUR_VB2_0() \
	CSTUB_(_TIE_hmd1a_common_tie_RUR_VB2_0)()
#endif

#ifdef _STRICT_ARG_TYPE
#define WUR_VB2_0(v) \
	CSTUB_(_TIE_hmd1a_common_tie_WUR_VB2_0)(v)
#else
#define WUR_VB2_0(v) \
	CSTUB_(_TIE_hmd1a_common_tie_WUR_VB2_0)(v)
#endif

#ifdef _STRICT_ARG_TYPE
#define RUR_VB2_1() \
	CSTUB_(_TIE_hmd1a_common_tie_RUR_VB2_1)()
#else
#define RUR_VB2_1() \
	CSTUB_(_TIE_hmd1a_common_tie_RUR_VB2_1)()
#endif

#ifdef _STRICT_ARG_TYPE
#define WUR_VB2_1(v) \
	CSTUB_(_TIE_hmd1a_common_tie_WUR_VB2_1)(v)
#else
#define WUR_VB2_1(v) \
	CSTUB_(_TIE_hmd1a_common_tie_WUR_VB2_1)(v)
#endif

#ifdef _STRICT_ARG_TYPE
#define RUR_VB3_0() \
	CSTUB_(_TIE_hmd1a_common_tie_RUR_VB3_0)()
#else
#define RUR_VB3_0() \
	CSTUB_(_TIE_hmd1a_common_tie_RUR_VB3_0)()
#endif

#ifdef _STRICT_ARG_TYPE
#define WUR_VB3_0(v) \
	CSTUB_(_TIE_hmd1a_common_tie_WUR_VB3_0)(v)
#else
#define WUR_VB3_0(v) \
	CSTUB_(_TIE_hmd1a_common_tie_WUR_VB3_0)(v)
#endif

#ifdef _STRICT_ARG_TYPE
#define RUR_VB3_1() \
	CSTUB_(_TIE_hmd1a_common_tie_RUR_VB3_1)()
#else
#define RUR_VB3_1() \
	CSTUB_(_TIE_hmd1a_common_tie_RUR_VB3_1)()
#endif

#ifdef _STRICT_ARG_TYPE
#define WUR_VB3_1(v) \
	CSTUB_(_TIE_hmd1a_common_tie_WUR_VB3_1)(v)
#else
#define WUR_VB3_1(v) \
	CSTUB_(_TIE_hmd1a_common_tie_WUR_VB3_1)(v)
#endif

#ifdef _STRICT_ARG_TYPE
#define RUR_VB4_0() \
	CSTUB_(_TIE_hmd1a_common_tie_RUR_VB4_0)()
#else
#define RUR_VB4_0() \
	CSTUB_(_TIE_hmd1a_common_tie_RUR_VB4_0)()
#endif

#ifdef _STRICT_ARG_TYPE
#define WUR_VB4_0(v) \
	CSTUB_(_TIE_hmd1a_common_tie_WUR_VB4_0)(v)
#else
#define WUR_VB4_0(v) \
	CSTUB_(_TIE_hmd1a_common_tie_WUR_VB4_0)(v)
#endif

#ifdef _STRICT_ARG_TYPE
#define RUR_VB4_1() \
	CSTUB_(_TIE_hmd1a_common_tie_RUR_VB4_1)()
#else
#define RUR_VB4_1() \
	CSTUB_(_TIE_hmd1a_common_tie_RUR_VB4_1)()
#endif

#ifdef _STRICT_ARG_TYPE
#define WUR_VB4_1(v) \
	CSTUB_(_TIE_hmd1a_common_tie_WUR_VB4_1)(v)
#else
#define WUR_VB4_1(v) \
	CSTUB_(_TIE_hmd1a_common_tie_WUR_VB4_1)(v)
#endif

#ifdef _STRICT_ARG_TYPE
#define RUR_VB5_0() \
	CSTUB_(_TIE_hmd1a_common_tie_RUR_VB5_0)()
#else
#define RUR_VB5_0() \
	CSTUB_(_TIE_hmd1a_common_tie_RUR_VB5_0)()
#endif

#ifdef _STRICT_ARG_TYPE
#define WUR_VB5_0(v) \
	CSTUB_(_TIE_hmd1a_common_tie_WUR_VB5_0)(v)
#else
#define WUR_VB5_0(v) \
	CSTUB_(_TIE_hmd1a_common_tie_WUR_VB5_0)(v)
#endif

#ifdef _STRICT_ARG_TYPE
#define RUR_VB5_1() \
	CSTUB_(_TIE_hmd1a_common_tie_RUR_VB5_1)()
#else
#define RUR_VB5_1() \
	CSTUB_(_TIE_hmd1a_common_tie_RUR_VB5_1)()
#endif

#ifdef _STRICT_ARG_TYPE
#define WUR_VB5_1(v) \
	CSTUB_(_TIE_hmd1a_common_tie_WUR_VB5_1)(v)
#else
#define WUR_VB5_1(v) \
	CSTUB_(_TIE_hmd1a_common_tie_WUR_VB5_1)(v)
#endif

#ifdef _STRICT_ARG_TYPE
#define RUR_VB6_0() \
	CSTUB_(_TIE_hmd1a_common_tie_RUR_VB6_0)()
#else
#define RUR_VB6_0() \
	CSTUB_(_TIE_hmd1a_common_tie_RUR_VB6_0)()
#endif

#ifdef _STRICT_ARG_TYPE
#define WUR_VB6_0(v) \
	CSTUB_(_TIE_hmd1a_common_tie_WUR_VB6_0)(v)
#else
#define WUR_VB6_0(v) \
	CSTUB_(_TIE_hmd1a_common_tie_WUR_VB6_0)(v)
#endif

#ifdef _STRICT_ARG_TYPE
#define RUR_VB6_1() \
	CSTUB_(_TIE_hmd1a_common_tie_RUR_VB6_1)()
#else
#define RUR_VB6_1() \
	CSTUB_(_TIE_hmd1a_common_tie_RUR_VB6_1)()
#endif

#ifdef _STRICT_ARG_TYPE
#define WUR_VB6_1(v) \
	CSTUB_(_TIE_hmd1a_common_tie_WUR_VB6_1)(v)
#else
#define WUR_VB6_1(v) \
	CSTUB_(_TIE_hmd1a_common_tie_WUR_VB6_1)(v)
#endif

#ifdef _STRICT_ARG_TYPE
#define RUR_VB7_0() \
	CSTUB_(_TIE_hmd1a_common_tie_RUR_VB7_0)()
#else
#define RUR_VB7_0() \
	CSTUB_(_TIE_hmd1a_common_tie_RUR_VB7_0)()
#endif

#ifdef _STRICT_ARG_TYPE
#define WUR_VB7_0(v) \
	CSTUB_(_TIE_hmd1a_common_tie_WUR_VB7_0)(v)
#else
#define WUR_VB7_0(v) \
	CSTUB_(_TIE_hmd1a_common_tie_WUR_VB7_0)(v)
#endif

#ifdef _STRICT_ARG_TYPE
#define RUR_VB7_1() \
	CSTUB_(_TIE_hmd1a_common_tie_RUR_VB7_1)()
#else
#define RUR_VB7_1() \
	CSTUB_(_TIE_hmd1a_common_tie_RUR_VB7_1)()
#endif

#ifdef _STRICT_ARG_TYPE
#define WUR_VB7_1(v) \
	CSTUB_(_TIE_hmd1a_common_tie_WUR_VB7_1)(v)
#else
#define WUR_VB7_1(v) \
	CSTUB_(_TIE_hmd1a_common_tie_WUR_VB7_1)(v)
#endif

#ifdef _STRICT_ARG_TYPE
#define mir18_move(b) \
	CSTUB_(_TIE_hmd1a_common_tie_mir18_move)(b)
#else
#define mir18_move(b) \
	CSTUB_(_TIE_hmd1a_common_tie_mir18_move)(b)
#endif

#ifdef _STRICT_ARG_TYPE
#define ulsr32_move(b) \
	CSTUB_(_TIE_hmd1a_common_tie_ulsr32_move)(b)
#else
#define ulsr32_move(b) \
	CSTUB_(_TIE_hmd1a_common_tie_ulsr32_move)(b)
#endif

#ifdef _STRICT_ARG_TYPE
#define cr64_move(b) \
	CSTUB_(_TIE_hmd1a_common_tie_cr64_move)(b)
#else
#define cr64_move(b) \
	CSTUB_(_TIE_hmd1a_common_tie_cr64_move)(b)
#endif

#ifdef _STRICT_ARG_TYPE
#define fr32_move(b) \
	CSTUB_(_TIE_hmd1a_common_tie_fr32_move)(b)
#else
#define fr32_move(b) \
	CSTUB_(_TIE_hmd1a_common_tie_fr32_move)(b)
#endif

#ifdef _STRICT_ARG_TYPE
#define fr32_loadi(p, o) \
	CSTUB_(_TIE_hmd1a_common_tie_fr32_loadi)(p, o)
#else
#define fr32_loadi(p, o) \
	CSTUB_(_TIE_hmd1a_common_tie_fr32_loadi)(p, o)
#endif

#ifdef _STRICT_ARG_TYPE
#define fr32_storei(v, p, o) \
	CSTUB_(_TIE_hmd1a_common_tie_fr32_storei)(v, p, o)
#else
#define fr32_storei(v, p, o) \
	CSTUB_(_TIE_hmd1a_common_tie_fr32_storei)(v, p, o)
#endif

#ifdef _STRICT_ARG_TYPE
#define fr32_loadx(p, x) \
	CSTUB_(_TIE_hmd1a_common_tie_fr32_loadx)(p, x)
#else
#define fr32_loadx(p, x) \
	CSTUB_(_TIE_hmd1a_common_tie_fr32_loadx)(p, x)
#endif

#ifdef _STRICT_ARG_TYPE
#define fr32_storex(v, p, x) \
	CSTUB_(_TIE_hmd1a_common_tie_fr32_storex)(v, p, x)
#else
#define fr32_storex(v, p, x) \
	CSTUB_(_TIE_hmd1a_common_tie_fr32_storex)(v, p, x)
#endif

#ifdef _STRICT_ARG_TYPE
#define fr32_loadip(v, p, o) \
	CSTUB_(_TIE_hmd1a_common_tie_fr32_loadip)(v, (const fr32 **)&(p), o)
#else
#define fr32_loadip(v, p, o) { \
	fr32 __v; \
	CSTUB_(_TIE_hmd1a_common_tie_fr32_loadip)(__v, (const fr32 **)&(p), o); \
	(v) = __v; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define fr32_storeip(v, p, o) \
	CSTUB_(_TIE_hmd1a_common_tie_fr32_storeip)(v, (fr32 **)&(p), o)
#else
#define fr32_storeip(v, p, o) \
	CSTUB_(_TIE_hmd1a_common_tie_fr32_storeip)(v, (fr32 **)&(p), o)
#endif

#ifdef _STRICT_ARG_TYPE
#define fr32_loadxp(v, p, x) \
	CSTUB_(_TIE_hmd1a_common_tie_fr32_loadxp)(v, (const fr32 **)&(p), x)
#else
#define fr32_loadxp(v, p, x) { \
	fr32 __v; \
	CSTUB_(_TIE_hmd1a_common_tie_fr32_loadxp)(__v, (const fr32 **)&(p), x); \
	(v) = __v; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define fr32_storexp(v, p, x) \
	CSTUB_(_TIE_hmd1a_common_tie_fr32_storexp)(v, (fr32 **)&(p), x)
#else
#define fr32_storexp(v, p, x) \
	CSTUB_(_TIE_hmd1a_common_tie_fr32_storexp)(v, (fr32 **)&(p), x)
#endif

#ifdef _STRICT_ARG_TYPE
#define fr32_rtor_int32(b) \
	CSTUB_(_TIE_hmd1a_common_tie_fr32_rtor_int32)(b)
#else
#define fr32_rtor_int32(b) \
	CSTUB_(_TIE_hmd1a_common_tie_fr32_rtor_int32)(b)
#endif

#ifdef _STRICT_ARG_TYPE
#define fr32_rtor_uint32(b) \
	CSTUB_(_TIE_hmd1a_common_tie_fr32_rtor_uint32)(b)
#else
#define fr32_rtor_uint32(b) \
	CSTUB_(_TIE_hmd1a_common_tie_fr32_rtor_uint32)(b)
#endif

#ifdef _STRICT_ARG_TYPE
#define int32_rtor_fr32(a) \
	CSTUB_(_TIE_hmd1a_common_tie_int32_rtor_fr32)(a)
#else
#define int32_rtor_fr32(a) \
	CSTUB_(_TIE_hmd1a_common_tie_int32_rtor_fr32)(a)
#endif

#ifdef _STRICT_ARG_TYPE
#define uint32_rtor_fr32(a) \
	CSTUB_(_TIE_hmd1a_common_tie_uint32_rtor_fr32)(a)
#else
#define uint32_rtor_fr32(a) \
	CSTUB_(_TIE_hmd1a_common_tie_uint32_rtor_fr32)(a)
#endif

#ifdef _STRICT_ARG_TYPE
#define vr64_move(b) \
	CSTUB_(_TIE_hmd1a_common_tie_vr64_move)(b)
#else
#define vr64_move(b) \
	CSTUB_(_TIE_hmd1a_common_tie_vr64_move)(b)
#endif

#ifdef _STRICT_ARG_TYPE
#define vr64_loadi(p, o) \
	CSTUB_(_TIE_hmd1a_common_tie_vr64_loadi)(p, o)
#else
#define vr64_loadi(p, o) \
	CSTUB_(_TIE_hmd1a_common_tie_vr64_loadi)(p, o)
#endif

#ifdef _STRICT_ARG_TYPE
#define vr64_storei(v, p, o) \
	CSTUB_(_TIE_hmd1a_common_tie_vr64_storei)(v, p, o)
#else
#define vr64_storei(v, p, o) \
	CSTUB_(_TIE_hmd1a_common_tie_vr64_storei)(v, p, o)
#endif

#ifdef _STRICT_ARG_TYPE
#define vr64_loadx(p, x) \
	CSTUB_(_TIE_hmd1a_common_tie_vr64_loadx)(p, x)
#else
#define vr64_loadx(p, x) \
	CSTUB_(_TIE_hmd1a_common_tie_vr64_loadx)(p, x)
#endif

#ifdef _STRICT_ARG_TYPE
#define vr64_storex(v, p, x) \
	CSTUB_(_TIE_hmd1a_common_tie_vr64_storex)(v, p, x)
#else
#define vr64_storex(v, p, x) \
	CSTUB_(_TIE_hmd1a_common_tie_vr64_storex)(v, p, x)
#endif

#ifdef _STRICT_ARG_TYPE
#define vr64_loadip(v, p, o) \
	CSTUB_(_TIE_hmd1a_common_tie_vr64_loadip)(v, (const vr64 **)&(p), o)
#else
#define vr64_loadip(v, p, o) { \
	vr64 __v; \
	CSTUB_(_TIE_hmd1a_common_tie_vr64_loadip)(__v, (const vr64 **)&(p), o); \
	(v) = __v; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define vr64_storeip(v, p, o) \
	CSTUB_(_TIE_hmd1a_common_tie_vr64_storeip)(v, (vr64 **)&(p), o)
#else
#define vr64_storeip(v, p, o) \
	CSTUB_(_TIE_hmd1a_common_tie_vr64_storeip)(v, (vr64 **)&(p), o)
#endif

#ifdef _STRICT_ARG_TYPE
#define vr64_loadxp(v, p, x) \
	CSTUB_(_TIE_hmd1a_common_tie_vr64_loadxp)(v, (const vr64 **)&(p), x)
#else
#define vr64_loadxp(v, p, x) { \
	vr64 __v; \
	CSTUB_(_TIE_hmd1a_common_tie_vr64_loadxp)(__v, (const vr64 **)&(p), x); \
	(v) = __v; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define vr64_storexp(v, p, x) \
	CSTUB_(_TIE_hmd1a_common_tie_vr64_storexp)(v, (vr64 **)&(p), x)
#else
#define vr64_storexp(v, p, x) \
	CSTUB_(_TIE_hmd1a_common_tie_vr64_storexp)(v, (vr64 **)&(p), x)
#endif

#ifdef _STRICT_ARG_TYPE
#define get_VRH(b) \
	CSTUB_(_TIE_hmd1a_common_tie_get_VRH)(b)
#else
#define get_VRH(b) \
	CSTUB_(_TIE_hmd1a_common_tie_get_VRH)(b)
#endif

#ifdef _STRICT_ARG_TYPE
#define get_VRL(b) \
	CSTUB_(_TIE_hmd1a_common_tie_get_VRL)(b)
#else
#define get_VRL(b) \
	CSTUB_(_TIE_hmd1a_common_tie_get_VRL)(b)
#endif

#ifdef _STRICT_ARG_TYPE
#define set_VRH(a, b) \
	CSTUB_(_TIE_hmd1a_common_tie_set_VRH)(a, b)
#else
#define set_VRH(a, b) { \
	vr64 __a = a; \
	CSTUB_(_TIE_hmd1a_common_tie_set_VRH)(__a, b); \
	(a) = __a; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define set_VRL(a, b) \
	CSTUB_(_TIE_hmd1a_common_tie_set_VRL)(a, b)
#else
#define set_VRL(a, b) { \
	vr64 __a = a; \
	CSTUB_(_TIE_hmd1a_common_tie_set_VRL)(__a, b); \
	(a) = __a; \
}
#endif

#ifdef _STRICT_ARG_TYPE
#define vr64_pair(hi, lo) \
	CSTUB_(_TIE_hmd1a_common_tie_vr64_pair)(hi, lo)
#else
#define vr64_pair(hi, lo) \
	CSTUB_(_TIE_hmd1a_common_tie_vr64_pair)(hi, lo)
#endif

#ifdef _STRICT_ARG_TYPE
#define atbool_rtor_int32(b) \
	CSTUB_(_TIE_hmd1a_common_tie_atbool_rtor_int32)(b)
#else
#define atbool_rtor_int32(b) \
	CSTUB_(_TIE_hmd1a_common_tie_atbool_rtor_int32)(b)
#endif

#ifdef _STRICT_ARG_TYPE
#define atbool_rtor_uint32(b) \
	CSTUB_(_TIE_hmd1a_common_tie_atbool_rtor_uint32)(b)
#else
#define atbool_rtor_uint32(b) \
	CSTUB_(_TIE_hmd1a_common_tie_atbool_rtor_uint32)(b)
#endif

#ifdef _STRICT_ARG_TYPE
#define int32_rtor_atbool(a) \
	CSTUB_(_TIE_hmd1a_common_tie_int32_rtor_atbool)(a)
#else
#define int32_rtor_atbool(a) \
	CSTUB_(_TIE_hmd1a_common_tie_int32_rtor_atbool)(a)
#endif

#ifdef _STRICT_ARG_TYPE
#define uint32_rtor_atbool(a) \
	CSTUB_(_TIE_hmd1a_common_tie_uint32_rtor_atbool)(a)
#else
#define uint32_rtor_atbool(a) \
	CSTUB_(_TIE_hmd1a_common_tie_uint32_rtor_atbool)(a)
#endif

#define XT_RSR_SAR() \
	CSTUB_(_TIE_xt_core_RSR_SAR)()

#define XT_WSR_SAR(t) \
	CSTUB_(_TIE_xt_core_WSR_SAR)(t)

#define XT_XSR_SAR(t) \
	CSTUB_(_TIE_xt_core_XSR_SAR)(t)

#else /* !__cplusplus */
/* Ctype declarations */
typedef int immediate;
typedef unsigned char xtbool;
typedef unsigned char xtbool2;
typedef unsigned char xtbool4;
typedef unsigned char xtbool8;
typedef unsigned short xtbool16;

/* Ctype definitions */
typedef CSTUB_MSC_ALIGN(8) struct ae_p24x2s_struct {
unsigned int _[2];
} CSTUB_GCC_ALIGN(8) ae_p24x2s;

typedef CSTUB_MSC_ALIGN(8) struct ae_p24x2f_struct {
unsigned int _[2];
} CSTUB_GCC_ALIGN(8) ae_p24x2f;

typedef CSTUB_MSC_ALIGN(4) struct ae_p16x2s_struct {
unsigned int _[1];
} CSTUB_GCC_ALIGN(4) ae_p16x2s;

typedef CSTUB_MSC_ALIGN(4) struct ae_p24s_struct {
unsigned int _[1];
} CSTUB_GCC_ALIGN(4) ae_p24s;

typedef CSTUB_MSC_ALIGN(4) struct ae_p24f_struct {
unsigned int _[1];
} CSTUB_GCC_ALIGN(4) ae_p24f;

typedef CSTUB_MSC_ALIGN(2) struct ae_p16s_struct {
unsigned short  _[1];
} CSTUB_GCC_ALIGN(2) ae_p16s;

typedef CSTUB_MSC_ALIGN(8) struct ae_int16x4_struct {
unsigned int _[2];
} CSTUB_GCC_ALIGN(8) ae_int16x4;

typedef CSTUB_MSC_ALIGN(2) struct ae_int16_struct {
unsigned short  _[1];
} CSTUB_GCC_ALIGN(2) ae_int16;

typedef CSTUB_MSC_ALIGN(8) struct ae_f16x4_struct {
unsigned int _[2];
} CSTUB_GCC_ALIGN(8) ae_f16x4;

typedef CSTUB_MSC_ALIGN(2) struct ae_f16_struct {
unsigned short  _[1];
} CSTUB_GCC_ALIGN(2) ae_f16;

typedef CSTUB_MSC_ALIGN(8) struct ae_int32x2_struct {
unsigned int _[2];
} CSTUB_GCC_ALIGN(8) ae_int32x2;

typedef CSTUB_MSC_ALIGN(4) struct ae_int32_struct {
unsigned int _[1];
} CSTUB_GCC_ALIGN(4) ae_int32;

typedef CSTUB_MSC_ALIGN(8) struct ae_f32x2_struct {
unsigned int _[2];
} CSTUB_GCC_ALIGN(8) ae_f32x2;

typedef CSTUB_MSC_ALIGN(4) struct ae_f32_struct {
unsigned int _[1];
} CSTUB_GCC_ALIGN(4) ae_f32;

typedef CSTUB_MSC_ALIGN(8) struct ae_int24x2_struct {
unsigned int _[2];
} CSTUB_GCC_ALIGN(8) ae_int24x2;

typedef CSTUB_MSC_ALIGN(4) struct ae_int24_struct {
unsigned int _[1];
} CSTUB_GCC_ALIGN(4) ae_int24;

typedef CSTUB_MSC_ALIGN(8) struct ae_f24x2_struct {
unsigned int _[2];
} CSTUB_GCC_ALIGN(8) ae_f24x2;

typedef CSTUB_MSC_ALIGN(4) struct ae_f24_struct {
unsigned int _[1];
} CSTUB_GCC_ALIGN(4) ae_f24;

typedef CSTUB_MSC_ALIGN(8) struct ae_int64_struct {
unsigned int _[2];
} CSTUB_GCC_ALIGN(8) ae_int64;

typedef CSTUB_MSC_ALIGN(8) struct ae_f64_struct {
unsigned int _[2];
} CSTUB_GCC_ALIGN(8) ae_f64;

typedef CSTUB_MSC_ALIGN(8) struct ae_q56s_struct {
unsigned int _[2];
} CSTUB_GCC_ALIGN(8) ae_q56s;

typedef CSTUB_MSC_ALIGN(4) struct ae_q32s_struct {
unsigned int _[1];
} CSTUB_GCC_ALIGN(4) ae_q32s;

typedef CSTUB_MSC_ALIGN(8) struct ae_valign_struct {
unsigned int _[2];
} CSTUB_GCC_ALIGN(8) ae_valign;

typedef CSTUB_MSC_ALIGN(8) struct ae_int32x4_struct {
unsigned int _[4];
} CSTUB_GCC_ALIGN(8) ae_int32x4;

typedef CSTUB_MSC_ALIGN(8) struct ae_f32x4_struct {
unsigned int _[4];
} CSTUB_GCC_ALIGN(8) ae_f32x4;

typedef CSTUB_MSC_ALIGN(4) struct ae_int32u_struct {
unsigned int _[1];
} CSTUB_GCC_ALIGN(4) ae_int32u;

typedef CSTUB_MSC_ALIGN(2) struct ae_int16u_struct {
unsigned short  _[1];
} CSTUB_GCC_ALIGN(2) ae_int16u;

typedef CSTUB_MSC_ALIGN(8) struct ae_int64x2_struct {
unsigned int _[4];
} CSTUB_GCC_ALIGN(8) ae_int64x2;

typedef CSTUB_MSC_ALIGN(4) struct fr32_struct {
unsigned int _[1];
} CSTUB_GCC_ALIGN(4) fr32;

typedef CSTUB_MSC_ALIGN(8) struct vr64_struct {
unsigned int _[2];
} CSTUB_GCC_ALIGN(8) vr64;

typedef CSTUB_MSC_ALIGN(8) struct cr64_struct {
unsigned int _[2];
} CSTUB_GCC_ALIGN(8) cr64;

typedef CSTUB_MSC_ALIGN(4) struct mir18_struct {
unsigned int _[1];
} CSTUB_GCC_ALIGN(4) mir18;

typedef CSTUB_MSC_ALIGN(4) struct ulsr32_struct {
unsigned int _[1];
} CSTUB_GCC_ALIGN(4) ulsr32;

typedef CSTUB_MSC_ALIGN(1) struct atbool_struct {
unsigned char  _[1];
} CSTUB_GCC_ALIGN(1) atbool;

/* Proto declarations */
CSTUB_EXTERN ae_valign CSTUB_(_TIE_xt_hifi2_AE_ZALIGN64)(void);
CSTUB_EXTERN ae_valign CSTUB_(_TIE_xt_hifi2_AE_LALIGN64_I)(const ae_valign * a /*in*/, immediate i64 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SALIGN64_I)(const ae_valign su /*in*/, const ae_valign * a /*in*/, immediate i64 /*in*/);
CSTUB_EXTERN ae_valign CSTUB_(_TIE_xt_hifi2_AE_MOVALIGN)(const ae_valign v /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_xt_hifi2_AE_ADDBRBA32)(const unsigned int ab /*in*/, const unsigned int ai /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_xt_hifi2_AE_SHA32)(const unsigned int ai /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_VLDSHT)(const unsigned int ar_t /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_density_NOP_N)(void);
CSTUB_EXTERN void CSTUB_(_TIE_xt_core_NOP)(void);
CSTUB_EXTERN void CSTUB_(_TIE_xt_core_DEPBITS)(unsigned int* art /*inout*/, const unsigned int ars /*in*/, immediate low_depbits /*in*/, immediate lngth_depbits /*in*/);
CSTUB_EXTERN xtbool CSTUB_(_TIE_xt_booleans_XORB)(const xtbool bs /*in*/, const xtbool bt /*in*/);
CSTUB_EXTERN xtbool CSTUB_(_TIE_xt_booleans_ORBC)(const xtbool bs /*in*/, const xtbool bt /*in*/);
CSTUB_EXTERN xtbool CSTUB_(_TIE_xt_booleans_ORB)(const xtbool bs /*in*/, const xtbool bt /*in*/);
CSTUB_EXTERN xtbool CSTUB_(_TIE_xt_booleans_ANDBC)(const xtbool bs /*in*/, const xtbool bt /*in*/);
CSTUB_EXTERN xtbool CSTUB_(_TIE_xt_booleans_ANDB)(const xtbool bs /*in*/, const xtbool bt /*in*/);
CSTUB_EXTERN xtbool CSTUB_(_TIE_xt_booleans_ALL4)(const xtbool4 bs4 /*in*/);
CSTUB_EXTERN xtbool CSTUB_(_TIE_xt_booleans_ANY4)(const xtbool4 bs4 /*in*/);
CSTUB_EXTERN xtbool CSTUB_(_TIE_xt_booleans_ALL8)(const xtbool8 bs8 /*in*/);
CSTUB_EXTERN xtbool CSTUB_(_TIE_xt_booleans_ANY8)(const xtbool8 bs8 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_booleans_MOVT)(unsigned int* arr /*inout*/, const unsigned int ars /*in*/, const xtbool bt /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_booleans_MOVF)(unsigned int* arr /*inout*/, const unsigned int ars /*in*/, const xtbool bt /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_xt_ioports_READ_IMPWIRE)(void);
CSTUB_EXTERN void CSTUB_(_TIE_xt_ioports_SETB_EXPSTATE)(immediate bitindex /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_ioports_CLRB_EXPSTATE)(immediate bitindex /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_ioports_WRMSK_EXPSTATE)(const unsigned int art /*in*/, const unsigned int ars /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_density_L32I_N)(const int * p /*in*/, immediate i /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_density_S32I_N)(const int t /*in*/, const int * p /*in*/, immediate i /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_density_ADD_N)(const int s /*in*/, const int t /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_density_ADDI_N)(const int s /*in*/, immediate i /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_density_MOV_N)(const int s /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_density_MOVI_N)(immediate i /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_xt_core_uint32_loadi)(const unsigned int * p /*in*/, immediate o /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_core_uint32_storei)(const unsigned int c /*in*/, const unsigned int * p /*in*/, immediate o /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_xt_core_uint32_move)(const unsigned int b /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_core_ADDI)(const int s /*in*/, immediate i /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_core_OR)(const int s /*in*/, const int t /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_core_L32I)(const int * p /*in*/, immediate i /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_core_S32I)(const int r /*in*/, const int * p /*in*/, immediate i /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_core_S32NB)(const int r /*in*/, const int * p /*in*/, immediate i /*in*/);
CSTUB_EXTERN unsigned char CSTUB_(_TIE_xt_core_L8UI)(const unsigned char * p /*in*/, immediate i /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_core_S8I)(const signed char r /*in*/, const signed char * p /*in*/, immediate i /*in*/);
CSTUB_EXTERN unsigned short CSTUB_(_TIE_xt_core_L16UI)(const unsigned short * p /*in*/, immediate i /*in*/);
CSTUB_EXTERN short CSTUB_(_TIE_xt_core_L16SI)(const short * p /*in*/, immediate i /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_core_S16I)(const short r /*in*/, const short * p /*in*/, immediate i /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_core_ADDMI)(const int s /*in*/, immediate i /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_core_ADD)(const int s /*in*/, const int t /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_core_ADDX2)(const int s /*in*/, const int t /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_core_ADDX4)(const int s /*in*/, const int t /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_core_ADDX8)(const int s /*in*/, const int t /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_core_SUB)(const int s /*in*/, const int t /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_core_SUBX2)(const int s /*in*/, const int t /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_core_SUBX4)(const int s /*in*/, const int t /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_core_SUBX8)(const int s /*in*/, const int t /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_core_SALT)(const int s /*in*/, const int t /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_xt_core_SALTU)(const unsigned int s /*in*/, const unsigned int t /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_core_AND)(const int s /*in*/, const int t /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_core_XOR)(const int s /*in*/, const int t /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_xt_core_EXTUI)(const unsigned int t /*in*/, immediate i /*in*/, immediate o /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_core_MOVI)(immediate i /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_core_MOVEQZ)(int* r /*inout*/, const int s /*in*/, const int t /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_core_MOVNEZ)(int* r /*inout*/, const int s /*in*/, const int t /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_core_MOVLTZ)(int* r /*inout*/, const int s /*in*/, const int t /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_core_MOVGEZ)(int* r /*inout*/, const int s /*in*/, const int t /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_core_NEG)(const int t /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_core_ABS)(const int t /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_core_SSR)(const int s /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_core_SSL)(const int s /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_core_SSA8L)(const int s /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_core_SSA8B)(const int s /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_core_SSAI)(immediate i /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_core_SLL)(const int s /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_core_SRC)(const int s /*in*/, const int t /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_xt_core_SRL)(const unsigned int t /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_core_SRA)(const int t /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_core_SLLI)(const int s /*in*/, immediate i /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_core_SRAI)(const int t /*in*/, immediate i /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_xt_core_SRLI)(const unsigned int t /*in*/, immediate i /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_core_SSAI_SRC)(const int src1 /*in*/, const int src2 /*in*/, immediate amount /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_core_SSR_SRC)(const int src1 /*in*/, const int src2 /*in*/, const int amount /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_core_SSR_SRA)(const int src /*in*/, const int amount /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_xt_core_SSR_SRL)(const unsigned int src /*in*/, const int amount /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_core_SSL_SLL)(const int src /*in*/, const int amount /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_misc_CLAMPS)(const int s /*in*/, immediate i /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_misc_MIN)(const int s /*in*/, const int t /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_misc_MAX)(const int s /*in*/, const int t /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_xt_misc_MINU)(const unsigned int s /*in*/, const unsigned int t /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_xt_misc_MAXU)(const unsigned int s /*in*/, const unsigned int t /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_misc_NSA)(const int s /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_xt_misc_NSAU)(const unsigned int s /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_misc_SEXT)(const int s /*in*/, immediate i /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_xt_hifi2_RUR_AE_OVF_SAR)(void);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_WUR_AE_OVF_SAR)(const unsigned int v /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_xt_hifi2_RUR_AE_BITHEAD)(void);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_WUR_AE_BITHEAD)(const unsigned int v /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_xt_hifi2_RUR_AE_TS_FTS_BU_BP)(void);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_WUR_AE_TS_FTS_BU_BP)(const unsigned int v /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_xt_hifi2_RUR_AE_CW_SD_NO)(void);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_WUR_AE_CW_SD_NO)(const unsigned int v /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_xt_hifi2_RUR_AE_CBEGIN0)(void);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_WUR_AE_CBEGIN0)(const unsigned int v /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_xt_hifi2_RUR_AE_CEND0)(void);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_WUR_AE_CEND0)(const unsigned int v /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_xt_hifi2_RAE_OVERFLOW)(void);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_WAE_OVERFLOW)(const unsigned int a /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_xt_hifi2_RUR_AE_OVERFLOW)(void);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_WUR_AE_OVERFLOW)(const unsigned int a /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_RAE_SAR)(void);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_WAE_SAR)(const int a /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_RUR_AE_SAR)(void);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_WUR_AE_SAR)(const int a /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_xt_hifi2_RAE_BITPTR)(void);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_WAE_BITPTR)(const unsigned int a /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_xt_hifi2_RUR_AE_BITPTR)(void);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_WUR_AE_BITPTR)(const unsigned int a /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_xt_hifi2_RAE_BITSUSED)(void);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_WAE_BITSUSED)(const unsigned int a /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_xt_hifi2_RUR_AE_BITSUSED)(void);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_WUR_AE_BITSUSED)(const unsigned int a /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_xt_hifi2_RAE_TABLESIZE)(void);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_WAE_TABLESIZE)(const unsigned int a /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_xt_hifi2_RUR_AE_TABLESIZE)(void);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_WUR_AE_TABLESIZE)(const unsigned int a /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_xt_hifi2_RAE_FIRST_TS)(void);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_WAE_FIRST_TS)(const unsigned int a /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_xt_hifi2_RUR_AE_FIRST_TS)(void);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_WUR_AE_FIRST_TS)(const unsigned int a /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_xt_hifi2_RAE_NEXTOFFSET)(void);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_WAE_NEXTOFFSET)(const unsigned int a /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_xt_hifi2_RUR_AE_NEXTOFFSET)(void);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_WUR_AE_NEXTOFFSET)(const unsigned int a /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_xt_hifi2_RAE_SEARCHDONE)(void);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_WAE_SEARCHDONE)(const unsigned int a /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_xt_hifi2_RUR_AE_SEARCHDONE)(void);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_WUR_AE_SEARCHDONE)(const unsigned int a /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_xt_hifi2_RAE_CWRAP)(void);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_WAE_CWRAP)(const unsigned int a /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_xt_hifi2_RUR_AE_CWRAP)(void);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_WUR_AE_CWRAP)(const unsigned int a /*in*/);
CSTUB_EXTERN void * CSTUB_(_TIE_xt_hifi2_AE_GETCBEGIN0)(void);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SETCBEGIN0)(const void * a /*in*/);
CSTUB_EXTERN void * CSTUB_(_TIE_xt_hifi2_AE_GETCEND0)(void);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SETCEND0)(const void * a /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_L16M_XC)(ae_int32x2* d /*out*/, const ae_p16s ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_LP16F_C)(ae_p24x2s* d /*out*/, const ae_p16s ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_L16M_I)(const ae_p16s * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_LP16F_I)(const ae_p16s * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN ae_p16s CSTUB_(_TIE_xt_hifi2_ae_p16s_loadi)(const ae_p16s * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_L16M_IU)(ae_int32x2* d /*out*/, const ae_p16s ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_LP16F_IU)(ae_p24x2s* d /*out*/, const ae_p16s ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_p16s_loadiu)(ae_p16s* d /*out*/, const ae_p16s ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_L16M_X)(const ae_p16s * a /*in*/, const int off /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_LP16F_X)(const ae_p16s * a /*in*/, const int off /*in*/);
CSTUB_EXTERN ae_p16s CSTUB_(_TIE_xt_hifi2_ae_p16s_loadx)(const ae_p16s * a /*in*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_L16M_XU)(ae_int32x2* d /*out*/, const ae_p16s ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_LP16F_XU)(ae_p24x2s* d /*out*/, const ae_p16s ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_p16s_loadxu)(ae_p16s* d /*out*/, const ae_p16s ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_L16_XC)(ae_int16x4* d /*out*/, const ae_int16 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_L16_I)(const ae_int16 * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN ae_int16 CSTUB_(_TIE_xt_hifi2_ae_int16_loadi)(const ae_int16 * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN ae_f16 CSTUB_(_TIE_xt_hifi2_ae_f16_loadi)(const ae_f16 * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_L16_IP)(ae_int16x4* d /*out*/, const ae_int16 ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int16_loadip)(ae_int16* d /*out*/, const ae_int16 ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_f16_loadip)(ae_f16* d /*out*/, const ae_f16 ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_L16_X)(const ae_int16 * a /*in*/, const int off /*in*/);
CSTUB_EXTERN ae_int16 CSTUB_(_TIE_xt_hifi2_ae_int16_loadx)(const ae_int16 * a /*in*/, const int off /*in*/);
CSTUB_EXTERN ae_f16 CSTUB_(_TIE_xt_hifi2_ae_f16_loadx)(const ae_f16 * a /*in*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_L16_XP)(ae_int16x4* d /*out*/, const ae_int16 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int16_loadxp)(ae_int16* d /*out*/, const ae_int16 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_f16_loadxp)(ae_f16* d /*out*/, const ae_f16 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_L32F24_XC)(ae_f24x2* d /*out*/, const ae_f24 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_LP24F_C)(ae_p24x2s* d /*out*/, const ae_p24f ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_AE_L32F24_I)(const ae_f24 * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_LP24F_I)(const ae_p24f * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN ae_f24 CSTUB_(_TIE_xt_hifi2_ae_f24_loadi)(const ae_f24 * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN ae_p24f CSTUB_(_TIE_xt_hifi2_ae_p24f_loadi)(const ae_p24f * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_L32F24_IP)(ae_f24x2* d /*out*/, const ae_f24 ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_LP24F_IU)(ae_p24x2s* d /*out*/, const ae_p24f ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_f24_loadip)(ae_f24* d /*out*/, const ae_f24 ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_p24f_loadip)(ae_p24f* d /*out*/, const ae_p24f ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_AE_L32F24_X)(const ae_f24 * a /*in*/, const int off /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_LP24F_X)(const ae_p24f * a /*in*/, const int off /*in*/);
CSTUB_EXTERN ae_f24 CSTUB_(_TIE_xt_hifi2_ae_f24_loadx)(const ae_f24 * a /*in*/, const int off /*in*/);
CSTUB_EXTERN ae_p24f CSTUB_(_TIE_xt_hifi2_ae_p24f_loadx)(const ae_p24f * a /*in*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_L32F24_XP)(ae_f24x2* d /*out*/, const ae_f24 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_LP24F_XU)(ae_p24x2s* d /*out*/, const ae_p24f ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_f24_loadxp)(ae_f24* d /*out*/, const ae_f24 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_p24f_loadxp)(ae_p24f* d /*out*/, const ae_p24f ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_L32_XC)(ae_int32x2* d /*out*/, const ae_int32 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_LP24_C)(ae_p24x2s* d /*out*/, const ae_p24s ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_L32_I)(const ae_int32 * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_ae_int32_loadi)(const ae_int32 * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN ae_f32 CSTUB_(_TIE_xt_hifi2_ae_f32_loadi)(const ae_f32 * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_LP24_I)(const ae_p24s * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN ae_int24 CSTUB_(_TIE_xt_hifi2_ae_int24_loadi)(const ae_int24 * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN ae_p24s CSTUB_(_TIE_xt_hifi2_ae_p24s_loadi)(const ae_p24s * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_L32_IP)(ae_int32x2* d /*out*/, const ae_int32 ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int32_loadip)(ae_int32* d /*out*/, const ae_int32 ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_f32_loadip)(ae_f32* d /*out*/, const ae_f32 ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_LP24_IU)(ae_p24x2s* d /*out*/, const ae_p24s ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int24_loadip)(ae_int24* d /*out*/, const ae_int24 ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_p24s_loadip)(ae_p24s* d /*out*/, const ae_p24s ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_L32_X)(const ae_int32 * a /*in*/, const int off /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_ae_int32_loadx)(const ae_int32 * a /*in*/, const int off /*in*/);
CSTUB_EXTERN ae_f32 CSTUB_(_TIE_xt_hifi2_ae_f32_loadx)(const ae_f32 * a /*in*/, const int off /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_LP24_X)(const ae_p24s * a /*in*/, const int off /*in*/);
CSTUB_EXTERN ae_int24 CSTUB_(_TIE_xt_hifi2_ae_int24_loadx)(const ae_int24 * a /*in*/, const int off /*in*/);
CSTUB_EXTERN ae_p24s CSTUB_(_TIE_xt_hifi2_ae_p24s_loadx)(const ae_p24s * a /*in*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_L32_XP)(ae_int32x2* d /*out*/, const ae_int32 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int32_loadxp)(ae_int32* d /*out*/, const ae_int32 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_f32_loadxp)(ae_f32* d /*out*/, const ae_f32 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_LP24_XU)(ae_p24x2s* d /*out*/, const ae_p24s ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int24_loadxp)(ae_int24* d /*out*/, const ae_int24 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_p24s_loadxp)(ae_p24s* d /*out*/, const ae_p24s ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_L32M_XC)(ae_int64* d /*out*/, const ae_q32s ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_LQ32F_C)(ae_q56s* d /*out*/, const ae_q32s ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_L32M_I)(const ae_q32s * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_LQ32F_I)(const ae_q32s * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN ae_q32s CSTUB_(_TIE_xt_hifi2_ae_q32s_loadi)(const ae_q32s * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_L32M_IU)(ae_int64* d /*out*/, const ae_q32s ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_LQ32F_IU)(ae_q56s* d /*out*/, const ae_q32s ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_q32s_loadiu)(ae_q32s* d /*out*/, const ae_q32s ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_L32M_X)(const ae_q32s * a /*in*/, const int off /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_LQ32F_X)(const ae_q32s * a /*in*/, const int off /*in*/);
CSTUB_EXTERN ae_q32s CSTUB_(_TIE_xt_hifi2_ae_q32s_loadx)(const ae_q32s * a /*in*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_L32M_XU)(ae_int64* d /*out*/, const ae_q32s ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_LQ32F_XU)(ae_q56s* d /*out*/, const ae_q32s ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_q32s_loadxu)(ae_q32s* d /*out*/, const ae_q32s ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_L16X2M_XC)(ae_int32x2* d /*out*/, const ae_p16x2s ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_LP16X2F_C)(ae_p24x2s* d /*out*/, const ae_p16x2s ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_L16X2M_I)(const ae_p16x2s * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_LP16X2F_I)(const ae_p16x2s * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN ae_p16x2s CSTUB_(_TIE_xt_hifi2_ae_p16x2s_loadi)(const ae_p16x2s * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_L16X2M_IU)(ae_int32x2* d /*out*/, const ae_p16x2s ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_LP16X2F_IU)(ae_p24x2s* d /*out*/, const ae_p16x2s ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_p16x2s_loadiu)(ae_p16x2s* d /*out*/, const ae_p16x2s ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_L16X2M_X)(const ae_p16x2s * a /*in*/, const int off /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_LP16X2F_X)(const ae_p16x2s * a /*in*/, const int off /*in*/);
CSTUB_EXTERN ae_p16x2s CSTUB_(_TIE_xt_hifi2_ae_p16x2s_loadx)(const ae_p16x2s * a /*in*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_L16X2M_XU)(ae_int32x2* d /*out*/, const ae_p16x2s ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_LP16X2F_XU)(ae_p24x2s* d /*out*/, const ae_p16x2s ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_p16x2s_loadxu)(ae_p16x2s* d /*out*/, const ae_p16x2s ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_L32X2F24_XC)(ae_f24x2* d /*out*/, const ae_f24x2 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_LP24X2F_C)(ae_p24x2s* d /*out*/, const ae_p24x2f ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_AE_L32X2F24_I)(const ae_f24x2 * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_LP24X2F_I)(const ae_p24x2f * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_ae_f24x2_loadi)(const ae_f24x2 * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN ae_p24x2f CSTUB_(_TIE_xt_hifi2_ae_p24x2f_loadi)(const ae_p24x2f * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_L32X2F24_IP)(ae_f24x2* d /*out*/, const ae_f24x2 ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_LP24X2F_IU)(ae_p24x2s* d /*out*/, const ae_p24x2f ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_f24x2_loadip)(ae_f24x2* d /*out*/, const ae_f24x2 ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_p24x2f_loadip)(ae_p24x2f* d /*out*/, const ae_p24x2f ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_L32X2F24_RIP)(ae_f24x2* d /*out*/, const ae_f24x2 ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_L32X2F24_RIC)(ae_f24x2* d /*out*/, const ae_f24x2 ** a /*inout*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_AE_L32X2F24_X)(const ae_f24x2 * a /*in*/, const int off /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_LP24X2F_X)(const ae_p24x2f * a /*in*/, const int off /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_ae_f24x2_loadx)(const ae_f24x2 * a /*in*/, const int off /*in*/);
CSTUB_EXTERN ae_p24x2f CSTUB_(_TIE_xt_hifi2_ae_p24x2f_loadx)(const ae_p24x2f * a /*in*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_L32X2F24_XP)(ae_f24x2* d /*out*/, const ae_f24x2 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_LP24X2F_XU)(ae_p24x2s* d /*out*/, const ae_p24x2f ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_f24x2_loadxp)(ae_f24x2* d /*out*/, const ae_f24x2 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_p24x2f_loadxp)(ae_p24x2f* d /*out*/, const ae_p24x2f ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_L32X2_XC)(ae_int32x2* d /*out*/, const ae_int32x2 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_LP24X2_C)(ae_p24x2s* d /*out*/, const ae_p24x2s ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_L32X2_I)(const ae_int32x2 * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_ae_int32x2_loadi)(const ae_int32x2 * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_ae_f32x2_loadi)(const ae_f32x2 * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_LP24X2_I)(const ae_p24x2s * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_ae_int24x2_loadi)(const ae_int24x2 * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_ae_p24x2s_loadi)(const ae_p24x2s * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_L32X2_IP)(ae_int32x2* d /*out*/, const ae_int32x2 ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int32x2_loadip)(ae_int32x2* d /*out*/, const ae_int32x2 ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_f32x2_loadip)(ae_f32x2* d /*out*/, const ae_f32x2 ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_LP24X2_IU)(ae_p24x2s* d /*out*/, const ae_p24x2s ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int24x2_loadip)(ae_int24x2* d /*out*/, const ae_int24x2 ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_p24x2s_loadip)(ae_p24x2s* d /*out*/, const ae_p24x2s ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_L32X2_RIP)(ae_int32x2* d /*out*/, const ae_int32x2 ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_L32X2_RIC)(ae_int32x2* d /*out*/, const ae_int32x2 ** a /*inout*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_L32X2_X)(const ae_int32x2 * a /*in*/, const int off /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_ae_int32x2_loadx)(const ae_int32x2 * a /*in*/, const int off /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_ae_f32x2_loadx)(const ae_f32x2 * a /*in*/, const int off /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_LP24X2_X)(const ae_p24x2s * a /*in*/, const int off /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_ae_int24x2_loadx)(const ae_int24x2 * a /*in*/, const int off /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_ae_p24x2s_loadx)(const ae_p24x2s * a /*in*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_L32X2_XP)(ae_int32x2* d /*out*/, const ae_int32x2 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int32x2_loadxp)(ae_int32x2* d /*out*/, const ae_int32x2 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_f32x2_loadxp)(ae_f32x2* d /*out*/, const ae_f32x2 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_LP24X2_XU)(ae_p24x2s* d /*out*/, const ae_p24x2s ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int24x2_loadxp)(ae_int24x2* d /*out*/, const ae_int24x2 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_p24x2s_loadxp)(ae_p24x2s* d /*out*/, const ae_p24x2s ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_L16X4_XC)(ae_int16x4* d /*out*/, const ae_int16x4 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_L16X4_I)(const ae_int16x4 * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_ae_int16x4_loadi)(const ae_int16x4 * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN ae_f16x4 CSTUB_(_TIE_xt_hifi2_ae_f16x4_loadi)(const ae_f16x4 * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_L16X4_IP)(ae_int16x4* d /*out*/, const ae_int16x4 ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int16x4_loadip)(ae_int16x4* d /*out*/, const ae_int16x4 ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_f16x4_loadip)(ae_f16x4* d /*out*/, const ae_f16x4 ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_L16X4_RIP)(ae_int16x4* d /*out*/, const ae_int16x4 ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_L16X4_RIC)(ae_int16x4* d /*out*/, const ae_int16x4 ** a /*inout*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_L16X4_X)(const ae_int16x4 * a /*in*/, const int off /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_ae_int16x4_loadx)(const ae_int16x4 * a /*in*/, const int off /*in*/);
CSTUB_EXTERN ae_f16x4 CSTUB_(_TIE_xt_hifi2_ae_f16x4_loadx)(const ae_f16x4 * a /*in*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_L16X4_XP)(ae_int16x4* d /*out*/, const ae_int16x4 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int16x4_loadxp)(ae_int16x4* d /*out*/, const ae_int16x4 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_f16x4_loadxp)(ae_f16x4* d /*out*/, const ae_f16x4 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_L64_XC)(ae_int64* d /*out*/, const ae_int64 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_LQ56_C)(ae_q56s* d /*out*/, const ae_q56s ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_L64_I)(const ae_int64 * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_ae_int64_loadi)(const ae_int64 * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_ae_f64_loadi)(const ae_f64 * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_LQ56_I)(const ae_q56s * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_ae_q56s_loadi)(const ae_q56s * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_L64_IP)(ae_int64* d /*out*/, const ae_int64 ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int64_loadip)(ae_int64* d /*out*/, const ae_int64 ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_f64_loadip)(ae_f64* d /*out*/, const ae_f64 ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_LQ56_IU)(ae_q56s* d /*out*/, const ae_q56s ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_q56s_loadip)(ae_q56s* d /*out*/, const ae_q56s ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_L64_X)(const ae_int64 * a /*in*/, const int off /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_ae_int64_loadx)(const ae_int64 * a /*in*/, const int off /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_ae_f64_loadx)(const ae_f64 * a /*in*/, const int off /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_LQ56_X)(const ae_q56s * a /*in*/, const int off /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_ae_q56s_loadx)(const ae_q56s * a /*in*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_L64_XP)(ae_int64* d /*out*/, const ae_int64 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int64_loadxp)(ae_int64* d /*out*/, const ae_int64 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_f64_loadxp)(ae_f64* d /*out*/, const ae_f64 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_LQ56_XU)(ae_q56s* d /*out*/, const ae_q56s ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_q56s_loadxp)(ae_q56s* d /*out*/, const ae_q56s ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S16X2M_XC)(const ae_int32x2 d /*in*/, ae_p16x2s ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SP16X2F_C)(const ae_p24x2s d /*in*/, ae_p16x2s ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S16X2M_I)(const ae_int32x2 d /*in*/, const ae_p16x2s * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SP16X2F_I)(const ae_p24x2s d /*in*/, const ae_p16x2s * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_p16x2s_storei)(const ae_p16x2s d /*in*/, const ae_p16x2s * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S16X2M_IU)(const ae_int32x2 d /*in*/, ae_p16x2s ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SP16X2F_IU)(const ae_p24x2s d /*in*/, ae_p16x2s ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_p16x2s_storeiu)(const ae_p16x2s d /*in*/, ae_p16x2s ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S16X2M_X)(const ae_int32x2 d /*in*/, const ae_p16x2s * a /*in*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SP16X2F_X)(const ae_p24x2s d /*in*/, const ae_p16x2s * a /*in*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_p16x2s_storex)(const ae_p16x2s d /*in*/, const ae_p16x2s * a /*in*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S16X2M_XU)(const ae_int32x2 d /*in*/, ae_p16x2s ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SP16X2F_XU)(const ae_p24x2s d /*in*/, ae_p16x2s ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_p16x2s_storexu)(const ae_p16x2s d /*in*/, ae_p16x2s ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S32X2F24_XC)(const ae_f24x2 d /*in*/, ae_f24x2 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SP24X2F_C)(const ae_p24x2s d /*in*/, ae_p24x2f ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S32X2F24_I)(const ae_f24x2 d /*in*/, const ae_f24x2 * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SP24X2F_I)(const ae_p24x2s d /*in*/, const ae_p24x2f * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_f24x2_storei)(const ae_f24x2 d /*in*/, const ae_f24x2 * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_p24x2f_storei)(const ae_p24x2f d /*in*/, const ae_p24x2f * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S32X2F24_IP)(const ae_f24x2 d /*in*/, ae_f24x2 ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SP24X2F_IU)(const ae_p24x2s d /*in*/, ae_p24x2f ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_f24x2_storeip)(const ae_f24x2 d /*in*/, ae_f24x2 ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_p24x2f_storeip)(const ae_p24x2f d /*in*/, ae_p24x2f ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S32X2F24_RIP)(const ae_f24x2 d /*in*/, ae_f24x2 ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S32X2F24_RIC)(const ae_f24x2 d /*in*/, ae_f24x2 ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S32X2F24_X)(const ae_f24x2 d /*in*/, const ae_f24x2 * a /*in*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SP24X2F_X)(const ae_p24x2s d /*in*/, const ae_p24x2f * a /*in*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_f24x2_storex)(const ae_f24x2 d /*in*/, const ae_f24x2 * a /*in*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_p24x2f_storex)(const ae_p24x2f d /*in*/, const ae_p24x2f * a /*in*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S32X2F24_XP)(const ae_f24x2 d /*in*/, ae_f24x2 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SP24X2F_XU)(const ae_p24x2s d /*in*/, ae_p24x2f ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_f24x2_storexp)(const ae_f24x2 d /*in*/, ae_f24x2 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_p24x2f_storexp)(const ae_p24x2f d /*in*/, ae_p24x2f ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S32X2_XC)(const ae_int32x2 d /*in*/, ae_int32x2 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SP24X2S_C)(const ae_p24x2s d /*in*/, ae_p24x2s ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S32X2_I)(const ae_int32x2 d /*in*/, const ae_int32x2 * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int32x2_storei)(const ae_int32x2 d /*in*/, const ae_int32x2 * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_f32x2_storei)(const ae_f32x2 d /*in*/, const ae_f32x2 * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SP24X2S_I)(const ae_p24x2s d /*in*/, const ae_p24x2s * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_p24x2s_storei)(const ae_p24x2s d /*in*/, const ae_p24x2s * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int24x2_storei)(const ae_int24x2 d /*in*/, const ae_int24x2 * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S32X2_IP)(const ae_int32x2 d /*in*/, ae_int32x2 ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int32x2_storeip)(const ae_int32x2 d /*in*/, ae_int32x2 ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_f32x2_storeip)(const ae_f32x2 d /*in*/, ae_f32x2 ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SP24X2S_IU)(const ae_p24x2s d /*in*/, ae_p24x2s ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_p24x2s_storeip)(const ae_p24x2s d /*in*/, ae_p24x2s ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int24x2_storeip)(const ae_int24x2 d /*in*/, ae_int24x2 ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S32X2_RIP)(const ae_int32x2 d /*in*/, ae_int32x2 ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S32X2_RIC)(const ae_int32x2 d /*in*/, ae_int32x2 ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S32X2_X)(const ae_int32x2 d /*in*/, const ae_int32x2 * a /*in*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int32x2_storex)(const ae_int32x2 d /*in*/, const ae_int32x2 * a /*in*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_f32x2_storex)(const ae_f32x2 d /*in*/, const ae_f32x2 * a /*in*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SP24X2S_X)(const ae_p24x2s d /*in*/, const ae_p24x2s * a /*in*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_p24x2s_storex)(const ae_p24x2s d /*in*/, const ae_p24x2s * a /*in*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int24x2_storex)(const ae_int24x2 d /*in*/, const ae_int24x2 * a /*in*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S32X2_XP)(const ae_int32x2 d /*in*/, ae_int32x2 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int32x2_storexp)(const ae_int32x2 d /*in*/, ae_int32x2 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_f32x2_storexp)(const ae_f32x2 d /*in*/, ae_f32x2 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SP24X2S_XU)(const ae_p24x2s d /*in*/, ae_p24x2s ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_p24x2s_storexp)(const ae_p24x2s d /*in*/, ae_p24x2s ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int24x2_storexp)(const ae_int24x2 d /*in*/, ae_int24x2 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S16X4_XC)(const ae_int16x4 d /*in*/, ae_int16x4 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S16X4_I)(const ae_int16x4 d /*in*/, const ae_int16x4 * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int16x4_storei)(const ae_int16x4 d /*in*/, const ae_int16x4 * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_f16x4_storei)(const ae_f16x4 d /*in*/, const ae_f16x4 * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S16X4_IP)(const ae_int16x4 d /*in*/, ae_int16x4 ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int16x4_storeip)(const ae_int16x4 d /*in*/, ae_int16x4 ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_f16x4_storeip)(const ae_f16x4 d /*in*/, ae_f16x4 ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S16X4_RIP)(const ae_int16x4 d /*in*/, ae_int16x4 ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S16X4_RIC)(const ae_int16x4 d /*in*/, ae_int16x4 ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S16X4_X)(const ae_int16x4 d /*in*/, const ae_int16x4 * a /*in*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int16x4_storex)(const ae_int16x4 d /*in*/, const ae_int16x4 * a /*in*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_f16x4_storex)(const ae_f16x4 d /*in*/, const ae_f16x4 * a /*in*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S16X4_XP)(const ae_int16x4 d /*in*/, ae_int16x4 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int16x4_storexp)(const ae_int16x4 d /*in*/, ae_int16x4 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_f16x4_storexp)(const ae_f16x4 d /*in*/, ae_f16x4 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S16M_L_XC)(const ae_int32x2 d /*in*/, ae_p16s ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SP16F_L_C)(const ae_p24x2s d /*in*/, ae_p16s ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S16M_L_I)(const ae_int32x2 d /*in*/, const ae_p16s * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SP16F_L_I)(const ae_p24x2s d /*in*/, const ae_p16s * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_p16s_storei)(const ae_p16s d /*in*/, const ae_p16s * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S16M_L_IU)(const ae_int32x2 d /*in*/, ae_p16s ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SP16F_L_IU)(const ae_p24x2s d /*in*/, ae_p16s ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_p16s_storeiu)(const ae_p16s d /*in*/, ae_p16s ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S16M_L_X)(const ae_int32x2 d /*in*/, const ae_p16s * a /*in*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SP16F_L_X)(const ae_p24x2s d /*in*/, const ae_p16s * a /*in*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_p16s_storex)(const ae_p16s d /*in*/, const ae_p16s * a /*in*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S16M_L_XU)(const ae_int32x2 d /*in*/, ae_p16s ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SP16F_L_XU)(const ae_p24x2s d /*in*/, ae_p16s ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_p16s_storexu)(const ae_p16s d /*in*/, ae_p16s ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S32F24_L_XC)(const ae_f24x2 d /*in*/, ae_f24 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SP24F_L_C)(const ae_p24x2s d /*in*/, ae_p24f ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S32F24_L_I)(const ae_f24x2 d /*in*/, const ae_f24 * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SP24F_L_I)(const ae_p24x2s d /*in*/, const ae_p24f * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_f24_storei)(const ae_f24 d /*in*/, const ae_f24 * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_p24f_storei)(const ae_p24f d /*in*/, const ae_p24f * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S32F24_L_IP)(const ae_f24x2 d /*in*/, ae_f24 ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SP24F_L_IU)(const ae_p24x2s d /*in*/, ae_p24f ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_f24_storeip)(const ae_f24 d /*in*/, ae_f24 ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_p24f_storeip)(const ae_p24f d /*in*/, ae_p24f ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S32F24_L_X)(const ae_f24x2 d /*in*/, const ae_f24 * a /*in*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SP24F_L_X)(const ae_p24x2s d /*in*/, const ae_p24f * a /*in*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_f24_storex)(const ae_f24 d /*in*/, const ae_f24 * a /*in*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_p24f_storex)(const ae_p24f d /*in*/, const ae_p24f * a /*in*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S32F24_L_XP)(const ae_f24x2 d /*in*/, ae_f24 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SP24F_L_XU)(const ae_p24x2s d /*in*/, ae_p24f ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_f24_storexp)(const ae_f24 d /*in*/, ae_f24 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_p24f_storexp)(const ae_p24f d /*in*/, ae_p24f ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S32_L_XC)(const ae_int32x2 d /*in*/, ae_int32 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SP24S_L_C)(const ae_p24x2s d /*in*/, ae_p24s ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S32_L_I)(const ae_int32x2 d /*in*/, const ae_int32 * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int32_storei)(const ae_int32 d /*in*/, const ae_int32 * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_f32_storei)(const ae_f32 d /*in*/, const ae_f32 * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SP24S_L_I)(const ae_p24x2s d /*in*/, const ae_p24s * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int24_storei)(const ae_int24 d /*in*/, const ae_int24 * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_p24s_storei)(const ae_p24s d /*in*/, const ae_p24s * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S32_L_IP)(const ae_int32x2 d /*in*/, ae_int32 ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int32_storeip)(const ae_int32 d /*in*/, ae_int32 ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_f32_storeip)(const ae_f32 d /*in*/, ae_f32 ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SP24S_L_IU)(const ae_p24x2s d /*in*/, ae_p24s ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int24_storeip)(const ae_int24 d /*in*/, ae_int24 ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_p24s_storeip)(const ae_p24s d /*in*/, ae_p24s ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S32_L_X)(const ae_int32x2 d /*in*/, const ae_int32 * a /*in*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int32_storex)(const ae_int32 d /*in*/, const ae_int32 * a /*in*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_f32_storex)(const ae_f32 d /*in*/, const ae_f32 * a /*in*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SP24S_L_X)(const ae_p24x2s d /*in*/, const ae_p24s * a /*in*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int24_storex)(const ae_int24 d /*in*/, const ae_int24 * a /*in*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_p24s_storex)(const ae_p24s d /*in*/, const ae_p24s * a /*in*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S32_L_XP)(const ae_int32x2 d /*in*/, ae_int32 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int32_storexp)(const ae_int32 d /*in*/, ae_int32 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_f32_storexp)(const ae_f32 d /*in*/, ae_f32 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SP24S_L_XU)(const ae_p24x2s d /*in*/, ae_p24s ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int24_storexp)(const ae_int24 d /*in*/, ae_int24 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_p24s_storexp)(const ae_p24s d /*in*/, ae_p24s ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S16_0_XC)(const ae_int16x4 d /*in*/, ae_int16 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S16_0_I)(const ae_int16x4 d /*in*/, const ae_int16 * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int16_storei)(const ae_int16 d /*in*/, const ae_int16 * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_f16_storei)(const ae_f16 d /*in*/, const ae_f16 * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S16_0_IP)(const ae_int16x4 d /*in*/, ae_int16 ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int16_storeip)(const ae_int16 d /*in*/, ae_int16 ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_f16_storeip)(const ae_f16 d /*in*/, ae_f16 ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S16_0_X)(const ae_int16x4 d /*in*/, const ae_int16 * a /*in*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int16_storex)(const ae_int16 d /*in*/, const ae_int16 * a /*in*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_f16_storex)(const ae_f16 d /*in*/, const ae_f16 * a /*in*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S16_0_XP)(const ae_int16x4 d /*in*/, ae_int16 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int16_storexp)(const ae_int16 d /*in*/, ae_int16 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_f16_storexp)(const ae_f16 d /*in*/, ae_f16 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S64_XC)(const ae_int64 d /*in*/, ae_int64 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SQ56S_C)(const ae_q56s d /*in*/, ae_q56s ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S64_I)(const ae_int64 d /*in*/, const ae_int64 * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int64_storei)(const ae_int64 d /*in*/, const ae_int64 * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_f64_storei)(const ae_f64 d /*in*/, const ae_f64 * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SQ56S_I)(const ae_q56s d /*in*/, const ae_q56s * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_q56s_storei)(const ae_q56s d /*in*/, const ae_q56s * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S64_IP)(const ae_int64 d /*in*/, ae_int64 ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int64_storeip)(const ae_int64 d /*in*/, ae_int64 ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_f64_storeip)(const ae_f64 d /*in*/, ae_f64 ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SQ56S_IU)(const ae_q56s d /*in*/, ae_q56s ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_q56s_storeip)(const ae_q56s d /*in*/, ae_q56s ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S64_X)(const ae_int64 d /*in*/, const ae_int64 * a /*in*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int64_storex)(const ae_int64 d /*in*/, const ae_int64 * a /*in*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_f64_storex)(const ae_f64 d /*in*/, const ae_f64 * a /*in*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SQ56S_X)(const ae_q56s d /*in*/, const ae_q56s * a /*in*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_q56s_storex)(const ae_q56s d /*in*/, const ae_q56s * a /*in*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S64_XP)(const ae_int64 d /*in*/, ae_int64 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int64_storexp)(const ae_int64 d /*in*/, ae_int64 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_f64_storexp)(const ae_f64 d /*in*/, ae_f64 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SQ56S_XU)(const ae_q56s d /*in*/, ae_q56s ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_q56s_storexp)(const ae_q56s d /*in*/, ae_q56s ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S32M_XC)(const ae_int64 d /*in*/, ae_q32s ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SQ32F_C)(const ae_q56s d /*in*/, ae_q32s ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S32M_I)(const ae_int64 d /*in*/, const ae_q32s * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SQ32F_I)(const ae_q56s d /*in*/, const ae_q32s * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_q32s_storei)(const ae_q32s d /*in*/, const ae_q32s * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S32M_IU)(const ae_int64 d /*in*/, ae_q32s ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SQ32F_IU)(const ae_q56s d /*in*/, ae_q32s ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_q32s_storeiu)(const ae_q32s d /*in*/, ae_q32s ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S32M_X)(const ae_int64 d /*in*/, const ae_q32s * a /*in*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SQ32F_X)(const ae_q56s d /*in*/, const ae_q32s * a /*in*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_q32s_storex)(const ae_q32s d /*in*/, const ae_q32s * a /*in*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S32M_XU)(const ae_int64 d /*in*/, ae_q32s ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SQ32F_XU)(const ae_q56s d /*in*/, ae_q32s ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_q32s_storexu)(const ae_q32s d /*in*/, ae_q32s ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SA24_IC)(const ae_int24x2 d /*in*/, ae_valign* su /*inout*/, void ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SA24_IP)(const ae_int24x2 d /*in*/, ae_valign* su /*inout*/, void ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SA24_RIP)(const ae_int24x2 d /*in*/, ae_valign* su /*inout*/, void ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SA24_RIC)(const ae_int24x2 d /*in*/, ae_valign* su /*inout*/, void ** a /*inout*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_ae_p16s_mtor_ae_p24x2s)(const ae_p16s * a /*in*/, immediate i /*in*/);
CSTUB_EXTERN ae_p24x2f CSTUB_(_TIE_xt_hifi2_ae_p16s_mtor_ae_p24x2f)(const ae_p16s * a /*in*/, immediate i /*in*/);
CSTUB_EXTERN ae_p24s CSTUB_(_TIE_xt_hifi2_ae_p16s_mtor_ae_p24s)(const ae_p16s * a /*in*/, immediate i /*in*/);
CSTUB_EXTERN ae_p24f CSTUB_(_TIE_xt_hifi2_ae_p16s_mtor_ae_p24f)(const ae_p16s * a /*in*/, immediate i /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_ae_p24s_mtor_ae_p24x2s)(const ae_p24s * a /*in*/, immediate i /*in*/);
CSTUB_EXTERN ae_p24x2f CSTUB_(_TIE_xt_hifi2_ae_p24s_mtor_ae_p24x2f)(const ae_p24s * a /*in*/, immediate i /*in*/);
CSTUB_EXTERN ae_p24f CSTUB_(_TIE_xt_hifi2_ae_p24s_mtor_ae_p24f)(const ae_p24s * a /*in*/, immediate i /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_ae_p24f_mtor_ae_p24x2s)(const ae_p24f * a /*in*/, immediate i /*in*/);
CSTUB_EXTERN ae_p24x2f CSTUB_(_TIE_xt_hifi2_ae_p24f_mtor_ae_p24x2f)(const ae_p24f * a /*in*/, immediate i /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_ae_p24x2f_mtor_ae_p24x2s)(const ae_p24x2f * a /*in*/, immediate i /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_ae_p16x2s_mtor_ae_p24x2s)(const ae_p16x2s * a /*in*/, immediate i /*in*/);
CSTUB_EXTERN ae_p24x2f CSTUB_(_TIE_xt_hifi2_ae_p16x2s_mtor_ae_p24x2f)(const ae_p16x2s * a /*in*/, immediate i /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_p24x2s_rtom_ae_p16x2s)(const ae_p24x2s d /*in*/, const ae_p16x2s * a /*in*/, immediate i /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_p24x2f_rtom_ae_p16x2s)(const ae_p24x2f d /*in*/, const ae_p16x2s * a /*in*/, immediate i /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_p24x2s_rtom_ae_p24x2f)(const ae_p24x2s d /*in*/, const ae_p24x2f * a /*in*/, immediate i /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_p24x2f_rtom_ae_p24x2s)(const ae_p24x2f d /*in*/, const ae_p24x2s * a /*in*/, immediate i /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_p24x2s_rtom_ae_p16s)(const ae_p24x2s d /*in*/, const ae_p16s * a /*in*/, immediate i /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_p24x2f_rtom_ae_p16s)(const ae_p24x2f d /*in*/, const ae_p16s * a /*in*/, immediate i /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_p24s_rtom_ae_p16s)(const ae_p24s d /*in*/, const ae_p16s * a /*in*/, immediate i /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_p24f_rtom_ae_p16s)(const ae_p24f d /*in*/, const ae_p16s * a /*in*/, immediate i /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_p24x2s_rtom_ae_p24s)(const ae_p24x2s d /*in*/, const ae_p24s * a /*in*/, immediate i /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_p24x2f_rtom_ae_p24s)(const ae_p24x2f d /*in*/, const ae_p24s * a /*in*/, immediate i /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_p24f_rtom_ae_p24s)(const ae_p24f d /*in*/, const ae_p24s * a /*in*/, immediate i /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_p24x2s_rtom_ae_p24f)(const ae_p24x2s d /*in*/, const ae_p24f * a /*in*/, immediate i /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_p24x2f_rtom_ae_p24f)(const ae_p24x2f d /*in*/, const ae_p24f * a /*in*/, immediate i /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_p24s_rtom_ae_p24f)(const ae_p24s d /*in*/, const ae_p24f * a /*in*/, immediate i /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_ae_q32s_mtor_ae_q56s)(const ae_q32s * a /*in*/, immediate i /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_q56s_rtom_ae_q32s)(const ae_q56s d /*in*/, const ae_q32s * a /*in*/, immediate i /*in*/);
CSTUB_EXTERN ae_valign CSTUB_(_TIE_xt_hifi2_ae_valign_loadi)(const ae_valign * a /*in*/, immediate imm /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_valign_storei)(const ae_valign su /*in*/, const ae_valign * a /*in*/, immediate imm /*in*/);
CSTUB_EXTERN ae_valign CSTUB_(_TIE_xt_hifi2_ae_valign_move)(const ae_valign v /*in*/);
CSTUB_EXTERN ae_valign CSTUB_(_TIE_xt_hifi2_AE_LA64_PP)(const void * a /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_LA24POS_PC)(ae_valign* uu /*out*/, const void ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_LA24X2POS_PC)(ae_valign* uu /*out*/, const void ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_LA32X2POS_PC)(ae_valign* uu /*out*/, const ae_int32x2 ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_LA16X4POS_PC)(ae_valign* uu /*out*/, const ae_int16x4 ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_LA24NEG_PC)(ae_valign* uu /*out*/, const void ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_LA24X2NEG_PC)(ae_valign* uu /*out*/, const void ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_LA32X2NEG_PC)(ae_valign* uu /*out*/, const ae_int32x2 ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_LA16X4NEG_PC)(ae_valign* uu /*out*/, const ae_int16x4 ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_LA32X2F24POS_PC)(ae_valign* uu /*out*/, const ae_f24x2 ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_LA32X2F24NEG_PC)(ae_valign* uu /*out*/, const ae_f24x2 ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SA64POS_FP)(ae_valign* su /*inout*/, const void * a /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SA64POS_FC)(ae_valign* su /*inout*/, const void * a /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SA64NEG_FP)(ae_valign* su /*inout*/, const void * a /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SA64NEG_FC)(ae_valign* su /*inout*/, const void * a /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_LA32X2_IC)(ae_int32x2* d /*out*/, ae_valign* uu /*inout*/, const ae_int32x2 ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_LA32X2_IP)(ae_int32x2* d /*out*/, ae_valign* uu /*inout*/, const ae_int32x2 ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_LA32X2_RIP)(ae_int32x2* d /*out*/, ae_valign* uu /*inout*/, const ae_int32x2 ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_LA32X2_RIC)(ae_int32x2* d /*out*/, ae_valign* uu /*inout*/, const ae_int32x2 ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_LA16X4_IC)(ae_int16x4* d /*out*/, ae_valign* uu /*inout*/, const ae_int16x4 ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_LA16X4_IP)(ae_int16x4* d /*out*/, ae_valign* uu /*inout*/, const ae_int16x4 ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_LA16X4_RIP)(ae_int16x4* d /*out*/, ae_valign* uu /*inout*/, const ae_int16x4 ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_LA16X4_RIC)(ae_int16x4* d /*out*/, ae_valign* uu /*inout*/, const ae_int16x4 ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_LA32X2F24_IC)(ae_f24x2* d /*out*/, ae_valign* uu /*inout*/, const ae_f24x2 ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_LA32X2F24_IP)(ae_f24x2* d /*out*/, ae_valign* uu /*inout*/, const ae_f24x2 ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_LA32X2F24_RIP)(ae_f24x2* d /*out*/, ae_valign* uu /*inout*/, const ae_f24x2 ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_LA32X2F24_RIC)(ae_f24x2* d /*out*/, ae_valign* uu /*inout*/, const ae_f24x2 ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_LA24_IC)(ae_int24x2* d /*out*/, ae_valign* uu /*inout*/, const void ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_LA24_IP)(ae_int24x2* d /*out*/, ae_valign* uu /*inout*/, const void ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_LA24_RIP)(ae_int24x2* d /*out*/, ae_valign* uu /*inout*/, const void ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_LA24_RIC)(ae_int24x2* d /*out*/, ae_valign* uu /*inout*/, const void ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_LA24X2_IC)(ae_int24x2* d /*out*/, ae_valign* uu /*inout*/, const void ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_LA24X2_IP)(ae_int24x2* d /*out*/, ae_valign* uu /*inout*/, const void ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_LA24X2_RIP)(ae_int24x2* d /*out*/, ae_valign* uu /*inout*/, const void ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_LA24X2_RIC)(ae_int24x2* d /*out*/, ae_valign* uu /*inout*/, const void ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SA32X2_IC)(const ae_int32x2 d /*in*/, ae_valign* su /*inout*/, ae_int32x2 ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SA32X2_IP)(const ae_int32x2 d /*in*/, ae_valign* su /*inout*/, ae_int32x2 ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SA32X2_RIP)(const ae_int32x2 d /*in*/, ae_valign* su /*inout*/, ae_int32x2 ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SA32X2_RIC)(const ae_int32x2 d /*in*/, ae_valign* su /*inout*/, ae_int32x2 ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SA16X4_IC)(const ae_int16x4 d /*in*/, ae_valign* su /*inout*/, ae_int16x4 ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SA16X4_IP)(const ae_int16x4 d /*in*/, ae_valign* su /*inout*/, ae_int16x4 ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SA16X4_RIP)(const ae_int16x4 d /*in*/, ae_valign* su /*inout*/, ae_int16x4 ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SA16X4_RIC)(const ae_int16x4 d /*in*/, ae_valign* su /*inout*/, ae_int16x4 ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SA32X2F24_IC)(const ae_f24x2 d /*in*/, ae_valign* su /*inout*/, ae_f24x2 ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SA32X2F24_IP)(const ae_f24x2 d /*in*/, ae_valign* su /*inout*/, ae_f24x2 ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SA32X2F24_RIP)(const ae_f24x2 d /*in*/, ae_valign* su /*inout*/, ae_f24x2 ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SA32X2F24_RIC)(const ae_f24x2 d /*in*/, ae_valign* su /*inout*/, ae_f24x2 ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SA24_L_IC)(const ae_int24x2 d /*in*/, ae_valign* su /*inout*/, void ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SA24_L_IP)(const ae_int24x2 d /*in*/, ae_valign* su /*inout*/, void ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SA24_L_RIP)(const ae_int24x2 d /*in*/, ae_valign* su /*inout*/, void ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SA24_L_RIC)(const ae_int24x2 d /*in*/, ae_valign* su /*inout*/, void ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SA24X2_IC)(const ae_int24x2 d /*in*/, ae_valign* su /*inout*/, void ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SA24X2_IP)(const ae_int24x2 d /*in*/, ae_valign* su /*inout*/, void ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SA24X2_RIP)(const ae_int24x2 d /*in*/, ae_valign* su /*inout*/, void ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SA24X2_RIC)(const ae_int24x2 d /*in*/, ae_valign* su /*inout*/, void ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S32RA64S_I)(const ae_f64 d /*in*/, const ae_f32 * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S32RA64S_IP)(const ae_f64 d /*in*/, ae_f32 ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S32RA64S_X)(const ae_f64 d /*in*/, const ae_f32 * a /*in*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S32RA64S_XP)(const ae_f64 d /*in*/, ae_f32 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S32RA64S_XC)(const ae_f64 d /*in*/, ae_f32 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S24RA64S_I)(const ae_f64 d /*in*/, const ae_f24 * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S24RA64S_IP)(const ae_f64 d /*in*/, ae_f24 ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S24RA64S_X)(const ae_f64 d /*in*/, const ae_f24 * a /*in*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S24RA64S_XP)(const ae_f64 d /*in*/, ae_f24 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S24RA64S_XC)(const ae_f64 d /*in*/, ae_f24 ** a /*inout*/, const int off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S32X2RA64S_IP)(const ae_f64 d2 /*in*/, const ae_f64 d1 /*in*/, ae_f32x2 ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S24X2RA64S_IP)(const ae_f64 d2 /*in*/, const ae_f64 d1 /*in*/, ae_f24x2 ** a /*inout*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_ZERO)(void);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_ZERO64)(void);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_ZERO32)(void);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_ZERO24)(void);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_ZERO16)(void);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_ZEROP48)(void);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MOV)(const ae_int64 d0 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MOV64)(const ae_int64 d0 /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_MOV16)(const ae_int16x4 d0 /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_MOV24)(const ae_int24x2 d0 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_MOV32)(const ae_int32x2 d0 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_MOVP48)(const ae_p24x2s d0 /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_SEL16I_N)(const ae_int16x4 d0 /*in*/, const ae_int16x4 d1 /*in*/, immediate i /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_SEL16I)(const ae_int16x4 d0 /*in*/, const ae_int16x4 d1 /*in*/, immediate i /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_SEL32I)(const ae_int32x2 d0 /*in*/, const ae_int32x2 d1 /*in*/, immediate i /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_SEL16_5432)(const ae_int16x4 d0 /*in*/, const ae_int16x4 d1 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_SEL32_LH)(const ae_int32x2 d0 /*in*/, const ae_int32x2 d1 /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_SEL24_LH)(const ae_int32x2 d0 /*in*/, const ae_int32x2 d1 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_SELP24_LH)(const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_SEL16_7520)(const ae_int16x4 d0 /*in*/, const ae_int16x4 d1 /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_SEL16_7610)(const ae_int16x4 d0 /*in*/, const ae_int16x4 d1 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_SEL32_HL)(const ae_int32x2 d0 /*in*/, const ae_int32x2 d1 /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_SEL24_HL)(const ae_int32x2 d0 /*in*/, const ae_int32x2 d1 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_SELP24_HL)(const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_SEL16_4321)(const ae_int16x4 d0 /*in*/, const ae_int16x4 d1 /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_SEL16_6543)(const ae_int16x4 d0 /*in*/, const ae_int16x4 d1 /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_SEL16_7632)(const ae_int16x4 d0 /*in*/, const ae_int16x4 d1 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_SEL32_HH)(const ae_int32x2 d0 /*in*/, const ae_int32x2 d1 /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_SEL24_HH)(const ae_int32x2 d0 /*in*/, const ae_int32x2 d1 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_SELP24_HH)(const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_SEL16_5410)(const ae_int16x4 d0 /*in*/, const ae_int16x4 d1 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_SEL32_LL)(const ae_int32x2 d0 /*in*/, const ae_int32x2 d1 /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_SEL24_LL)(const ae_int32x2 d0 /*in*/, const ae_int32x2 d1 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_SELP24_LL)(const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_SEL16_6420)(const ae_int16x4 d0 /*in*/, const ae_int16x4 d1 /*in*/);
CSTUB_EXTERN ae_f16x4 CSTUB_(_TIE_xt_hifi2_AE_CVT16X4)(const ae_f32x2 dl /*in*/, const ae_f32x2 dh /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_SEL16_7362)(const ae_int16x4 d0 /*in*/, const ae_int16x4 d1 /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_SEL16_5146)(const ae_int16x4 d0 /*in*/, const ae_int16x4 d1 /*in*/);
CSTUB_EXTERN ae_f16x4 CSTUB_(_TIE_xt_hifi2_AE_TRUNC16X4F32)(const ae_f32x2 dl /*in*/, const ae_f32x2 dh /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_SHORTSWAP)(const ae_int16x4 d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MOVT16X4)(ae_int16x4* d /*inout*/, const ae_int16x4 d0 /*in*/, const xtbool4 bhl /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MOVF16X4)(ae_int16x4* d /*inout*/, const ae_int16x4 d0 /*in*/, const xtbool4 bhl /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MOVT32X2)(ae_int32x2* d /*inout*/, const ae_int32x2 d0 /*in*/, const xtbool2 bhl /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MOVTP24X2)(ae_p24x2s* d /*inout*/, const ae_p24x2s d0 /*in*/, const xtbool2 bhl /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MOVF32X2)(ae_int32x2* d /*inout*/, const ae_int32x2 d0 /*in*/, const xtbool2 bhl /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MOVFP24X2)(ae_p24x2s* d /*inout*/, const ae_p24x2s d0 /*in*/, const xtbool2 bhl /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MOVT64)(ae_int64* d /*inout*/, const ae_int64 d0 /*in*/, const xtbool bi /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MOVTP48)(ae_p24x2s* d /*inout*/, const ae_p24x2s d0 /*in*/, const xtbool bi /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MOVF64)(ae_int64* d /*inout*/, const ae_int64 d0 /*in*/, const xtbool bi /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MOVFP48)(ae_p24x2s* d /*inout*/, const ae_p24x2s d0 /*in*/, const xtbool bi /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_MOVDA32X2)(const unsigned int a0 /*in*/, const unsigned int a1 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_MOVPA24X2)(const unsigned int ah /*in*/, const unsigned int al /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_MOVDA32)(const unsigned int a /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_MOVDA16X2)(const unsigned int ah /*in*/, const unsigned int al /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_MOVDA16)(const unsigned int a /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_MOVI)(immediate i /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_TRUNCP24A32X2)(const unsigned int ah /*in*/, const unsigned int al /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_SAT16X4)(const ae_int32x2 d0 /*in*/, const ae_int32x2 d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_CVT32X2F16_32)(const ae_f16x4 d0 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_CVT32X2F16_10)(const ae_f16x4 d0 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_SEXT32X2D16_32)(const ae_int16x4 d0 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_SEXT32X2D16_10)(const ae_int16x4 d0 /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_AE_CVTA32F24S_L)(const ae_int24x2 d0 /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_AE_CVTA32P24_L)(const ae_p24x2s d0 /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_AE_CVTA32F24S_H)(const ae_int24x2 d0 /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_AE_CVTA32P24_H)(const ae_p24x2s d0 /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_CVTP24A16X2_LL)(const unsigned int ah /*in*/, const unsigned int al /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_CVTP24A16X2_LH)(const unsigned int ah /*in*/, const unsigned int al /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_CVTP24A16X2_HL)(const unsigned int ah /*in*/, const unsigned int al /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_CVTP24A16X2_HH)(const unsigned int ah /*in*/, const unsigned int al /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_TRUNCP24Q48X2)(const ae_q56s d0 /*in*/, const ae_q56s d1 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_TRUNCA32X2F64S)(const ae_int64 d0 /*in*/, const ae_int64 d1 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_TRUNCI32X2F64S)(const ae_int64 d0 /*in*/, const ae_int64 d1 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_TRUNCA32F64S_L)(const ae_int32x2 d0 /*in*/, const ae_int64 d1 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_TRUNCI32F64S_L)(const ae_int32x2 d0 /*in*/, const ae_int64 d1 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_TRUNCP16)(const ae_int24x2 d0 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_ROUND32X2F64SSYM)(const ae_f64 d0 /*in*/, const ae_f64 d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_ROUND32F64SSYM)(const ae_f64 d0 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_ROUND32X2F64SASYM)(const ae_f64 d0 /*in*/, const ae_f64 d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_ROUND32F64SASYM)(const ae_f64 d0 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_ROUND32X2F48SSYM)(const ae_f64 d0 /*in*/, const ae_f64 d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_ROUND32F48SSYM)(const ae_f64 d0 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_ROUND32X2F48SASYM)(const ae_f64 d0 /*in*/, const ae_f64 d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_ROUND32F48SASYM)(const ae_f64 d0 /*in*/);
CSTUB_EXTERN ae_f16x4 CSTUB_(_TIE_xt_hifi2_AE_ROUND16X4F32SSYM)(const ae_f32x2 d1 /*in*/, const ae_f32x2 d0 /*in*/);
CSTUB_EXTERN ae_f16x4 CSTUB_(_TIE_xt_hifi2_AE_ROUND16X4F32SASYM)(const ae_f32x2 d1 /*in*/, const ae_f32x2 d0 /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_AE_ROUND24X2F48SSYM)(const ae_f64 d0 /*in*/, const ae_f64 d1 /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_AE_ROUND24F48SSYM)(const ae_f64 d0 /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_AE_ROUND24X2F48SASYM)(const ae_f64 d0 /*in*/, const ae_f64 d1 /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_AE_ROUND24F48SASYM)(const ae_f64 d0 /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_AE_ROUNDSP16Q48X2SYM)(const ae_f64 d0 /*in*/, const ae_f64 d1 /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_AE_ROUNDSP16Q48SYM)(const ae_f64 d0 /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_AE_ROUNDSP16Q48X2ASYM)(const ae_f64 d0 /*in*/, const ae_f64 d1 /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_AE_ROUNDSP16Q48ASYM)(const ae_f64 d0 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_ROUNDSP24Q48ASYM)(const ae_q56s d0 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_ROUNDSP24Q48SYM)(const ae_q56s d0 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_MINABS32S)(const ae_f32x2 d0 /*in*/, const ae_f32x2 d1 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_MINABSSP24S)(const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_MAXABS32S)(const ae_f32x2 d0 /*in*/, const ae_f32x2 d1 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_MAXABSSP24S)(const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_ROUNDSP16F24SYM)(const ae_f32x2 d0 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_ROUNDSP16SYM)(const ae_p24x2s d0 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_ROUNDSP16F24ASYM)(const ae_f32x2 d0 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_ROUNDSP16ASYM)(const ae_p24x2s d0 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_ZEROQ56)(void);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MOVQ56)(const ae_q56s d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MOVTQ56)(ae_q56s* d /*inout*/, const ae_q56s d0 /*in*/, const xtbool bi /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MOVFQ56)(ae_q56s* d /*inout*/, const ae_q56s d0 /*in*/, const xtbool bi /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_CVTQ56A32S)(const unsigned int a0 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_CVT48A32)(const unsigned int a0 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_CVT64A32)(const unsigned int a0 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_CVTQ48A32S)(const unsigned int a /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_CVTQ56P32S_L)(const ae_int32x2 d0 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_CVTQ48P24S_L)(const ae_p24x2s d0 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_CVTQ56P32S_H)(const ae_int32x2 d0 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_CVTQ48P24S_H)(const ae_p24x2s d0 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_CVT64F32_H)(const ae_int32x2 d0 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_CVT64F32_L)(const ae_int32x2 d0 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_SAT48S)(const ae_f64 d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_SATQ48S)(const ae_q56s d1 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_SATQ56S)(const ae_f64 d1 /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_AE_SAT24S)(const ae_f32x2 d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_TRUNCQ32)(const ae_q56s d0 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MINABS64S)(const ae_f64 d0 /*in*/, const ae_f64 d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MINABSSQ56S)(const ae_q56s d0 /*in*/, const ae_q56s d1 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MAXABS64S)(const ae_f64 d0 /*in*/, const ae_f64 d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MAXABSSQ56S)(const ae_q56s d0 /*in*/, const ae_q56s d1 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_ROUNDSQ32F48SYM)(const ae_int64 d0 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_ROUNDSQ32SYM)(const ae_q56s d0 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_ROUNDSQ32F48ASYM)(const ae_int64 d0 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_ROUNDSQ32ASYM)(const ae_q56s d0 /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_AE_TRUNCA32Q48)(const ae_q56s d0 /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_AE_TRUNCA32Q64)(const ae_int64 d0 /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_AE_MOVAD32_L)(const ae_int32x2 d0 /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_AE_MOVAP24S_L)(const ae_int24x2 d0 /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_AE_MOVAD32_H)(const ae_int32x2 d0 /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_AE_MOVAP24S_H)(const ae_int24x2 d0 /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_AE_MOVAD16_3)(const ae_int16x4 d0 /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_AE_MOVAD16_2)(const ae_int16x4 d0 /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_AE_MOVAD16_1)(const ae_int16x4 d0 /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_AE_MOVAD16_0)(const ae_int16x4 d0 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_SRA64_32)(const ae_int32x2 s /*in*/, const unsigned int sa /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_PKSR24)(ae_f24x2* d /*inout*/, const ae_f64 ps /*in*/, immediate pos /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_PKSR32)(ae_f32x2* d /*inout*/, const ae_f64 ps /*in*/, immediate pos /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_AE_TRUNCA16P24S_L)(const ae_int24x2 d0 /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_AE_TRUNCA16P24S_H)(const ae_int24x2 d0 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_ADD32)(const ae_int32x2 d0 /*in*/, const ae_int32x2 d1 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_ADDP24)(const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_SUB32)(const ae_int32x2 d0 /*in*/, const ae_int32x2 d1 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_SUBP24)(const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_ADDSUB32)(const ae_int32x2 d0 /*in*/, const ae_int32x2 d1 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_SUBADD32)(const ae_int32x2 d0 /*in*/, const ae_int32x2 d1 /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_ADD16)(const ae_int16x4 d0 /*in*/, const ae_int16x4 d1 /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_SUB16)(const ae_int16x4 d0 /*in*/, const ae_int16x4 d1 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_ADD32_HL_LH)(const ae_int32x2 d0 /*in*/, const ae_int32x2 d1 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_NEG32)(const ae_int32x2 d0 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_NEGP24)(const ae_p24x2s d0 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_ABS32)(const ae_int32x2 d0 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_ABSP24)(const ae_p24x2s d0 /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_AE_ADD24S)(const ae_f32x2 d0 /*in*/, const ae_f32x2 d1 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_ADDSP24S)(const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_AE_SUB24S)(const ae_f32x2 d0 /*in*/, const ae_f32x2 d1 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_SUBSP24S)(const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_ADD32S)(const ae_f32x2 d0 /*in*/, const ae_f32x2 d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_SUB32S)(const ae_f32x2 d0 /*in*/, const ae_f32x2 d1 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_ADDSUB32S)(const ae_int32x2 d0 /*in*/, const ae_int32x2 d1 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_SUBADD32S)(const ae_int32x2 d0 /*in*/, const ae_int32x2 d1 /*in*/);
CSTUB_EXTERN ae_f16x4 CSTUB_(_TIE_xt_hifi2_AE_ADD16S)(const ae_f16x4 d0 /*in*/, const ae_f16x4 d1 /*in*/);
CSTUB_EXTERN ae_f16x4 CSTUB_(_TIE_xt_hifi2_AE_SUB16S)(const ae_f16x4 d0 /*in*/, const ae_f16x4 d1 /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_AE_NEG24S)(const ae_f32x2 d0 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_NEGSP24S)(const ae_p24x2s d0 /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_AE_ABS24S)(const ae_f32x2 d0 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_ABSSP24S)(const ae_p24x2s d0 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_NEG32S)(const ae_f32x2 d0 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_ABS32S)(const ae_f32x2 d0 /*in*/);
CSTUB_EXTERN ae_f16x4 CSTUB_(_TIE_xt_hifi2_AE_NEG16S)(const ae_f16x4 d0 /*in*/);
CSTUB_EXTERN ae_f16x4 CSTUB_(_TIE_xt_hifi2_AE_ABS16S)(const ae_f16x4 d0 /*in*/);
CSTUB_EXTERN xtbool4 CSTUB_(_TIE_xt_hifi2_AE_LT16)(const ae_int16x4 d0 /*in*/, const ae_int16x4 d1 /*in*/);
CSTUB_EXTERN xtbool4 CSTUB_(_TIE_xt_hifi2_AE_LE16)(const ae_int16x4 d0 /*in*/, const ae_int16x4 d1 /*in*/);
CSTUB_EXTERN xtbool4 CSTUB_(_TIE_xt_hifi2_AE_EQ16)(const ae_int16x4 d0 /*in*/, const ae_int16x4 d1 /*in*/);
CSTUB_EXTERN xtbool2 CSTUB_(_TIE_xt_hifi2_AE_LT32)(const ae_int32x2 d0 /*in*/, const ae_int32x2 d1 /*in*/);
CSTUB_EXTERN xtbool2 CSTUB_(_TIE_xt_hifi2_AE_LTP24S)(const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN xtbool2 CSTUB_(_TIE_xt_hifi2_AE_LE32)(const ae_int32x2 d0 /*in*/, const ae_int32x2 d1 /*in*/);
CSTUB_EXTERN xtbool2 CSTUB_(_TIE_xt_hifi2_AE_LEP24S)(const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN xtbool2 CSTUB_(_TIE_xt_hifi2_AE_EQ32)(const ae_int32x2 d0 /*in*/, const ae_int32x2 d1 /*in*/);
CSTUB_EXTERN xtbool2 CSTUB_(_TIE_xt_hifi2_AE_EQP24)(const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_MIN32)(const ae_int32x2 d0 /*in*/, const ae_int32x2 d1 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_MINP24S)(const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MINB32)(ae_int32x2* d /*out*/, const ae_int32x2 d0 /*in*/, const ae_int32x2 d1 /*in*/, xtbool2* bhl /*out*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MINBP24S)(ae_p24x2s* d /*out*/, const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/, xtbool2* bhl /*out*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_MAX32)(const ae_int32x2 d0 /*in*/, const ae_int32x2 d1 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_MAXP24S)(const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MAXB32)(ae_int32x2* d /*out*/, const ae_int32x2 d0 /*in*/, const ae_int32x2 d1 /*in*/, xtbool2* bhl /*out*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MAXBP24S)(ae_p24x2s* d /*out*/, const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/, xtbool2* bhl /*out*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_ADD64)(const ae_int64 d0 /*in*/, const ae_int64 d1 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_SUB64)(const ae_int64 d0 /*in*/, const ae_int64 d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_ADDQ56)(const ae_q56s d0 /*in*/, const ae_q56s d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_SUBQ56)(const ae_q56s d0 /*in*/, const ae_q56s d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_NEGQ56)(const ae_q56s d0 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_ABSQ56)(const ae_q56s d0 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_NEG64)(const ae_int64 d0 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_ABS64)(const ae_int64 d0 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_ADDSQ56S)(const ae_q56s d0 /*in*/, const ae_q56s d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_SUBSQ56S)(const ae_q56s d0 /*in*/, const ae_q56s d1 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_ADD64S)(const ae_f64 d0 /*in*/, const ae_f64 d1 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_SUB64S)(const ae_f64 d0 /*in*/, const ae_f64 d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_NEGSQ56S)(const ae_q56s d0 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_ABSSQ56S)(const ae_q56s d0 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_NEG64S)(const ae_f64 d0 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_ABS64S)(const ae_f64 d0 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_AND)(const ae_int64 d0 /*in*/, const ae_int64 d1 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_AND64)(const ae_int64 d0 /*in*/, const ae_int64 d1 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_AND32)(const ae_int32x2 d0 /*in*/, const ae_int32x2 d1 /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_AND24)(const ae_int24x2 d0 /*in*/, const ae_int24x2 d1 /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_AND16)(const ae_int16x4 d0 /*in*/, const ae_int16x4 d1 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_ANDP48)(const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_ANDQ56)(const ae_q56s d0 /*in*/, const ae_q56s d1 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_NAND)(const ae_int64 d0 /*in*/, const ae_int64 d1 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_NAND64)(const ae_int64 d0 /*in*/, const ae_int64 d1 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_NAND32)(const ae_int32x2 d0 /*in*/, const ae_int32x2 d1 /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_NAND24)(const ae_int24x2 d0 /*in*/, const ae_int24x2 d1 /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_NAND16)(const ae_int16x4 d0 /*in*/, const ae_int16x4 d1 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_NANDP48)(const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_NANDQ56)(const ae_q56s d0 /*in*/, const ae_q56s d1 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_OR)(const ae_int64 d0 /*in*/, const ae_int64 d1 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_OR64)(const ae_int64 d0 /*in*/, const ae_int64 d1 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_OR32)(const ae_int32x2 d0 /*in*/, const ae_int32x2 d1 /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_OR24)(const ae_int24x2 d0 /*in*/, const ae_int24x2 d1 /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_OR16)(const ae_int16x4 d0 /*in*/, const ae_int16x4 d1 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_ORP48)(const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_ORQ56)(const ae_q56s d0 /*in*/, const ae_q56s d1 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_XOR)(const ae_int64 d0 /*in*/, const ae_int64 d1 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_XOR64)(const ae_int64 d0 /*in*/, const ae_int64 d1 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_XOR32)(const ae_int32x2 d0 /*in*/, const ae_int32x2 d1 /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_XOR24)(const ae_int24x2 d0 /*in*/, const ae_int24x2 d1 /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_XOR16)(const ae_int16x4 d0 /*in*/, const ae_int16x4 d1 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_XORP48)(const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_XORQ56)(const ae_q56s d0 /*in*/, const ae_q56s d1 /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_SLAI24)(const ae_int24x2 d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_SLLIP24)(const ae_p24x2s d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_SLLI24)(const ae_int24x2 d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_SRLI24)(const ae_int24x2 d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_SRLIP24)(const ae_p24x2s d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_SRAI24)(const ae_int24x2 d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_SRAIP24)(const ae_p24x2s d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_SLAS24)(const ae_int24x2 d0 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_SLLSP24)(const ae_p24x2s d0 /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_SRLS24)(const ae_int24x2 d0 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_SRLSP24)(const ae_p24x2s d0 /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_SRAS24)(const ae_int24x2 d0 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_SRASP24)(const ae_p24x2s d0 /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_SRAI16)(const ae_int16x4 d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_SRAI16R)(const ae_int16x4 d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_SLAI32)(const ae_int32x2 d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_SLLI32)(const ae_int32x2 d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_SRLI32)(const ae_int32x2 d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_SRAI32)(const ae_int32x2 d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_SRAI32R)(const ae_int32x2 d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_SLAS32)(const ae_int32x2 d0 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_SRLS32)(const ae_int32x2 d0 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_SRAS32)(const ae_int32x2 d0 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_SLAA32)(const ae_int32x2 d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_SRLA32)(const ae_int32x2 d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_SRAA32)(const ae_int32x2 d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_f16x4 CSTUB_(_TIE_xt_hifi2_AE_SLLI16S)(const ae_f16x4 d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_f16x4 CSTUB_(_TIE_xt_hifi2_AE_SLAI16S)(const ae_f16x4 d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_f16x4 CSTUB_(_TIE_xt_hifi2_AE_SLAA16S)(const ae_f16x4 d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_f16x4 CSTUB_(_TIE_xt_hifi2_AE_SRAA16S)(const ae_f16x4 d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_f16x4 CSTUB_(_TIE_xt_hifi2_AE_SRAA16RS)(const ae_f16x4 d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_AE_SLAI24S)(const ae_f24x2 d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_AE_SLLI24S)(const ae_f24x2 d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_SLLISP24S)(const ae_p24x2s d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_AE_SLAS24S)(const ae_f24x2 d0 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_SLLSSP24S)(const ae_p24x2s d0 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_SLLI32S)(const ae_f32x2 d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_SLAI32S)(const ae_f32x2 d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_SLAS32S)(const ae_f32x2 d0 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_SLAA32S)(const ae_f32x2 d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_SRAA32S)(const ae_f32x2 d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_SRAA32RS)(const ae_f32x2 d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_SLASQ56)(const ae_q56s d0 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_SLLSQ56)(const ae_q56s d0 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_SRLSQ56)(const ae_q56s d0 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_SRASQ56)(const ae_q56s d0 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_SLAAQ56)(const ae_q56s d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_SLAIQ56)(const ae_q56s d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_SLLAQ56)(const ae_q56s d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_SLLIQ56)(const ae_q56s d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_SRLAQ56)(const ae_q56s d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_SRLIQ56)(const ae_q56s d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_SRAAQ56)(const ae_q56s d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_SLAI64)(const ae_int64 d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_SLLI64)(const ae_int64 d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_SRLI64)(const ae_int64 d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_SRAI64)(const ae_int64 d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_SRAIQ56)(const ae_q56s d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_SLAS64)(const ae_int64 d0 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_SRLS64)(const ae_int64 d0 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_SRAS64)(const ae_int64 d0 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_SLAA64)(const ae_int64 d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_SRLA64)(const ae_int64 d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_SRAA64)(const ae_int64 d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_SLAISQ56S)(const ae_q56s d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_SLLISQ56S)(const ae_q56s d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_SLASSQ56S)(const ae_q56s d0 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_SLLSSQ56S)(const ae_q56s d0 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_SLAASQ56S)(const ae_q56s d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_SLLASQ56S)(const ae_q56s d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_SLAI64S)(const ae_f64 d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_SLLI64S)(const ae_f64 d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_SLAS64S)(const ae_f64 d0 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_SLAA64S)(const ae_f64 d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN xtbool CSTUB_(_TIE_xt_hifi2_AE_LT64)(const ae_int64 d0 /*in*/, const ae_int64 d1 /*in*/);
CSTUB_EXTERN xtbool CSTUB_(_TIE_xt_hifi2_AE_LTQ56S)(const ae_q56s d0 /*in*/, const ae_q56s d1 /*in*/);
CSTUB_EXTERN xtbool CSTUB_(_TIE_xt_hifi2_AE_LE64)(const ae_int64 d0 /*in*/, const ae_int64 d1 /*in*/);
CSTUB_EXTERN xtbool CSTUB_(_TIE_xt_hifi2_AE_LEQ56S)(const ae_q56s d0 /*in*/, const ae_q56s d1 /*in*/);
CSTUB_EXTERN xtbool CSTUB_(_TIE_xt_hifi2_AE_EQ64)(const ae_int64 d0 /*in*/, const ae_int64 d1 /*in*/);
CSTUB_EXTERN xtbool CSTUB_(_TIE_xt_hifi2_AE_EQQ56)(const ae_q56s d0 /*in*/, const ae_q56s d1 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MAX64)(const ae_int64 d0 /*in*/, const ae_int64 d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MAXQ56S)(const ae_q56s d0 /*in*/, const ae_q56s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MAXB64)(ae_int64* d /*out*/, const ae_int64 d0 /*in*/, const ae_int64 d1 /*in*/, xtbool* bo /*out*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MAXBQ56S)(ae_q56s* d /*out*/, const ae_q56s d0 /*in*/, const ae_q56s d1 /*in*/, xtbool* bo /*out*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MIN64)(const ae_int64 d0 /*in*/, const ae_int64 d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MINQ56S)(const ae_q56s d0 /*in*/, const ae_q56s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MINB64)(ae_int64* d /*out*/, const ae_int64 d0 /*in*/, const ae_int64 d1 /*in*/, xtbool* bo /*out*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MINBQ56S)(ae_q56s* d /*out*/, const ae_q56s d0 /*in*/, const ae_q56s d1 /*in*/, xtbool* bo /*out*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_AE_NSA64)(const ae_int64 d0 /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_AE_NSAQ56S)(const ae_q56s d0 /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_AE_NSAZ16_0)(const ae_int16x4 d0 /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_AE_NSAZ32_L)(const ae_int32x2 d0 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULS32F48P16S_LL)(const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULFS32P16S_LL)(const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULF32S_LL)(const ae_f32x2 d0 /*in*/, const ae_f32x2 d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULFP24S_LL)(const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULF24S_LL)(const ae_f24x2 d0 /*in*/, const ae_f24x2 d1 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MUL32_LL)(const ae_int32x2 d0 /*in*/, const ae_int32x2 d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULP24S_LL)(const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MUL24_LL)(const ae_int24x2 d0 /*in*/, const ae_int24x2 d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULS32F48P16S_LL_S2)(const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULFS32P16S_LL_S2)(const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULF32R_LL)(const ae_f32x2 d0 /*in*/, const ae_f32x2 d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULS32F48P16S_LH)(const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULFS32P16S_LH)(const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULS32F48P16S_HL)(const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULFS32P16S_HL)(const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULF32S_LH)(const ae_f32x2 d0 /*in*/, const ae_f32x2 d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULFP24S_LH)(const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULF24S_LH)(const ae_f24x2 d0 /*in*/, const ae_f24x2 d1 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULF32S_HL)(const ae_f32x2 d0 /*in*/, const ae_f32x2 d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULFP24S_HL)(const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULF24S_HL)(const ae_f24x2 d0 /*in*/, const ae_f24x2 d1 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MUL32_LH)(const ae_int32x2 d0 /*in*/, const ae_int32x2 d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULP24S_LH)(const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MUL24_LH)(const ae_int24x2 d0 /*in*/, const ae_int24x2 d1 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MUL32_HL)(const ae_int32x2 d0 /*in*/, const ae_int32x2 d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULP24S_HL)(const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MUL24_HL)(const ae_int24x2 d0 /*in*/, const ae_int24x2 d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULS32F48P16S_LH_S2)(const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULFS32P16S_LH_S2)(const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULF32R_LH)(const ae_f32x2 d0 /*in*/, const ae_f32x2 d1 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULF32R_HL)(const ae_f32x2 d0 /*in*/, const ae_f32x2 d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULS32F48P16S_HH)(const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULFS32P16S_HH)(const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULF32S_HH)(const ae_f32x2 d0 /*in*/, const ae_f32x2 d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULFP24S_HH)(const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULF24S_HH)(const ae_f24x2 d0 /*in*/, const ae_f24x2 d1 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MUL32_HH)(const ae_int32x2 d0 /*in*/, const ae_int32x2 d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULP24S_HH)(const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MUL24_HH)(const ae_int24x2 d0 /*in*/, const ae_int24x2 d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULS32F48P16S_HH_S2)(const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULFS32P16S_HH_S2)(const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULF32R_HH)(const ae_f32x2 d0 /*in*/, const ae_f32x2 d1 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULF32R_LL_S2)(const ae_f32x2 d0 /*in*/, const ae_f32x2 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAS32F48P16S_LL)(ae_q56s* d /*inout*/, const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAFS32P16S_LL)(ae_q56s* d /*inout*/, const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAF32S_LL)(ae_f64* d /*inout*/, const ae_f32x2 d0 /*in*/, const ae_f32x2 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAFP24S_LL)(ae_q56s* d /*inout*/, const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAF24S_LL)(ae_f64* d /*inout*/, const ae_f24x2 d0 /*in*/, const ae_f24x2 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULA32_LL)(ae_int64* d /*inout*/, const ae_int32x2 d0 /*in*/, const ae_int32x2 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAP24S_LL)(ae_q56s* d /*inout*/, const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULA24_LL)(ae_int64* d /*inout*/, const ae_int24x2 d0 /*in*/, const ae_int24x2 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAS32F48P16S_LL_S2)(ae_q56s* d /*inout*/, const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAFS32P16S_LL_S2)(ae_q56s* d /*inout*/, const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAF32R_LL)(ae_f64* d /*inout*/, const ae_f32x2 d0 /*in*/, const ae_f32x2 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAS32F48P16S_LH)(ae_q56s* d /*inout*/, const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAFS32P16S_LH)(ae_q56s* d /*inout*/, const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAS32F48P16S_HL)(ae_q56s* d /*inout*/, const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAFS32P16S_HL)(ae_q56s* d /*inout*/, const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAF32S_LH)(ae_f64* d /*inout*/, const ae_f32x2 d0 /*in*/, const ae_f32x2 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAFP24S_LH)(ae_q56s* d /*inout*/, const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAF24S_LH)(ae_f64* d /*inout*/, const ae_f24x2 d0 /*in*/, const ae_f24x2 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAF32S_HL)(ae_f64* d /*inout*/, const ae_f32x2 d0 /*in*/, const ae_f32x2 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAFP24S_HL)(ae_q56s* d /*inout*/, const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAF24S_HL)(ae_f64* d /*inout*/, const ae_f24x2 d0 /*in*/, const ae_f24x2 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULA32_LH)(ae_int64* d /*inout*/, const ae_int32x2 d0 /*in*/, const ae_int32x2 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAP24S_LH)(ae_q56s* d /*inout*/, const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULA24_LH)(ae_int64* d /*inout*/, const ae_int24x2 d0 /*in*/, const ae_int24x2 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULA32_HL)(ae_int64* d /*inout*/, const ae_int32x2 d0 /*in*/, const ae_int32x2 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAP24S_HL)(ae_q56s* d /*inout*/, const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULA24_HL)(ae_int64* d /*inout*/, const ae_int24x2 d0 /*in*/, const ae_int24x2 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAS32F48P16S_LH_S2)(ae_q56s* d /*inout*/, const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAFS32P16S_LH_S2)(ae_q56s* d /*inout*/, const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAF32R_LH)(ae_f64* d /*inout*/, const ae_f32x2 d0 /*in*/, const ae_f32x2 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAF32R_HL)(ae_f64* d /*inout*/, const ae_f32x2 d0 /*in*/, const ae_f32x2 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAS32F48P16S_HH)(ae_q56s* d /*inout*/, const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAFS32P16S_HH)(ae_q56s* d /*inout*/, const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAF32S_HH)(ae_f64* d /*inout*/, const ae_f32x2 d0 /*in*/, const ae_f32x2 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAFP24S_HH)(ae_q56s* d /*inout*/, const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAF24S_HH)(ae_f64* d /*inout*/, const ae_f24x2 d0 /*in*/, const ae_f24x2 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULA32_HH)(ae_int64* d /*inout*/, const ae_int32x2 d0 /*in*/, const ae_int32x2 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAP24S_HH)(ae_q56s* d /*inout*/, const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULA24_HH)(ae_int64* d /*inout*/, const ae_int24x2 d0 /*in*/, const ae_int24x2 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAS32F48P16S_HH_S2)(ae_q56s* d /*inout*/, const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAFS32P16S_HH_S2)(ae_q56s* d /*inout*/, const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAF32R_HH)(ae_f64* d /*inout*/, const ae_f32x2 d0 /*in*/, const ae_f32x2 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAF32R_LL_S2)(ae_f64* d /*inout*/, const ae_f32x2 d0 /*in*/, const ae_f32x2 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSS32F48P16S_LL)(ae_q56s* d /*inout*/, const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSFS32P16S_LL)(ae_q56s* d /*inout*/, const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSF32S_LL)(ae_f64* d /*inout*/, const ae_f32x2 d0 /*in*/, const ae_f32x2 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSFP24S_LL)(ae_q56s* d /*inout*/, const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSF24S_LL)(ae_f64* d /*inout*/, const ae_f24x2 d0 /*in*/, const ae_f24x2 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULS32_LL)(ae_int64* d /*inout*/, const ae_int32x2 d0 /*in*/, const ae_int32x2 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSP24S_LL)(ae_q56s* d /*inout*/, const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULS24_LL)(ae_int64* d /*inout*/, const ae_int24x2 d0 /*in*/, const ae_int24x2 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSS32F48P16S_LL_S2)(ae_q56s* d /*inout*/, const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSFS32P16S_LL_S2)(ae_q56s* d /*inout*/, const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSF32R_LL)(ae_f64* d /*inout*/, const ae_f32x2 d0 /*in*/, const ae_f32x2 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSS32F48P16S_LH)(ae_q56s* d /*inout*/, const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSFS32P16S_LH)(ae_q56s* d /*inout*/, const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSS32F48P16S_HL)(ae_q56s* d /*inout*/, const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSFS32P16S_HL)(ae_q56s* d /*inout*/, const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSF32S_LH)(ae_f64* d /*inout*/, const ae_f32x2 d0 /*in*/, const ae_f32x2 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSFP24S_LH)(ae_q56s* d /*inout*/, const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSF24S_LH)(ae_f64* d /*inout*/, const ae_f24x2 d0 /*in*/, const ae_f24x2 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSF32S_HL)(ae_f64* d /*inout*/, const ae_f32x2 d0 /*in*/, const ae_f32x2 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSFP24S_HL)(ae_q56s* d /*inout*/, const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSF24S_HL)(ae_f64* d /*inout*/, const ae_f24x2 d0 /*in*/, const ae_f24x2 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULS32_LH)(ae_int64* d /*inout*/, const ae_int32x2 d0 /*in*/, const ae_int32x2 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSP24S_LH)(ae_q56s* d /*inout*/, const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULS24_LH)(ae_int64* d /*inout*/, const ae_int24x2 d0 /*in*/, const ae_int24x2 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULS32_HL)(ae_int64* d /*inout*/, const ae_int32x2 d0 /*in*/, const ae_int32x2 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSP24S_HL)(ae_q56s* d /*inout*/, const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULS24_HL)(ae_int64* d /*inout*/, const ae_int24x2 d0 /*in*/, const ae_int24x2 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSS32F48P16S_LH_S2)(ae_q56s* d /*inout*/, const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSFS32P16S_LH_S2)(ae_q56s* d /*inout*/, const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSF32R_LH)(ae_f64* d /*inout*/, const ae_f32x2 d0 /*in*/, const ae_f32x2 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSF32R_HL)(ae_f64* d /*inout*/, const ae_f32x2 d0 /*in*/, const ae_f32x2 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSS32F48P16S_HH)(ae_q56s* d /*inout*/, const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSFS32P16S_HH)(ae_q56s* d /*inout*/, const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSF32S_HH)(ae_f64* d /*inout*/, const ae_f32x2 d0 /*in*/, const ae_f32x2 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSFP24S_HH)(ae_q56s* d /*inout*/, const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSF24S_HH)(ae_f64* d /*inout*/, const ae_f24x2 d0 /*in*/, const ae_f24x2 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULS32_HH)(ae_int64* d /*inout*/, const ae_int32x2 d0 /*in*/, const ae_int32x2 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSP24S_HH)(ae_q56s* d /*inout*/, const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULS24_HH)(ae_int64* d /*inout*/, const ae_int24x2 d0 /*in*/, const ae_int24x2 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSS32F48P16S_HH_S2)(ae_q56s* d /*inout*/, const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSFS32P16S_HH_S2)(ae_q56s* d /*inout*/, const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSF32R_HH)(ae_f64* d /*inout*/, const ae_f32x2 d0 /*in*/, const ae_f32x2 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSF32R_LL_S2)(ae_f64* d /*inout*/, const ae_f32x2 d0 /*in*/, const ae_f32x2 d1 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULF32S_LL_S2)(const ae_f32x2 d0 /*in*/, const ae_f32x2 d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULFP24S_LL_S2)(const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULF24S_LL_S2)(const ae_f24x2 d0 /*in*/, const ae_f24x2 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAF32S_LL_S2)(ae_f64* d /*inout*/, const ae_f32x2 d0 /*in*/, const ae_f32x2 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAFP24S_LL_S2)(ae_q56s* d /*inout*/, const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAF24S_LL_S2)(ae_f64* d /*inout*/, const ae_f24x2 d0 /*in*/, const ae_f24x2 d1 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MUL32_LL_S2)(const ae_int32x2 d0 /*in*/, const ae_int32x2 d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULP24S_LL_S2)(const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MUL24_LL_S2)(const ae_int24x2 d0 /*in*/, const ae_int24x2 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULA32_LL_S2)(ae_int64* d /*inout*/, const ae_int32x2 d0 /*in*/, const ae_int32x2 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAP24S_LL_S2)(ae_q56s* d /*inout*/, const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULA24_LL_S2)(ae_int64* d /*inout*/, const ae_int24x2 d0 /*in*/, const ae_int24x2 d1 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MUL32U_LL)(const ae_int32x2 d0 /*in*/, const ae_int32x2 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULA32U_LL)(ae_int64* d /*inout*/, const ae_int32x2 d0 /*in*/, const ae_int32x2 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULS32U_LL)(ae_int64* d /*inout*/, const ae_int32x2 d0 /*in*/, const ae_int32x2 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAFS56P24S_LL)(ae_q56s* d /*inout*/, const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAS56P24S_LL)(ae_q56s* d /*inout*/, const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAFS56P24S_LH)(ae_q56s* d /*inout*/, const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAFS56P24S_HL)(ae_q56s* d /*inout*/, const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAS56P24S_LH)(ae_q56s* d /*inout*/, const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAS56P24S_HL)(ae_q56s* d /*inout*/, const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAFS56P24S_HH)(ae_q56s* d /*inout*/, const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAS56P24S_HH)(ae_q56s* d /*inout*/, const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSFS56P24S_LL)(ae_q56s* d /*inout*/, const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSS56P24S_LL)(ae_q56s* d /*inout*/, const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSFS56P24S_LH)(ae_q56s* d /*inout*/, const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSFS56P24S_HL)(ae_q56s* d /*inout*/, const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSS56P24S_LH)(ae_q56s* d /*inout*/, const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSS56P24S_HL)(ae_q56s* d /*inout*/, const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSFS56P24S_HH)(ae_q56s* d /*inout*/, const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSS56P24S_HH)(ae_q56s* d /*inout*/, const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_MULF16SS_33)(const ae_f16x4 d0 /*in*/, const ae_f16x4 d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_MULF16SS_22)(const ae_f16x4 d0 /*in*/, const ae_f16x4 d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_MULF16SS_32)(const ae_f16x4 d0 /*in*/, const ae_f16x4 d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_MULF16SS_21)(const ae_f16x4 d0 /*in*/, const ae_f16x4 d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_MULF16SS_31)(const ae_f16x4 d0 /*in*/, const ae_f16x4 d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_MULF16SS_30)(const ae_f16x4 d0 /*in*/, const ae_f16x4 d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_MULF16SS_10)(const ae_f16x4 d0 /*in*/, const ae_f16x4 d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_MULF16SS_20)(const ae_f16x4 d0 /*in*/, const ae_f16x4 d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_MULF16SS_11)(const ae_f16x4 d0 /*in*/, const ae_f16x4 d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_MULF16SS_00)(const ae_f16x4 d0 /*in*/, const ae_f16x4 d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_MULF16SS_00_S2)(const ae_f16x4 d0 /*in*/, const ae_f16x4 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSF16SS_33)(ae_f32x2* d /*inout*/, const ae_f16x4 d0 /*in*/, const ae_f16x4 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSF16SS_22)(ae_f32x2* d /*inout*/, const ae_f16x4 d0 /*in*/, const ae_f16x4 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSF16SS_32)(ae_f32x2* d /*inout*/, const ae_f16x4 d0 /*in*/, const ae_f16x4 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSF16SS_21)(ae_f32x2* d /*inout*/, const ae_f16x4 d0 /*in*/, const ae_f16x4 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSF16SS_31)(ae_f32x2* d /*inout*/, const ae_f16x4 d0 /*in*/, const ae_f16x4 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSF16SS_30)(ae_f32x2* d /*inout*/, const ae_f16x4 d0 /*in*/, const ae_f16x4 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSF16SS_10)(ae_f32x2* d /*inout*/, const ae_f16x4 d0 /*in*/, const ae_f16x4 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSF16SS_20)(ae_f32x2* d /*inout*/, const ae_f16x4 d0 /*in*/, const ae_f16x4 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSF16SS_11)(ae_f32x2* d /*inout*/, const ae_f16x4 d0 /*in*/, const ae_f16x4 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSF16SS_00)(ae_f32x2* d /*inout*/, const ae_f16x4 d0 /*in*/, const ae_f16x4 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSF16SS_00_S2)(ae_f32x2* d /*inout*/, const ae_f16x4 d0 /*in*/, const ae_f16x4 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAF16SS_33)(ae_f32x2* d /*inout*/, const ae_f16x4 d0 /*in*/, const ae_f16x4 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAF16SS_22)(ae_f32x2* d /*inout*/, const ae_f16x4 d0 /*in*/, const ae_f16x4 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAF16SS_32)(ae_f32x2* d /*inout*/, const ae_f16x4 d0 /*in*/, const ae_f16x4 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAF16SS_21)(ae_f32x2* d /*inout*/, const ae_f16x4 d0 /*in*/, const ae_f16x4 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAF16SS_31)(ae_f32x2* d /*inout*/, const ae_f16x4 d0 /*in*/, const ae_f16x4 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAF16SS_30)(ae_f32x2* d /*inout*/, const ae_f16x4 d0 /*in*/, const ae_f16x4 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAF16SS_10)(ae_f32x2* d /*inout*/, const ae_f16x4 d0 /*in*/, const ae_f16x4 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAF16SS_20)(ae_f32x2* d /*inout*/, const ae_f16x4 d0 /*in*/, const ae_f16x4 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAF16SS_11)(ae_f32x2* d /*inout*/, const ae_f16x4 d0 /*in*/, const ae_f16x4 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAF16SS_00)(ae_f32x2* d /*inout*/, const ae_f16x4 d0 /*in*/, const ae_f16x4 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAF16SS_00_S2)(ae_f32x2* d /*inout*/, const ae_f16x4 d0 /*in*/, const ae_f16x4 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAAFD16SS_33_22)(ae_f32x2* d /*inout*/, const ae_f16x4 d0 /*in*/, const ae_f16x4 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAAFD16SS_33_22_S2)(ae_f32x2* d /*inout*/, const ae_f16x4 d0 /*in*/, const ae_f16x4 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAAFD16SS_13_02)(ae_f32x2* d /*inout*/, const ae_f16x4 d0 /*in*/, const ae_f16x4 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAAFD16SS_13_02_S2)(ae_f32x2* d /*inout*/, const ae_f16x4 d0 /*in*/, const ae_f16x4 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAAFD16SS_11_00)(ae_f32x2* d /*inout*/, const ae_f16x4 d0 /*in*/, const ae_f16x4 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAAFD16SS_11_00_S2)(ae_f32x2* d /*inout*/, const ae_f16x4 d0 /*in*/, const ae_f16x4 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSSFD16SS_33_22)(ae_f32x2* d /*inout*/, const ae_f16x4 d0 /*in*/, const ae_f16x4 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSSFD16SS_33_22_S2)(ae_f32x2* d /*inout*/, const ae_f16x4 d0 /*in*/, const ae_f16x4 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSSFD16SS_13_02)(ae_f32x2* d /*inout*/, const ae_f16x4 d0 /*in*/, const ae_f16x4 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSSFD16SS_13_02_S2)(ae_f32x2* d /*inout*/, const ae_f16x4 d0 /*in*/, const ae_f16x4 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSSFD16SS_11_00)(ae_f32x2* d /*inout*/, const ae_f16x4 d0 /*in*/, const ae_f16x4 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSSFD16SS_11_00_S2)(ae_f32x2* d /*inout*/, const ae_f16x4 d0 /*in*/, const ae_f16x4 d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_MULZAAFD16SS_33_22)(const ae_f16x4 d0 /*in*/, const ae_f16x4 d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_MULZAAFD16SS_33_22_S2)(const ae_f16x4 d0 /*in*/, const ae_f16x4 d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_MULZAAFD16SS_13_02)(const ae_f16x4 d0 /*in*/, const ae_f16x4 d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_MULZAAFD16SS_13_02_S2)(const ae_f16x4 d0 /*in*/, const ae_f16x4 d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_MULZAAFD16SS_11_00)(const ae_f16x4 d0 /*in*/, const ae_f16x4 d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_MULZAAFD16SS_11_00_S2)(const ae_f16x4 d0 /*in*/, const ae_f16x4 d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_MULZSSFD16SS_33_22)(const ae_f16x4 d0 /*in*/, const ae_f16x4 d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_MULZSSFD16SS_33_22_S2)(const ae_f16x4 d0 /*in*/, const ae_f16x4 d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_MULZSSFD16SS_13_02)(const ae_f16x4 d0 /*in*/, const ae_f16x4 d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_MULZSSFD16SS_13_02_S2)(const ae_f16x4 d0 /*in*/, const ae_f16x4 d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_MULZSSFD16SS_11_00)(const ae_f16x4 d0 /*in*/, const ae_f16x4 d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_MULZSSFD16SS_11_00_S2)(const ae_f16x4 d0 /*in*/, const ae_f16x4 d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULF48Q32SP16S_L)(const ae_q56s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULFQ32SP16S_L)(const ae_q56s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULF48Q32SP16S_L_S2)(const ae_q56s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULFQ32SP16S_L_S2)(const ae_q56s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULF48Q32SP16U_L)(const ae_q56s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULFQ32SP16U_L)(const ae_q56s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULF48Q32SP16U_L_S2)(const ae_q56s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULFQ32SP16U_L_S2)(const ae_q56s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULQ32SP16S_L)(const ae_q56s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULQ32SP16S_L_S2)(const ae_q56s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULQ32SP16U_L)(const ae_q56s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULQ32SP16U_L_S2)(const ae_q56s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAF48Q32SP16S_L)(ae_q56s* d /*inout*/, const ae_q56s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAFQ32SP16S_L)(ae_q56s* d /*inout*/, const ae_q56s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAF48Q32SP16S_L_S2)(ae_q56s* d /*inout*/, const ae_q56s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAFQ32SP16S_L_S2)(ae_q56s* d /*inout*/, const ae_q56s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAF48Q32SP16U_L)(ae_q56s* d /*inout*/, const ae_q56s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAFQ32SP16U_L)(ae_q56s* d /*inout*/, const ae_q56s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAF48Q32SP16U_L_S2)(ae_q56s* d /*inout*/, const ae_q56s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAFQ32SP16U_L_S2)(ae_q56s* d /*inout*/, const ae_q56s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAQ32SP16S_L)(ae_q56s* d /*inout*/, const ae_q56s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAQ32SP16S_L_S2)(ae_q56s* d /*inout*/, const ae_q56s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAQ32SP16U_L)(ae_q56s* d /*inout*/, const ae_q56s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAQ32SP16U_L_S2)(ae_q56s* d /*inout*/, const ae_q56s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSF48Q32SP16S_L)(ae_q56s* d /*inout*/, const ae_q56s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSFQ32SP16S_L)(ae_q56s* d /*inout*/, const ae_q56s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSF48Q32SP16S_L_S2)(ae_q56s* d /*inout*/, const ae_q56s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSFQ32SP16S_L_S2)(ae_q56s* d /*inout*/, const ae_q56s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSF48Q32SP16U_L)(ae_q56s* d /*inout*/, const ae_q56s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSFQ32SP16U_L)(ae_q56s* d /*inout*/, const ae_q56s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSF48Q32SP16U_L_S2)(ae_q56s* d /*inout*/, const ae_q56s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSFQ32SP16U_L_S2)(ae_q56s* d /*inout*/, const ae_q56s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSQ32SP16S_L)(ae_q56s* d /*inout*/, const ae_q56s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSQ32SP16S_L_S2)(ae_q56s* d /*inout*/, const ae_q56s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSQ32SP16U_L)(ae_q56s* d /*inout*/, const ae_q56s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSQ32SP16U_L_S2)(ae_q56s* d /*inout*/, const ae_q56s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_MULFP24X2RA)(const ae_f24x2 d0 /*in*/, const ae_f24x2 d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_MULFP24X2R)(const ae_f24x2 d0 /*in*/, const ae_f24x2 d1 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_MULP24X2)(const ae_int24x2 d0 /*in*/, const ae_int24x2 d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_MULFP24X2RA_S2)(const ae_f24x2 d0 /*in*/, const ae_f24x2 d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_MULFP24X2R_S2)(const ae_f24x2 d0 /*in*/, const ae_f24x2 d1 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_MULP24X2_S2)(const ae_int24x2 d0 /*in*/, const ae_int24x2 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAFP24X2RA)(ae_f32x2* d /*inout*/, const ae_f24x2 d0 /*in*/, const ae_f24x2 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAFP24X2R)(ae_f32x2* d /*inout*/, const ae_f24x2 d0 /*in*/, const ae_f24x2 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAP24X2)(ae_int32x2* d /*inout*/, const ae_int24x2 d0 /*in*/, const ae_int24x2 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAFP24X2RA_S2)(ae_f32x2* d /*inout*/, const ae_f24x2 d0 /*in*/, const ae_f24x2 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAFP24X2R_S2)(ae_f32x2* d /*inout*/, const ae_f24x2 d0 /*in*/, const ae_f24x2 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAP24X2_S2)(ae_int32x2* d /*inout*/, const ae_int24x2 d0 /*in*/, const ae_int24x2 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSFP24X2RA)(ae_f32x2* d /*inout*/, const ae_f24x2 d0 /*in*/, const ae_f24x2 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSFP24X2R)(ae_f32x2* d /*inout*/, const ae_f24x2 d0 /*in*/, const ae_f24x2 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSP24X2)(ae_int32x2* d /*inout*/, const ae_int24x2 d0 /*in*/, const ae_int24x2 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSFP24X2RA_S2)(ae_f32x2* d /*inout*/, const ae_f24x2 d0 /*in*/, const ae_f24x2 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSFP24X2R_S2)(ae_f32x2* d /*inout*/, const ae_f24x2 d0 /*in*/, const ae_f24x2 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSP24X2_S2)(ae_int32x2* d /*inout*/, const ae_int24x2 d0 /*in*/, const ae_int24x2 d1 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULZAAFD24_HH_LL)(const ae_f24x2 d0 /*in*/, const ae_f24x2 d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZAAFP24S_HH_LL)(const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MULZAAD24_HH_LL)(const ae_int24x2 d0 /*in*/, const ae_int24x2 d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZAAP24S_HH_LL)(const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULZAAFD24_HH_LL_S2)(const ae_f24x2 d0 /*in*/, const ae_f24x2 d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZAAFP24S_HH_LL_S2)(const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MULZAAD24_HH_LL_S2)(const ae_int24x2 d0 /*in*/, const ae_int24x2 d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZAAP24S_HH_LL_S2)(const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULZAAFD24_HL_LH)(const ae_f24x2 d0 /*in*/, const ae_f24x2 d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZAAFP24S_HL_LH)(const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MULZAAD24_HL_LH)(const ae_int24x2 d0 /*in*/, const ae_int24x2 d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZAAP24S_HL_LH)(const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULZAAFD24_HL_LH_S2)(const ae_f24x2 d0 /*in*/, const ae_f24x2 d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZAAFP24S_HL_LH_S2)(const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MULZAAD24_HL_LH_S2)(const ae_int24x2 d0 /*in*/, const ae_int24x2 d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZAAP24S_HL_LH_S2)(const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULZASFD24_HH_LL)(const ae_f24x2 d0 /*in*/, const ae_f24x2 d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZASFP24S_HH_LL)(const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MULZASD24_HH_LL)(const ae_int24x2 d0 /*in*/, const ae_int24x2 d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZASP24S_HH_LL)(const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULZASFD24_HH_LL_S2)(const ae_f24x2 d0 /*in*/, const ae_f24x2 d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZASFP24S_HH_LL_S2)(const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MULZASD24_HH_LL_S2)(const ae_int24x2 d0 /*in*/, const ae_int24x2 d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZASP24S_HH_LL_S2)(const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULZASFD24_HL_LH)(const ae_f24x2 d0 /*in*/, const ae_f24x2 d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZASFP24S_HL_LH)(const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULZSAF48P24S_HL_LH)(const ae_f24x2 d0 /*in*/, const ae_f24x2 d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSAFP24S_HL_LH)(const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MULZASD24_HL_LH)(const ae_int24x2 d0 /*in*/, const ae_int24x2 d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZASP24S_HL_LH)(const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MULZSA64P24S_HL_LH)(const ae_int24x2 d0 /*in*/, const ae_int24x2 d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSAP24S_HL_LH)(const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULZASFD24_HL_LH_S2)(const ae_f24x2 d0 /*in*/, const ae_f24x2 d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZASFP24S_HL_LH_S2)(const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULZSAF48P24S_HL_LH_S2)(const ae_f24x2 d0 /*in*/, const ae_f24x2 d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSAFP24S_HL_LH_S2)(const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MULZASD24_HL_LH_S2)(const ae_int24x2 d0 /*in*/, const ae_int24x2 d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZASP24S_HL_LH_S2)(const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MULZSA64P24S_HL_LH_S2)(const ae_int24x2 d0 /*in*/, const ae_int24x2 d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSAP24S_HL_LH_S2)(const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULZSAFD24_HH_LL)(const ae_f24x2 d0 /*in*/, const ae_f24x2 d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSAFP24S_HH_LL)(const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MULZSAD24_HH_LL)(const ae_int24x2 d0 /*in*/, const ae_int24x2 d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSAP24S_HH_LL)(const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULZSAFD24_HH_LL_S2)(const ae_f24x2 d0 /*in*/, const ae_f24x2 d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSAFP24S_HH_LL_S2)(const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MULZSAD24_HH_LL_S2)(const ae_int24x2 d0 /*in*/, const ae_int24x2 d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSAP24S_HH_LL_S2)(const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULZSSFD24_HH_LL)(const ae_f24x2 d0 /*in*/, const ae_f24x2 d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSSFP24S_HH_LL)(const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MULZSSD24_HH_LL)(const ae_int24x2 d0 /*in*/, const ae_int24x2 d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSSP24S_HH_LL)(const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULZSSFD24_HH_LL_S2)(const ae_f24x2 d0 /*in*/, const ae_f24x2 d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSSFP24S_HH_LL_S2)(const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MULZSSD24_HH_LL_S2)(const ae_int24x2 d0 /*in*/, const ae_int24x2 d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSSP24S_HH_LL_S2)(const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULZSSFD24_HL_LH)(const ae_f24x2 d0 /*in*/, const ae_f24x2 d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSSFP24S_HL_LH)(const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MULZSSD24_HL_LH)(const ae_int24x2 d0 /*in*/, const ae_int24x2 d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSSP24S_HL_LH)(const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULZSSFD24_HL_LH_S2)(const ae_f24x2 d0 /*in*/, const ae_f24x2 d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSSFP24S_HL_LH_S2)(const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MULZSSD24_HL_LH_S2)(const ae_int24x2 d0 /*in*/, const ae_int24x2 d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSSP24S_HL_LH_S2)(const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAAFD24_HH_LL)(ae_f64* d /*inout*/, const ae_f24x2 d0 /*in*/, const ae_f24x2 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAAFP24S_HH_LL)(ae_q56s* d /*inout*/, const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAAD24_HH_LL)(ae_int64* d /*inout*/, const ae_int24x2 d0 /*in*/, const ae_int24x2 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAAP24S_HH_LL)(ae_q56s* d /*inout*/, const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAAFD24_HH_LL_S2)(ae_f64* d /*inout*/, const ae_f24x2 d0 /*in*/, const ae_f24x2 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAAFP24S_HH_LL_S2)(ae_q56s* d /*inout*/, const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAAD24_HH_LL_S2)(ae_int64* d /*inout*/, const ae_int24x2 d0 /*in*/, const ae_int24x2 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAAP24S_HH_LL_S2)(ae_q56s* d /*inout*/, const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAAFD24_HL_LH)(ae_f64* d /*inout*/, const ae_f24x2 d0 /*in*/, const ae_f24x2 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAAFP24S_HL_LH)(ae_q56s* d /*inout*/, const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAAD24_HL_LH)(ae_int64* d /*inout*/, const ae_int24x2 d0 /*in*/, const ae_int24x2 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAAP24S_HL_LH)(ae_q56s* d /*inout*/, const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAAFD24_HL_LH_S2)(ae_f64* d /*inout*/, const ae_f24x2 d0 /*in*/, const ae_f24x2 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAAFP24S_HL_LH_S2)(ae_q56s* d /*inout*/, const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAAD24_HL_LH_S2)(ae_int64* d /*inout*/, const ae_int24x2 d0 /*in*/, const ae_int24x2 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAAP24S_HL_LH_S2)(ae_q56s* d /*inout*/, const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULASFD24_HH_LL)(ae_f64* d /*inout*/, const ae_f24x2 d0 /*in*/, const ae_f24x2 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULASFP24S_HH_LL)(ae_q56s* d /*inout*/, const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULASD24_HH_LL)(ae_int64* d /*inout*/, const ae_int24x2 d0 /*in*/, const ae_int24x2 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULASP24S_HH_LL)(ae_q56s* d /*inout*/, const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULASFD24_HH_LL_S2)(ae_f64* d /*inout*/, const ae_f24x2 d0 /*in*/, const ae_f24x2 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULASFP24S_HH_LL_S2)(ae_q56s* d /*inout*/, const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULASD24_HH_LL_S2)(ae_int64* d /*inout*/, const ae_int24x2 d0 /*in*/, const ae_int24x2 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULASP24S_HH_LL_S2)(ae_q56s* d /*inout*/, const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULASFD24_HL_LH)(ae_f64* d /*inout*/, const ae_f24x2 d0 /*in*/, const ae_f24x2 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULASFP24S_HL_LH)(ae_q56s* d /*inout*/, const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSAF48P24S_HL_LH)(ae_f64* d /*inout*/, const ae_f24x2 d0 /*in*/, const ae_f24x2 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSAFP24S_HL_LH)(ae_q56s* d /*inout*/, const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULASD24_HL_LH)(ae_int64* d /*inout*/, const ae_int24x2 d0 /*in*/, const ae_int24x2 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULASP24S_HL_LH)(ae_q56s* d /*inout*/, const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSA64P24S_HL_LH)(ae_int64* d /*inout*/, const ae_int24x2 d0 /*in*/, const ae_int24x2 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSAP24S_HL_LH)(ae_q56s* d /*inout*/, const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULASFD24_HL_LH_S2)(ae_f64* d /*inout*/, const ae_f24x2 d0 /*in*/, const ae_f24x2 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULASFP24S_HL_LH_S2)(ae_q56s* d /*inout*/, const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSAF48P24S_HL_LH_S2)(ae_f64* d /*inout*/, const ae_f24x2 d0 /*in*/, const ae_f24x2 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSAFP24S_HL_LH_S2)(ae_q56s* d /*inout*/, const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULASD24_HL_LH_S2)(ae_int64* d /*inout*/, const ae_int24x2 d0 /*in*/, const ae_int24x2 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULASP24S_HL_LH_S2)(ae_q56s* d /*inout*/, const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSA64P24S_HL_LH_S2)(ae_int64* d /*inout*/, const ae_int24x2 d0 /*in*/, const ae_int24x2 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSAP24S_HL_LH_S2)(ae_q56s* d /*inout*/, const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSAFD24_HH_LL)(ae_f64* d /*inout*/, const ae_f24x2 d0 /*in*/, const ae_f24x2 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSAFP24S_HH_LL)(ae_q56s* d /*inout*/, const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSAD24_HH_LL)(ae_int64* d /*inout*/, const ae_int24x2 d0 /*in*/, const ae_int24x2 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSAP24S_HH_LL)(ae_q56s* d /*inout*/, const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSAFD24_HH_LL_S2)(ae_f64* d /*inout*/, const ae_f24x2 d0 /*in*/, const ae_f24x2 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSAFP24S_HH_LL_S2)(ae_q56s* d /*inout*/, const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSAD24_HH_LL_S2)(ae_int64* d /*inout*/, const ae_int24x2 d0 /*in*/, const ae_int24x2 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSAP24S_HH_LL_S2)(ae_q56s* d /*inout*/, const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSSFD24_HH_LL)(ae_f64* d /*inout*/, const ae_f24x2 d0 /*in*/, const ae_f24x2 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSSFP24S_HH_LL)(ae_q56s* d /*inout*/, const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSSD24_HH_LL)(ae_int64* d /*inout*/, const ae_int24x2 d0 /*in*/, const ae_int24x2 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSSP24S_HH_LL)(ae_q56s* d /*inout*/, const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSSFD24_HH_LL_S2)(ae_f64* d /*inout*/, const ae_f24x2 d0 /*in*/, const ae_f24x2 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSSFP24S_HH_LL_S2)(ae_q56s* d /*inout*/, const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSSD24_HH_LL_S2)(ae_int64* d /*inout*/, const ae_int24x2 d0 /*in*/, const ae_int24x2 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSSP24S_HH_LL_S2)(ae_q56s* d /*inout*/, const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSSFD24_HL_LH)(ae_f64* d /*inout*/, const ae_f24x2 d0 /*in*/, const ae_f24x2 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSSFP24S_HL_LH)(ae_q56s* d /*inout*/, const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSSD24_HL_LH)(ae_int64* d /*inout*/, const ae_int24x2 d0 /*in*/, const ae_int24x2 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSSP24S_HL_LH)(ae_q56s* d /*inout*/, const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSSFD24_HL_LH_S2)(ae_f64* d /*inout*/, const ae_f24x2 d0 /*in*/, const ae_f24x2 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSSFP24S_HL_LH_S2)(ae_q56s* d /*inout*/, const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSSD24_HL_LH_S2)(ae_int64* d /*inout*/, const ae_int24x2 d0 /*in*/, const ae_int24x2 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSSP24S_HL_LH_S2)(ae_q56s* d /*inout*/, const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSRFQ32SP24S_H)(ae_q56s* d /*inout*/, const ae_q56s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSRFQ32SP24S_L)(ae_q56s* d /*inout*/, const ae_q56s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSRFQ32SP24S_H_S2)(ae_q56s* d /*inout*/, const ae_q56s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSRFQ32SP24S_L_S2)(ae_q56s* d /*inout*/, const ae_q56s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULARFQ32SP24S_H)(ae_q56s* d /*inout*/, const ae_q56s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULARFQ32SP24S_L)(ae_q56s* d /*inout*/, const ae_q56s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULARFQ32SP24S_H_S2)(ae_q56s* d /*inout*/, const ae_q56s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULARFQ32SP24S_L_S2)(ae_q56s* d /*inout*/, const ae_q56s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULRFQ32SP24S_H)(const ae_q56s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULRFQ32SP24S_L)(const ae_q56s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULRFQ32SP24S_H_S2)(const ae_q56s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULRFQ32SP24S_L_S2)(const ae_q56s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSFQ32SP24S_H)(ae_q56s* d /*inout*/, const ae_q56s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSFQ32SP24S_L)(ae_q56s* d /*inout*/, const ae_q56s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSFQ32SP24S_H_S2)(ae_q56s* d /*inout*/, const ae_q56s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSFQ32SP24S_L_S2)(ae_q56s* d /*inout*/, const ae_q56s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAFQ32SP24S_H)(ae_q56s* d /*inout*/, const ae_q56s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAFQ32SP24S_L)(ae_q56s* d /*inout*/, const ae_q56s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAFQ32SP24S_H_S2)(ae_q56s* d /*inout*/, const ae_q56s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAFQ32SP24S_L_S2)(ae_q56s* d /*inout*/, const ae_q56s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULFQ32SP24S_H)(const ae_q56s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULFQ32SP24S_L)(const ae_q56s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULFQ32SP24S_H_S2)(const ae_q56s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULFQ32SP24S_L_S2)(const ae_q56s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULF32X16_L0)(const ae_f32x2 d1 /*in*/, const ae_f16x4 d0 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MUL32X16_L0)(const ae_int32x2 d1 /*in*/, const ae_int16x4 d0 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULF32X16_L0_S2)(const ae_f32x2 d1 /*in*/, const ae_f16x4 d0 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MUL32X16_L0_S2)(const ae_int32x2 d1 /*in*/, const ae_int16x4 d0 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULF32X16_L1)(const ae_f32x2 d1 /*in*/, const ae_f16x4 d0 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MUL32X16_L1)(const ae_int32x2 d1 /*in*/, const ae_int16x4 d0 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULF32X16_L1_S2)(const ae_f32x2 d1 /*in*/, const ae_f16x4 d0 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MUL32X16_L1_S2)(const ae_int32x2 d1 /*in*/, const ae_int16x4 d0 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULF32X16_L2)(const ae_f32x2 d1 /*in*/, const ae_f16x4 d0 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MUL32X16_L2)(const ae_int32x2 d1 /*in*/, const ae_int16x4 d0 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULF32X16_L2_S2)(const ae_f32x2 d1 /*in*/, const ae_f16x4 d0 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MUL32X16_L2_S2)(const ae_int32x2 d1 /*in*/, const ae_int16x4 d0 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULF32X16_L3)(const ae_f32x2 d1 /*in*/, const ae_f16x4 d0 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MUL32X16_L3)(const ae_int32x2 d1 /*in*/, const ae_int16x4 d0 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULF32X16_L3_S2)(const ae_f32x2 d1 /*in*/, const ae_f16x4 d0 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MUL32X16_L3_S2)(const ae_int32x2 d1 /*in*/, const ae_int16x4 d0 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULF32X16_H0)(const ae_f32x2 d1 /*in*/, const ae_f16x4 d0 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MUL32X16_H0)(const ae_int32x2 d1 /*in*/, const ae_int16x4 d0 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULF32X16_H0_S2)(const ae_f32x2 d1 /*in*/, const ae_f16x4 d0 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MUL32X16_H0_S2)(const ae_int32x2 d1 /*in*/, const ae_int16x4 d0 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULF32X16_H1)(const ae_f32x2 d1 /*in*/, const ae_f16x4 d0 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MUL32X16_H1)(const ae_int32x2 d1 /*in*/, const ae_int16x4 d0 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULF32X16_H1_S2)(const ae_f32x2 d1 /*in*/, const ae_f16x4 d0 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MUL32X16_H1_S2)(const ae_int32x2 d1 /*in*/, const ae_int16x4 d0 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULF32X16_H2)(const ae_f32x2 d1 /*in*/, const ae_f16x4 d0 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MUL32X16_H2)(const ae_int32x2 d1 /*in*/, const ae_int16x4 d0 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULF32X16_H2_S2)(const ae_f32x2 d1 /*in*/, const ae_f16x4 d0 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MUL32X16_H2_S2)(const ae_int32x2 d1 /*in*/, const ae_int16x4 d0 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULF32X16_H3)(const ae_f32x2 d1 /*in*/, const ae_f16x4 d0 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MUL32X16_H3)(const ae_int32x2 d1 /*in*/, const ae_int16x4 d0 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULF32X16_H3_S2)(const ae_f32x2 d1 /*in*/, const ae_f16x4 d0 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MUL32X16_H3_S2)(const ae_int32x2 d1 /*in*/, const ae_int16x4 d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAF32X16_L0)(ae_f64* d /*inout*/, const ae_f32x2 d1 /*in*/, const ae_f16x4 d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULA32X16_L0)(ae_int64* d /*inout*/, const ae_int32x2 d1 /*in*/, const ae_int16x4 d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAF32X16_L0_S2)(ae_f64* d /*inout*/, const ae_f32x2 d1 /*in*/, const ae_f16x4 d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULA32X16_L0_S2)(ae_int64* d /*inout*/, const ae_int32x2 d1 /*in*/, const ae_int16x4 d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAF32X16_L1)(ae_f64* d /*inout*/, const ae_f32x2 d1 /*in*/, const ae_f16x4 d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULA32X16_L1)(ae_int64* d /*inout*/, const ae_int32x2 d1 /*in*/, const ae_int16x4 d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAF32X16_L1_S2)(ae_f64* d /*inout*/, const ae_f32x2 d1 /*in*/, const ae_f16x4 d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULA32X16_L1_S2)(ae_int64* d /*inout*/, const ae_int32x2 d1 /*in*/, const ae_int16x4 d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAF32X16_L2)(ae_f64* d /*inout*/, const ae_f32x2 d1 /*in*/, const ae_f16x4 d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULA32X16_L2)(ae_int64* d /*inout*/, const ae_int32x2 d1 /*in*/, const ae_int16x4 d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAF32X16_L2_S2)(ae_f64* d /*inout*/, const ae_f32x2 d1 /*in*/, const ae_f16x4 d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULA32X16_L2_S2)(ae_int64* d /*inout*/, const ae_int32x2 d1 /*in*/, const ae_int16x4 d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAF32X16_L3)(ae_f64* d /*inout*/, const ae_f32x2 d1 /*in*/, const ae_f16x4 d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULA32X16_L3)(ae_int64* d /*inout*/, const ae_int32x2 d1 /*in*/, const ae_int16x4 d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAF32X16_L3_S2)(ae_f64* d /*inout*/, const ae_f32x2 d1 /*in*/, const ae_f16x4 d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULA32X16_L3_S2)(ae_int64* d /*inout*/, const ae_int32x2 d1 /*in*/, const ae_int16x4 d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAF32X16_H0)(ae_f64* d /*inout*/, const ae_f32x2 d1 /*in*/, const ae_f16x4 d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULA32X16_H0)(ae_int64* d /*inout*/, const ae_int32x2 d1 /*in*/, const ae_int16x4 d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAF32X16_H0_S2)(ae_f64* d /*inout*/, const ae_f32x2 d1 /*in*/, const ae_f16x4 d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULA32X16_H0_S2)(ae_int64* d /*inout*/, const ae_int32x2 d1 /*in*/, const ae_int16x4 d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAF32X16_H1)(ae_f64* d /*inout*/, const ae_f32x2 d1 /*in*/, const ae_f16x4 d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULA32X16_H1)(ae_int64* d /*inout*/, const ae_int32x2 d1 /*in*/, const ae_int16x4 d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAF32X16_H1_S2)(ae_f64* d /*inout*/, const ae_f32x2 d1 /*in*/, const ae_f16x4 d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULA32X16_H1_S2)(ae_int64* d /*inout*/, const ae_int32x2 d1 /*in*/, const ae_int16x4 d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAF32X16_H2)(ae_f64* d /*inout*/, const ae_f32x2 d1 /*in*/, const ae_f16x4 d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULA32X16_H2)(ae_int64* d /*inout*/, const ae_int32x2 d1 /*in*/, const ae_int16x4 d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAF32X16_H2_S2)(ae_f64* d /*inout*/, const ae_f32x2 d1 /*in*/, const ae_f16x4 d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULA32X16_H2_S2)(ae_int64* d /*inout*/, const ae_int32x2 d1 /*in*/, const ae_int16x4 d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAF32X16_H3)(ae_f64* d /*inout*/, const ae_f32x2 d1 /*in*/, const ae_f16x4 d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULA32X16_H3)(ae_int64* d /*inout*/, const ae_int32x2 d1 /*in*/, const ae_int16x4 d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAF32X16_H3_S2)(ae_f64* d /*inout*/, const ae_f32x2 d1 /*in*/, const ae_f16x4 d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULA32X16_H3_S2)(ae_int64* d /*inout*/, const ae_int32x2 d1 /*in*/, const ae_int16x4 d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSF32X16_L0)(ae_f64* d /*inout*/, const ae_f32x2 d1 /*in*/, const ae_f16x4 d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULS32X16_L0)(ae_int64* d /*inout*/, const ae_int32x2 d1 /*in*/, const ae_int16x4 d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSF32X16_L0_S2)(ae_f64* d /*inout*/, const ae_f32x2 d1 /*in*/, const ae_f16x4 d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULS32X16_L0_S2)(ae_int64* d /*inout*/, const ae_int32x2 d1 /*in*/, const ae_int16x4 d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSF32X16_L1)(ae_f64* d /*inout*/, const ae_f32x2 d1 /*in*/, const ae_f16x4 d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULS32X16_L1)(ae_int64* d /*inout*/, const ae_int32x2 d1 /*in*/, const ae_int16x4 d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSF32X16_L1_S2)(ae_f64* d /*inout*/, const ae_f32x2 d1 /*in*/, const ae_f16x4 d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULS32X16_L1_S2)(ae_int64* d /*inout*/, const ae_int32x2 d1 /*in*/, const ae_int16x4 d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSF32X16_L2)(ae_f64* d /*inout*/, const ae_f32x2 d1 /*in*/, const ae_f16x4 d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULS32X16_L2)(ae_int64* d /*inout*/, const ae_int32x2 d1 /*in*/, const ae_int16x4 d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSF32X16_L2_S2)(ae_f64* d /*inout*/, const ae_f32x2 d1 /*in*/, const ae_f16x4 d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULS32X16_L2_S2)(ae_int64* d /*inout*/, const ae_int32x2 d1 /*in*/, const ae_int16x4 d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSF32X16_L3)(ae_f64* d /*inout*/, const ae_f32x2 d1 /*in*/, const ae_f16x4 d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULS32X16_L3)(ae_int64* d /*inout*/, const ae_int32x2 d1 /*in*/, const ae_int16x4 d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSF32X16_L3_S2)(ae_f64* d /*inout*/, const ae_f32x2 d1 /*in*/, const ae_f16x4 d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULS32X16_L3_S2)(ae_int64* d /*inout*/, const ae_int32x2 d1 /*in*/, const ae_int16x4 d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSF32X16_H0)(ae_f64* d /*inout*/, const ae_f32x2 d1 /*in*/, const ae_f16x4 d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULS32X16_H0)(ae_int64* d /*inout*/, const ae_int32x2 d1 /*in*/, const ae_int16x4 d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSF32X16_H0_S2)(ae_f64* d /*inout*/, const ae_f32x2 d1 /*in*/, const ae_f16x4 d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULS32X16_H0_S2)(ae_int64* d /*inout*/, const ae_int32x2 d1 /*in*/, const ae_int16x4 d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSF32X16_H1)(ae_f64* d /*inout*/, const ae_f32x2 d1 /*in*/, const ae_f16x4 d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULS32X16_H1)(ae_int64* d /*inout*/, const ae_int32x2 d1 /*in*/, const ae_int16x4 d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSF32X16_H1_S2)(ae_f64* d /*inout*/, const ae_f32x2 d1 /*in*/, const ae_f16x4 d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULS32X16_H1_S2)(ae_int64* d /*inout*/, const ae_int32x2 d1 /*in*/, const ae_int16x4 d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSF32X16_H2)(ae_f64* d /*inout*/, const ae_f32x2 d1 /*in*/, const ae_f16x4 d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULS32X16_H2)(ae_int64* d /*inout*/, const ae_int32x2 d1 /*in*/, const ae_int16x4 d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSF32X16_H2_S2)(ae_f64* d /*inout*/, const ae_f32x2 d1 /*in*/, const ae_f16x4 d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULS32X16_H2_S2)(ae_int64* d /*inout*/, const ae_int32x2 d1 /*in*/, const ae_int16x4 d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSF32X16_H3)(ae_f64* d /*inout*/, const ae_f32x2 d1 /*in*/, const ae_f16x4 d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULS32X16_H3)(ae_int64* d /*inout*/, const ae_int32x2 d1 /*in*/, const ae_int16x4 d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSF32X16_H3_S2)(ae_f64* d /*inout*/, const ae_f32x2 d1 /*in*/, const ae_f16x4 d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULS32X16_H3_S2)(ae_int64* d /*inout*/, const ae_int32x2 d1 /*in*/, const ae_int16x4 d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAAFD32X16_H3_L2)(ae_f64* d /*inout*/, const ae_f32x2 d1 /*in*/, const ae_f16x4 d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAAD32X16_H3_L2)(ae_int64* d /*inout*/, const ae_int32x2 d1 /*in*/, const ae_int16x4 d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAAFD32X16_H3_L2_S2)(ae_f64* d /*inout*/, const ae_f32x2 d1 /*in*/, const ae_f16x4 d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAAD32X16_H3_L2_S2)(ae_int64* d /*inout*/, const ae_int32x2 d1 /*in*/, const ae_int16x4 d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAAFD32X16_H1_L0)(ae_f64* d /*inout*/, const ae_f32x2 d1 /*in*/, const ae_f16x4 d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAAD32X16_H1_L0)(ae_int64* d /*inout*/, const ae_int32x2 d1 /*in*/, const ae_int16x4 d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAAFD32X16_H1_L0_S2)(ae_f64* d /*inout*/, const ae_f32x2 d1 /*in*/, const ae_f16x4 d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAAD32X16_H1_L0_S2)(ae_int64* d /*inout*/, const ae_int32x2 d1 /*in*/, const ae_int16x4 d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULASFD32X16_H3_L2)(ae_f64* d /*inout*/, const ae_f32x2 d1 /*in*/, const ae_f16x4 d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULASD32X16_H3_L2)(ae_int64* d /*inout*/, const ae_int32x2 d1 /*in*/, const ae_int16x4 d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULASFD32X16_H3_L2_S2)(ae_f64* d /*inout*/, const ae_f32x2 d1 /*in*/, const ae_f16x4 d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULASD32X16_H3_L2_S2)(ae_int64* d /*inout*/, const ae_int32x2 d1 /*in*/, const ae_int16x4 d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULASFD32X16_H1_L0)(ae_f64* d /*inout*/, const ae_f32x2 d1 /*in*/, const ae_f16x4 d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULASD32X16_H1_L0)(ae_int64* d /*inout*/, const ae_int32x2 d1 /*in*/, const ae_int16x4 d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULASFD32X16_H1_L0_S2)(ae_f64* d /*inout*/, const ae_f32x2 d1 /*in*/, const ae_f16x4 d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULASD32X16_H1_L0_S2)(ae_int64* d /*inout*/, const ae_int32x2 d1 /*in*/, const ae_int16x4 d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSAFD32X16_H3_L2)(ae_f64* d /*inout*/, const ae_f32x2 d1 /*in*/, const ae_f16x4 d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSAD32X16_H3_L2)(ae_int64* d /*inout*/, const ae_int32x2 d1 /*in*/, const ae_int16x4 d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSAFD32X16_H3_L2_S2)(ae_f64* d /*inout*/, const ae_f32x2 d1 /*in*/, const ae_f16x4 d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSAD32X16_H3_L2_S2)(ae_int64* d /*inout*/, const ae_int32x2 d1 /*in*/, const ae_int16x4 d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSAFD32X16_H1_L0)(ae_f64* d /*inout*/, const ae_f32x2 d1 /*in*/, const ae_f16x4 d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSAD32X16_H1_L0)(ae_int64* d /*inout*/, const ae_int32x2 d1 /*in*/, const ae_int16x4 d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSAFD32X16_H1_L0_S2)(ae_f64* d /*inout*/, const ae_f32x2 d1 /*in*/, const ae_f16x4 d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSAD32X16_H1_L0_S2)(ae_int64* d /*inout*/, const ae_int32x2 d1 /*in*/, const ae_int16x4 d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSSFD32X16_H3_L2)(ae_f64* d /*inout*/, const ae_f32x2 d1 /*in*/, const ae_f16x4 d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSSD32X16_H3_L2)(ae_int64* d /*inout*/, const ae_int32x2 d1 /*in*/, const ae_int16x4 d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSSFD32X16_H3_L2_S2)(ae_f64* d /*inout*/, const ae_f32x2 d1 /*in*/, const ae_f16x4 d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSSD32X16_H3_L2_S2)(ae_int64* d /*inout*/, const ae_int32x2 d1 /*in*/, const ae_int16x4 d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSSFD32X16_H1_L0)(ae_f64* d /*inout*/, const ae_f32x2 d1 /*in*/, const ae_f16x4 d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSSD32X16_H1_L0)(ae_int64* d /*inout*/, const ae_int32x2 d1 /*in*/, const ae_int16x4 d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSSFD32X16_H1_L0_S2)(ae_f64* d /*inout*/, const ae_f32x2 d1 /*in*/, const ae_f16x4 d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSSD32X16_H1_L0_S2)(ae_int64* d /*inout*/, const ae_int32x2 d1 /*in*/, const ae_int16x4 d0 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULZAAFD32X16_H3_L2)(const ae_f32x2 d1 /*in*/, const ae_f16x4 d0 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MULZAAD32X16_H3_L2)(const ae_int32x2 d1 /*in*/, const ae_int16x4 d0 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULZAAFD32X16_H3_L2_S2)(const ae_f32x2 d1 /*in*/, const ae_f16x4 d0 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MULZAAD32X16_H3_L2_S2)(const ae_int32x2 d1 /*in*/, const ae_int16x4 d0 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULZAAFD32X16_H1_L0)(const ae_f32x2 d1 /*in*/, const ae_f16x4 d0 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MULZAAD32X16_H1_L0)(const ae_int32x2 d1 /*in*/, const ae_int16x4 d0 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULZAAFD32X16_H1_L0_S2)(const ae_f32x2 d1 /*in*/, const ae_f16x4 d0 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MULZAAD32X16_H1_L0_S2)(const ae_int32x2 d1 /*in*/, const ae_int16x4 d0 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULZASFD32X16_H3_L2)(const ae_f32x2 d1 /*in*/, const ae_f16x4 d0 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MULZASD32X16_H3_L2)(const ae_int32x2 d1 /*in*/, const ae_int16x4 d0 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULZASFD32X16_H3_L2_S2)(const ae_f32x2 d1 /*in*/, const ae_f16x4 d0 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MULZASD32X16_H3_L2_S2)(const ae_int32x2 d1 /*in*/, const ae_int16x4 d0 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULZASFD32X16_H1_L0)(const ae_f32x2 d1 /*in*/, const ae_f16x4 d0 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MULZASD32X16_H1_L0)(const ae_int32x2 d1 /*in*/, const ae_int16x4 d0 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULZASFD32X16_H1_L0_S2)(const ae_f32x2 d1 /*in*/, const ae_f16x4 d0 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MULZASD32X16_H1_L0_S2)(const ae_int32x2 d1 /*in*/, const ae_int16x4 d0 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULZSAFD32X16_H3_L2)(const ae_f32x2 d1 /*in*/, const ae_f16x4 d0 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MULZSAD32X16_H3_L2)(const ae_int32x2 d1 /*in*/, const ae_int16x4 d0 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULZSAFD32X16_H3_L2_S2)(const ae_f32x2 d1 /*in*/, const ae_f16x4 d0 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MULZSAD32X16_H3_L2_S2)(const ae_int32x2 d1 /*in*/, const ae_int16x4 d0 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULZSAFD32X16_H1_L0)(const ae_f32x2 d1 /*in*/, const ae_f16x4 d0 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MULZSAD32X16_H1_L0)(const ae_int32x2 d1 /*in*/, const ae_int16x4 d0 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULZSAFD32X16_H1_L0_S2)(const ae_f32x2 d1 /*in*/, const ae_f16x4 d0 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MULZSAD32X16_H1_L0_S2)(const ae_int32x2 d1 /*in*/, const ae_int16x4 d0 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULZSSFD32X16_H3_L2)(const ae_f32x2 d1 /*in*/, const ae_f16x4 d0 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MULZSSD32X16_H3_L2)(const ae_int32x2 d1 /*in*/, const ae_int16x4 d0 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULZSSFD32X16_H3_L2_S2)(const ae_f32x2 d1 /*in*/, const ae_f16x4 d0 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MULZSSD32X16_H3_L2_S2)(const ae_int32x2 d1 /*in*/, const ae_int16x4 d0 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULZSSFD32X16_H1_L0)(const ae_f32x2 d1 /*in*/, const ae_f16x4 d0 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MULZSSD32X16_H1_L0)(const ae_int32x2 d1 /*in*/, const ae_int16x4 d0 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULZSSFD32X16_H1_L0_S2)(const ae_f32x2 d1 /*in*/, const ae_f16x4 d0 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MULZSSD32X16_H1_L0_S2)(const ae_int32x2 d1 /*in*/, const ae_int16x4 d0 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULZAAFD32X16_H2_L3)(const ae_f32x2 d1 /*in*/, const ae_f16x4 d0 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULZAAFD32X16_H0_L1)(const ae_f32x2 d1 /*in*/, const ae_f16x4 d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAAFD32X16_H2_L3)(ae_f64* d /*inout*/, const ae_f32x2 d1 /*in*/, const ae_f16x4 d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAAFD32X16_H0_L1)(ae_f64* d /*inout*/, const ae_f32x2 d1 /*in*/, const ae_f16x4 d0 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MULZAAD32X16_H2_L3)(const ae_int32x2 d1 /*in*/, const ae_int16x4 d0 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MULZAAD32X16_H0_L1)(const ae_int32x2 d1 /*in*/, const ae_int16x4 d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAAD32X16_H2_L3)(ae_int64* d /*inout*/, const ae_int32x2 d1 /*in*/, const ae_int16x4 d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAAD32X16_H0_L1)(ae_int64* d /*inout*/, const ae_int32x2 d1 /*in*/, const ae_int16x4 d0 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULZAAFD32X16_H2_L3_S2)(const ae_f32x2 d1 /*in*/, const ae_f16x4 d0 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MULZAAFD32X16_H0_L1_S2)(const ae_f32x2 d1 /*in*/, const ae_f16x4 d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAAFD32X16_H2_L3_S2)(ae_f64* d /*inout*/, const ae_f32x2 d1 /*in*/, const ae_f16x4 d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAAFD32X16_H0_L1_S2)(ae_f64* d /*inout*/, const ae_f32x2 d1 /*in*/, const ae_f16x4 d0 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MULZAAD32X16_H2_L3_S2)(const ae_int32x2 d1 /*in*/, const ae_int16x4 d0 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MULZAAD32X16_H0_L1_S2)(const ae_int32x2 d1 /*in*/, const ae_int16x4 d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAAD32X16_H2_L3_S2)(ae_int64* d /*inout*/, const ae_int32x2 d1 /*in*/, const ae_int16x4 d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAAD32X16_H0_L1_S2)(ae_int64* d /*inout*/, const ae_int32x2 d1 /*in*/, const ae_int16x4 d0 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_MULP32X16X2_H)(const ae_int32x2 d0 /*in*/, const ae_int16x4 d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_MULFP32X16X2RS_H)(const ae_f32x2 d0 /*in*/, const ae_f16x4 d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_MULFP32X16X2RAS_H)(const ae_f32x2 d0 /*in*/, const ae_f16x4 d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_MULFP32X16X2RS_H_S2)(const ae_f32x2 d0 /*in*/, const ae_f16x4 d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_MULFP32X16X2RAS_H_S2)(const ae_f32x2 d0 /*in*/, const ae_f16x4 d1 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_MULP32X16X2_L)(const ae_int32x2 d0 /*in*/, const ae_int16x4 d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_MULFP32X16X2RS_L)(const ae_f32x2 d0 /*in*/, const ae_f16x4 d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_MULFP32X16X2RAS_L)(const ae_f32x2 d0 /*in*/, const ae_f16x4 d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_MULFP32X16X2RS_L_S2)(const ae_f32x2 d0 /*in*/, const ae_f16x4 d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_MULFP32X16X2RAS_L_S2)(const ae_f32x2 d0 /*in*/, const ae_f16x4 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAP32X16X2_H)(ae_int32x2* d /*inout*/, const ae_int32x2 d0 /*in*/, const ae_int16x4 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAFP32X16X2RS_H)(ae_f32x2* d /*inout*/, const ae_f32x2 d0 /*in*/, const ae_f16x4 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAFP32X16X2RAS_H)(ae_f32x2* d /*inout*/, const ae_f32x2 d0 /*in*/, const ae_f16x4 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAFP32X16X2RS_H_S2)(ae_f32x2* d /*inout*/, const ae_f32x2 d0 /*in*/, const ae_f16x4 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAFP32X16X2RAS_H_S2)(ae_f32x2* d /*inout*/, const ae_f32x2 d0 /*in*/, const ae_f16x4 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAP32X16X2_L)(ae_int32x2* d /*inout*/, const ae_int32x2 d0 /*in*/, const ae_int16x4 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAFP32X16X2RS_L)(ae_f32x2* d /*inout*/, const ae_f32x2 d0 /*in*/, const ae_f16x4 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAFP32X16X2RAS_L)(ae_f32x2* d /*inout*/, const ae_f32x2 d0 /*in*/, const ae_f16x4 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAFP32X16X2RS_L_S2)(ae_f32x2* d /*inout*/, const ae_f32x2 d0 /*in*/, const ae_f16x4 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAFP32X16X2RAS_L_S2)(ae_f32x2* d /*inout*/, const ae_f32x2 d0 /*in*/, const ae_f16x4 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSP32X16X2_H)(ae_int32x2* d /*inout*/, const ae_int32x2 d0 /*in*/, const ae_int16x4 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSFP32X16X2RS_H)(ae_f32x2* d /*inout*/, const ae_f32x2 d0 /*in*/, const ae_f16x4 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSFP32X16X2RAS_H)(ae_f32x2* d /*inout*/, const ae_f32x2 d0 /*in*/, const ae_f16x4 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSFP32X16X2RS_H_S2)(ae_f32x2* d /*inout*/, const ae_f32x2 d0 /*in*/, const ae_f16x4 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSFP32X16X2RAS_H_S2)(ae_f32x2* d /*inout*/, const ae_f32x2 d0 /*in*/, const ae_f16x4 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSP32X16X2_L)(ae_int32x2* d /*inout*/, const ae_int32x2 d0 /*in*/, const ae_int16x4 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSFP32X16X2RS_L)(ae_f32x2* d /*inout*/, const ae_f32x2 d0 /*in*/, const ae_f16x4 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSFP32X16X2RAS_L)(ae_f32x2* d /*inout*/, const ae_f32x2 d0 /*in*/, const ae_f16x4 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSFP32X16X2RS_L_S2)(ae_f32x2* d /*inout*/, const ae_f32x2 d0 /*in*/, const ae_f16x4 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSFP32X16X2RAS_L_S2)(ae_f32x2* d /*inout*/, const ae_f32x2 d0 /*in*/, const ae_f16x4 d1 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_MULP32X2)(const ae_int32x2 d0 /*in*/, const ae_int32x2 d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_MULFP32X2RS)(const ae_f32x2 d0 /*in*/, const ae_f32x2 d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_MULFP32X2RAS)(const ae_f32x2 d0 /*in*/, const ae_f32x2 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAP32X2)(ae_int32x2* d /*inout*/, const ae_int32x2 d0 /*in*/, const ae_int32x2 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAFP32X2RS)(ae_f32x2* d /*inout*/, const ae_f32x2 d0 /*in*/, const ae_f32x2 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAFP32X2RAS)(ae_f32x2* d /*inout*/, const ae_f32x2 d0 /*in*/, const ae_f32x2 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSP32X2)(ae_int32x2* d /*inout*/, const ae_int32x2 d0 /*in*/, const ae_int32x2 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSFP32X2RS)(ae_f32x2* d /*inout*/, const ae_f32x2 d0 /*in*/, const ae_f32x2 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSFP32X2RAS)(ae_f32x2* d /*inout*/, const ae_f32x2 d0 /*in*/, const ae_f32x2 d1 /*in*/);
CSTUB_EXTERN ae_f16x4 CSTUB_(_TIE_xt_hifi2_AE_MULFP16X4S)(const ae_f16x4 d0 /*in*/, const ae_f16x4 d1 /*in*/);
CSTUB_EXTERN ae_f16x4 CSTUB_(_TIE_xt_hifi2_AE_MULFP16X4RAS)(const ae_f16x4 d0 /*in*/, const ae_f16x4 d1 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_MULC24)(const ae_int24x2 d0 /*in*/, const ae_int24x2 d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_MULFC24RA)(const ae_f24x2 d0 /*in*/, const ae_f24x2 d1 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_MULC32X16_L)(const ae_int32x2 d0 /*in*/, const ae_int16x4 d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_MULFC32X16RAS_L)(const ae_f32x2 d0 /*in*/, const ae_f16x4 d1 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_MULC32X16_H)(const ae_int32x2 d0 /*in*/, const ae_int16x4 d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_MULFC32X16RAS_H)(const ae_f32x2 d0 /*in*/, const ae_f16x4 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAC24)(ae_int32x2* d /*inout*/, const ae_int24x2 d0 /*in*/, const ae_int24x2 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAFC24RA)(ae_f32x2* d /*inout*/, const ae_f24x2 d0 /*in*/, const ae_f24x2 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAC32X16_L)(ae_int32x2* d /*inout*/, const ae_int32x2 d0 /*in*/, const ae_int16x4 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAFC32X16RAS_L)(ae_f32x2* d /*inout*/, const ae_f32x2 d0 /*in*/, const ae_f16x4 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAC32X16_H)(ae_int32x2* d /*inout*/, const ae_int32x2 d0 /*in*/, const ae_int16x4 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAFC32X16RAS_H)(ae_f32x2* d /*inout*/, const ae_f32x2 d0 /*in*/, const ae_f16x4 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULF16X4SS)(ae_f32x2* d0 /*out*/, ae_f32x2* d1 /*out*/, const ae_f16x4 d2 /*in*/, const ae_f16x4 d3 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAF16X4SS)(ae_f32x2* d0 /*inout*/, ae_f32x2* d1 /*inout*/, const ae_f16x4 d2 /*in*/, const ae_f16x4 d3 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSF16X4SS)(ae_f32x2* d0 /*inout*/, ae_f32x2* d1 /*inout*/, const ae_f16x4 d2 /*in*/, const ae_f16x4 d3 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MUL16X4)(ae_int32x2* d0 /*out*/, ae_int32x2* d1 /*out*/, const ae_int16x4 d2 /*in*/, const ae_int16x4 d3 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULA16X4)(ae_int32x2* d0 /*inout*/, ae_int32x2* d1 /*inout*/, const ae_int16x4 d2 /*in*/, const ae_int16x4 d3 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULS16X4)(ae_int32x2* d0 /*inout*/, ae_int32x2* d1 /*inout*/, const ae_int16x4 d2 /*in*/, const ae_int16x4 d3 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULFD24X2_FIR_H)(ae_f64* q0 /*out*/, ae_f64* q1 /*out*/, const ae_f24x2 d0 /*in*/, const ae_f24x2 d1 /*in*/, const ae_f24x2 c /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULFD24X2_FIR_L)(ae_f64* q0 /*out*/, ae_f64* q1 /*out*/, const ae_f24x2 d0 /*in*/, const ae_f24x2 d1 /*in*/, const ae_f24x2 c /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULFD32X16X2_FIR_HH)(ae_f64* q0 /*out*/, ae_f64* q1 /*out*/, const ae_f32x2 d0 /*in*/, const ae_f32x2 d1 /*in*/, const ae_f16x4 c /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULFD32X16X2_FIR_HL)(ae_f64* q0 /*out*/, ae_f64* q1 /*out*/, const ae_f32x2 d0 /*in*/, const ae_f32x2 d1 /*in*/, const ae_f16x4 c /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULFD32X16X2_FIR_LH)(ae_f64* q0 /*out*/, ae_f64* q1 /*out*/, const ae_f32x2 d0 /*in*/, const ae_f32x2 d1 /*in*/, const ae_f16x4 c /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULFD32X16X2_FIR_LL)(ae_f64* q0 /*out*/, ae_f64* q1 /*out*/, const ae_f32x2 d0 /*in*/, const ae_f32x2 d1 /*in*/, const ae_f16x4 c /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAFD24X2_FIR_H)(ae_f64* q0 /*inout*/, ae_f64* q1 /*inout*/, const ae_f24x2 d0 /*in*/, const ae_f24x2 d1 /*in*/, const ae_f24x2 c /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAFD24X2_FIR_L)(ae_f64* q0 /*inout*/, ae_f64* q1 /*inout*/, const ae_f24x2 d0 /*in*/, const ae_f24x2 d1 /*in*/, const ae_f24x2 c /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAFD32X16X2_FIR_HH)(ae_f64* q0 /*inout*/, ae_f64* q1 /*inout*/, const ae_f32x2 d0 /*in*/, const ae_f32x2 d1 /*in*/, const ae_f16x4 c /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAFD32X16X2_FIR_HL)(ae_f64* q0 /*inout*/, ae_f64* q1 /*inout*/, const ae_f32x2 d0 /*in*/, const ae_f32x2 d1 /*in*/, const ae_f16x4 c /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAFD32X16X2_FIR_LH)(ae_f64* q0 /*inout*/, ae_f64* q1 /*inout*/, const ae_f32x2 d0 /*in*/, const ae_f32x2 d1 /*in*/, const ae_f16x4 c /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAFD32X16X2_FIR_LL)(ae_f64* q0 /*inout*/, ae_f64* q1 /*inout*/, const ae_f32x2 d0 /*in*/, const ae_f32x2 d1 /*in*/, const ae_f16x4 c /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_DIV64D32_H)(ae_int64* d /*inout*/, const ae_int32x2 d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_DIV64D32_L)(ae_int64* d /*inout*/, const ae_int32x2 d0 /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_xt_hifi2_AE_LB)(const unsigned int ba /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_xt_hifi2_AE_LBI)(immediate ba /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_xt_hifi2_AE_LBK)(const unsigned int a0 /*in*/, const unsigned int ba /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_xt_hifi2_AE_LBKI)(const unsigned int a0 /*in*/, immediate ba /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_AE_LBS)(const unsigned int ba /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_AE_LBSI)(immediate ba /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_DB)(const unsigned short ** a /*inout*/, const unsigned int count /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_DBI)(const unsigned short ** a /*inout*/, immediate count /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_DB_IC)(const unsigned short ** a /*inout*/, const unsigned int count /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_DB_XC)(const unsigned short ** a /*inout*/, const unsigned int count /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_DBI_IC)(const unsigned short ** a /*inout*/, immediate count /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_DBI_XC)(const unsigned short ** a /*inout*/, immediate count /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_DB_IP)(const unsigned short ** a /*inout*/, const unsigned int count /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_DBI_IP)(const unsigned short ** a /*inout*/, immediate count /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_SEXT32)(const ae_int32x2 d0 /*in*/, immediate bit /*in*/);
CSTUB_EXTERN ae_p16s CSTUB_(_TIE_xt_hifi2_ae_p16s_move)(const ae_p16s d0 /*in*/);
CSTUB_EXTERN ae_p16x2s CSTUB_(_TIE_xt_hifi2_ae_p16x2s_move)(const ae_p16x2s d0 /*in*/);
CSTUB_EXTERN ae_int24 CSTUB_(_TIE_xt_hifi2_ae_int24_move)(const ae_int24 d0 /*in*/);
CSTUB_EXTERN ae_p24s CSTUB_(_TIE_xt_hifi2_ae_p24s_move)(const ae_p24s d0 /*in*/);
CSTUB_EXTERN ae_int16 CSTUB_(_TIE_xt_hifi2_ae_int16_move)(const ae_int16 d0 /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_ae_int16x4_move)(const ae_int16x4 d0 /*in*/);
CSTUB_EXTERN ae_f16 CSTUB_(_TIE_xt_hifi2_ae_f16_move)(const ae_f16 d0 /*in*/);
CSTUB_EXTERN ae_f16x4 CSTUB_(_TIE_xt_hifi2_ae_f16x4_move)(const ae_f16x4 d0 /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_ae_int32_move)(const ae_int32 d0 /*in*/);
CSTUB_EXTERN ae_f32 CSTUB_(_TIE_xt_hifi2_ae_f32_move)(const ae_f32 d0 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_ae_p24x2s_move)(const ae_p24x2s d0 /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_ae_int24x2_move)(const ae_int24x2 d0 /*in*/);
CSTUB_EXTERN ae_f24 CSTUB_(_TIE_xt_hifi2_ae_f24_move)(const ae_f24 d0 /*in*/);
CSTUB_EXTERN ae_p24f CSTUB_(_TIE_xt_hifi2_ae_p24f_move)(const ae_p24f d0 /*in*/);
CSTUB_EXTERN ae_p24x2f CSTUB_(_TIE_xt_hifi2_ae_p24x2f_move)(const ae_p24x2f d0 /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_ae_f24x2_move)(const ae_f24x2 d0 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_ae_int32x2_move)(const ae_int32x2 d0 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_ae_f32x2_move)(const ae_f32x2 d0 /*in*/);
CSTUB_EXTERN ae_q32s CSTUB_(_TIE_xt_hifi2_ae_q32s_move)(const ae_q32s d0 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_ae_q56s_move)(const ae_q56s d0 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_ae_int64_move)(const ae_int64 d0 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_ae_f64_move)(const ae_f64 d0 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_ae_p24x2f_rtor_ae_p24x2s)(const ae_p24x2f d0 /*in*/);
CSTUB_EXTERN ae_p16x2s CSTUB_(_TIE_xt_hifi2_ae_p24x2f_rtor_ae_p16x2s)(const ae_p24x2f d0 /*in*/);
CSTUB_EXTERN ae_p16s CSTUB_(_TIE_xt_hifi2_ae_p24x2f_rtor_ae_p16s)(const ae_p24x2f d0 /*in*/);
CSTUB_EXTERN ae_p24s CSTUB_(_TIE_xt_hifi2_ae_p24x2f_rtor_ae_p24s)(const ae_p24x2f d0 /*in*/);
CSTUB_EXTERN ae_p24f CSTUB_(_TIE_xt_hifi2_ae_p24x2f_rtor_ae_p24f)(const ae_p24x2f d0 /*in*/);
CSTUB_EXTERN ae_p24x2f CSTUB_(_TIE_xt_hifi2_ae_p24x2s_rtor_ae_p24x2f)(const ae_p24x2s d0 /*in*/);
CSTUB_EXTERN ae_p16x2s CSTUB_(_TIE_xt_hifi2_ae_p24x2s_rtor_ae_p16x2s)(const ae_p24x2s d0 /*in*/);
CSTUB_EXTERN ae_p16s CSTUB_(_TIE_xt_hifi2_ae_p24x2s_rtor_ae_p16s)(const ae_p24x2s d0 /*in*/);
CSTUB_EXTERN ae_p24s CSTUB_(_TIE_xt_hifi2_ae_p24x2s_rtor_ae_p24s)(const ae_p24x2s d0 /*in*/);
CSTUB_EXTERN ae_p24f CSTUB_(_TIE_xt_hifi2_ae_p24x2s_rtor_ae_p24f)(const ae_p24x2s d0 /*in*/);
CSTUB_EXTERN ae_p24x2f CSTUB_(_TIE_xt_hifi2_ae_p24s_rtor_ae_p24x2f)(const ae_p24s d0 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_ae_p24s_rtor_ae_p24x2s)(const ae_p24s d0 /*in*/);
CSTUB_EXTERN ae_p24x2f CSTUB_(_TIE_xt_hifi2_ae_p24f_rtor_ae_p24x2f)(const ae_p24f d0 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_ae_p24f_rtor_ae_p24x2s)(const ae_p24f d0 /*in*/);
CSTUB_EXTERN ae_q32s CSTUB_(_TIE_xt_hifi2_ae_q56s_rtor_ae_q32s)(const ae_q56s d0 /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_CVTP24A16)(const unsigned int ai /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_CVTP24A16X2)(const unsigned int ah /*in*/, const unsigned int al /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_MOVPA24)(const unsigned int ai /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_TRUNCP24Q48)(const ae_q56s d0 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_TRUNCI32F64S)(const ae_int64 d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_TRUNCA32F64S)(const ae_int64 d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_NOTP48)(const ae_int24x2 d0 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_NOT32)(const ae_int32x2 d0 /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_NOT16)(const ae_int16x4 d0 /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_NOT24)(const ae_int24x2 d0 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_NOTQ56)(const ae_q56s d0 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_NOT64)(const ae_int64 d0 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_NOT)(const ae_int64 d0 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MULF48Q32SP16S_H)(const ae_int64 d0 /*in*/, const ae_int32x2 d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULFQ32SP16S_H)(const ae_q56s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MULF48Q32SP16U_H)(const ae_int64 d0 /*in*/, const ae_int32x2 d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULFQ32SP16U_H)(const ae_q56s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULQ32SP16S_H)(const ae_q56s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULQ32SP16U_H)(const ae_q56s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAF48Q32SP16S_H)(ae_int64* d /*inout*/, const ae_int64 d0 /*in*/, const ae_int32x2 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAFQ32SP16S_H)(ae_q56s* d /*inout*/, const ae_q56s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAF48Q32SP16U_H)(ae_int64* d /*inout*/, const ae_int64 d0 /*in*/, const ae_int32x2 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAFQ32SP16U_H)(ae_q56s* d /*inout*/, const ae_q56s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAQ32SP16S_H)(ae_q56s* d /*inout*/, const ae_q56s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAQ32SP16U_H)(ae_q56s* d /*inout*/, const ae_q56s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSF48Q32SP16S_H)(ae_int64* d /*inout*/, const ae_int64 d0 /*in*/, const ae_int32x2 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSFQ32SP16S_H)(ae_q56s* d /*inout*/, const ae_q56s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSF48Q32SP16U_H)(ae_int64* d /*inout*/, const ae_int64 d0 /*in*/, const ae_int32x2 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSFQ32SP16U_H)(ae_q56s* d /*inout*/, const ae_q56s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSQ32SP16S_H)(ae_q56s* d /*inout*/, const ae_q56s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULSQ32SP16U_H)(ae_q56s* d /*inout*/, const ae_q56s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZAAFQ32SP16S_LL)(const ae_q56s d0 /*in*/, const ae_int24x2 d1 /*in*/, const ae_q56s d2 /*in*/, const ae_int24x2 d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZAAFQ32SP16S_LL_S2)(const ae_q56s d0 /*in*/, const ae_int24x2 d1 /*in*/, const ae_q56s d2 /*in*/, const ae_int24x2 d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZAAQ32SP16S_LL)(const ae_q56s d0 /*in*/, const ae_int24x2 d1 /*in*/, const ae_q56s d2 /*in*/, const ae_int24x2 d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZAAQ32SP16S_LL_S2)(const ae_q56s d0 /*in*/, const ae_int24x2 d1 /*in*/, const ae_q56s d2 /*in*/, const ae_int24x2 d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZAAFQ32SP16U_LL)(const ae_q56s d0 /*in*/, const ae_int24x2 d1 /*in*/, const ae_q56s d2 /*in*/, const ae_int24x2 d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZAAFQ32SP16U_LL_S2)(const ae_q56s d0 /*in*/, const ae_int24x2 d1 /*in*/, const ae_q56s d2 /*in*/, const ae_int24x2 d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZAAQ32SP16U_LL)(const ae_q56s d0 /*in*/, const ae_int24x2 d1 /*in*/, const ae_q56s d2 /*in*/, const ae_int24x2 d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZAAQ32SP16U_LL_S2)(const ae_q56s d0 /*in*/, const ae_int24x2 d1 /*in*/, const ae_q56s d2 /*in*/, const ae_int24x2 d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZAAFQ32SP16S_HH)(const ae_q56s d0 /*in*/, const ae_int24x2 d1 /*in*/, const ae_q56s d2 /*in*/, const ae_int24x2 d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZAAFQ32SP16S_HH_S2)(const ae_q56s d0 /*in*/, const ae_int24x2 d1 /*in*/, const ae_q56s d2 /*in*/, const ae_int24x2 d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZAAQ32SP16S_HH)(const ae_q56s d0 /*in*/, const ae_int24x2 d1 /*in*/, const ae_q56s d2 /*in*/, const ae_int24x2 d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZAAQ32SP16S_HH_S2)(const ae_q56s d0 /*in*/, const ae_int24x2 d1 /*in*/, const ae_q56s d2 /*in*/, const ae_int24x2 d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZAAFQ32SP16U_HH)(const ae_q56s d0 /*in*/, const ae_int24x2 d1 /*in*/, const ae_q56s d2 /*in*/, const ae_int24x2 d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZAAFQ32SP16U_HH_S2)(const ae_q56s d0 /*in*/, const ae_int24x2 d1 /*in*/, const ae_q56s d2 /*in*/, const ae_int24x2 d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZAAQ32SP16U_HH)(const ae_q56s d0 /*in*/, const ae_int24x2 d1 /*in*/, const ae_q56s d2 /*in*/, const ae_int24x2 d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZAAQ32SP16U_HH_S2)(const ae_q56s d0 /*in*/, const ae_int24x2 d1 /*in*/, const ae_q56s d2 /*in*/, const ae_int24x2 d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZAAFQ32SP16S_LH)(const ae_q56s d0 /*in*/, const ae_int24x2 d1 /*in*/, const ae_q56s d2 /*in*/, const ae_int24x2 d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZAAFQ32SP16S_LH_S2)(const ae_q56s d0 /*in*/, const ae_int24x2 d1 /*in*/, const ae_q56s d2 /*in*/, const ae_int24x2 d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZAAQ32SP16S_LH)(const ae_q56s d0 /*in*/, const ae_int24x2 d1 /*in*/, const ae_q56s d2 /*in*/, const ae_int24x2 d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZAAQ32SP16S_LH_S2)(const ae_q56s d0 /*in*/, const ae_int24x2 d1 /*in*/, const ae_q56s d2 /*in*/, const ae_int24x2 d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZAAFQ32SP16U_LH)(const ae_q56s d0 /*in*/, const ae_int24x2 d1 /*in*/, const ae_q56s d2 /*in*/, const ae_int24x2 d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZAAFQ32SP16U_LH_S2)(const ae_q56s d0 /*in*/, const ae_int24x2 d1 /*in*/, const ae_q56s d2 /*in*/, const ae_int24x2 d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZAAQ32SP16U_LH)(const ae_q56s d0 /*in*/, const ae_int24x2 d1 /*in*/, const ae_q56s d2 /*in*/, const ae_int24x2 d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZAAQ32SP16U_LH_S2)(const ae_q56s d0 /*in*/, const ae_int24x2 d1 /*in*/, const ae_q56s d2 /*in*/, const ae_int24x2 d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZASFQ32SP16S_LL)(const ae_q56s d0 /*in*/, const ae_int24x2 d1 /*in*/, const ae_q56s d2 /*in*/, const ae_int24x2 d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZASFQ32SP16S_LL_S2)(const ae_q56s d0 /*in*/, const ae_int24x2 d1 /*in*/, const ae_q56s d2 /*in*/, const ae_int24x2 d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZASQ32SP16S_LL)(const ae_q56s d0 /*in*/, const ae_int24x2 d1 /*in*/, const ae_q56s d2 /*in*/, const ae_int24x2 d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZASQ32SP16S_LL_S2)(const ae_q56s d0 /*in*/, const ae_int24x2 d1 /*in*/, const ae_q56s d2 /*in*/, const ae_int24x2 d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZASFQ32SP16U_LL)(const ae_q56s d0 /*in*/, const ae_int24x2 d1 /*in*/, const ae_q56s d2 /*in*/, const ae_int24x2 d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZASFQ32SP16U_LL_S2)(const ae_q56s d0 /*in*/, const ae_int24x2 d1 /*in*/, const ae_q56s d2 /*in*/, const ae_int24x2 d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZASQ32SP16U_LL)(const ae_q56s d0 /*in*/, const ae_int24x2 d1 /*in*/, const ae_q56s d2 /*in*/, const ae_int24x2 d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZASQ32SP16U_LL_S2)(const ae_q56s d0 /*in*/, const ae_int24x2 d1 /*in*/, const ae_q56s d2 /*in*/, const ae_int24x2 d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZASFQ32SP16S_HH)(const ae_q56s d0 /*in*/, const ae_int24x2 d1 /*in*/, const ae_q56s d2 /*in*/, const ae_int24x2 d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZASFQ32SP16S_HH_S2)(const ae_q56s d0 /*in*/, const ae_int24x2 d1 /*in*/, const ae_q56s d2 /*in*/, const ae_int24x2 d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZASQ32SP16S_HH)(const ae_q56s d0 /*in*/, const ae_int24x2 d1 /*in*/, const ae_q56s d2 /*in*/, const ae_int24x2 d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZASQ32SP16S_HH_S2)(const ae_q56s d0 /*in*/, const ae_int24x2 d1 /*in*/, const ae_q56s d2 /*in*/, const ae_int24x2 d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZASFQ32SP16U_HH)(const ae_q56s d0 /*in*/, const ae_int24x2 d1 /*in*/, const ae_q56s d2 /*in*/, const ae_int24x2 d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZASFQ32SP16U_HH_S2)(const ae_q56s d0 /*in*/, const ae_int24x2 d1 /*in*/, const ae_q56s d2 /*in*/, const ae_int24x2 d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZASQ32SP16U_HH)(const ae_q56s d0 /*in*/, const ae_int24x2 d1 /*in*/, const ae_q56s d2 /*in*/, const ae_int24x2 d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZASQ32SP16U_HH_S2)(const ae_q56s d0 /*in*/, const ae_int24x2 d1 /*in*/, const ae_q56s d2 /*in*/, const ae_int24x2 d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZASFQ32SP16S_LH)(const ae_q56s d0 /*in*/, const ae_int24x2 d1 /*in*/, const ae_q56s d2 /*in*/, const ae_int24x2 d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZASFQ32SP16S_LH_S2)(const ae_q56s d0 /*in*/, const ae_int24x2 d1 /*in*/, const ae_q56s d2 /*in*/, const ae_int24x2 d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZASQ32SP16S_LH)(const ae_q56s d0 /*in*/, const ae_int24x2 d1 /*in*/, const ae_q56s d2 /*in*/, const ae_int24x2 d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZASQ32SP16S_LH_S2)(const ae_q56s d0 /*in*/, const ae_int24x2 d1 /*in*/, const ae_q56s d2 /*in*/, const ae_int24x2 d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZASFQ32SP16U_LH)(const ae_q56s d0 /*in*/, const ae_int24x2 d1 /*in*/, const ae_q56s d2 /*in*/, const ae_int24x2 d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZASFQ32SP16U_LH_S2)(const ae_q56s d0 /*in*/, const ae_int24x2 d1 /*in*/, const ae_q56s d2 /*in*/, const ae_int24x2 d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZASQ32SP16U_LH)(const ae_q56s d0 /*in*/, const ae_int24x2 d1 /*in*/, const ae_q56s d2 /*in*/, const ae_int24x2 d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZASQ32SP16U_LH_S2)(const ae_q56s d0 /*in*/, const ae_int24x2 d1 /*in*/, const ae_q56s d2 /*in*/, const ae_int24x2 d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSAFQ32SP16S_LL)(const ae_q56s d0 /*in*/, const ae_int24x2 d1 /*in*/, const ae_q56s d2 /*in*/, const ae_int24x2 d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSAFQ32SP16S_LL_S2)(const ae_q56s d0 /*in*/, const ae_int24x2 d1 /*in*/, const ae_q56s d2 /*in*/, const ae_int24x2 d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSAQ32SP16S_LL)(const ae_q56s d0 /*in*/, const ae_int24x2 d1 /*in*/, const ae_q56s d2 /*in*/, const ae_int24x2 d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSAQ32SP16S_LL_S2)(const ae_q56s d0 /*in*/, const ae_int24x2 d1 /*in*/, const ae_q56s d2 /*in*/, const ae_int24x2 d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSAFQ32SP16U_LL)(const ae_q56s d0 /*in*/, const ae_int24x2 d1 /*in*/, const ae_q56s d2 /*in*/, const ae_int24x2 d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSAFQ32SP16U_LL_S2)(const ae_q56s d0 /*in*/, const ae_int24x2 d1 /*in*/, const ae_q56s d2 /*in*/, const ae_int24x2 d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSAQ32SP16U_LL)(const ae_q56s d0 /*in*/, const ae_int24x2 d1 /*in*/, const ae_q56s d2 /*in*/, const ae_int24x2 d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSAQ32SP16U_LL_S2)(const ae_q56s d0 /*in*/, const ae_int24x2 d1 /*in*/, const ae_q56s d2 /*in*/, const ae_int24x2 d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSAFQ32SP16S_HH)(const ae_q56s d0 /*in*/, const ae_int24x2 d1 /*in*/, const ae_q56s d2 /*in*/, const ae_int24x2 d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSAFQ32SP16S_HH_S2)(const ae_q56s d0 /*in*/, const ae_int24x2 d1 /*in*/, const ae_q56s d2 /*in*/, const ae_int24x2 d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSAQ32SP16S_HH)(const ae_q56s d0 /*in*/, const ae_int24x2 d1 /*in*/, const ae_q56s d2 /*in*/, const ae_int24x2 d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSAQ32SP16S_HH_S2)(const ae_q56s d0 /*in*/, const ae_int24x2 d1 /*in*/, const ae_q56s d2 /*in*/, const ae_int24x2 d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSAFQ32SP16U_HH)(const ae_q56s d0 /*in*/, const ae_int24x2 d1 /*in*/, const ae_q56s d2 /*in*/, const ae_int24x2 d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSAFQ32SP16U_HH_S2)(const ae_q56s d0 /*in*/, const ae_int24x2 d1 /*in*/, const ae_q56s d2 /*in*/, const ae_int24x2 d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSAQ32SP16U_HH)(const ae_q56s d0 /*in*/, const ae_int24x2 d1 /*in*/, const ae_q56s d2 /*in*/, const ae_int24x2 d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSAQ32SP16U_HH_S2)(const ae_q56s d0 /*in*/, const ae_int24x2 d1 /*in*/, const ae_q56s d2 /*in*/, const ae_int24x2 d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSAFQ32SP16S_LH)(const ae_q56s d0 /*in*/, const ae_int24x2 d1 /*in*/, const ae_q56s d2 /*in*/, const ae_int24x2 d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSAFQ32SP16S_LH_S2)(const ae_q56s d0 /*in*/, const ae_int24x2 d1 /*in*/, const ae_q56s d2 /*in*/, const ae_int24x2 d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSAQ32SP16S_LH)(const ae_q56s d0 /*in*/, const ae_int24x2 d1 /*in*/, const ae_q56s d2 /*in*/, const ae_int24x2 d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSAQ32SP16S_LH_S2)(const ae_q56s d0 /*in*/, const ae_int24x2 d1 /*in*/, const ae_q56s d2 /*in*/, const ae_int24x2 d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSAFQ32SP16U_LH)(const ae_q56s d0 /*in*/, const ae_int24x2 d1 /*in*/, const ae_q56s d2 /*in*/, const ae_int24x2 d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSAFQ32SP16U_LH_S2)(const ae_q56s d0 /*in*/, const ae_int24x2 d1 /*in*/, const ae_q56s d2 /*in*/, const ae_int24x2 d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSAQ32SP16U_LH)(const ae_q56s d0 /*in*/, const ae_int24x2 d1 /*in*/, const ae_q56s d2 /*in*/, const ae_int24x2 d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSAQ32SP16U_LH_S2)(const ae_q56s d0 /*in*/, const ae_int24x2 d1 /*in*/, const ae_q56s d2 /*in*/, const ae_int24x2 d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSSFQ32SP16S_LL)(const ae_q56s d0 /*in*/, const ae_int24x2 d1 /*in*/, const ae_q56s d2 /*in*/, const ae_int24x2 d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSSFQ32SP16S_LL_S2)(const ae_q56s d0 /*in*/, const ae_int24x2 d1 /*in*/, const ae_q56s d2 /*in*/, const ae_int24x2 d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSSQ32SP16S_LL)(const ae_q56s d0 /*in*/, const ae_int24x2 d1 /*in*/, const ae_q56s d2 /*in*/, const ae_int24x2 d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSSQ32SP16S_LL_S2)(const ae_q56s d0 /*in*/, const ae_int24x2 d1 /*in*/, const ae_q56s d2 /*in*/, const ae_int24x2 d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSSFQ32SP16U_LL)(const ae_q56s d0 /*in*/, const ae_int24x2 d1 /*in*/, const ae_q56s d2 /*in*/, const ae_int24x2 d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSSFQ32SP16U_LL_S2)(const ae_q56s d0 /*in*/, const ae_int24x2 d1 /*in*/, const ae_q56s d2 /*in*/, const ae_int24x2 d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSSQ32SP16U_LL)(const ae_q56s d0 /*in*/, const ae_int24x2 d1 /*in*/, const ae_q56s d2 /*in*/, const ae_int24x2 d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSSQ32SP16U_LL_S2)(const ae_q56s d0 /*in*/, const ae_int24x2 d1 /*in*/, const ae_q56s d2 /*in*/, const ae_int24x2 d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSSFQ32SP16S_HH)(const ae_q56s d0 /*in*/, const ae_int24x2 d1 /*in*/, const ae_q56s d2 /*in*/, const ae_int24x2 d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSSFQ32SP16S_HH_S2)(const ae_q56s d0 /*in*/, const ae_int24x2 d1 /*in*/, const ae_q56s d2 /*in*/, const ae_int24x2 d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSSQ32SP16S_HH)(const ae_q56s d0 /*in*/, const ae_int24x2 d1 /*in*/, const ae_q56s d2 /*in*/, const ae_int24x2 d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSSQ32SP16S_HH_S2)(const ae_q56s d0 /*in*/, const ae_int24x2 d1 /*in*/, const ae_q56s d2 /*in*/, const ae_int24x2 d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSSFQ32SP16U_HH)(const ae_q56s d0 /*in*/, const ae_int24x2 d1 /*in*/, const ae_q56s d2 /*in*/, const ae_int24x2 d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSSFQ32SP16U_HH_S2)(const ae_q56s d0 /*in*/, const ae_int24x2 d1 /*in*/, const ae_q56s d2 /*in*/, const ae_int24x2 d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSSQ32SP16U_HH)(const ae_q56s d0 /*in*/, const ae_int24x2 d1 /*in*/, const ae_q56s d2 /*in*/, const ae_int24x2 d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSSQ32SP16U_HH_S2)(const ae_q56s d0 /*in*/, const ae_int24x2 d1 /*in*/, const ae_q56s d2 /*in*/, const ae_int24x2 d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSSFQ32SP16S_LH)(const ae_q56s d0 /*in*/, const ae_int24x2 d1 /*in*/, const ae_q56s d2 /*in*/, const ae_int24x2 d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSSFQ32SP16S_LH_S2)(const ae_q56s d0 /*in*/, const ae_int24x2 d1 /*in*/, const ae_q56s d2 /*in*/, const ae_int24x2 d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSSQ32SP16S_LH)(const ae_q56s d0 /*in*/, const ae_int24x2 d1 /*in*/, const ae_q56s d2 /*in*/, const ae_int24x2 d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSSQ32SP16S_LH_S2)(const ae_q56s d0 /*in*/, const ae_int24x2 d1 /*in*/, const ae_q56s d2 /*in*/, const ae_int24x2 d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSSFQ32SP16U_LH)(const ae_q56s d0 /*in*/, const ae_int24x2 d1 /*in*/, const ae_q56s d2 /*in*/, const ae_int24x2 d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSSFQ32SP16U_LH_S2)(const ae_q56s d0 /*in*/, const ae_int24x2 d1 /*in*/, const ae_q56s d2 /*in*/, const ae_int24x2 d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSSQ32SP16U_LH)(const ae_q56s d0 /*in*/, const ae_int24x2 d1 /*in*/, const ae_q56s d2 /*in*/, const ae_int24x2 d3 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_MULZSSQ32SP16U_LH_S2)(const ae_q56s d0 /*in*/, const ae_int24x2 d1 /*in*/, const ae_q56s d2 /*in*/, const ae_int24x2 d3 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_VLDL16T)(xtbool* done /*out*/, unsigned int* symbol /*out*/, const unsigned short * a /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_VLDL16C)(const unsigned short ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_VLDL16C_XC)(const unsigned short ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_VLDL16C_IC)(const unsigned short ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_VLDL16C_IP)(const unsigned short ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_VLEL16T)(xtbool* done /*out*/, unsigned int* symbol /*inout*/, const unsigned short * a /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_VLES16C)(unsigned short ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_VLES16C_IC)(unsigned short ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_VLES16C_XC)(unsigned short ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_VLES16C_IP)(unsigned short ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_VLDL32T)(xtbool* done /*out*/, unsigned int* symbol /*out*/, const unsigned int * a /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_VLEL32T)(xtbool* done /*out*/, unsigned int* symbol /*inout*/, const unsigned int * a /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SB)(unsigned short ** a /*inout*/, const unsigned int bits /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SB_IC)(unsigned short ** a /*inout*/, const unsigned int bits /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SB_XC)(unsigned short ** a /*inout*/, const unsigned int bits /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SB_IP)(unsigned short ** a /*inout*/, const unsigned int bits /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SBI)(unsigned short ** a /*inout*/, const unsigned int bits /*in*/, immediate count /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SBI_IC)(unsigned short ** a /*inout*/, const unsigned int bits /*in*/, immediate count /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SBI_XC)(unsigned short ** a /*inout*/, const unsigned int bits /*in*/, immediate count /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SBI_IP)(unsigned short ** a /*inout*/, const unsigned int bits /*in*/, immediate count /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SBF)(unsigned short ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SBF_IC)(unsigned short ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SBF_XC)(unsigned short ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_SBF_IP)(unsigned short ** a /*inout*/);
CSTUB_EXTERN ae_f32x4 CSTUB_(_TIE_xt_hifi2_AE_F16X4_MULF_F16X4)(const ae_f16x4 d0 /*in*/, const ae_f16x4 d1 /*in*/);
CSTUB_EXTERN ae_int32x4 CSTUB_(_TIE_xt_hifi2_AE_INT16X4_MUL_INT16X4)(const ae_int16x4 d0 /*in*/, const ae_int16x4 d1 /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_INT24X2_ADD_INT24X2)(const ae_int24x2 d0 /*in*/, const ae_int24x2 d1 /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_INT24X2_SUB_INT24X2)(const ae_int24x2 d0 /*in*/, const ae_int24x2 d1 /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_INT24X2_AND_INT24X2)(const ae_int24x2 d0 /*in*/, const ae_int24x2 d1 /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_INT24X2_XOR_INT24X2)(const ae_int24x2 d0 /*in*/, const ae_int24x2 d1 /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_INT24X2_OR_INT24X2)(const ae_int24x2 d0 /*in*/, const ae_int24x2 d1 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_INT24X2_MUL_INT24X2)(const ae_int24x2 d0 /*in*/, const ae_int24x2 d1 /*in*/);
CSTUB_EXTERN xtbool2 CSTUB_(_TIE_xt_hifi2_AE_INT24X2_EQ_INT24X2)(const ae_int24x2 d0 /*in*/, const ae_int24x2 d1 /*in*/);
CSTUB_EXTERN xtbool2 CSTUB_(_TIE_xt_hifi2_AE_INT24X2_LT_INT24X2)(const ae_int24x2 d0 /*in*/, const ae_int24x2 d1 /*in*/);
CSTUB_EXTERN xtbool2 CSTUB_(_TIE_xt_hifi2_AE_INT24X2_LE_INT24X2)(const ae_int24x2 d0 /*in*/, const ae_int24x2 d1 /*in*/);
CSTUB_EXTERN xtbool2 CSTUB_(_TIE_xt_hifi2_AE_INT24X2_GT_INT24X2)(const ae_int24x2 d0 /*in*/, const ae_int24x2 d1 /*in*/);
CSTUB_EXTERN xtbool2 CSTUB_(_TIE_xt_hifi2_AE_INT24X2_GE_INT24X2)(const ae_int24x2 d0 /*in*/, const ae_int24x2 d1 /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_INT24X2_ADD_INT24)(const ae_int24x2 d0 /*in*/, const ae_int24 d1 /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_INT24X2_SUB_INT24)(const ae_int24x2 d0 /*in*/, const ae_int24 d1 /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_INT24X2_AND_INT24)(const ae_int24x2 d0 /*in*/, const ae_int24 d1 /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_INT24X2_XOR_INT24)(const ae_int24x2 d0 /*in*/, const ae_int24 d1 /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_INT24X2_OR_INT24)(const ae_int24x2 d0 /*in*/, const ae_int24 d1 /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_INT24X2_NEG)(const ae_int24x2 d0 /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_INT24X2_BNOT)(const ae_int24x2 d0 /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_INT24X2_SLA)(const ae_int24x2 d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_INT24X2_SRA)(const ae_int24x2 d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_INT24X2_SLAI)(const ae_int24x2 d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_INT24X2_SRAI)(const ae_int24x2 d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_INT24_ADD_INT24X2)(const ae_int24 d0 /*in*/, const ae_int24x2 d1 /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_INT24_SUB_INT24X2)(const ae_int24 d0 /*in*/, const ae_int24x2 d1 /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_INT24_AND_INT24X2)(const ae_int24 d0 /*in*/, const ae_int24x2 d1 /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_INT24_XOR_INT24X2)(const ae_int24 d0 /*in*/, const ae_int24x2 d1 /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_INT24_OR_INT24X2)(const ae_int24 d0 /*in*/, const ae_int24x2 d1 /*in*/);
CSTUB_EXTERN ae_int24 CSTUB_(_TIE_xt_hifi2_AE_INT24_ADD_INT24)(const ae_int24 d0 /*in*/, const ae_int24 d1 /*in*/);
CSTUB_EXTERN ae_int24 CSTUB_(_TIE_xt_hifi2_AE_INT24_SUB_INT24)(const ae_int24 d0 /*in*/, const ae_int24 d1 /*in*/);
CSTUB_EXTERN ae_int24 CSTUB_(_TIE_xt_hifi2_AE_INT24_AND_INT24)(const ae_int24 d0 /*in*/, const ae_int24 d1 /*in*/);
CSTUB_EXTERN ae_int24 CSTUB_(_TIE_xt_hifi2_AE_INT24_XOR_INT24)(const ae_int24 d0 /*in*/, const ae_int24 d1 /*in*/);
CSTUB_EXTERN ae_int24 CSTUB_(_TIE_xt_hifi2_AE_INT24_OR_INT24)(const ae_int24 d0 /*in*/, const ae_int24 d1 /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_INT24_MUL_INT24)(const ae_int24 d0 /*in*/, const ae_int24 d1 /*in*/);
CSTUB_EXTERN ae_int24 CSTUB_(_TIE_xt_hifi2_AE_INT24_NEG)(const ae_int24 d0 /*in*/);
CSTUB_EXTERN ae_int24 CSTUB_(_TIE_xt_hifi2_AE_INT24_BNOT)(const ae_int24 d0 /*in*/);
CSTUB_EXTERN ae_int24 CSTUB_(_TIE_xt_hifi2_AE_INT24_SLA)(const ae_int24 d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_int24 CSTUB_(_TIE_xt_hifi2_AE_INT24_SRA)(const ae_int24 d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_int24 CSTUB_(_TIE_xt_hifi2_AE_INT24_SLAI)(const ae_int24 d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_int24 CSTUB_(_TIE_xt_hifi2_AE_INT24_SRAI)(const ae_int24 d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_AE_F24X2_ADDS_F24X2)(const ae_f24x2 d0 /*in*/, const ae_f24x2 d1 /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_AE_F24X2_SUBS_F24X2)(const ae_f24x2 d0 /*in*/, const ae_f24x2 d1 /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_AE_F24X2_AND_F24X2)(const ae_f24x2 d0 /*in*/, const ae_f24x2 d1 /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_AE_F24X2_XOR_F24X2)(const ae_f24x2 d0 /*in*/, const ae_f24x2 d1 /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_AE_F24X2_OR_F24X2)(const ae_f24x2 d0 /*in*/, const ae_f24x2 d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_F24X2_MULF_F24X2)(const ae_f24x2 d0 /*in*/, const ae_f24x2 d1 /*in*/);
CSTUB_EXTERN xtbool2 CSTUB_(_TIE_xt_hifi2_AE_F24X2_EQ_F24X2)(const ae_f24x2 d0 /*in*/, const ae_f24x2 d1 /*in*/);
CSTUB_EXTERN xtbool2 CSTUB_(_TIE_xt_hifi2_AE_F24X2_LT_F24X2)(const ae_f24x2 d0 /*in*/, const ae_f24x2 d1 /*in*/);
CSTUB_EXTERN xtbool2 CSTUB_(_TIE_xt_hifi2_AE_F24X2_LE_F24X2)(const ae_f24x2 d0 /*in*/, const ae_f24x2 d1 /*in*/);
CSTUB_EXTERN xtbool2 CSTUB_(_TIE_xt_hifi2_AE_F24X2_GT_F24X2)(const ae_f24x2 d0 /*in*/, const ae_f24x2 d1 /*in*/);
CSTUB_EXTERN xtbool2 CSTUB_(_TIE_xt_hifi2_AE_F24X2_GE_F24X2)(const ae_f24x2 d0 /*in*/, const ae_f24x2 d1 /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_AE_F24X2_ADDS_F24)(const ae_f24x2 d0 /*in*/, const ae_f24 d1 /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_AE_F24X2_SUBS_F24)(const ae_f24x2 d0 /*in*/, const ae_f24 d1 /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_AE_F24X2_AND_F24)(const ae_f24x2 d0 /*in*/, const ae_f24 d1 /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_AE_F24X2_XOR_F24)(const ae_f24x2 d0 /*in*/, const ae_f24 d1 /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_AE_F24X2_OR_F24)(const ae_f24x2 d0 /*in*/, const ae_f24 d1 /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_AE_F24X2_NEGS)(const ae_f24x2 d0 /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_AE_F24X2_BNOT)(const ae_f24x2 d0 /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_AE_F24X2_SLA)(const ae_f24x2 d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_AE_F24X2_SRA)(const ae_f24x2 d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_AE_F24X2_SLAI)(const ae_f24x2 d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_AE_F24X2_SRAI)(const ae_f24x2 d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_AE_F24_ADDS_F24X2)(const ae_f24 d0 /*in*/, const ae_f24x2 d1 /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_AE_F24_SUBS_F24X2)(const ae_f24 d0 /*in*/, const ae_f24x2 d1 /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_AE_F24_AND_F24X2)(const ae_f24 d0 /*in*/, const ae_f24x2 d1 /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_AE_F24_XOR_F24X2)(const ae_f24 d0 /*in*/, const ae_f24x2 d1 /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_AE_F24_OR_F24X2)(const ae_f24 d0 /*in*/, const ae_f24x2 d1 /*in*/);
CSTUB_EXTERN ae_f24 CSTUB_(_TIE_xt_hifi2_AE_F24_ADDS_F24)(const ae_f24 d0 /*in*/, const ae_f24 d1 /*in*/);
CSTUB_EXTERN ae_f24 CSTUB_(_TIE_xt_hifi2_AE_F24_SUBS_F24)(const ae_f24 d0 /*in*/, const ae_f24 d1 /*in*/);
CSTUB_EXTERN ae_f24 CSTUB_(_TIE_xt_hifi2_AE_F24_AND_F24)(const ae_f24 d0 /*in*/, const ae_f24 d1 /*in*/);
CSTUB_EXTERN ae_f24 CSTUB_(_TIE_xt_hifi2_AE_F24_XOR_F24)(const ae_f24 d0 /*in*/, const ae_f24 d1 /*in*/);
CSTUB_EXTERN ae_f24 CSTUB_(_TIE_xt_hifi2_AE_F24_OR_F24)(const ae_f24 d0 /*in*/, const ae_f24 d1 /*in*/);
CSTUB_EXTERN ae_f32 CSTUB_(_TIE_xt_hifi2_AE_F24_MULF_F24)(const ae_f24 d0 /*in*/, const ae_f24 d1 /*in*/);
CSTUB_EXTERN ae_f24 CSTUB_(_TIE_xt_hifi2_AE_F24_NEGS)(const ae_f24 d0 /*in*/);
CSTUB_EXTERN ae_f24 CSTUB_(_TIE_xt_hifi2_AE_F24_BNOT)(const ae_f24 d0 /*in*/);
CSTUB_EXTERN ae_f24 CSTUB_(_TIE_xt_hifi2_AE_F24_SLA)(const ae_f24 d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_f24 CSTUB_(_TIE_xt_hifi2_AE_F24_SRA)(const ae_f24 d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_f24 CSTUB_(_TIE_xt_hifi2_AE_F24_SLAI)(const ae_f24 d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_f24 CSTUB_(_TIE_xt_hifi2_AE_F24_SRAI)(const ae_f24 d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_INT16X4_ADD_INT16X4)(const ae_int16x4 d0 /*in*/, const ae_int16x4 d1 /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_INT16X4_SUB_INT16X4)(const ae_int16x4 d0 /*in*/, const ae_int16x4 d1 /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_INT16X4_AND_INT16X4)(const ae_int16x4 d0 /*in*/, const ae_int16x4 d1 /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_INT16X4_XOR_INT16X4)(const ae_int16x4 d0 /*in*/, const ae_int16x4 d1 /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_INT16X4_OR_INT16X4)(const ae_int16x4 d0 /*in*/, const ae_int16x4 d1 /*in*/);
CSTUB_EXTERN xtbool4 CSTUB_(_TIE_xt_hifi2_AE_INT16X4_EQ_INT16X4)(const ae_int16x4 d0 /*in*/, const ae_int16x4 d1 /*in*/);
CSTUB_EXTERN xtbool4 CSTUB_(_TIE_xt_hifi2_AE_INT16X4_LT_INT16X4)(const ae_int16x4 d0 /*in*/, const ae_int16x4 d1 /*in*/);
CSTUB_EXTERN xtbool4 CSTUB_(_TIE_xt_hifi2_AE_INT16X4_LE_INT16X4)(const ae_int16x4 d0 /*in*/, const ae_int16x4 d1 /*in*/);
CSTUB_EXTERN xtbool4 CSTUB_(_TIE_xt_hifi2_AE_INT16X4_GT_INT16X4)(const ae_int16x4 d0 /*in*/, const ae_int16x4 d1 /*in*/);
CSTUB_EXTERN xtbool4 CSTUB_(_TIE_xt_hifi2_AE_INT16X4_GE_INT16X4)(const ae_int16x4 d0 /*in*/, const ae_int16x4 d1 /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_INT16X4_ADD_INT16)(const ae_int16x4 d0 /*in*/, const ae_int16 d1 /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_INT16X4_SUB_INT16)(const ae_int16x4 d0 /*in*/, const ae_int16 d1 /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_INT16X4_AND_INT16)(const ae_int16x4 d0 /*in*/, const ae_int16 d1 /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_INT16X4_XOR_INT16)(const ae_int16x4 d0 /*in*/, const ae_int16 d1 /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_INT16X4_OR_INT16)(const ae_int16x4 d0 /*in*/, const ae_int16 d1 /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_INT16X4_NEG)(const ae_int16x4 d0 /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_INT16X4_BNOT)(const ae_int16x4 d0 /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_INT16X4_SRA)(const ae_int16x4 d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_INT16X4_SRAI)(const ae_int16x4 d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_INT16_ADD_INT16X4)(const ae_int16 d0 /*in*/, const ae_int16x4 d1 /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_INT16_SUB_INT16X4)(const ae_int16 d0 /*in*/, const ae_int16x4 d1 /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_INT16_AND_INT16X4)(const ae_int16 d0 /*in*/, const ae_int16x4 d1 /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_INT16_XOR_INT16X4)(const ae_int16 d0 /*in*/, const ae_int16x4 d1 /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_INT16_OR_INT16X4)(const ae_int16 d0 /*in*/, const ae_int16x4 d1 /*in*/);
CSTUB_EXTERN ae_int16 CSTUB_(_TIE_xt_hifi2_AE_INT16_ADD_INT16)(const ae_int16 d0 /*in*/, const ae_int16 d1 /*in*/);
CSTUB_EXTERN ae_int16 CSTUB_(_TIE_xt_hifi2_AE_INT16_SUB_INT16)(const ae_int16 d0 /*in*/, const ae_int16 d1 /*in*/);
CSTUB_EXTERN ae_int16 CSTUB_(_TIE_xt_hifi2_AE_INT16_AND_INT16)(const ae_int16 d0 /*in*/, const ae_int16 d1 /*in*/);
CSTUB_EXTERN ae_int16 CSTUB_(_TIE_xt_hifi2_AE_INT16_XOR_INT16)(const ae_int16 d0 /*in*/, const ae_int16 d1 /*in*/);
CSTUB_EXTERN ae_int16 CSTUB_(_TIE_xt_hifi2_AE_INT16_OR_INT16)(const ae_int16 d0 /*in*/, const ae_int16 d1 /*in*/);
CSTUB_EXTERN ae_int16 CSTUB_(_TIE_xt_hifi2_AE_INT16_NEG)(const ae_int16 d0 /*in*/);
CSTUB_EXTERN ae_int16 CSTUB_(_TIE_xt_hifi2_AE_INT16_BNOT)(const ae_int16 d0 /*in*/);
CSTUB_EXTERN ae_int16 CSTUB_(_TIE_xt_hifi2_AE_INT16_SRA)(const ae_int16 d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_int16 CSTUB_(_TIE_xt_hifi2_AE_INT16_SRAI)(const ae_int16 d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_f16x4 CSTUB_(_TIE_xt_hifi2_AE_F16X4_ADDS_F16X4)(const ae_f16x4 d0 /*in*/, const ae_f16x4 d1 /*in*/);
CSTUB_EXTERN ae_f16x4 CSTUB_(_TIE_xt_hifi2_AE_F16X4_SUBS_F16X4)(const ae_f16x4 d0 /*in*/, const ae_f16x4 d1 /*in*/);
CSTUB_EXTERN ae_f16x4 CSTUB_(_TIE_xt_hifi2_AE_F16X4_AND_F16X4)(const ae_f16x4 d0 /*in*/, const ae_f16x4 d1 /*in*/);
CSTUB_EXTERN ae_f16x4 CSTUB_(_TIE_xt_hifi2_AE_F16X4_XOR_F16X4)(const ae_f16x4 d0 /*in*/, const ae_f16x4 d1 /*in*/);
CSTUB_EXTERN ae_f16x4 CSTUB_(_TIE_xt_hifi2_AE_F16X4_OR_F16X4)(const ae_f16x4 d0 /*in*/, const ae_f16x4 d1 /*in*/);
CSTUB_EXTERN xtbool4 CSTUB_(_TIE_xt_hifi2_AE_F16X4_EQ_F16X4)(const ae_f16x4 d0 /*in*/, const ae_f16x4 d1 /*in*/);
CSTUB_EXTERN xtbool4 CSTUB_(_TIE_xt_hifi2_AE_F16X4_LT_F16X4)(const ae_f16x4 d0 /*in*/, const ae_f16x4 d1 /*in*/);
CSTUB_EXTERN xtbool4 CSTUB_(_TIE_xt_hifi2_AE_F16X4_LE_F16X4)(const ae_f16x4 d0 /*in*/, const ae_f16x4 d1 /*in*/);
CSTUB_EXTERN xtbool4 CSTUB_(_TIE_xt_hifi2_AE_F16X4_GT_F16X4)(const ae_f16x4 d0 /*in*/, const ae_f16x4 d1 /*in*/);
CSTUB_EXTERN xtbool4 CSTUB_(_TIE_xt_hifi2_AE_F16X4_GE_F16X4)(const ae_f16x4 d0 /*in*/, const ae_f16x4 d1 /*in*/);
CSTUB_EXTERN ae_f16x4 CSTUB_(_TIE_xt_hifi2_AE_F16X4_ADDS_F16)(const ae_f16x4 d0 /*in*/, const ae_f16 d1 /*in*/);
CSTUB_EXTERN ae_f16x4 CSTUB_(_TIE_xt_hifi2_AE_F16X4_SUBS_F16)(const ae_f16x4 d0 /*in*/, const ae_f16 d1 /*in*/);
CSTUB_EXTERN ae_f16x4 CSTUB_(_TIE_xt_hifi2_AE_F16X4_AND_F16)(const ae_f16x4 d0 /*in*/, const ae_f16 d1 /*in*/);
CSTUB_EXTERN ae_f16x4 CSTUB_(_TIE_xt_hifi2_AE_F16X4_XOR_F16)(const ae_f16x4 d0 /*in*/, const ae_f16 d1 /*in*/);
CSTUB_EXTERN ae_f16x4 CSTUB_(_TIE_xt_hifi2_AE_F16X4_OR_F16)(const ae_f16x4 d0 /*in*/, const ae_f16 d1 /*in*/);
CSTUB_EXTERN ae_f16x4 CSTUB_(_TIE_xt_hifi2_AE_F16X4_NEGS)(const ae_f16x4 d0 /*in*/);
CSTUB_EXTERN ae_f16x4 CSTUB_(_TIE_xt_hifi2_AE_F16X4_BNOT)(const ae_f16x4 d0 /*in*/);
CSTUB_EXTERN ae_f16x4 CSTUB_(_TIE_xt_hifi2_AE_F16X4_SLAS)(const ae_f16x4 d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_f16x4 CSTUB_(_TIE_xt_hifi2_AE_F16X4_SRA)(const ae_f16x4 d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_f16x4 CSTUB_(_TIE_xt_hifi2_AE_F16X4_SLAIS)(const ae_f16x4 d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_f16x4 CSTUB_(_TIE_xt_hifi2_AE_F16X4_SRAI)(const ae_f16x4 d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_f16x4 CSTUB_(_TIE_xt_hifi2_AE_F16_ADDS_F16X4)(const ae_f16 d0 /*in*/, const ae_f16x4 d1 /*in*/);
CSTUB_EXTERN ae_f16x4 CSTUB_(_TIE_xt_hifi2_AE_F16_SUBS_F16X4)(const ae_f16 d0 /*in*/, const ae_f16x4 d1 /*in*/);
CSTUB_EXTERN ae_f16x4 CSTUB_(_TIE_xt_hifi2_AE_F16_AND_F16X4)(const ae_f16 d0 /*in*/, const ae_f16x4 d1 /*in*/);
CSTUB_EXTERN ae_f16x4 CSTUB_(_TIE_xt_hifi2_AE_F16_XOR_F16X4)(const ae_f16 d0 /*in*/, const ae_f16x4 d1 /*in*/);
CSTUB_EXTERN ae_f16x4 CSTUB_(_TIE_xt_hifi2_AE_F16_OR_F16X4)(const ae_f16 d0 /*in*/, const ae_f16x4 d1 /*in*/);
CSTUB_EXTERN ae_f16 CSTUB_(_TIE_xt_hifi2_AE_F16_ADDS_F16)(const ae_f16 d0 /*in*/, const ae_f16 d1 /*in*/);
CSTUB_EXTERN ae_f16 CSTUB_(_TIE_xt_hifi2_AE_F16_SUBS_F16)(const ae_f16 d0 /*in*/, const ae_f16 d1 /*in*/);
CSTUB_EXTERN ae_f16 CSTUB_(_TIE_xt_hifi2_AE_F16_AND_F16)(const ae_f16 d0 /*in*/, const ae_f16 d1 /*in*/);
CSTUB_EXTERN ae_f16 CSTUB_(_TIE_xt_hifi2_AE_F16_XOR_F16)(const ae_f16 d0 /*in*/, const ae_f16 d1 /*in*/);
CSTUB_EXTERN ae_f16 CSTUB_(_TIE_xt_hifi2_AE_F16_OR_F16)(const ae_f16 d0 /*in*/, const ae_f16 d1 /*in*/);
CSTUB_EXTERN ae_f16 CSTUB_(_TIE_xt_hifi2_AE_F16_NEGS)(const ae_f16 d0 /*in*/);
CSTUB_EXTERN ae_f16 CSTUB_(_TIE_xt_hifi2_AE_F16_BNOT)(const ae_f16 d0 /*in*/);
CSTUB_EXTERN ae_f16 CSTUB_(_TIE_xt_hifi2_AE_F16_SLAS)(const ae_f16 d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_f16 CSTUB_(_TIE_xt_hifi2_AE_F16_SRA)(const ae_f16 d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_f16 CSTUB_(_TIE_xt_hifi2_AE_F16_SLAIS)(const ae_f16 d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_f16 CSTUB_(_TIE_xt_hifi2_AE_F16_SRAI)(const ae_f16 d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_INT32X2_ADD_INT32X2)(const ae_int32x2 d0 /*in*/, const ae_int32x2 d1 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_INT32X2_SUB_INT32X2)(const ae_int32x2 d0 /*in*/, const ae_int32x2 d1 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_INT32X2_AND_INT32X2)(const ae_int32x2 d0 /*in*/, const ae_int32x2 d1 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_INT32X2_XOR_INT32X2)(const ae_int32x2 d0 /*in*/, const ae_int32x2 d1 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_INT32X2_OR_INT32X2)(const ae_int32x2 d0 /*in*/, const ae_int32x2 d1 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_INT32X2_MUL_INT32X2)(const ae_int32x2 d0 /*in*/, const ae_int32x2 d1 /*in*/);
CSTUB_EXTERN xtbool2 CSTUB_(_TIE_xt_hifi2_AE_INT32X2_EQ_INT32X2)(const ae_int32x2 d0 /*in*/, const ae_int32x2 d1 /*in*/);
CSTUB_EXTERN xtbool2 CSTUB_(_TIE_xt_hifi2_AE_INT32X2_LT_INT32X2)(const ae_int32x2 d0 /*in*/, const ae_int32x2 d1 /*in*/);
CSTUB_EXTERN xtbool2 CSTUB_(_TIE_xt_hifi2_AE_INT32X2_LE_INT32X2)(const ae_int32x2 d0 /*in*/, const ae_int32x2 d1 /*in*/);
CSTUB_EXTERN xtbool2 CSTUB_(_TIE_xt_hifi2_AE_INT32X2_GT_INT32X2)(const ae_int32x2 d0 /*in*/, const ae_int32x2 d1 /*in*/);
CSTUB_EXTERN xtbool2 CSTUB_(_TIE_xt_hifi2_AE_INT32X2_GE_INT32X2)(const ae_int32x2 d0 /*in*/, const ae_int32x2 d1 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_INT32X2_ADD_INT32)(const ae_int32x2 d0 /*in*/, const ae_int32 d1 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_INT32X2_SUB_INT32)(const ae_int32x2 d0 /*in*/, const ae_int32 d1 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_INT32X2_AND_INT32)(const ae_int32x2 d0 /*in*/, const ae_int32 d1 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_INT32X2_XOR_INT32)(const ae_int32x2 d0 /*in*/, const ae_int32 d1 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_INT32X2_OR_INT32)(const ae_int32x2 d0 /*in*/, const ae_int32 d1 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_INT32X2_NEG)(const ae_int32x2 d0 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_INT32X2_BNOT)(const ae_int32x2 d0 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_INT32X2_SLA)(const ae_int32x2 d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_INT32X2_SRA)(const ae_int32x2 d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_INT32X2_SLAI)(const ae_int32x2 d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_INT32X2_SRAI)(const ae_int32x2 d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_INT32_ADD_INT32X2)(const ae_int32 d0 /*in*/, const ae_int32x2 d1 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_INT32_SUB_INT32X2)(const ae_int32 d0 /*in*/, const ae_int32x2 d1 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_INT32_AND_INT32X2)(const ae_int32 d0 /*in*/, const ae_int32x2 d1 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_INT32_XOR_INT32X2)(const ae_int32 d0 /*in*/, const ae_int32x2 d1 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_INT32_OR_INT32X2)(const ae_int32 d0 /*in*/, const ae_int32x2 d1 /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_INT32_ADD_INT32)(const ae_int32 d0 /*in*/, const ae_int32 d1 /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_INT32_SUB_INT32)(const ae_int32 d0 /*in*/, const ae_int32 d1 /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_INT32_AND_INT32)(const ae_int32 d0 /*in*/, const ae_int32 d1 /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_INT32_XOR_INT32)(const ae_int32 d0 /*in*/, const ae_int32 d1 /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_INT32_OR_INT32)(const ae_int32 d0 /*in*/, const ae_int32 d1 /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_INT32_MUL_INT32)(const ae_int32 d0 /*in*/, const ae_int32 d1 /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_INT32_NEG)(const ae_int32 d0 /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_INT32_BNOT)(const ae_int32 d0 /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_INT32_SLA)(const ae_int32 d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_INT32_SRA)(const ae_int32 d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_INT32_SLAI)(const ae_int32 d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_INT32_SRAI)(const ae_int32 d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_F32X2_ADDS_F32X2)(const ae_f32x2 d0 /*in*/, const ae_f32x2 d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_F32X2_SUBS_F32X2)(const ae_f32x2 d0 /*in*/, const ae_f32x2 d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_F32X2_AND_F32X2)(const ae_f32x2 d0 /*in*/, const ae_f32x2 d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_F32X2_XOR_F32X2)(const ae_f32x2 d0 /*in*/, const ae_f32x2 d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_F32X2_OR_F32X2)(const ae_f32x2 d0 /*in*/, const ae_f32x2 d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_F32X2_MULF_F32X2)(const ae_f32x2 d0 /*in*/, const ae_f32x2 d1 /*in*/);
CSTUB_EXTERN xtbool2 CSTUB_(_TIE_xt_hifi2_AE_F32X2_EQ_F32X2)(const ae_f32x2 d0 /*in*/, const ae_f32x2 d1 /*in*/);
CSTUB_EXTERN xtbool2 CSTUB_(_TIE_xt_hifi2_AE_F32X2_LT_F32X2)(const ae_f32x2 d0 /*in*/, const ae_f32x2 d1 /*in*/);
CSTUB_EXTERN xtbool2 CSTUB_(_TIE_xt_hifi2_AE_F32X2_LE_F32X2)(const ae_f32x2 d0 /*in*/, const ae_f32x2 d1 /*in*/);
CSTUB_EXTERN xtbool2 CSTUB_(_TIE_xt_hifi2_AE_F32X2_GT_F32X2)(const ae_f32x2 d0 /*in*/, const ae_f32x2 d1 /*in*/);
CSTUB_EXTERN xtbool2 CSTUB_(_TIE_xt_hifi2_AE_F32X2_GE_F32X2)(const ae_f32x2 d0 /*in*/, const ae_f32x2 d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_F32X2_ADDS_F32)(const ae_f32x2 d0 /*in*/, const ae_f32 d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_F32X2_SUBS_F32)(const ae_f32x2 d0 /*in*/, const ae_f32 d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_F32X2_AND_F32)(const ae_f32x2 d0 /*in*/, const ae_f32 d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_F32X2_XOR_F32)(const ae_f32x2 d0 /*in*/, const ae_f32 d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_F32X2_OR_F32)(const ae_f32x2 d0 /*in*/, const ae_f32 d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_F32X2_NEGS)(const ae_f32x2 d0 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_F32X2_BNOT)(const ae_f32x2 d0 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_F32X2_SLAS)(const ae_f32x2 d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_F32X2_SRA)(const ae_f32x2 d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_F32X2_SLAIS)(const ae_f32x2 d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_F32X2_SRAI)(const ae_f32x2 d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_F32_ADDS_F32X2)(const ae_f32 d0 /*in*/, const ae_f32x2 d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_F32_SUBS_F32X2)(const ae_f32 d0 /*in*/, const ae_f32x2 d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_F32_AND_F32X2)(const ae_f32 d0 /*in*/, const ae_f32x2 d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_F32_XOR_F32X2)(const ae_f32 d0 /*in*/, const ae_f32x2 d1 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_F32_OR_F32X2)(const ae_f32 d0 /*in*/, const ae_f32x2 d1 /*in*/);
CSTUB_EXTERN ae_f32 CSTUB_(_TIE_xt_hifi2_AE_F32_ADDS_F32)(const ae_f32 d0 /*in*/, const ae_f32 d1 /*in*/);
CSTUB_EXTERN ae_f32 CSTUB_(_TIE_xt_hifi2_AE_F32_SUBS_F32)(const ae_f32 d0 /*in*/, const ae_f32 d1 /*in*/);
CSTUB_EXTERN ae_f32 CSTUB_(_TIE_xt_hifi2_AE_F32_AND_F32)(const ae_f32 d0 /*in*/, const ae_f32 d1 /*in*/);
CSTUB_EXTERN ae_f32 CSTUB_(_TIE_xt_hifi2_AE_F32_XOR_F32)(const ae_f32 d0 /*in*/, const ae_f32 d1 /*in*/);
CSTUB_EXTERN ae_f32 CSTUB_(_TIE_xt_hifi2_AE_F32_OR_F32)(const ae_f32 d0 /*in*/, const ae_f32 d1 /*in*/);
CSTUB_EXTERN ae_f32 CSTUB_(_TIE_xt_hifi2_AE_F32_MULF_F32)(const ae_f32 d0 /*in*/, const ae_f32 d1 /*in*/);
CSTUB_EXTERN ae_f32 CSTUB_(_TIE_xt_hifi2_AE_F32_NEGS)(const ae_f32 d0 /*in*/);
CSTUB_EXTERN ae_f32 CSTUB_(_TIE_xt_hifi2_AE_F32_BNOT)(const ae_f32 d0 /*in*/);
CSTUB_EXTERN ae_f32 CSTUB_(_TIE_xt_hifi2_AE_F32_SLAS)(const ae_f32 d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_f32 CSTUB_(_TIE_xt_hifi2_AE_F32_SRA)(const ae_f32 d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_f32 CSTUB_(_TIE_xt_hifi2_AE_F32_SLAIS)(const ae_f32 d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_f32 CSTUB_(_TIE_xt_hifi2_AE_F32_SRAI)(const ae_f32 d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_INT64_ADD)(const ae_int64 d0 /*in*/, const ae_int64 d1 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_INT64_SUB)(const ae_int64 d0 /*in*/, const ae_int64 d1 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_INT64_AND)(const ae_int64 d0 /*in*/, const ae_int64 d1 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_INT64_XOR)(const ae_int64 d0 /*in*/, const ae_int64 d1 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_INT64_OR)(const ae_int64 d0 /*in*/, const ae_int64 d1 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_INT64_NEG)(const ae_int64 d0 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_INT64_BNOT)(const ae_int64 d0 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_INT64_SLA)(const ae_int64 d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_INT64_SRA)(const ae_int64 d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_INT64_SLAI)(const ae_int64 d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_INT64_SRAI)(const ae_int64 d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN xtbool CSTUB_(_TIE_xt_hifi2_AE_INT64_EQ)(const ae_int64 d0 /*in*/, const ae_int64 d1 /*in*/);
CSTUB_EXTERN xtbool CSTUB_(_TIE_xt_hifi2_AE_INT64_LT)(const ae_int64 d0 /*in*/, const ae_int64 d1 /*in*/);
CSTUB_EXTERN xtbool CSTUB_(_TIE_xt_hifi2_AE_INT64_LE)(const ae_int64 d0 /*in*/, const ae_int64 d1 /*in*/);
CSTUB_EXTERN xtbool CSTUB_(_TIE_xt_hifi2_AE_INT64_GT)(const ae_int64 d0 /*in*/, const ae_int64 d1 /*in*/);
CSTUB_EXTERN xtbool CSTUB_(_TIE_xt_hifi2_AE_INT64_GE)(const ae_int64 d0 /*in*/, const ae_int64 d1 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_F64_ADDS)(const ae_f64 d0 /*in*/, const ae_f64 d1 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_F64_SUBS)(const ae_f64 d0 /*in*/, const ae_f64 d1 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_F64_AND)(const ae_f64 d0 /*in*/, const ae_f64 d1 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_F64_XOR)(const ae_f64 d0 /*in*/, const ae_f64 d1 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_F64_OR)(const ae_f64 d0 /*in*/, const ae_f64 d1 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_F64_NEGS)(const ae_f64 d0 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_F64_BNOT)(const ae_f64 d0 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_F64_SLAS)(const ae_f64 d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_F64_SRA)(const ae_f64 d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_F64_SLAIS)(const ae_f64 d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_F64_SRAI)(const ae_f64 d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN xtbool CSTUB_(_TIE_xt_hifi2_AE_F64_EQ)(const ae_f64 d0 /*in*/, const ae_f64 d1 /*in*/);
CSTUB_EXTERN xtbool CSTUB_(_TIE_xt_hifi2_AE_F64_LT)(const ae_f64 d0 /*in*/, const ae_f64 d1 /*in*/);
CSTUB_EXTERN xtbool CSTUB_(_TIE_xt_hifi2_AE_F64_LE)(const ae_f64 d0 /*in*/, const ae_f64 d1 /*in*/);
CSTUB_EXTERN xtbool CSTUB_(_TIE_xt_hifi2_AE_F64_GT)(const ae_f64 d0 /*in*/, const ae_f64 d1 /*in*/);
CSTUB_EXTERN xtbool CSTUB_(_TIE_xt_hifi2_AE_F64_GE)(const ae_f64 d0 /*in*/, const ae_f64 d1 /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_INT32_MUL_INT16)(const ae_int32 d0 /*in*/, const ae_int16 d1 /*in*/);
CSTUB_EXTERN ae_f32 CSTUB_(_TIE_xt_hifi2_AE_F32_MUL_F16)(const ae_f32 d0 /*in*/, const ae_f16 d1 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_P24X2S_ADDS_P24X2S)(const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_P24X2S_SUBS_P24X2S)(const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_P24X2S_AND_P24X2S)(const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_P24X2S_XOR_P24X2S)(const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_P24X2S_OR_P24X2S)(const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_P24X2S_MULF_P24X2S)(const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN xtbool2 CSTUB_(_TIE_xt_hifi2_AE_P24X2S_EQ_P24X2S)(const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN xtbool2 CSTUB_(_TIE_xt_hifi2_AE_P24X2S_LT_P24X2S)(const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN xtbool2 CSTUB_(_TIE_xt_hifi2_AE_P24X2S_LE_P24X2S)(const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN xtbool2 CSTUB_(_TIE_xt_hifi2_AE_P24X2S_GT_P24X2S)(const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN xtbool2 CSTUB_(_TIE_xt_hifi2_AE_P24X2S_GE_P24X2S)(const ae_p24x2s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_P24X2S_ADDS_P24X2F)(const ae_p24x2s d0 /*in*/, const ae_p24x2f d1 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_P24X2S_SUBS_P24X2F)(const ae_p24x2s d0 /*in*/, const ae_p24x2f d1 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_P24X2S_AND_P24X2F)(const ae_p24x2s d0 /*in*/, const ae_p24x2f d1 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_P24X2S_XOR_P24X2F)(const ae_p24x2s d0 /*in*/, const ae_p24x2f d1 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_P24X2S_OR_P24X2F)(const ae_p24x2s d0 /*in*/, const ae_p24x2f d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_P24X2S_MULF_P24X2F)(const ae_p24x2s d0 /*in*/, const ae_p24x2f d1 /*in*/);
CSTUB_EXTERN xtbool2 CSTUB_(_TIE_xt_hifi2_AE_P24X2S_EQ_P24X2F)(const ae_p24x2s d0 /*in*/, const ae_p24x2f d1 /*in*/);
CSTUB_EXTERN xtbool2 CSTUB_(_TIE_xt_hifi2_AE_P24X2S_LT_P24X2F)(const ae_p24x2s d0 /*in*/, const ae_p24x2f d1 /*in*/);
CSTUB_EXTERN xtbool2 CSTUB_(_TIE_xt_hifi2_AE_P24X2S_LE_P24X2F)(const ae_p24x2s d0 /*in*/, const ae_p24x2f d1 /*in*/);
CSTUB_EXTERN xtbool2 CSTUB_(_TIE_xt_hifi2_AE_P24X2S_GT_P24X2F)(const ae_p24x2s d0 /*in*/, const ae_p24x2f d1 /*in*/);
CSTUB_EXTERN xtbool2 CSTUB_(_TIE_xt_hifi2_AE_P24X2S_GE_P24X2F)(const ae_p24x2s d0 /*in*/, const ae_p24x2f d1 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_P24X2S_ADDS_P24S)(const ae_p24x2s d0 /*in*/, const ae_p24s d1 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_P24X2S_SUBS_P24S)(const ae_p24x2s d0 /*in*/, const ae_p24s d1 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_P24X2S_AND_P24S)(const ae_p24x2s d0 /*in*/, const ae_p24s d1 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_P24X2S_XOR_P24S)(const ae_p24x2s d0 /*in*/, const ae_p24s d1 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_P24X2S_OR_P24S)(const ae_p24x2s d0 /*in*/, const ae_p24s d1 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_P24X2S_ADDS_P24F)(const ae_p24x2s d0 /*in*/, const ae_p24f d1 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_P24X2S_SUBS_P24F)(const ae_p24x2s d0 /*in*/, const ae_p24f d1 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_P24X2S_AND_P24F)(const ae_p24x2s d0 /*in*/, const ae_p24f d1 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_P24X2S_XOR_P24F)(const ae_p24x2s d0 /*in*/, const ae_p24f d1 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_P24X2S_OR_P24F)(const ae_p24x2s d0 /*in*/, const ae_p24f d1 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_P24X2S_NEGS)(const ae_p24x2s d0 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_P24X2S_BNOT)(const ae_p24x2s d0 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_P24X2S_SLAS)(const ae_p24x2s d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_P24X2S_SRA)(const ae_p24x2s d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_P24X2S_SLAIS)(const ae_p24x2s d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_P24X2S_SRAI)(const ae_p24x2s d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_P24X2F_ADDS_P24X2S)(const ae_p24x2f d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_P24X2F_SUBS_P24X2S)(const ae_p24x2f d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_P24X2F_AND_P24X2S)(const ae_p24x2f d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_P24X2F_XOR_P24X2S)(const ae_p24x2f d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_P24X2F_OR_P24X2S)(const ae_p24x2f d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_P24X2F_MULF_P24X2S)(const ae_p24x2f d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN xtbool2 CSTUB_(_TIE_xt_hifi2_AE_P24X2F_EQ_P24X2S)(const ae_p24x2f d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN xtbool2 CSTUB_(_TIE_xt_hifi2_AE_P24X2F_LT_P24X2S)(const ae_p24x2f d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN xtbool2 CSTUB_(_TIE_xt_hifi2_AE_P24X2F_LE_P24X2S)(const ae_p24x2f d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN xtbool2 CSTUB_(_TIE_xt_hifi2_AE_P24X2F_GT_P24X2S)(const ae_p24x2f d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN xtbool2 CSTUB_(_TIE_xt_hifi2_AE_P24X2F_GE_P24X2S)(const ae_p24x2f d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_p24x2f CSTUB_(_TIE_xt_hifi2_AE_P24X2F_ADDS_P24X2F)(const ae_p24x2f d0 /*in*/, const ae_p24x2f d1 /*in*/);
CSTUB_EXTERN ae_p24x2f CSTUB_(_TIE_xt_hifi2_AE_P24X2F_SUBS_P24X2F)(const ae_p24x2f d0 /*in*/, const ae_p24x2f d1 /*in*/);
CSTUB_EXTERN ae_p24x2f CSTUB_(_TIE_xt_hifi2_AE_P24X2F_AND_P24X2F)(const ae_p24x2f d0 /*in*/, const ae_p24x2f d1 /*in*/);
CSTUB_EXTERN ae_p24x2f CSTUB_(_TIE_xt_hifi2_AE_P24X2F_XOR_P24X2F)(const ae_p24x2f d0 /*in*/, const ae_p24x2f d1 /*in*/);
CSTUB_EXTERN ae_p24x2f CSTUB_(_TIE_xt_hifi2_AE_P24X2F_OR_P24X2F)(const ae_p24x2f d0 /*in*/, const ae_p24x2f d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_P24X2F_MULF_P24X2F)(const ae_p24x2f d0 /*in*/, const ae_p24x2f d1 /*in*/);
CSTUB_EXTERN xtbool2 CSTUB_(_TIE_xt_hifi2_AE_P24X2F_EQ_P24X2F)(const ae_p24x2f d0 /*in*/, const ae_p24x2f d1 /*in*/);
CSTUB_EXTERN xtbool2 CSTUB_(_TIE_xt_hifi2_AE_P24X2F_LT_P24X2F)(const ae_p24x2f d0 /*in*/, const ae_p24x2f d1 /*in*/);
CSTUB_EXTERN xtbool2 CSTUB_(_TIE_xt_hifi2_AE_P24X2F_LE_P24X2F)(const ae_p24x2f d0 /*in*/, const ae_p24x2f d1 /*in*/);
CSTUB_EXTERN xtbool2 CSTUB_(_TIE_xt_hifi2_AE_P24X2F_GT_P24X2F)(const ae_p24x2f d0 /*in*/, const ae_p24x2f d1 /*in*/);
CSTUB_EXTERN xtbool2 CSTUB_(_TIE_xt_hifi2_AE_P24X2F_GE_P24X2F)(const ae_p24x2f d0 /*in*/, const ae_p24x2f d1 /*in*/);
CSTUB_EXTERN ae_p24x2f CSTUB_(_TIE_xt_hifi2_AE_P24X2F_ADDS_P24S)(const ae_p24x2f d0 /*in*/, const ae_p24s d1 /*in*/);
CSTUB_EXTERN ae_p24x2f CSTUB_(_TIE_xt_hifi2_AE_P24X2F_SUBS_P24S)(const ae_p24x2f d0 /*in*/, const ae_p24s d1 /*in*/);
CSTUB_EXTERN ae_p24x2f CSTUB_(_TIE_xt_hifi2_AE_P24X2F_AND_P24S)(const ae_p24x2f d0 /*in*/, const ae_p24s d1 /*in*/);
CSTUB_EXTERN ae_p24x2f CSTUB_(_TIE_xt_hifi2_AE_P24X2F_XOR_P24S)(const ae_p24x2f d0 /*in*/, const ae_p24s d1 /*in*/);
CSTUB_EXTERN ae_p24x2f CSTUB_(_TIE_xt_hifi2_AE_P24X2F_OR_P24S)(const ae_p24x2f d0 /*in*/, const ae_p24s d1 /*in*/);
CSTUB_EXTERN ae_p24x2f CSTUB_(_TIE_xt_hifi2_AE_P24X2F_ADDS_P24F)(const ae_p24x2f d0 /*in*/, const ae_p24f d1 /*in*/);
CSTUB_EXTERN ae_p24x2f CSTUB_(_TIE_xt_hifi2_AE_P24X2F_SUBS_P24F)(const ae_p24x2f d0 /*in*/, const ae_p24f d1 /*in*/);
CSTUB_EXTERN ae_p24x2f CSTUB_(_TIE_xt_hifi2_AE_P24X2F_AND_P24F)(const ae_p24x2f d0 /*in*/, const ae_p24f d1 /*in*/);
CSTUB_EXTERN ae_p24x2f CSTUB_(_TIE_xt_hifi2_AE_P24X2F_XOR_P24F)(const ae_p24x2f d0 /*in*/, const ae_p24f d1 /*in*/);
CSTUB_EXTERN ae_p24x2f CSTUB_(_TIE_xt_hifi2_AE_P24X2F_OR_P24F)(const ae_p24x2f d0 /*in*/, const ae_p24f d1 /*in*/);
CSTUB_EXTERN ae_p24x2f CSTUB_(_TIE_xt_hifi2_AE_P24X2F_NEGS)(const ae_p24x2f d0 /*in*/);
CSTUB_EXTERN ae_p24x2f CSTUB_(_TIE_xt_hifi2_AE_P24X2F_BNOT)(const ae_p24x2f d0 /*in*/);
CSTUB_EXTERN ae_p24x2f CSTUB_(_TIE_xt_hifi2_AE_P24X2F_SLAS)(const ae_p24x2f d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_p24x2f CSTUB_(_TIE_xt_hifi2_AE_P24X2F_SRA)(const ae_p24x2f d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_p24x2f CSTUB_(_TIE_xt_hifi2_AE_P24X2F_SLAIS)(const ae_p24x2f d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_p24x2f CSTUB_(_TIE_xt_hifi2_AE_P24X2F_SRAI)(const ae_p24x2f d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_P24S_ADDS_P24X2S)(const ae_p24s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_P24S_SUBS_P24X2S)(const ae_p24s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_P24S_AND_P24X2S)(const ae_p24s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_P24S_XOR_P24X2S)(const ae_p24s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_P24S_OR_P24X2S)(const ae_p24s d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_p24x2f CSTUB_(_TIE_xt_hifi2_AE_P24S_ADDS_P24X2F)(const ae_p24s d0 /*in*/, const ae_p24x2f d1 /*in*/);
CSTUB_EXTERN ae_p24x2f CSTUB_(_TIE_xt_hifi2_AE_P24S_SUBS_P24X2F)(const ae_p24s d0 /*in*/, const ae_p24x2f d1 /*in*/);
CSTUB_EXTERN ae_p24x2f CSTUB_(_TIE_xt_hifi2_AE_P24S_AND_P24X2F)(const ae_p24s d0 /*in*/, const ae_p24x2f d1 /*in*/);
CSTUB_EXTERN ae_p24x2f CSTUB_(_TIE_xt_hifi2_AE_P24S_XOR_P24X2F)(const ae_p24s d0 /*in*/, const ae_p24x2f d1 /*in*/);
CSTUB_EXTERN ae_p24x2f CSTUB_(_TIE_xt_hifi2_AE_P24S_OR_P24X2F)(const ae_p24s d0 /*in*/, const ae_p24x2f d1 /*in*/);
CSTUB_EXTERN ae_p24s CSTUB_(_TIE_xt_hifi2_AE_P24S_ADDS_P24S)(const ae_p24s d0 /*in*/, const ae_p24s d1 /*in*/);
CSTUB_EXTERN ae_p24s CSTUB_(_TIE_xt_hifi2_AE_P24S_SUBS_P24S)(const ae_p24s d0 /*in*/, const ae_p24s d1 /*in*/);
CSTUB_EXTERN ae_p24s CSTUB_(_TIE_xt_hifi2_AE_P24S_AND_P24S)(const ae_p24s d0 /*in*/, const ae_p24s d1 /*in*/);
CSTUB_EXTERN ae_p24s CSTUB_(_TIE_xt_hifi2_AE_P24S_XOR_P24S)(const ae_p24s d0 /*in*/, const ae_p24s d1 /*in*/);
CSTUB_EXTERN ae_p24s CSTUB_(_TIE_xt_hifi2_AE_P24S_OR_P24S)(const ae_p24s d0 /*in*/, const ae_p24s d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_P24S_MULF_P24S)(const ae_p24s d0 /*in*/, const ae_p24s d1 /*in*/);
CSTUB_EXTERN ae_p24s CSTUB_(_TIE_xt_hifi2_AE_P24S_ADDS_P24F)(const ae_p24s d0 /*in*/, const ae_p24f d1 /*in*/);
CSTUB_EXTERN ae_p24s CSTUB_(_TIE_xt_hifi2_AE_P24S_SUBS_P24F)(const ae_p24s d0 /*in*/, const ae_p24f d1 /*in*/);
CSTUB_EXTERN ae_p24s CSTUB_(_TIE_xt_hifi2_AE_P24S_AND_P24F)(const ae_p24s d0 /*in*/, const ae_p24f d1 /*in*/);
CSTUB_EXTERN ae_p24s CSTUB_(_TIE_xt_hifi2_AE_P24S_XOR_P24F)(const ae_p24s d0 /*in*/, const ae_p24f d1 /*in*/);
CSTUB_EXTERN ae_p24s CSTUB_(_TIE_xt_hifi2_AE_P24S_OR_P24F)(const ae_p24s d0 /*in*/, const ae_p24f d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_P24S_MULF_P24F)(const ae_p24s d0 /*in*/, const ae_p24f d1 /*in*/);
CSTUB_EXTERN ae_p24s CSTUB_(_TIE_xt_hifi2_AE_P24S_NEGS)(const ae_p24s d0 /*in*/);
CSTUB_EXTERN ae_p24s CSTUB_(_TIE_xt_hifi2_AE_P24S_BNOT)(const ae_p24s d0 /*in*/);
CSTUB_EXTERN ae_p24s CSTUB_(_TIE_xt_hifi2_AE_P24S_SLAS)(const ae_p24s d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_p24s CSTUB_(_TIE_xt_hifi2_AE_P24S_SRA)(const ae_p24s d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_p24s CSTUB_(_TIE_xt_hifi2_AE_P24S_SLAIS)(const ae_p24s d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_p24s CSTUB_(_TIE_xt_hifi2_AE_P24S_SRAI)(const ae_p24s d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_P24F_ADDS_P24X2S)(const ae_p24f d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_P24F_SUBS_P24X2S)(const ae_p24f d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_P24F_AND_P24X2S)(const ae_p24f d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_P24F_XOR_P24X2S)(const ae_p24f d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_AE_P24F_OR_P24X2S)(const ae_p24f d0 /*in*/, const ae_p24x2s d1 /*in*/);
CSTUB_EXTERN ae_p24x2f CSTUB_(_TIE_xt_hifi2_AE_P24F_ADDS_P24X2F)(const ae_p24f d0 /*in*/, const ae_p24x2f d1 /*in*/);
CSTUB_EXTERN ae_p24x2f CSTUB_(_TIE_xt_hifi2_AE_P24F_SUBS_P24X2F)(const ae_p24f d0 /*in*/, const ae_p24x2f d1 /*in*/);
CSTUB_EXTERN ae_p24x2f CSTUB_(_TIE_xt_hifi2_AE_P24F_AND_P24X2F)(const ae_p24f d0 /*in*/, const ae_p24x2f d1 /*in*/);
CSTUB_EXTERN ae_p24x2f CSTUB_(_TIE_xt_hifi2_AE_P24F_XOR_P24X2F)(const ae_p24f d0 /*in*/, const ae_p24x2f d1 /*in*/);
CSTUB_EXTERN ae_p24x2f CSTUB_(_TIE_xt_hifi2_AE_P24F_OR_P24X2F)(const ae_p24f d0 /*in*/, const ae_p24x2f d1 /*in*/);
CSTUB_EXTERN ae_p24s CSTUB_(_TIE_xt_hifi2_AE_P24F_ADDS_P24S)(const ae_p24f d0 /*in*/, const ae_p24s d1 /*in*/);
CSTUB_EXTERN ae_p24s CSTUB_(_TIE_xt_hifi2_AE_P24F_SUBS_P24S)(const ae_p24f d0 /*in*/, const ae_p24s d1 /*in*/);
CSTUB_EXTERN ae_p24s CSTUB_(_TIE_xt_hifi2_AE_P24F_AND_P24S)(const ae_p24f d0 /*in*/, const ae_p24s d1 /*in*/);
CSTUB_EXTERN ae_p24s CSTUB_(_TIE_xt_hifi2_AE_P24F_XOR_P24S)(const ae_p24f d0 /*in*/, const ae_p24s d1 /*in*/);
CSTUB_EXTERN ae_p24s CSTUB_(_TIE_xt_hifi2_AE_P24F_OR_P24S)(const ae_p24f d0 /*in*/, const ae_p24s d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_P24F_MULF_P24S)(const ae_p24f d0 /*in*/, const ae_p24s d1 /*in*/);
CSTUB_EXTERN ae_p24f CSTUB_(_TIE_xt_hifi2_AE_P24F_ADDS_P24F)(const ae_p24f d0 /*in*/, const ae_p24f d1 /*in*/);
CSTUB_EXTERN ae_p24f CSTUB_(_TIE_xt_hifi2_AE_P24F_SUBS_P24F)(const ae_p24f d0 /*in*/, const ae_p24f d1 /*in*/);
CSTUB_EXTERN ae_p24f CSTUB_(_TIE_xt_hifi2_AE_P24F_AND_P24F)(const ae_p24f d0 /*in*/, const ae_p24f d1 /*in*/);
CSTUB_EXTERN ae_p24f CSTUB_(_TIE_xt_hifi2_AE_P24F_XOR_P24F)(const ae_p24f d0 /*in*/, const ae_p24f d1 /*in*/);
CSTUB_EXTERN ae_p24f CSTUB_(_TIE_xt_hifi2_AE_P24F_OR_P24F)(const ae_p24f d0 /*in*/, const ae_p24f d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_P24F_MULF_P24F)(const ae_p24f d0 /*in*/, const ae_p24f d1 /*in*/);
CSTUB_EXTERN ae_p24f CSTUB_(_TIE_xt_hifi2_AE_P24F_NEGS)(const ae_p24f d0 /*in*/);
CSTUB_EXTERN ae_p24f CSTUB_(_TIE_xt_hifi2_AE_P24F_BNOT)(const ae_p24f d0 /*in*/);
CSTUB_EXTERN ae_p24f CSTUB_(_TIE_xt_hifi2_AE_P24F_SLAS)(const ae_p24f d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_p24f CSTUB_(_TIE_xt_hifi2_AE_P24F_SRA)(const ae_p24f d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_p24f CSTUB_(_TIE_xt_hifi2_AE_P24F_SLAIS)(const ae_p24f d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_p24f CSTUB_(_TIE_xt_hifi2_AE_P24F_SRAI)(const ae_p24f d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_Q56S_ADD)(const ae_q56s d0 /*in*/, const ae_q56s d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_Q56S_SUB)(const ae_q56s d0 /*in*/, const ae_q56s d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_Q56S_AND)(const ae_q56s d0 /*in*/, const ae_q56s d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_Q56S_XOR)(const ae_q56s d0 /*in*/, const ae_q56s d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_Q56S_OR)(const ae_q56s d0 /*in*/, const ae_q56s d1 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_Q56S_NEG)(const ae_q56s d0 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_Q56S_BNOT)(const ae_q56s d0 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_Q56S_SLA)(const ae_q56s d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_Q56S_SRA)(const ae_q56s d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_AE_Q56S_SRAI)(const ae_q56s d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN xtbool CSTUB_(_TIE_xt_hifi2_AE_Q56S_EQ)(const ae_q56s d0 /*in*/, const ae_q56s d1 /*in*/);
CSTUB_EXTERN xtbool CSTUB_(_TIE_xt_hifi2_AE_Q56S_LT)(const ae_q56s d0 /*in*/, const ae_q56s d1 /*in*/);
CSTUB_EXTERN xtbool CSTUB_(_TIE_xt_hifi2_AE_Q56S_LE)(const ae_q56s d0 /*in*/, const ae_q56s d1 /*in*/);
CSTUB_EXTERN xtbool CSTUB_(_TIE_xt_hifi2_AE_Q56S_GT)(const ae_q56s d0 /*in*/, const ae_q56s d1 /*in*/);
CSTUB_EXTERN xtbool CSTUB_(_TIE_xt_hifi2_AE_Q56S_GE)(const ae_q56s d0 /*in*/, const ae_q56s d1 /*in*/);
CSTUB_EXTERN ae_int32x4 CSTUB_(_TIE_xt_hifi2_ae_int32x4_loadi)(const ae_int32x4 * b /*in*/, immediate c /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int32x4_storei)(const ae_int32x4 d /*in*/, const ae_int32x4 * b /*in*/, immediate c /*in*/);
CSTUB_EXTERN ae_int32x4 CSTUB_(_TIE_xt_hifi2_ae_int32x4_move)(const ae_int32x4 b /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_INT32X2_NOT)(const ae_int32x2 d0 /*in*/);
CSTUB_EXTERN ae_f32x4 CSTUB_(_TIE_xt_hifi2_ae_f32x4_loadi)(const ae_f32x4 * b /*in*/, immediate c /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_f32x4_storei)(const ae_f32x4 d /*in*/, const ae_f32x4 * b /*in*/, immediate c /*in*/);
CSTUB_EXTERN ae_f32x4 CSTUB_(_TIE_xt_hifi2_ae_f32x4_move)(const ae_f32x4 b /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_SEL16X4IR)(const ae_int16x4 v0 /*in*/, const ae_int16x4 v1 /*in*/, immediate i /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_SEL32X2IR)(const ae_int32x2 v0 /*in*/, const ae_int32x2 v1 /*in*/, immediate i /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_SELF32X2IR)(const ae_f32x2 v0 /*in*/, const ae_f32x2 v1 /*in*/, immediate i /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_INT32X2_AND_rinit)(const int a /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_INT32X2_AND_rvec)(const ae_int32x2 d0 /*in*/, const ae_int32x2 d1 /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_AE_INT32X2_AND_rfini)(const ae_int32x2 d /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_INT32X2_OR_rinit)(const int a /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_INT32X2_OR_rvec)(const ae_int32x2 d0 /*in*/, const ae_int32x2 d1 /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_AE_INT32X2_OR_rfini)(const ae_int32x2 d /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_INT32X2_XOR_rinit)(const int a /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_INT32X2_XOR_rvec)(const ae_int32x2 d0 /*in*/, const ae_int32x2 d1 /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_AE_INT32X2_XOR_rfini)(const ae_int32x2 d /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_AE_INT32X2_RMIN)(const ae_int32x2 d0 /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_AE_INT32X2_RMAX)(const ae_int32x2 d0 /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_AE_INT32X2_RADD)(const ae_int32x2 d0 /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_AE_F32X2_RADD)(const ae_f32x2 d0 /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_ABS32S_scalar)(const ae_int32 d0 /*in*/);
CSTUB_EXTERN ae_int32x4 CSTUB_(_TIE_xt_hifi2_AE_INT32X4_ABS32S)(const ae_int32x4 d0 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_INT32X2_ABS32S)(const ae_int32x2 d0 /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_AE_ADD32S_scalar)(const int d0 /*in*/, const ae_int32 d1 /*in*/);
CSTUB_EXTERN ae_int32x4 CSTUB_(_TIE_xt_hifi2_AE_INT32X4_ADD32S)(const ae_int32x4 d0 /*in*/, const ae_int32x4 d1 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_INT32X2_ADD32S)(const ae_int32x2 d0 /*in*/, const ae_int32x2 d1 /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_NEG32S_scalar)(const ae_int32 d0 /*in*/);
CSTUB_EXTERN ae_int32x4 CSTUB_(_TIE_xt_hifi2_AE_INT32X4_NEG32S)(const ae_int32x4 d0 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_INT32X2_NEG32S)(const ae_int32x2 d0 /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_AE_SUB32S_scalar)(const int d0 /*in*/, const ae_int32 d1 /*in*/);
CSTUB_EXTERN ae_int32x4 CSTUB_(_TIE_xt_hifi2_AE_INT32X4_SUB32S)(const ae_int32x4 d0 /*in*/, const ae_int32x4 d1 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_INT32X2_SUB32S)(const ae_int32x2 d0 /*in*/, const ae_int32x2 d1 /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_SLAA32S_scalar)(const ae_int32 d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_int32x4 CSTUB_(_TIE_xt_hifi2_AE_SLAA32S_vector)(const ae_int32x4 d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_SRAA32S_scalar)(const ae_int32 d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_int32x4 CSTUB_(_TIE_xt_hifi2_AE_SRAA32S_vector)(const ae_int32x4 d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_SRAA32RS_scalar)(const ae_int32 d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_int32x4 CSTUB_(_TIE_xt_hifi2_AE_SRAA32RS_vector)(const ae_int32x4 d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_INT16X4_NAND_INT16X4)(const ae_int16x4 a /*in*/, const ae_int16x4 b /*in*/);
CSTUB_EXTERN ae_int16 CSTUB_(_TIE_xt_hifi2_AE_ABS16S_scalar)(const ae_int16 d0 /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_ABS16S_vector)(const ae_int16x4 d0 /*in*/);
CSTUB_EXTERN ae_int16 CSTUB_(_TIE_xt_hifi2_AE_ADD16S_scalar)(const ae_int16 d0 /*in*/, const ae_int16 d1 /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_ADD16S_vector)(const ae_int16x4 d0 /*in*/, const ae_int16x4 d1 /*in*/);
CSTUB_EXTERN ae_int16 CSTUB_(_TIE_xt_hifi2_AE_MULFP16X4S_scalar)(const ae_int16 d0 /*in*/, const ae_int16 d1 /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_MULFP16X4S_vector)(const ae_int16x4 d0 /*in*/, const ae_int16x4 d1 /*in*/);
CSTUB_EXTERN ae_int16 CSTUB_(_TIE_xt_hifi2_AE_MULFP16X4RAS_scalar)(const ae_int16 d0 /*in*/, const ae_int16 d1 /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_MULFP16X4RAS_vector)(const ae_int16x4 d0 /*in*/, const ae_int16x4 d1 /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_AE_NSAZ16_0_scalar)(const ae_int16 d0 /*in*/);
CSTUB_EXTERN ae_int16 CSTUB_(_TIE_xt_hifi2_AE_SAT16X4_scalar)(const ae_int32 d0 /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_SAT16X4_vector)(const ae_int32x4 d0 /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_MULF16X4SS_scalar)(const ae_int16 d0 /*in*/, const ae_int16 d1 /*in*/);
CSTUB_EXTERN ae_int32x4 CSTUB_(_TIE_xt_hifi2_AE_MULF16X4SS_vector)(const ae_int16x4 d0 /*in*/, const ae_int16x4 d1 /*in*/);
CSTUB_EXTERN ae_int32x4 CSTUB_(_TIE_xt_hifi2_AE_MUL16X4_vector)(const ae_int16x4 d0 /*in*/, const ae_int16x4 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULA16X4_vector)(ae_int32x4* d /*inout*/, const ae_int16x4 d0 /*in*/, const ae_int16x4 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAAR16P16X4S_vector)(ae_int16x4* d /*inout*/, const ae_int16x4 d0 /*in*/, const ae_int16x4 d1 /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_MULR16P16X4S_vector)(const ae_int16x4 d0 /*in*/, const ae_int16x4 d1 /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_AE_MULAF16X4SS_scalar)(const int ain /*in*/, const ae_int16 d0 /*in*/, const ae_int16 d1 /*in*/);
CSTUB_EXTERN ae_int32x4 CSTUB_(_TIE_xt_hifi2_AE_MULAF16X4SS_vector)(const ae_int32x4 pin /*in*/, const ae_int16x4 d0 /*in*/, const ae_int16x4 d1 /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_AE_MULSF16X4SS_scalar)(const int ain /*in*/, const ae_int16 d0 /*in*/, const ae_int16 d1 /*in*/);
CSTUB_EXTERN ae_int32x4 CSTUB_(_TIE_xt_hifi2_AE_MULSF16X4SS_vector)(const ae_int32x4 pin /*in*/, const ae_int16x4 d0 /*in*/, const ae_int16x4 d1 /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_RLmac_rinit)(const int a /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_RLmac_rvec)(const ae_int32 din /*in*/, const ae_int16x4 d0 /*in*/, const ae_int16x4 d1 /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_AE_RLmac_rfini)(const ae_int32 d /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_RLmsu_rinit)(const int a /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_RLmsu_rvec)(const ae_int32 din /*in*/, const ae_int16x4 d0 /*in*/, const ae_int16x4 d1 /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_AE_RLmsu_rfini)(const ae_int32 d /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_RLadd_rinit)(const int a /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_RLadd_rvec)(const ae_int32 din /*in*/, const ae_int32x2 d0 /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_AE_RLadd_rfini)(const ae_int32 d /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_RLadd4_rinit)(const int a /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_RLadd4_rvec)(const ae_int32 din /*in*/, const ae_int32x4 d0 /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_AE_RLadd4_rfini)(const ae_int32 d /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_RLsub_rinit)(const int a /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_RLsub_rvec)(const ae_int32 din /*in*/, const ae_int32x2 d0 /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_AE_RLsub_rfini)(const ae_int32 d /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_RLsub4_rinit)(const int a /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_RLsub4_rvec)(const ae_int32 din /*in*/, const ae_int32x4 d0 /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_AE_RLsub4_rfini)(const ae_int32 d /*in*/);
CSTUB_EXTERN ae_int16 CSTUB_(_TIE_xt_hifi2_AE_NEG16S_scalar)(const ae_int16 d0 /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_NEG16S_vector)(const ae_int16x4 d0 /*in*/);
CSTUB_EXTERN ae_int16 CSTUB_(_TIE_xt_hifi2_AE_ROUND16X4F32SASYM_scalar)(const ae_int32 d0 /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_ROUND16X4F32SASYM_vector)(const ae_int32x4 d0 /*in*/);
CSTUB_EXTERN ae_int16 CSTUB_(_TIE_xt_hifi2_AE_SUB16S_scalar)(const ae_int16 d0 /*in*/, const ae_int16 d1 /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_SUB16S_vector)(const ae_int16x4 d0 /*in*/, const ae_int16x4 d1 /*in*/);
CSTUB_EXTERN ae_int16 CSTUB_(_TIE_xt_hifi2_AE_SLAA16S_scalar)(const ae_int16 d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_SLAA16S_vector)(const ae_int16x4 d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_int16 CSTUB_(_TIE_xt_hifi2_AE_SRAA16S_scalar)(const ae_int16 d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_SRAA16S_vector)(const ae_int16x4 d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_int16 CSTUB_(_TIE_xt_hifi2_AE_SRAA16RS_scalar)(const ae_int16 d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_SRAA16RS_vector)(const ae_int16x4 d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_int16 CSTUB_(_TIE_xt_hifi2_AE_CVT16X4_scalar)(const ae_int32 d0 /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_CVT16X4_vector)(const ae_int32x4 d0 /*in*/);
CSTUB_EXTERN ae_int16 CSTUB_(_TIE_xt_hifi2_AE_TRUNC16X4F32_scalar)(const ae_int32 d0 /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_TRUNC16X4F32_vector)(const ae_int32x4 d0 /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_SEXT32X2D16_10_scalar)(const ae_int16 p /*in*/);
CSTUB_EXTERN ae_int32x4 CSTUB_(_TIE_xt_hifi2_AE_SEXT32X2D16_10_vector)(const ae_int16x4 p /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_CVT32X2F16_10_scalar)(const ae_int16 p /*in*/);
CSTUB_EXTERN ae_int32x4 CSTUB_(_TIE_xt_hifi2_AE_CVT32X2F16_10_vector)(const ae_int16x4 p /*in*/);
CSTUB_EXTERN ae_int32x4 CSTUB_(_TIE_xt_hifi2_ae_int16x4_rtor_ae_int32x4)(const ae_int16x4 b /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_ae_int32x4_rtor_ae_int16x4)(const ae_int32x4 b /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_SRAA16_VECTOR)(const ae_int16x4 b /*in*/, const int sa /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_AE_F32X4_RADD)(const ae_f32x4 d0 /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_AE_INT32X4_RADD)(const ae_int32x4 d0 /*in*/);
CSTUB_EXTERN ae_int32x4 CSTUB_(_TIE_xt_hifi2_AE_INT32X4_ADD)(const ae_int32x4 d0 /*in*/, const ae_int32x4 d1 /*in*/);
CSTUB_EXTERN ae_int32x4 CSTUB_(_TIE_xt_hifi2_AE_INT32X4_SUB)(const ae_int32x4 d0 /*in*/, const ae_int32x4 d1 /*in*/);
CSTUB_EXTERN ae_int32x4 CSTUB_(_TIE_xt_hifi2_AE_INT32X4_AND)(const ae_int32x4 d0 /*in*/, const ae_int32x4 d1 /*in*/);
CSTUB_EXTERN ae_int32x4 CSTUB_(_TIE_xt_hifi2_AE_INT32X4_OR)(const ae_int32x4 d0 /*in*/, const ae_int32x4 d1 /*in*/);
CSTUB_EXTERN ae_int32x4 CSTUB_(_TIE_xt_hifi2_AE_INT32X4_XOR)(const ae_int32x4 d0 /*in*/, const ae_int32x4 d1 /*in*/);
CSTUB_EXTERN ae_int32x4 CSTUB_(_TIE_xt_hifi2_AE_INT32X4_BNOT)(const ae_int32x4 d0 /*in*/);
CSTUB_EXTERN ae_int32x4 CSTUB_(_TIE_xt_hifi2_AE_INT32X4_INT16X4_MUL)(const ae_int32x4 d0 /*in*/, const ae_int16x4 d1 /*in*/);
CSTUB_EXTERN ae_int32x4 CSTUB_(_TIE_xt_hifi2_AE_INT16X4_INT32X4_MUL)(const ae_int16x4 d0 /*in*/, const ae_int32x4 d1 /*in*/);
CSTUB_EXTERN ae_int32x4 CSTUB_(_TIE_xt_hifi2_AE_INT32X4_SRAI32)(const ae_int32x4 d0 /*in*/, immediate i /*in*/);
CSTUB_EXTERN ae_int32x4 CSTUB_(_TIE_xt_hifi2_AE_INT32X4_SRAA32)(const ae_int32x4 d0 /*in*/, const int a /*in*/);
CSTUB_EXTERN ae_int32x4 CSTUB_(_TIE_xt_hifi2_AE_INT32X4_SLAI32)(const ae_int32x4 d0 /*in*/, immediate i /*in*/);
CSTUB_EXTERN ae_int32x4 CSTUB_(_TIE_xt_hifi2_AE_INT32X4_SLAA32)(const ae_int32x4 d0 /*in*/, const int a /*in*/);
CSTUB_EXTERN ae_int32x4 CSTUB_(_TIE_xt_hifi2_AE_INT32X4_NEG32)(const ae_int32x4 d0 /*in*/);
CSTUB_EXTERN ae_int32x4 CSTUB_(_TIE_xt_hifi2_AE_INT32X4_ABS32)(const ae_int32x4 d0 /*in*/);
CSTUB_EXTERN ae_int32x4 CSTUB_(_TIE_xt_hifi2_AE_INT32X4_MAX)(const ae_int32x4 d0 /*in*/, const ae_int32x4 d1 /*in*/);
CSTUB_EXTERN ae_int32x4 CSTUB_(_TIE_xt_hifi2_AE_INT32X4_MIN)(const ae_int32x4 d0 /*in*/, const ae_int32x4 d1 /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_INT16X4_MIN)(const ae_int16x4 d0 /*in*/, const ae_int16x4 d1 /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_INT16X4_MAX)(const ae_int16x4 d0 /*in*/, const ae_int16x4 d1 /*in*/);
CSTUB_EXTERN short CSTUB_(_TIE_xt_hifi2_AE_INT16X4_RMAX)(const ae_int16x4 d0 /*in*/);
CSTUB_EXTERN short CSTUB_(_TIE_xt_hifi2_AE_INT16X4_RMIN)(const ae_int16x4 d0 /*in*/);
CSTUB_EXTERN short CSTUB_(_TIE_xt_hifi2_AE_INT16X4_RADD)(const ae_int16x4 d0 /*in*/);
CSTUB_EXTERN ae_f32x4 CSTUB_(_TIE_xt_hifi2_AE_F32X4_ADD)(const ae_f32x4 d0 /*in*/, const ae_f32x4 d1 /*in*/);
CSTUB_EXTERN ae_f32x4 CSTUB_(_TIE_xt_hifi2_AE_F32X4_SUB)(const ae_f32x4 d0 /*in*/, const ae_f32x4 d1 /*in*/);
CSTUB_EXTERN ae_f32x4 CSTUB_(_TIE_xt_hifi2_AE_F32X4_NEG32)(const ae_f32x4 d0 /*in*/);
CSTUB_EXTERN ae_f32x4 CSTUB_(_TIE_xt_hifi2_AE_F32X4_F16X4_MUL)(const ae_f32x4 d0 /*in*/, const ae_f16x4 d1 /*in*/);
CSTUB_EXTERN ae_f32x4 CSTUB_(_TIE_xt_hifi2_AE_F16X4_F32X4_MUL)(const ae_f16x4 d0 /*in*/, const ae_f32x4 d1 /*in*/);
CSTUB_EXTERN ae_f32x4 CSTUB_(_TIE_xt_hifi2_AE_F32X4_AND)(const ae_f32x4 d0 /*in*/, const ae_f32x4 d1 /*in*/);
CSTUB_EXTERN ae_f32x4 CSTUB_(_TIE_xt_hifi2_AE_F32X4_OR)(const ae_f32x4 d0 /*in*/, const ae_f32x4 d1 /*in*/);
CSTUB_EXTERN ae_f32x4 CSTUB_(_TIE_xt_hifi2_AE_F32X4_XOR)(const ae_f32x4 d0 /*in*/, const ae_f32x4 d1 /*in*/);
CSTUB_EXTERN ae_f32x4 CSTUB_(_TIE_xt_hifi2_AE_F32X4_BNOT)(const ae_f32x4 d0 /*in*/);
CSTUB_EXTERN ae_f32x4 CSTUB_(_TIE_xt_hifi2_AE_F32X4_SLAI32S)(const ae_f32x4 d0 /*in*/, immediate i /*in*/);
CSTUB_EXTERN ae_f32x4 CSTUB_(_TIE_xt_hifi2_AE_F32X4_SLAA32S)(const ae_f32x4 d0 /*in*/, const int a /*in*/);
CSTUB_EXTERN ae_f32x4 CSTUB_(_TIE_xt_hifi2_AE_F32X4_SRAI32)(const ae_f32x4 d0 /*in*/, immediate i /*in*/);
CSTUB_EXTERN ae_f32x4 CSTUB_(_TIE_xt_hifi2_AE_F32X4_SRAA32)(const ae_f32x4 d0 /*in*/, const int a /*in*/);
CSTUB_EXTERN ae_valign CSTUB_(_TIE_xt_hifi2_ae_int16x4_aligning_load_prime)(const ae_int16x4 * a /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int16x4_aligning_load_post_update_positive)(ae_int16x4* v /*out*/, ae_valign* u /*inout*/, const ae_int16x4 ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int16x4_aligning_load_post_update_negative)(ae_int16x4* v /*out*/, ae_valign* u /*inout*/, const ae_int16x4 ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int16x4_load_post_update_positive)(ae_int16x4* v /*out*/, const ae_int16x4 ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int16x4_load_post_update_negative)(ae_int16x4* v /*out*/, const ae_int16x4 ** a /*inout*/);
CSTUB_EXTERN ae_valign CSTUB_(_TIE_xt_hifi2_ae_int16x4_aligning_store_prime)(void);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int16x4_aligning_store_post_update_positive)(const ae_int16x4 v /*in*/, ae_valign* u /*inout*/, ae_int16x4 ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int16x4_aligning_store_post_update_negative)(const ae_int16x4 v /*in*/, ae_valign* u /*inout*/, ae_int16x4 ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int16x4_store_post_update_positive)(const ae_int16x4 v /*in*/, ae_int16x4 ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int16x4_store_post_update_negative)(const ae_int16x4 v /*in*/, ae_int16x4 ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int16x4_aligning_store_flush_positive)(ae_valign* u /*inout*/, const ae_int16x4 * a /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int16x4_aligning_store_flush_negative)(ae_valign* u /*inout*/, const ae_int16x4 * a /*in*/);
CSTUB_EXTERN ae_valign CSTUB_(_TIE_xt_hifi2_ae_int32x2_aligning_load_prime)(const ae_int32x2 * a /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int32x2_aligning_load_post_update_positive)(ae_int32x2* v /*out*/, ae_valign* u /*inout*/, const ae_int32x2 ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int32x2_aligning_load_post_update_negative)(ae_int32x2* v /*out*/, ae_valign* u /*inout*/, const ae_int32x2 ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int32x2_load_post_update_positive)(ae_int32x2* v /*out*/, const ae_int32x2 ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int32x2_load_post_update_negative)(ae_int32x2* v /*out*/, const ae_int32x2 ** a /*inout*/);
CSTUB_EXTERN ae_valign CSTUB_(_TIE_xt_hifi2_ae_int32x2_aligning_store_prime)(void);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int32x2_aligning_store_post_update_positive)(const ae_int32x2 v /*in*/, ae_valign* u /*inout*/, ae_int32x2 ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int32x2_aligning_store_post_update_negative)(const ae_int32x2 v /*in*/, ae_valign* u /*inout*/, ae_int32x2 ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int32x2_store_post_update_positive)(const ae_int32x2 v /*in*/, ae_int32x2 ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int32x2_store_post_update_negative)(const ae_int32x2 v /*in*/, ae_int32x2 ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int32x2_aligning_store_flush_positive)(ae_valign* u /*inout*/, const ae_int32x2 * a /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int32x2_aligning_store_flush_negative)(ae_valign* u /*inout*/, const ae_int32x2 * a /*in*/);
CSTUB_EXTERN ae_valign CSTUB_(_TIE_xt_hifi2_ae_int32x4_aligning_load_prime)(const ae_int32x4 * a /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int32x4_aligning_load_post_update_positive)(ae_int32x4* v /*out*/, ae_valign* u /*inout*/, const ae_int32x4 ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int32x4_aligning_load_post_update_negative)(ae_int32x4* v /*out*/, ae_valign* u /*inout*/, const ae_int32x4 ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int32x4_load_post_update_positive)(ae_int32x4* v /*out*/, const ae_int32x4 ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int32x4_load_post_update_negative)(ae_int32x4* v /*out*/, const ae_int32x4 ** a /*inout*/);
CSTUB_EXTERN ae_valign CSTUB_(_TIE_xt_hifi2_ae_int32x4_aligning_store_prime)(void);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int32x4_aligning_store_post_update_positive)(const ae_int32x4 v /*in*/, ae_valign* u /*inout*/, ae_int32x4 ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int32x4_aligning_store_post_update_negative)(const ae_int32x4 v /*in*/, ae_valign* u /*inout*/, ae_int32x4 ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int32x4_store_post_update_positive)(const ae_int32x4 v /*in*/, ae_int32x4 ** a /*inout*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int32x4_store_post_update_negative)(const ae_int32x4 v /*in*/, ae_int32x4 ** a /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int32x4_aligning_store_flush_positive)(ae_valign* u /*inout*/, const ae_int32x4 * a /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int32x4_aligning_store_flush_negative)(ae_valign* u /*inout*/, const ae_int32x4 * a /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_ae_int32x2_vextract_0_p32s)(const ae_int32x2 d /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_ae_int32x2_vextract_1_p32s)(const ae_int32x2 d /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_ae_int32x2_vpack_p32s)(const int d1 /*in*/, const int d0 /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_ae_int32x2_vextract_0_ae_int32)(const ae_int32x2 d0 /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_ae_int32x2_vextract_1_ae_int32)(const ae_int32x2 d0 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_ae_int32x2_vpack_ae_int32)(const ae_int32 d1 /*in*/, const ae_int32 d0 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_int32_rtor_ae_int64)(const int a /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_int16_rtor_ae_int64)(const short a /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_ae_int32_rtor_ae_int64)(const ae_int32 a /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_ae_int16_rtor_ae_int64)(const ae_int16 a /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_int32_rtor_ae_f64)(const int a /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_int16_rtor_ae_f64)(const short a /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_int64_rtor_ae_f64)(const long long a /*in*/);
CSTUB_EXTERN long long CSTUB_(_TIE_xt_hifi2_ae_f64_rtor_int64)(const ae_f64 d /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_int64_rtor_ae_int64)(const long long a /*in*/);
CSTUB_EXTERN long long CSTUB_(_TIE_xt_hifi2_ae_int64_rtor_int64)(const ae_int64 d /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_uint64_rtor_ae_int64)(const unsigned long long a /*in*/);
CSTUB_EXTERN unsigned long long CSTUB_(_TIE_xt_hifi2_ae_int64_rtor_uint64)(const ae_int64 d /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_int32_rtor_ae_int32)(const int a /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_ae_int32_rtor_int32)(const ae_int32 d /*in*/);
CSTUB_EXTERN ae_f32 CSTUB_(_TIE_xt_hifi2_int32_rtor_ae_f32)(const int a /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_ae_f32_rtor_int32)(const ae_f32 d /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_ae_f24_rtor_int32)(const ae_f24 d /*in*/);
CSTUB_EXTERN ae_f24 CSTUB_(_TIE_xt_hifi2_int32_rtor_ae_f24)(const int a /*in*/);
CSTUB_EXTERN ae_int24 CSTUB_(_TIE_xt_hifi2_int32_rtor_ae_int24)(const int a /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_ae_int24_rtor_int32)(const ae_int24 d /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_uint32_rtor_ae_int32)(const unsigned int a /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_xt_hifi2_ae_int32_rtor_uint32)(const ae_int32 d /*in*/);
CSTUB_EXTERN ae_int32u CSTUB_(_TIE_xt_hifi2_uint32_rtor_ae_int32u)(const unsigned int a /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_xt_hifi2_ae_int32u_rtor_uint32)(const ae_int32u d /*in*/);
CSTUB_EXTERN ae_int16 CSTUB_(_TIE_xt_hifi2_int32_rtor_ae_int16)(const int a /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_int32_rtor_ae_int16x4)(const int a /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_ae_int16_rtor_int32)(const ae_int16 d /*in*/);
CSTUB_EXTERN ae_f16 CSTUB_(_TIE_xt_hifi2_int32_rtor_ae_f16)(const int a /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_ae_f16_rtor_int32)(const ae_f16 d /*in*/);
CSTUB_EXTERN ae_int16 CSTUB_(_TIE_xt_hifi2_int16_rtor_ae_int16)(const short a /*in*/);
CSTUB_EXTERN short CSTUB_(_TIE_xt_hifi2_ae_int16_rtor_int16)(const ae_int16 d /*in*/);
CSTUB_EXTERN ae_f16 CSTUB_(_TIE_xt_hifi2_int16_rtor_ae_f16)(const short a /*in*/);
CSTUB_EXTERN short CSTUB_(_TIE_xt_hifi2_ae_f16_rtor_int16)(const ae_f16 d /*in*/);
CSTUB_EXTERN ae_f32 CSTUB_(_TIE_xt_hifi2_int16_rtor_ae_f32)(const short a /*in*/);
CSTUB_EXTERN ae_f24 CSTUB_(_TIE_xt_hifi2_int16_rtor_ae_f24)(const short a /*in*/);
CSTUB_EXTERN ae_int24 CSTUB_(_TIE_xt_hifi2_int16_rtor_ae_int24)(const short a /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_int16_rtor_ae_f32x2)(const short a /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_int16_rtor_ae_f24x2)(const short a /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_int16_rtor_ae_int24x2)(const short a /*in*/);
CSTUB_EXTERN unsigned short CSTUB_(_TIE_xt_hifi2_ae_int16u_rtor_uint16)(const ae_int16u d /*in*/);
CSTUB_EXTERN ae_int16u CSTUB_(_TIE_xt_hifi2_uint16_rtor_ae_int16u)(const unsigned short a /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_int32_rtor_ae_int32x2)(const int a /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_ae_int32x2_rtor_int32)(const ae_int32x2 d /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_int32_rtor_ae_f32x2)(const int a /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_int32_rtor_ae_f24x2)(const int a /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_int32_rtor_ae_int24x2)(const int a /*in*/);
CSTUB_EXTERN ae_int32x4 CSTUB_(_TIE_xt_hifi2_int32_rtor_ae_int32x4)(const int a /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_ae_int32x4_rtor_int32)(const ae_int32x4 d /*in*/);
CSTUB_EXTERN ae_f32x4 CSTUB_(_TIE_xt_hifi2_int32_rtor_ae_f32x4)(const int a /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_ae_f32x4_rtor_int32)(const ae_f32x4 d /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_uint32_rtor_ae_int32x2)(const unsigned int a /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_xt_hifi2_ae_int32x2_rtor_uint32)(const ae_int32x2 d /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_uint32_rtor_ae_f32x2)(const unsigned int a /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_uint32_rtor_ae_f24x2)(const unsigned int a /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_uint32_rtor_ae_int24x2)(const unsigned int a /*in*/);
CSTUB_EXTERN ae_int32x4 CSTUB_(_TIE_xt_hifi2_uint32_rtor_ae_int32x4)(const unsigned int a /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_xt_hifi2_ae_int32x4_rtor_uint32)(const ae_int32x4 d /*in*/);
CSTUB_EXTERN ae_f32x4 CSTUB_(_TIE_xt_hifi2_uint32_rtor_ae_f32x4)(const unsigned int a /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_xt_hifi2_ae_f32x4_rtor_uint32)(const ae_f32x4 d /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_int16_rtor_ae_int32x2)(const short a /*in*/);
CSTUB_EXTERN short CSTUB_(_TIE_xt_hifi2_ae_int32x2_rtor_int16)(const ae_int32x2 d /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_int16_rtor_ae_int32)(const short a /*in*/);
CSTUB_EXTERN short CSTUB_(_TIE_xt_hifi2_ae_int32_rtor_int16)(const ae_int32 d /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_int16_rtor_ae_int16x4)(const short a /*in*/);
CSTUB_EXTERN short CSTUB_(_TIE_xt_hifi2_ae_int16x4_rtor_int16)(const ae_int16x4 d /*in*/);
CSTUB_EXTERN ae_f16x4 CSTUB_(_TIE_xt_hifi2_int16_rtor_ae_f16x4)(const short a /*in*/);
CSTUB_EXTERN short CSTUB_(_TIE_xt_hifi2_ae_f16x4_rtor_int16)(const ae_f16x4 d /*in*/);
CSTUB_EXTERN ae_int16u CSTUB_(_TIE_xt_hifi2_ae_int16_rtor_ae_int16u)(const ae_int16 b /*in*/);
CSTUB_EXTERN ae_int16 CSTUB_(_TIE_xt_hifi2_ae_int16u_rtor_ae_int16)(const ae_int16u b /*in*/);
CSTUB_EXTERN ae_int32u CSTUB_(_TIE_xt_hifi2_ae_int16u_rtor_ae_int32u)(const ae_int16u b /*in*/);
CSTUB_EXTERN ae_int16u CSTUB_(_TIE_xt_hifi2_ae_int32u_rtor_ae_int16u)(const ae_int32u b /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_ae_int16u_rtor_ae_int32)(const ae_int16u b /*in*/);
CSTUB_EXTERN ae_int16u CSTUB_(_TIE_xt_hifi2_ae_int32_rtor_ae_int16u)(const ae_int32 b /*in*/);
CSTUB_EXTERN ae_int32u CSTUB_(_TIE_xt_hifi2_ae_int16_rtor_ae_int32u)(const ae_int16 b /*in*/);
CSTUB_EXTERN ae_int16 CSTUB_(_TIE_xt_hifi2_ae_int32u_rtor_ae_int16)(const ae_int32u b /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_ae_int32u_rtor_ae_int32)(const ae_int32u b /*in*/);
CSTUB_EXTERN ae_int32u CSTUB_(_TIE_xt_hifi2_ae_int32_rtor_ae_int32u)(const ae_int32 b /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_uint16_rtor_ae_int32)(const unsigned short a /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_uint16_rtor_ae_int32x2)(const unsigned short a /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_uint8_rtor_ae_int32)(const unsigned char a /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_int8_rtor_ae_int32)(const signed char a /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_uint8_rtor_ae_int32x2)(const unsigned char a /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_int8_rtor_ae_int32x2)(const signed char a /*in*/);
CSTUB_EXTERN ae_f24 CSTUB_(_TIE_xt_hifi2_ae_int24x2_rtor_ae_f24)(const ae_int24x2 b /*in*/);
CSTUB_EXTERN ae_int24 CSTUB_(_TIE_xt_hifi2_ae_f24x2_rtor_ae_int24)(const ae_f24x2 b /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_ae_int24_rtor_ae_f24x2)(const ae_int24 b /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_ae_f24_rtor_ae_int24x2)(const ae_f24 b /*in*/);
CSTUB_EXTERN ae_f32 CSTUB_(_TIE_xt_hifi2_ae_int32x2_rtor_ae_f32)(const ae_int32x2 b /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_ae_f32x2_rtor_ae_int32)(const ae_f32x2 b /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_ae_int32_rtor_ae_f32x2)(const ae_int32 b /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_ae_f32_rtor_ae_int32x2)(const ae_f32 b /*in*/);
CSTUB_EXTERN ae_f32 CSTUB_(_TIE_xt_hifi2_ae_int24x2_rtor_ae_f32)(const ae_int24x2 b /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_ae_f24x2_rtor_ae_int32)(const ae_f24x2 b /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_ae_int24_rtor_ae_f32x2)(const ae_int24 b /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_ae_f24_rtor_ae_int32x2)(const ae_f24 b /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_ae_f24_rtor_ae_f32x2)(const ae_f24 b /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_ae_int24_rtor_ae_int32x2)(const ae_int24 b /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_int64_mtor_ae_int64)(const long long * a /*in*/, immediate i /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int64_rtom_int64)(const ae_int64 d /*in*/, const long long * a /*in*/, immediate i /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_uint64_mtor_ae_int64)(const unsigned long long * a /*in*/, immediate i /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int64_rtom_uint64)(const ae_int64 d /*in*/, const unsigned long long * a /*in*/, immediate i /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_int32_mtor_ae_int32)(const int * a /*in*/, immediate i /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int32_rtom_int32)(const ae_int32 d /*in*/, const int * a /*in*/, immediate i /*in*/);
CSTUB_EXTERN ae_int32u CSTUB_(_TIE_xt_hifi2_uint32_mtor_ae_int32u)(const unsigned int * a /*in*/, immediate i /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int32u_rtom_uint32)(const ae_int32u d /*in*/, const unsigned int * a /*in*/, immediate i /*in*/);
CSTUB_EXTERN ae_int16 CSTUB_(_TIE_xt_hifi2_int16_mtor_ae_int16)(const short * a /*in*/, immediate i /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int16_rtom_int16)(const ae_int16 d /*in*/, const short * a /*in*/, immediate i /*in*/);
CSTUB_EXTERN ae_int16u CSTUB_(_TIE_xt_hifi2_uint16_mtor_ae_int16u)(const unsigned short * a /*in*/, immediate i /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int16u_rtom_uint16)(const ae_int16u d /*in*/, const unsigned short * a /*in*/, immediate i /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_int32_mtor_ae_int32x2)(const int * a /*in*/, immediate i /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int32x2_rtom_int32)(const ae_int32x2 d /*in*/, const int * a /*in*/, immediate i /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int32x2_rtom_ae_int32)(const ae_int32x2 d /*in*/, const ae_int32 * a /*in*/, immediate i /*in*/);
CSTUB_EXTERN ae_int32x4 CSTUB_(_TIE_xt_hifi2_int32_mtor_ae_int32x4)(const int * a /*in*/, immediate i /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int32x4_rtom_int32)(const ae_int32x4 d /*in*/, const int * a /*in*/, immediate i /*in*/);
CSTUB_EXTERN ae_f32x4 CSTUB_(_TIE_xt_hifi2_int32_mtor_ae_f32x4)(const int * a /*in*/, immediate i /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_f32x4_rtom_int32)(const ae_f32x4 d /*in*/, const int * a /*in*/, immediate i /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_ae_p24s_rtor_ae_int24x2)(const ae_p24s d0 /*in*/);
CSTUB_EXTERN ae_p24s CSTUB_(_TIE_xt_hifi2_ae_int24x2_rtor_ae_p24s)(const ae_int24x2 d0 /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_ae_p24s_rtor_ae_f24x2)(const ae_p24s d0 /*in*/);
CSTUB_EXTERN ae_p24s CSTUB_(_TIE_xt_hifi2_ae_f24x2_rtor_ae_p24s)(const ae_f24x2 d0 /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_ae_p24f_rtor_ae_int24x2)(const ae_p24f d0 /*in*/);
CSTUB_EXTERN ae_p24f CSTUB_(_TIE_xt_hifi2_ae_int24x2_rtor_ae_p24f)(const ae_int24x2 d0 /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_ae_p24f_rtor_ae_f24x2)(const ae_p24f d0 /*in*/);
CSTUB_EXTERN ae_p24f CSTUB_(_TIE_xt_hifi2_ae_f24x2_rtor_ae_p24f)(const ae_f24x2 d0 /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_ae_p24x2s_rtor_ae_int24x2)(const ae_p24x2s d0 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_ae_int24x2_rtor_ae_p24x2s)(const ae_int24x2 d0 /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_ae_p24x2s_rtor_ae_f24x2)(const ae_p24x2s d0 /*in*/);
CSTUB_EXTERN ae_p24x2s CSTUB_(_TIE_xt_hifi2_ae_f24x2_rtor_ae_p24x2s)(const ae_f24x2 d0 /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_ae_p24x2f_rtor_ae_int24x2)(const ae_p24x2f d0 /*in*/);
CSTUB_EXTERN ae_p24x2f CSTUB_(_TIE_xt_hifi2_ae_int24x2_rtor_ae_p24x2f)(const ae_int24x2 d0 /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_ae_p24x2f_rtor_ae_f24x2)(const ae_p24x2f d0 /*in*/);
CSTUB_EXTERN ae_p24x2f CSTUB_(_TIE_xt_hifi2_ae_f24x2_rtor_ae_p24x2f)(const ae_f24x2 d0 /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_ae_p16s_rtor_ae_int24x2)(const ae_p16s d0 /*in*/);
CSTUB_EXTERN ae_p16s CSTUB_(_TIE_xt_hifi2_ae_int24x2_rtor_ae_p16s)(const ae_int24x2 d0 /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_ae_p16s_rtor_ae_f24x2)(const ae_p16s d0 /*in*/);
CSTUB_EXTERN ae_p16s CSTUB_(_TIE_xt_hifi2_ae_f24x2_rtor_ae_p16s)(const ae_f24x2 d0 /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_ae_p16x2s_rtor_ae_int24x2)(const ae_p16x2s d0 /*in*/);
CSTUB_EXTERN ae_p16x2s CSTUB_(_TIE_xt_hifi2_ae_int24x2_rtor_ae_p16x2s)(const ae_int24x2 d0 /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_ae_p16x2s_rtor_ae_f24x2)(const ae_p16x2s d0 /*in*/);
CSTUB_EXTERN ae_p16x2s CSTUB_(_TIE_xt_hifi2_ae_f24x2_rtor_ae_p16x2s)(const ae_f24x2 d0 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_ae_q56s_rtor_ae_int64)(const ae_q56s d0 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_ae_int64_rtor_ae_q56s)(const ae_int64 d0 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_ae_q56s_rtor_ae_f64)(const ae_q56s d0 /*in*/);
CSTUB_EXTERN ae_q56s CSTUB_(_TIE_xt_hifi2_ae_f64_rtor_ae_q56s)(const ae_f64 d0 /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_ae_f32_rtor_ae_int32)(const ae_f32 d0 /*in*/);
CSTUB_EXTERN ae_f32 CSTUB_(_TIE_xt_hifi2_ae_int32_rtor_ae_f32)(const ae_int32 d0 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_ae_f32x2_rtor_ae_int32x2)(const ae_f32x2 d0 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_ae_int32x2_rtor_ae_f32x2)(const ae_int32x2 d0 /*in*/);
CSTUB_EXTERN ae_int24 CSTUB_(_TIE_xt_hifi2_ae_f24_rtor_ae_int24)(const ae_f24 d0 /*in*/);
CSTUB_EXTERN ae_f24 CSTUB_(_TIE_xt_hifi2_ae_int24_rtor_ae_f24)(const ae_int24 d0 /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_ae_f24x2_rtor_ae_int24x2)(const ae_f24x2 d0 /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_ae_int24x2_rtor_ae_f24x2)(const ae_int24x2 d0 /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_ae_f64_rtor_ae_int64)(const ae_f64 d0 /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_ae_int64_rtor_ae_f64)(const ae_int64 d0 /*in*/);
CSTUB_EXTERN ae_int16 CSTUB_(_TIE_xt_hifi2_ae_f16_rtor_ae_int16)(const ae_f16 d0 /*in*/);
CSTUB_EXTERN ae_f16 CSTUB_(_TIE_xt_hifi2_ae_int16_rtor_ae_f16)(const ae_int16 d0 /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_ae_f16x4_rtor_ae_int16x4)(const ae_f16x4 d0 /*in*/);
CSTUB_EXTERN ae_f16x4 CSTUB_(_TIE_xt_hifi2_ae_int16x4_rtor_ae_f16x4)(const ae_int16x4 d0 /*in*/);
CSTUB_EXTERN ae_f32 CSTUB_(_TIE_xt_hifi2_ae_f24_rtor_ae_f32)(const ae_f24 d0 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_ae_f24x2_rtor_ae_f32x2)(const ae_f24x2 d0 /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_ae_int24_rtor_ae_int32)(const ae_int24 d0 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_ae_int24x2_rtor_ae_int32x2)(const ae_int24x2 d0 /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_ae_f24_rtor_ae_int32)(const ae_f24 d0 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_ae_f24x2_rtor_ae_int32x2)(const ae_f24x2 d0 /*in*/);
CSTUB_EXTERN ae_f32 CSTUB_(_TIE_xt_hifi2_ae_int24_rtor_ae_f32)(const ae_int24 d0 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_ae_int24x2_rtor_ae_f32x2)(const ae_int24x2 d0 /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_ae_f32_rtor_ae_f32x2)(const ae_f32 d0 /*in*/);
CSTUB_EXTERN ae_f32 CSTUB_(_TIE_xt_hifi2_ae_f32x2_rtor_ae_f32)(const ae_f32x2 d01 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_ae_int32_rtor_ae_int32x2)(const ae_int32 d0 /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_ae_int32x2_rtor_ae_int32)(const ae_int32x2 d01 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_ae_int32u_rtor_ae_int32x2)(const ae_int32u d0 /*in*/);
CSTUB_EXTERN ae_int32u CSTUB_(_TIE_xt_hifi2_ae_int32x2_rtor_ae_int32u)(const ae_int32x2 d01 /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_ae_f24_rtor_ae_f24x2)(const ae_f24 d0 /*in*/);
CSTUB_EXTERN ae_f24 CSTUB_(_TIE_xt_hifi2_ae_f24x2_rtor_ae_f24)(const ae_f24x2 d01 /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_ae_int24_rtor_ae_int24x2)(const ae_int24 d0 /*in*/);
CSTUB_EXTERN ae_int24 CSTUB_(_TIE_xt_hifi2_ae_int24x2_rtor_ae_int24)(const ae_int24x2 d01 /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_ae_int16_rtor_ae_int16x4)(const ae_int16 d0 /*in*/);
CSTUB_EXTERN ae_f16x4 CSTUB_(_TIE_xt_hifi2_ae_f16_rtor_ae_f16x4)(const ae_f16 d0 /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_ae_f16_rtor_ae_int16x4)(const ae_f16 d0 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int16x4_rtom_ae_int16)(const ae_int16x4 v /*in*/, const ae_int16 * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_f16x4_rtom_ae_f16)(const ae_f16x4 v /*in*/, const ae_f16 * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int16x4_rtom_ae_f16)(const ae_int16x4 v /*in*/, const ae_f16 * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_f16x4_rtom_ae_int16)(const ae_f16x4 v /*in*/, const ae_int16 * a /*in*/, immediate off /*in*/);
CSTUB_EXTERN ae_int32x4 CSTUB_(_TIE_xt_hifi2_ae_int32_rtor_ae_int32x4)(const ae_int32 b /*in*/);
CSTUB_EXTERN ae_f32x4 CSTUB_(_TIE_xt_hifi2_ae_f32_rtor_ae_f32x4)(const ae_f32 b /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_ae_int16_rtor_ae_int32)(const ae_int16 b /*in*/);
CSTUB_EXTERN ae_int16 CSTUB_(_TIE_xt_hifi2_ae_int32_rtor_ae_int16)(const ae_int32 b /*in*/);
CSTUB_EXTERN ae_f32 CSTUB_(_TIE_xt_hifi2_ae_f16_rtor_ae_f32)(const ae_f16 b /*in*/);
CSTUB_EXTERN ae_f16 CSTUB_(_TIE_xt_hifi2_ae_f32_rtor_ae_f16)(const ae_f32 b /*in*/);
CSTUB_EXTERN ae_int24 CSTUB_(_TIE_xt_hifi2_ae_int16_rtor_ae_int24)(const ae_int16 b /*in*/);
CSTUB_EXTERN ae_int16 CSTUB_(_TIE_xt_hifi2_ae_int24_rtor_ae_int16)(const ae_int24 b /*in*/);
CSTUB_EXTERN ae_f24 CSTUB_(_TIE_xt_hifi2_ae_f16_rtor_ae_f24)(const ae_f16 b /*in*/);
CSTUB_EXTERN ae_f16 CSTUB_(_TIE_xt_hifi2_ae_f24_rtor_ae_f16)(const ae_f24 b /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_MOVINT16X4_FROMINT16)(const ae_int16 i /*in*/);
CSTUB_EXTERN ae_int24 CSTUB_(_TIE_xt_hifi2_AE_MOVINT24_FROMINT16)(const ae_int16 i /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_MOVINT24X2_FROMINT16)(const ae_int16 i /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_MOVINT32_FROMINT16)(const ae_int16 i /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_MOVINT32X2_FROMINT16)(const ae_int16 i /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MOVINT64_FROMINT16)(const ae_int16 i /*in*/);
CSTUB_EXTERN ae_f16 CSTUB_(_TIE_xt_hifi2_AE_MOVF16_FROMINT16)(const ae_int16 i /*in*/);
CSTUB_EXTERN ae_f16x4 CSTUB_(_TIE_xt_hifi2_AE_MOVF16X4_FROMINT16)(const ae_int16 i /*in*/);
CSTUB_EXTERN ae_f24 CSTUB_(_TIE_xt_hifi2_AE_MOVF24_FROMINT16)(const ae_int16 i /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_AE_MOVF24X2_FROMINT16)(const ae_int16 i /*in*/);
CSTUB_EXTERN ae_f32 CSTUB_(_TIE_xt_hifi2_AE_MOVF32_FROMINT16)(const ae_int16 i /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_MOVF32X2_FROMINT16)(const ae_int16 i /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MOVF64_FROMINT16)(const ae_int16 i /*in*/);
CSTUB_EXTERN ae_int16 CSTUB_(_TIE_xt_hifi2_AE_MOVINT16_FROMINT16X4)(const ae_int16x4 i /*in*/);
CSTUB_EXTERN ae_int24 CSTUB_(_TIE_xt_hifi2_AE_MOVINT24_FROMINT16X4)(const ae_int16x4 i /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_MOVINT24X2_FROMINT16X4)(const ae_int16x4 i /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_MOVINT32_FROMINT16X4)(const ae_int16x4 i /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_MOVINT32X2_FROMINT16X4)(const ae_int16x4 i /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MOVINT64_FROMINT16X4)(const ae_int16x4 i /*in*/);
CSTUB_EXTERN ae_f16 CSTUB_(_TIE_xt_hifi2_AE_MOVF16_FROMINT16X4)(const ae_int16x4 i /*in*/);
CSTUB_EXTERN ae_f16x4 CSTUB_(_TIE_xt_hifi2_AE_MOVF16X4_FROMINT16X4)(const ae_int16x4 i /*in*/);
CSTUB_EXTERN ae_f24 CSTUB_(_TIE_xt_hifi2_AE_MOVF24_FROMINT16X4)(const ae_int16x4 i /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_AE_MOVF24X2_FROMINT16X4)(const ae_int16x4 i /*in*/);
CSTUB_EXTERN ae_f32 CSTUB_(_TIE_xt_hifi2_AE_MOVF32_FROMINT16X4)(const ae_int16x4 i /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_MOVF32X2_FROMINT16X4)(const ae_int16x4 i /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MOVF64_FROMINT16X4)(const ae_int16x4 i /*in*/);
CSTUB_EXTERN ae_int16 CSTUB_(_TIE_xt_hifi2_AE_MOVINT16_FROMINT24)(const ae_int24 i /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_MOVINT16X4_FROMINT24)(const ae_int24 i /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_MOVINT24X2_FROMINT24)(const ae_int24 i /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_MOVINT32_FROMINT24)(const ae_int24 i /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_MOVINT32X2_FROMINT24)(const ae_int24 i /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MOVINT64_FROMINT24)(const ae_int24 i /*in*/);
CSTUB_EXTERN ae_f16 CSTUB_(_TIE_xt_hifi2_AE_MOVF16_FROMINT24)(const ae_int24 i /*in*/);
CSTUB_EXTERN ae_f16x4 CSTUB_(_TIE_xt_hifi2_AE_MOVF16X4_FROMINT24)(const ae_int24 i /*in*/);
CSTUB_EXTERN ae_f24 CSTUB_(_TIE_xt_hifi2_AE_MOVF24_FROMINT24)(const ae_int24 i /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_AE_MOVF24X2_FROMINT24)(const ae_int24 i /*in*/);
CSTUB_EXTERN ae_f32 CSTUB_(_TIE_xt_hifi2_AE_MOVF32_FROMINT24)(const ae_int24 i /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_MOVF32X2_FROMINT24)(const ae_int24 i /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MOVF64_FROMINT24)(const ae_int24 i /*in*/);
CSTUB_EXTERN ae_int16 CSTUB_(_TIE_xt_hifi2_AE_MOVINT16_FROMINT24X2)(const ae_int24x2 i /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_MOVINT16X4_FROMINT24X2)(const ae_int24x2 i /*in*/);
CSTUB_EXTERN ae_int24 CSTUB_(_TIE_xt_hifi2_AE_MOVINT24_FROMINT24X2)(const ae_int24x2 i /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_MOVINT32_FROMINT24X2)(const ae_int24x2 i /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_MOVINT32X2_FROMINT24X2)(const ae_int24x2 i /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MOVINT64_FROMINT24X2)(const ae_int24x2 i /*in*/);
CSTUB_EXTERN ae_f16 CSTUB_(_TIE_xt_hifi2_AE_MOVF16_FROMINT24X2)(const ae_int24x2 i /*in*/);
CSTUB_EXTERN ae_f16x4 CSTUB_(_TIE_xt_hifi2_AE_MOVF16X4_FROMINT24X2)(const ae_int24x2 i /*in*/);
CSTUB_EXTERN ae_f24 CSTUB_(_TIE_xt_hifi2_AE_MOVF24_FROMINT24X2)(const ae_int24x2 i /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_AE_MOVF24X2_FROMINT24X2)(const ae_int24x2 i /*in*/);
CSTUB_EXTERN ae_f32 CSTUB_(_TIE_xt_hifi2_AE_MOVF32_FROMINT24X2)(const ae_int24x2 i /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_MOVF32X2_FROMINT24X2)(const ae_int24x2 i /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MOVF64_FROMINT24X2)(const ae_int24x2 i /*in*/);
CSTUB_EXTERN ae_int16 CSTUB_(_TIE_xt_hifi2_AE_MOVINT16_FROMINT32)(const ae_int32 i /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_MOVINT16X4_FROMINT32)(const ae_int32 i /*in*/);
CSTUB_EXTERN ae_int24 CSTUB_(_TIE_xt_hifi2_AE_MOVINT24_FROMINT32)(const ae_int32 i /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_MOVINT24X2_FROMINT32)(const ae_int32 i /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_MOVINT32X2_FROMINT32)(const ae_int32 i /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MOVINT64_FROMINT32)(const ae_int32 i /*in*/);
CSTUB_EXTERN ae_f16 CSTUB_(_TIE_xt_hifi2_AE_MOVF16_FROMINT32)(const ae_int32 i /*in*/);
CSTUB_EXTERN ae_f16x4 CSTUB_(_TIE_xt_hifi2_AE_MOVF16X4_FROMINT32)(const ae_int32 i /*in*/);
CSTUB_EXTERN ae_f24 CSTUB_(_TIE_xt_hifi2_AE_MOVF24_FROMINT32)(const ae_int32 i /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_AE_MOVF24X2_FROMINT32)(const ae_int32 i /*in*/);
CSTUB_EXTERN ae_f32 CSTUB_(_TIE_xt_hifi2_AE_MOVF32_FROMINT32)(const ae_int32 i /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_MOVF32X2_FROMINT32)(const ae_int32 i /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MOVF64_FROMINT32)(const ae_int32 i /*in*/);
CSTUB_EXTERN ae_int16 CSTUB_(_TIE_xt_hifi2_AE_MOVINT16_FROMINT32X2)(const ae_int32x2 i /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_MOVINT16X4_FROMINT32X2)(const ae_int32x2 i /*in*/);
CSTUB_EXTERN ae_int24 CSTUB_(_TIE_xt_hifi2_AE_MOVINT24_FROMINT32X2)(const ae_int32x2 i /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_MOVINT24X2_FROMINT32X2)(const ae_int32x2 i /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_MOVINT32_FROMINT32X2)(const ae_int32x2 i /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MOVINT64_FROMINT32X2)(const ae_int32x2 i /*in*/);
CSTUB_EXTERN ae_f16 CSTUB_(_TIE_xt_hifi2_AE_MOVF16_FROMINT32X2)(const ae_int32x2 i /*in*/);
CSTUB_EXTERN ae_f16x4 CSTUB_(_TIE_xt_hifi2_AE_MOVF16X4_FROMINT32X2)(const ae_int32x2 i /*in*/);
CSTUB_EXTERN ae_f24 CSTUB_(_TIE_xt_hifi2_AE_MOVF24_FROMINT32X2)(const ae_int32x2 i /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_AE_MOVF24X2_FROMINT32X2)(const ae_int32x2 i /*in*/);
CSTUB_EXTERN ae_f32 CSTUB_(_TIE_xt_hifi2_AE_MOVF32_FROMINT32X2)(const ae_int32x2 i /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_MOVF32X2_FROMINT32X2)(const ae_int32x2 i /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MOVF64_FROMINT32X2)(const ae_int32x2 i /*in*/);
CSTUB_EXTERN ae_int16 CSTUB_(_TIE_xt_hifi2_AE_MOVINT16_FROMINT64)(const ae_int64 i /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_MOVINT16X4_FROMINT64)(const ae_int64 i /*in*/);
CSTUB_EXTERN ae_int24 CSTUB_(_TIE_xt_hifi2_AE_MOVINT24_FROMINT64)(const ae_int64 i /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_MOVINT24X2_FROMINT64)(const ae_int64 i /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_MOVINT32_FROMINT64)(const ae_int64 i /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_MOVINT32X2_FROMINT64)(const ae_int64 i /*in*/);
CSTUB_EXTERN ae_f16 CSTUB_(_TIE_xt_hifi2_AE_MOVF16_FROMINT64)(const ae_int64 i /*in*/);
CSTUB_EXTERN ae_f16x4 CSTUB_(_TIE_xt_hifi2_AE_MOVF16X4_FROMINT64)(const ae_int64 i /*in*/);
CSTUB_EXTERN ae_f24 CSTUB_(_TIE_xt_hifi2_AE_MOVF24_FROMINT64)(const ae_int64 i /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_AE_MOVF24X2_FROMINT64)(const ae_int64 i /*in*/);
CSTUB_EXTERN ae_f32 CSTUB_(_TIE_xt_hifi2_AE_MOVF32_FROMINT64)(const ae_int64 i /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_MOVF32X2_FROMINT64)(const ae_int64 i /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MOVF64_FROMINT64)(const ae_int64 i /*in*/);
CSTUB_EXTERN ae_int16 CSTUB_(_TIE_xt_hifi2_AE_MOVINT16_FROMF16)(const ae_f16 i /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_MOVINT16X4_FROMF16)(const ae_f16 i /*in*/);
CSTUB_EXTERN ae_int24 CSTUB_(_TIE_xt_hifi2_AE_MOVINT24_FROMF16)(const ae_f16 i /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_MOVINT24X2_FROMF16)(const ae_f16 i /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_MOVINT32_FROMF16)(const ae_f16 i /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_MOVINT32X2_FROMF16)(const ae_f16 i /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MOVINT64_FROMF16)(const ae_f16 i /*in*/);
CSTUB_EXTERN ae_f16x4 CSTUB_(_TIE_xt_hifi2_AE_MOVF16X4_FROMF16)(const ae_f16 i /*in*/);
CSTUB_EXTERN ae_f24 CSTUB_(_TIE_xt_hifi2_AE_MOVF24_FROMF16)(const ae_f16 i /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_AE_MOVF24X2_FROMF16)(const ae_f16 i /*in*/);
CSTUB_EXTERN ae_f32 CSTUB_(_TIE_xt_hifi2_AE_MOVF32_FROMF16)(const ae_f16 i /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_MOVF32X2_FROMF16)(const ae_f16 i /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MOVF64_FROMF16)(const ae_f16 i /*in*/);
CSTUB_EXTERN ae_int16 CSTUB_(_TIE_xt_hifi2_AE_MOVINT16_FROMF16X4)(const ae_f16x4 i /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_MOVINT16X4_FROMF16X4)(const ae_f16x4 i /*in*/);
CSTUB_EXTERN ae_int24 CSTUB_(_TIE_xt_hifi2_AE_MOVINT24_FROMF16X4)(const ae_f16x4 i /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_MOVINT24X2_FROMF16X4)(const ae_f16x4 i /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_MOVINT32_FROMF16X4)(const ae_f16x4 i /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_MOVINT32X2_FROMF16X4)(const ae_f16x4 i /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MOVINT64_FROMF16X4)(const ae_f16x4 i /*in*/);
CSTUB_EXTERN ae_f16 CSTUB_(_TIE_xt_hifi2_AE_MOVF16_FROMF16X4)(const ae_f16x4 i /*in*/);
CSTUB_EXTERN ae_f24 CSTUB_(_TIE_xt_hifi2_AE_MOVF24_FROMF16X4)(const ae_f16x4 i /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_AE_MOVF24X2_FROMF16X4)(const ae_f16x4 i /*in*/);
CSTUB_EXTERN ae_f32 CSTUB_(_TIE_xt_hifi2_AE_MOVF32_FROMF16X4)(const ae_f16x4 i /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_MOVF32X2_FROMF16X4)(const ae_f16x4 i /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MOVF64_FROMF16X4)(const ae_f16x4 i /*in*/);
CSTUB_EXTERN ae_int16 CSTUB_(_TIE_xt_hifi2_AE_MOVINT16_FROMF24)(const ae_f24 i /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_MOVINT16X4_FROMF24)(const ae_f24 i /*in*/);
CSTUB_EXTERN ae_int24 CSTUB_(_TIE_xt_hifi2_AE_MOVINT24_FROMF24)(const ae_f24 i /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_MOVINT24X2_FROMF24)(const ae_f24 i /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_MOVINT32_FROMF24)(const ae_f24 i /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_MOVINT32X2_FROMF24)(const ae_f24 i /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MOVINT64_FROMF24)(const ae_f24 i /*in*/);
CSTUB_EXTERN ae_f16 CSTUB_(_TIE_xt_hifi2_AE_MOVF16_FROMF24)(const ae_f24 i /*in*/);
CSTUB_EXTERN ae_f16x4 CSTUB_(_TIE_xt_hifi2_AE_MOVF16X4_FROMF24)(const ae_f24 i /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_AE_MOVF24X2_FROMF24)(const ae_f24 i /*in*/);
CSTUB_EXTERN ae_f32 CSTUB_(_TIE_xt_hifi2_AE_MOVF32_FROMF24)(const ae_f24 i /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_MOVF32X2_FROMF24)(const ae_f24 i /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MOVF64_FROMF24)(const ae_f24 i /*in*/);
CSTUB_EXTERN ae_int16 CSTUB_(_TIE_xt_hifi2_AE_MOVINT16_FROMF24X2)(const ae_f24x2 i /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_MOVINT16X4_FROMF24X2)(const ae_f24x2 i /*in*/);
CSTUB_EXTERN ae_int24 CSTUB_(_TIE_xt_hifi2_AE_MOVINT24_FROMF24X2)(const ae_f24x2 i /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_MOVINT24X2_FROMF24X2)(const ae_f24x2 i /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_MOVINT32_FROMF24X2)(const ae_f24x2 i /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_MOVINT32X2_FROMF24X2)(const ae_f24x2 i /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MOVINT64_FROMF24X2)(const ae_f24x2 i /*in*/);
CSTUB_EXTERN ae_f16 CSTUB_(_TIE_xt_hifi2_AE_MOVF16_FROMF24X2)(const ae_f24x2 i /*in*/);
CSTUB_EXTERN ae_f16x4 CSTUB_(_TIE_xt_hifi2_AE_MOVF16X4_FROMF24X2)(const ae_f24x2 i /*in*/);
CSTUB_EXTERN ae_f24 CSTUB_(_TIE_xt_hifi2_AE_MOVF24_FROMF24X2)(const ae_f24x2 i /*in*/);
CSTUB_EXTERN ae_f32 CSTUB_(_TIE_xt_hifi2_AE_MOVF32_FROMF24X2)(const ae_f24x2 i /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_MOVF32X2_FROMF24X2)(const ae_f24x2 i /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MOVF64_FROMF24X2)(const ae_f24x2 i /*in*/);
CSTUB_EXTERN ae_int16 CSTUB_(_TIE_xt_hifi2_AE_MOVINT16_FROMF32)(const ae_f32 i /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_MOVINT16X4_FROMF32)(const ae_f32 i /*in*/);
CSTUB_EXTERN ae_int24 CSTUB_(_TIE_xt_hifi2_AE_MOVINT24_FROMF32)(const ae_f32 i /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_MOVINT24X2_FROMF32)(const ae_f32 i /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_MOVINT32_FROMF32)(const ae_f32 i /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_MOVINT32X2_FROMF32)(const ae_f32 i /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MOVINT64_FROMF32)(const ae_f32 i /*in*/);
CSTUB_EXTERN ae_f16 CSTUB_(_TIE_xt_hifi2_AE_MOVF16_FROMF32)(const ae_f32 i /*in*/);
CSTUB_EXTERN ae_f16x4 CSTUB_(_TIE_xt_hifi2_AE_MOVF16X4_FROMF32)(const ae_f32 i /*in*/);
CSTUB_EXTERN ae_f24 CSTUB_(_TIE_xt_hifi2_AE_MOVF24_FROMF32)(const ae_f32 i /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_AE_MOVF24X2_FROMF32)(const ae_f32 i /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_MOVF32X2_FROMF32)(const ae_f32 i /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MOVF64_FROMF32)(const ae_f32 i /*in*/);
CSTUB_EXTERN ae_int16 CSTUB_(_TIE_xt_hifi2_AE_MOVINT16_FROMF32X2)(const ae_f32x2 i /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_MOVINT16X4_FROMF32X2)(const ae_f32x2 i /*in*/);
CSTUB_EXTERN ae_int24 CSTUB_(_TIE_xt_hifi2_AE_MOVINT24_FROMF32X2)(const ae_f32x2 i /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_MOVINT24X2_FROMF32X2)(const ae_f32x2 i /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_MOVINT32_FROMF32X2)(const ae_f32x2 i /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_MOVINT32X2_FROMF32X2)(const ae_f32x2 i /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MOVINT64_FROMF32X2)(const ae_f32x2 i /*in*/);
CSTUB_EXTERN ae_f16 CSTUB_(_TIE_xt_hifi2_AE_MOVF16_FROMF32X2)(const ae_f32x2 i /*in*/);
CSTUB_EXTERN ae_f16x4 CSTUB_(_TIE_xt_hifi2_AE_MOVF16X4_FROMF32X2)(const ae_f32x2 i /*in*/);
CSTUB_EXTERN ae_f24 CSTUB_(_TIE_xt_hifi2_AE_MOVF24_FROMF32X2)(const ae_f32x2 i /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_AE_MOVF24X2_FROMF32X2)(const ae_f32x2 i /*in*/);
CSTUB_EXTERN ae_f32 CSTUB_(_TIE_xt_hifi2_AE_MOVF32_FROMF32X2)(const ae_f32x2 i /*in*/);
CSTUB_EXTERN ae_f64 CSTUB_(_TIE_xt_hifi2_AE_MOVF64_FROMF32X2)(const ae_f32x2 i /*in*/);
CSTUB_EXTERN ae_int16 CSTUB_(_TIE_xt_hifi2_AE_MOVINT16_FROMF64)(const ae_f64 i /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_MOVINT16X4_FROMF64)(const ae_f64 i /*in*/);
CSTUB_EXTERN ae_int24 CSTUB_(_TIE_xt_hifi2_AE_MOVINT24_FROMF64)(const ae_f64 i /*in*/);
CSTUB_EXTERN ae_int24x2 CSTUB_(_TIE_xt_hifi2_AE_MOVINT24X2_FROMF64)(const ae_f64 i /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_MOVINT32_FROMF64)(const ae_f64 i /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_MOVINT32X2_FROMF64)(const ae_f64 i /*in*/);
CSTUB_EXTERN ae_int64 CSTUB_(_TIE_xt_hifi2_AE_MOVINT64_FROMF64)(const ae_f64 i /*in*/);
CSTUB_EXTERN ae_f16 CSTUB_(_TIE_xt_hifi2_AE_MOVF16_FROMF64)(const ae_f64 i /*in*/);
CSTUB_EXTERN ae_f16x4 CSTUB_(_TIE_xt_hifi2_AE_MOVF16X4_FROMF64)(const ae_f64 i /*in*/);
CSTUB_EXTERN ae_f24 CSTUB_(_TIE_xt_hifi2_AE_MOVF24_FROMF64)(const ae_f64 i /*in*/);
CSTUB_EXTERN ae_f24x2 CSTUB_(_TIE_xt_hifi2_AE_MOVF24X2_FROMF64)(const ae_f64 i /*in*/);
CSTUB_EXTERN ae_f32 CSTUB_(_TIE_xt_hifi2_AE_MOVF32_FROMF64)(const ae_f64 i /*in*/);
CSTUB_EXTERN ae_f32x2 CSTUB_(_TIE_xt_hifi2_AE_MOVF32X2_FROMF64)(const ae_f64 i /*in*/);
CSTUB_EXTERN ae_int32u CSTUB_(_TIE_xt_hifi2_ae_int32u_loadi)(const ae_int32u * base /*in*/, immediate c /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int32u_storei)(const ae_int32u a /*in*/, const ae_int32u * base /*in*/, immediate c /*in*/);
CSTUB_EXTERN ae_int32u CSTUB_(_TIE_xt_hifi2_ae_int32u_move)(const ae_int32u b /*in*/);
CSTUB_EXTERN ae_int16u CSTUB_(_TIE_xt_hifi2_ae_int16u_loadi)(const ae_int16u * base /*in*/, immediate c /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int16u_storei)(const ae_int16u a /*in*/, const ae_int16u * base /*in*/, immediate c /*in*/);
CSTUB_EXTERN ae_int16u CSTUB_(_TIE_xt_hifi2_ae_int16u_move)(const ae_int16u b /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_ABS_32)(const ae_int32 b /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_MOV_32)(const ae_int32 b /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_NEG_32)(const ae_int32 b /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_ADD_32)(const ae_int32 b /*in*/, const ae_int32 c /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_ADDI_32)(const ae_int32 b /*in*/, immediate c /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_ADDMI_32)(const ae_int32 b /*in*/, immediate c /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_ADDX2_32)(const ae_int32 b /*in*/, const ae_int32 c /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_ADDX4_32)(const ae_int32 b /*in*/, const ae_int32 c /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_ADDX8_32)(const ae_int32 b /*in*/, const ae_int32 c /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_SUBX2_32)(const ae_int32 b /*in*/, const ae_int32 c /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_SUBX4_32)(const ae_int32 b /*in*/, const ae_int32 c /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_SUBX8_32)(const ae_int32 b /*in*/, const ae_int32 c /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_SUB_32)(const ae_int32 b /*in*/, const ae_int32 c /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_SEXT_32)(const ae_int32 b /*in*/, immediate c /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_SRAI_32)(const ae_int32 b /*in*/, immediate c /*in*/);
CSTUB_EXTERN ae_int32u CSTUB_(_TIE_xt_hifi2_AE_SRLI_32)(const ae_int32u b /*in*/, immediate c /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_SLLI_32)(const ae_int32 b /*in*/, immediate c /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_L_32)(const ae_int32 * base /*in*/, immediate c /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S_32)(const ae_int32 a /*in*/, const ae_int32 * base /*in*/, immediate c /*in*/);
CSTUB_EXTERN ae_int16 CSTUB_(_TIE_xt_hifi2_AE_L_16)(const ae_int16 * base /*in*/, immediate c /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_MAX_32_signed)(const ae_int32 b /*in*/, const ae_int32 c /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_MIN_32_signed)(const ae_int32 b /*in*/, const ae_int32 c /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_AND_32)(const ae_int32 b /*in*/, const ae_int32 c /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAF16SS_00_scalar)(ae_int32* a /*inout*/, const ae_f16x4 b /*in*/, const ae_f16x4 c /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULAF16SS_30_scalar)(ae_int32* a /*inout*/, const ae_f16x4 b /*in*/, const ae_f16x4 c /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_MULF16SS_30_scalar)(const ae_f16x4 b /*in*/, const ae_f16x4 c /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_OR_32)(const ae_int32 b /*in*/, const ae_int32 c /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_XOR_32)(const ae_int32 b /*in*/, const ae_int32 c /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_NAND_32)(const ae_int32 b /*in*/, const ae_int32 c /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MOVLTZ_32)(ae_int32* a /*inout*/, const ae_int32 b /*in*/, const ae_int32 test_value /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MOVGEZ_32)(ae_int32* a /*inout*/, const ae_int32 b /*in*/, const ae_int32 test_value /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MOVEQZ_32)(ae_int32* a /*inout*/, const ae_int32 b /*in*/, const ae_int32 test_value /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MOVNEZ_32)(ae_int32* a /*inout*/, const ae_int32 b /*in*/, const ae_int32 test_value /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MOVT_32)(ae_int32* a /*inout*/, const ae_int32 b /*in*/, const xtbool cond /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_MOVI_32)(immediate i /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MOVT_32_unsigned)(ae_int32u* a /*inout*/, const ae_int32u b /*in*/, const xtbool cond /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MOVF_32)(ae_int32* a /*inout*/, const ae_int32 b /*in*/, const xtbool cond /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MOVF_32_unsigned)(ae_int32u* a /*inout*/, const ae_int32u b /*in*/, const xtbool cond /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_S_16)(const ae_int16 a /*in*/, const ae_int16 * base /*in*/, immediate c /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_MUL16S)(const ae_int16 b /*in*/, const ae_int16 c /*in*/);
CSTUB_EXTERN ae_int16u CSTUB_(_TIE_xt_hifi2_AE_L_16U)(const ae_int16u * base /*in*/, immediate c /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_MUL32)(const ae_int32 b /*in*/, const ae_int32 c /*in*/);
CSTUB_EXTERN xtbool2 CSTUB_(_TIE_xt_hifi2_xtbool_join_xtbool2)(const xtbool src0 /*in*/, const xtbool src1 /*in*/);
CSTUB_EXTERN xtbool4 CSTUB_(_TIE_xt_hifi2_xtbool_join_xtbool4)(const xtbool src0 /*in*/, const xtbool src1 /*in*/, const xtbool src2 /*in*/, const xtbool src3 /*in*/);
CSTUB_EXTERN xtbool CSTUB_(_TIE_xt_hifi2_xtbool2_extract_0)(const xtbool2 src /*in*/);
CSTUB_EXTERN xtbool CSTUB_(_TIE_xt_hifi2_xtbool2_extract_1)(const xtbool2 src /*in*/);
CSTUB_EXTERN xtbool CSTUB_(_TIE_xt_hifi2_xtbool4_extract_0)(const xtbool4 src /*in*/);
CSTUB_EXTERN xtbool CSTUB_(_TIE_xt_hifi2_xtbool4_extract_1)(const xtbool4 src /*in*/);
CSTUB_EXTERN xtbool CSTUB_(_TIE_xt_hifi2_xtbool4_extract_2)(const xtbool4 src /*in*/);
CSTUB_EXTERN xtbool CSTUB_(_TIE_xt_hifi2_xtbool4_extract_3)(const xtbool4 src /*in*/);
CSTUB_EXTERN ae_int64x2 CSTUB_(_TIE_xt_hifi2_ae_int64x2_loadi)(const ae_int64x2 * b /*in*/, immediate c /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_ae_int64x2_storei)(const ae_int64x2 d /*in*/, const ae_int64x2 * b /*in*/, immediate c /*in*/);
CSTUB_EXTERN ae_int64x2 CSTUB_(_TIE_xt_hifi2_ae_int64x2_move)(const ae_int64x2 b /*in*/);
CSTUB_EXTERN ae_int64x2 CSTUB_(_TIE_xt_hifi2_AE_SLAA64X2_vector)(const ae_int64x2 d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_int64x2 CSTUB_(_TIE_xt_hifi2_AE_SLAI64X2_vector)(const ae_int64x2 d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_int64x2 CSTUB_(_TIE_xt_hifi2_AE_SRAA64X2_vector)(const ae_int64x2 d0 /*in*/, const int sa /*in*/);
CSTUB_EXTERN ae_int64x2 CSTUB_(_TIE_xt_hifi2_AE_SRAI64X2_vector)(const ae_int64x2 d0 /*in*/, immediate sa /*in*/);
CSTUB_EXTERN ae_int64x2 CSTUB_(_TIE_xt_hifi2_AE_NEG64X2_vector)(const ae_int64x2 d0 /*in*/);
CSTUB_EXTERN ae_int64x2 CSTUB_(_TIE_xt_hifi2_AE_ADD64X2_vector)(const ae_int64x2 d0 /*in*/, const ae_int64x2 d1 /*in*/);
CSTUB_EXTERN ae_int64x2 CSTUB_(_TIE_xt_hifi2_AE_SUB64X2_vector)(const ae_int64x2 d0 /*in*/, const ae_int64x2 d1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_xt_hifi2_AE_MULA32X2_vector)(ae_int64x2* d /*inout*/, const ae_int32x2 d0 /*in*/, const ae_int32x2 d1 /*in*/);
CSTUB_EXTERN ae_int64x2 CSTUB_(_TIE_xt_hifi2_AE_MUL32X2_vector)(const ae_int32x2 d0 /*in*/, const ae_int32x2 d1 /*in*/);
CSTUB_EXTERN ae_int64x2 CSTUB_(_TIE_xt_hifi2_ae_int32x2_rtor_ae_int64x2)(const ae_int32x2 b /*in*/);
CSTUB_EXTERN long long CSTUB_(_TIE_xt_hifi2_AE_INT64X2_RADD)(const ae_int64x2 d0 /*in*/);
CSTUB_EXTERN ae_int32x2 CSTUB_(_TIE_xt_hifi2_AE_SRLA32_vector)(const ae_int32x2 var1 /*in*/, const int var2 /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_AE_SRLA32_scalar)(const int var1 /*in*/, const int var2 /*in*/);
CSTUB_EXTERN ae_int16x4 CSTUB_(_TIE_xt_hifi2_AE_SRLA16_vector)(const ae_int16x4 var1 /*in*/, const int var2 /*in*/);
CSTUB_EXTERN short CSTUB_(_TIE_xt_hifi2_AE_SRLA16_scalar)(const short var1 /*in*/, const int var2 /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_AE_MULA16S_scalar)(const int ain /*in*/, const ae_int16 var1 /*in*/, const ae_int16 var2 /*in*/);
CSTUB_EXTERN ae_int32x4 CSTUB_(_TIE_xt_hifi2_AE_MULA16S_vector)(const ae_int32x4 ain /*in*/, const ae_int16x4 var1 /*in*/, const ae_int16x4 var2 /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_AE_MULS16S_scalar)(const int ain /*in*/, const short var1 /*in*/, const short var2 /*in*/);
CSTUB_EXTERN ae_int32x4 CSTUB_(_TIE_xt_hifi2_AE_MULS16S_vector)(const ae_int32x4 ain /*in*/, const ae_int16x4 var1 /*in*/, const ae_int16x4 var2 /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_RLmula0_rinit)(const int a /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_RLmula0_rvec)(const ae_int32 din /*in*/, const ae_int16x4 d0 /*in*/, const ae_int16x4 d1 /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_AE_RLmula0_rfini)(const ae_int32 d /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_RLmuls0_rinit)(const int a /*in*/);
CSTUB_EXTERN ae_int32 CSTUB_(_TIE_xt_hifi2_AE_RLmuls0_rvec)(const ae_int32 din /*in*/, const ae_int16x4 d0 /*in*/, const ae_int16x4 d1 /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_xt_hifi2_AE_RLmuls0_rfini)(const ae_int32 d /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_xt_ioports_READ_IPQ)(void);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_xt_ioports_CHECK_IPQ)(void);
CSTUB_EXTERN void CSTUB_(_TIE_xt_ioports_WRITE_OPQ)(const unsigned int a /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_xt_ioports_CHECK_OPQ)(void);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_xt_ioports_RUR_EXPSTATE)(void);
CSTUB_EXTERN void CSTUB_(_TIE_xt_ioports_WUR_EXPSTATE)(const unsigned int v /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_st_BBR)(const atbool a /*in*/, const atbool * b /*in*/, immediate c /*in*/);
CSTUB_EXTERN atbool CSTUB_(_TIE_hmd1a_common_tie_ld_BBR)(const atbool * b /*in*/, immediate c /*in*/);
CSTUB_EXTERN atbool CSTUB_(_TIE_hmd1a_common_tie_mv_BBR)(const atbool b /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_st_ULSR)(const ulsr32 a /*in*/, const ulsr32 * b /*in*/, immediate c /*in*/);
CSTUB_EXTERN ulsr32 CSTUB_(_TIE_hmd1a_common_tie_ld_ULSR)(const ulsr32 * b /*in*/, immediate c /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_st_MIR)(const mir18 a /*in*/, const mir18 * b /*in*/, immediate c /*in*/);
CSTUB_EXTERN mir18 CSTUB_(_TIE_hmd1a_common_tie_ld_MIR)(const mir18 * b /*in*/, immediate c /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_st_CR)(const cr64 a /*in*/, const cr64 * b /*in*/, immediate c /*in*/);
CSTUB_EXTERN cr64 CSTUB_(_TIE_hmd1a_common_tie_ld_CR)(const cr64 * b /*in*/, immediate c /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_dma_ld)(const unsigned int * src /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_dma_align_ld)(const unsigned int ** src /*inout*/, const unsigned int * dst /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_dma_ldu)(const unsigned int ** src /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_dma_flush_ld)(const unsigned int ** src /*inout*/, const unsigned int * dst /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_dma_st)(const unsigned int * src /*in*/, const unsigned int * dst /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_dma_align_st)(const unsigned int * src /*in*/, unsigned int ** dst /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_dma_stu)(const unsigned int * src /*in*/, unsigned int ** dst /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_dma_flush_st)(const unsigned int * src /*in*/, const unsigned int * dst /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_dma_buf_save)(unsigned int ** dst /*inout*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_load32x2_vr_idxR)(const unsigned int * ptr /*in*/, const unsigned int ofst /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_load32x2_vr_idxI)(const unsigned int * ptr /*in*/, immediate ofst2 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_load32x2_vr_postR)(vr64* z /*out*/, const unsigned int ** ptr /*inout*/, const unsigned int ofst /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_load32x2_vr_postI)(vr64* z /*out*/, const unsigned int ** ptr /*inout*/, immediate ofst2 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_load32x2_vr_circI)(vr64* z /*out*/, const unsigned int ** ptr /*inout*/, immediate ofst1 /*in*/, const cr64 c /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_load32x1_vr_idxR)(vr64* z /*inout*/, const unsigned int * ptr /*in*/, const unsigned int ofst /*in*/, immediate sel1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_load32x1_vr_idxI)(vr64* z /*inout*/, const unsigned int * ptr /*in*/, immediate ofst2 /*in*/, immediate sel1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_load32x1_vr_postR)(vr64* z /*inout*/, const unsigned int ** ptr /*inout*/, const unsigned int ofst /*in*/, immediate sel1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_load32x1_vr_postI)(vr64* z /*inout*/, const unsigned int ** ptr /*inout*/, immediate ofst2 /*in*/, immediate sel1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_load32x1_vr_circI)(vr64* z /*inout*/, const unsigned int ** ptr /*inout*/, immediate ofst1 /*in*/, const cr64 c /*in*/, immediate sel1 /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_load32x2_vr_bdir)(const unsigned int * ptr /*in*/, const unsigned int ofst /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_load32x2_vr_brev)(const unsigned int * ptr /*in*/, const unsigned int ofst /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_load32x2_vr_idxR_perm)(vr64* z /*inout*/, const unsigned int * ptr /*in*/, const unsigned int ofst /*in*/, immediate perm /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_load32x2_vr_idxI_perm_vr)(const vr64 z /*in*/, const unsigned int * ptr /*in*/, immediate ofst2 /*in*/, immediate perm /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_load32x2_vr_postR_perm)(vr64* z /*inout*/, const unsigned int ** ptr /*inout*/, const unsigned int ofst /*in*/, immediate perm /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_load32x2_vr_postI_perm_vr)(vr64* r /*out*/, const vr64 z /*in*/, const unsigned int ** ptr /*inout*/, immediate ofst2 /*in*/, immediate perm /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_load32x2_vr_circI_perm)(vr64* z /*inout*/, const unsigned int ** ptr /*inout*/, immediate ofst1 /*in*/, const cr64 c /*in*/, immediate perm /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_load32x1_vr_idxR_perm)(vr64* z /*inout*/, const unsigned int * ptr /*in*/, const unsigned int ofst /*in*/, immediate perm /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_load32x1_vr_idxI_perm_vr)(const vr64 z /*in*/, const unsigned int * ptr /*in*/, immediate ofst2 /*in*/, immediate perm /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_load32x1_vr_postR_perm)(vr64* z /*inout*/, const unsigned int ** ptr /*inout*/, const unsigned int ofst /*in*/, immediate perm /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_load32x1_vr_postI_perm_vr)(vr64* r /*out*/, const vr64 z /*in*/, const unsigned int ** ptr /*inout*/, immediate ofst2 /*in*/, immediate perm /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_load32x1_vr_circI_perm)(vr64* z /*inout*/, const unsigned int ** ptr /*inout*/, immediate ofst1 /*in*/, const cr64 c /*in*/, immediate perm /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_load16x2_vr_idxR)(const unsigned int * ptr /*in*/, const unsigned int ofst /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_load16x2_vr_idxI)(const unsigned int * ptr /*in*/, immediate ofst2 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_load16x2_vr_postR)(vr64* z /*out*/, const unsigned int ** ptr /*inout*/, const unsigned int ofst /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_load16x2_vr_postI)(vr64* z /*out*/, const unsigned int ** ptr /*inout*/, immediate ofst2 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_load16x2_vr_circI)(vr64* z /*out*/, const unsigned int ** ptr /*inout*/, immediate ofst1 /*in*/, const cr64 c /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_load16x1_vr_idxR)(vr64* z /*inout*/, const unsigned int * ptr /*in*/, const unsigned int ofst /*in*/, immediate sel1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_load16x1_vr_idxI)(vr64* z /*inout*/, const unsigned int * ptr /*in*/, immediate ofst2 /*in*/, immediate sel1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_load16x1_vr_postR)(vr64* z /*inout*/, const unsigned int ** ptr /*inout*/, const unsigned int ofst /*in*/, immediate sel1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_load16x1_vr_postI)(vr64* z /*inout*/, const unsigned int ** ptr /*inout*/, immediate ofst2 /*in*/, immediate sel1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_load16x1_vr_circI)(vr64* z /*inout*/, const unsigned int ** ptr /*inout*/, immediate ofst1 /*in*/, const cr64 c /*in*/, immediate sel1 /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_load8x2_vr_idxR)(const unsigned int * ptr /*in*/, const unsigned int ofst /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_load8x2_vr_idxI)(const unsigned int * ptr /*in*/, immediate ofst2 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_load8x2_vr_postR)(vr64* z /*out*/, const unsigned int ** ptr /*inout*/, const unsigned int ofst /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_load8x2_vr_postI)(vr64* z /*out*/, const unsigned int ** ptr /*inout*/, immediate ofst2 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_load8x2_vr_circI)(vr64* z /*out*/, const unsigned int ** ptr /*inout*/, immediate ofst1 /*in*/, const cr64 c /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_load8x1_vr_idxR)(vr64* z /*inout*/, const unsigned int * ptr /*in*/, const unsigned int ofst /*in*/, immediate sel1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_load8x1_vr_idxI)(vr64* z /*inout*/, const unsigned int * ptr /*in*/, immediate ofst2 /*in*/, immediate sel1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_load8x1_vr_postR)(vr64* z /*inout*/, const unsigned int ** ptr /*inout*/, const unsigned int ofst /*in*/, immediate sel1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_load8x1_vr_postI)(vr64* z /*inout*/, const unsigned int ** ptr /*inout*/, immediate ofst2 /*in*/, immediate sel1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_load8x1_vr_circI)(vr64* z /*inout*/, const unsigned int ** ptr /*inout*/, immediate ofst1 /*in*/, const cr64 c /*in*/, immediate sel1 /*in*/);
CSTUB_EXTERN ulsr32 CSTUB_(_TIE_hmd1a_common_tie_align_32x2_load)(const unsigned int * ptr /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_load_32x2_vr_a)(vr64* z /*out*/, ulsr32* buf /*inout*/, const unsigned int ** ptr /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_load_24x2_vr_a)(vr64* z /*out*/, ulsr32* buf /*inout*/, const unsigned int ** ptr /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_load_32x2_vr_a_circ)(vr64* z /*out*/, ulsr32* buf /*inout*/, const unsigned int ** ptr /*inout*/, const cr64 c /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store32x2_vr_idxR)(const vr64 z /*in*/, const unsigned int * ptr /*in*/, const unsigned int ofst /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store32x2_vr_idxI)(const vr64 z /*in*/, const unsigned int * ptr /*in*/, immediate ofst2 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store32x2_vr_postR)(const vr64 z /*in*/, unsigned int ** ptr /*inout*/, const unsigned int ofst /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store32x2_vr_postI)(const vr64 z /*in*/, unsigned int ** ptr /*inout*/, immediate ofst2 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store32x2_vr_circI)(const vr64 z /*in*/, unsigned int ** ptr /*inout*/, immediate ofst1 /*in*/, const cr64 c /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store32x1_vr_idxR)(const vr64 z /*in*/, const unsigned int * ptr /*in*/, const unsigned int ofst /*in*/, immediate sel1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store32x1_vr_idxI)(const vr64 z /*in*/, const unsigned int * ptr /*in*/, immediate ofst2 /*in*/, immediate sel1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store32x1_vr_postR)(const vr64 z /*in*/, unsigned int ** ptr /*inout*/, const unsigned int ofst /*in*/, immediate sel1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store32x1_vr_postI)(const vr64 z /*in*/, unsigned int ** ptr /*inout*/, immediate ofst2 /*in*/, immediate sel1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store32x1_vr_circI)(const vr64 z /*in*/, unsigned int ** ptr /*inout*/, immediate ofst1 /*in*/, const cr64 c /*in*/, immediate sel1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store32x2_vr_br_idxR)(const vr64 z /*in*/, const atbool gate /*in*/, const unsigned int * ptr /*in*/, const unsigned int ofst /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store32x2_vr_br_idxI)(const vr64 z /*in*/, const atbool gate /*in*/, const unsigned int * ptr /*in*/, immediate ofst2 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store32x2_vr_br_postR)(const vr64 z /*in*/, const atbool gate /*in*/, unsigned int ** ptr /*inout*/, const unsigned int ofst /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store32x2_vr_br_postI)(const vr64 z /*in*/, const atbool gate /*in*/, unsigned int ** ptr /*inout*/, immediate ofst2 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store32x2_vr_br_circI)(const vr64 z /*in*/, const atbool gate /*in*/, unsigned int ** ptr /*inout*/, immediate ofst1 /*in*/, const cr64 c /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store32x1_vr_br_idxR)(const vr64 z /*in*/, const atbool gate /*in*/, const unsigned int * ptr /*in*/, const unsigned int ofst /*in*/, immediate sel1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store32x1_vr_br_idxI)(const vr64 z /*in*/, const atbool gate /*in*/, const unsigned int * ptr /*in*/, immediate ofst2 /*in*/, immediate sel1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store32x1_vr_br_postR)(const vr64 z /*in*/, const atbool gate /*in*/, unsigned int ** ptr /*inout*/, const unsigned int ofst /*in*/, immediate sel1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store32x1_vr_br_postI)(const vr64 z /*in*/, const atbool gate /*in*/, unsigned int ** ptr /*inout*/, immediate ofst2 /*in*/, immediate sel1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store32x1_vr_br_circI)(const vr64 z /*in*/, const atbool gate /*in*/, unsigned int ** ptr /*inout*/, immediate ofst1 /*in*/, const cr64 c /*in*/, immediate sel1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store32x2_vr_br_bdir)(const vr64 z /*in*/, const atbool gate /*in*/, const unsigned int * ptr /*in*/, const unsigned int ofst /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store32x2_vr_br_brev)(const vr64 z /*in*/, const atbool gate /*in*/, const unsigned int * ptr /*in*/, const unsigned int ofst /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store16x2_vr_idxR)(const vr64 z /*in*/, const unsigned int * ptr /*in*/, const unsigned int ofst /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store16x2_vr_idxI)(const vr64 z /*in*/, const unsigned int * ptr /*in*/, immediate ofst2 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store16x2_vr_postR)(const vr64 z /*in*/, unsigned int ** ptr /*inout*/, const unsigned int ofst /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store16x2_vr_postI)(const vr64 z /*in*/, unsigned int ** ptr /*inout*/, immediate ofst2 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store16x2_vr_circI)(const vr64 z /*in*/, unsigned int ** ptr /*inout*/, immediate ofst1 /*in*/, const cr64 c /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store16x1_vr_idxR)(const vr64 z /*in*/, const unsigned int * ptr /*in*/, const unsigned int ofst /*in*/, immediate sel1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store16x1_vr_idxI)(const vr64 z /*in*/, const unsigned int * ptr /*in*/, immediate ofst2 /*in*/, immediate sel1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store16x1_vr_postR)(const vr64 z /*in*/, unsigned int ** ptr /*inout*/, const unsigned int ofst /*in*/, immediate sel1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store16x1_vr_postI)(const vr64 z /*in*/, unsigned int ** ptr /*inout*/, immediate ofst2 /*in*/, immediate sel1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store16x1_vr_circI)(const vr64 z /*in*/, unsigned int ** ptr /*inout*/, immediate ofst1 /*in*/, const cr64 c /*in*/, immediate sel1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store8x2_vr_idxR)(const vr64 z /*in*/, const unsigned int * ptr /*in*/, const unsigned int ofst /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store8x2_vr_idxI)(const vr64 z /*in*/, const unsigned int * ptr /*in*/, immediate ofst2 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store8x2_vr_postR)(const vr64 z /*in*/, unsigned int ** ptr /*inout*/, const unsigned int ofst /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store8x2_vr_postI)(const vr64 z /*in*/, unsigned int ** ptr /*inout*/, immediate ofst2 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store8x2_vr_circI)(const vr64 z /*in*/, unsigned int ** ptr /*inout*/, immediate ofst1 /*in*/, const cr64 c /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store8x1_vr_idxR)(const vr64 z /*in*/, const unsigned int * ptr /*in*/, const unsigned int ofst /*in*/, immediate sel1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store8x1_vr_idxI)(const vr64 z /*in*/, const unsigned int * ptr /*in*/, immediate ofst2 /*in*/, immediate sel1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store8x1_vr_postR)(const vr64 z /*in*/, unsigned int ** ptr /*inout*/, const unsigned int ofst /*in*/, immediate sel1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store8x1_vr_postI)(const vr64 z /*in*/, unsigned int ** ptr /*inout*/, immediate ofst2 /*in*/, immediate sel1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store8x1_vr_circI)(const vr64 z /*in*/, unsigned int ** ptr /*inout*/, immediate ofst1 /*in*/, const cr64 c /*in*/, immediate sel1 /*in*/);
CSTUB_EXTERN ulsr32 CSTUB_(_TIE_hmd1a_common_tie_align_32x2_store)(const unsigned int * ptr /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store_32x2_vr_a)(const vr64 z /*in*/, ulsr32* buf /*inout*/, unsigned int ** ptr /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store_24x2_vr_a)(const vr64 z /*in*/, ulsr32* buf /*inout*/, unsigned int ** ptr /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store_32x2_vr_a_circ)(const vr64 z /*in*/, ulsr32* buf /*inout*/, unsigned int ** ptr /*inout*/, const cr64 c /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_flush_32x2)(const ulsr32 buf /*in*/, const unsigned int * ptr /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_load_fr_postI)(fr32* fx /*out*/, const unsigned int ** ptr /*inout*/, immediate ofst2 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store_fr_postI)(const fr32 fx /*in*/, unsigned int ** ptr /*inout*/, immediate ofst2 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_brev_upd)(atbool* gate /*out*/, unsigned int* idx_out /*out*/, const unsigned int idx_in /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_brev_upd_ext)(atbool* gate /*inout*/, unsigned int* idx_out /*inout*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_move32_ar_vr)(const vr64 x /*in*/, immediate sel1 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_move32_vr_ar)(vr64* z /*inout*/, immediate sel1 /*in*/, const unsigned int a /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_move32_ar_vr_idx)(const vr64 x /*in*/, const unsigned int idx /*in*/);
CSTUB_EXTERN fr32 CSTUB_(_TIE_hmd1a_common_tie_move32_fr_vr_idx)(const vr64 x /*in*/, const unsigned int idx /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_move_fr_eqz)(fr32* z /*inout*/, const fr32 x /*in*/, const fr32 y /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_move_fr_gez)(fr32* z /*inout*/, const fr32 x /*in*/, const fr32 y /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_move_fr_gtz)(fr32* z /*inout*/, const fr32 x /*in*/, const fr32 y /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_move_fr_lez)(fr32* z /*inout*/, const fr32 x /*in*/, const fr32 y /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_move_fr_ltz)(fr32* z /*inout*/, const fr32 x /*in*/, const fr32 y /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_move_fr_nez)(fr32* z /*inout*/, const fr32 x /*in*/, const fr32 y /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_move_fr_sat)(fr32* z /*inout*/, const fr32 x /*in*/, const fr32 y /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_move_fr_arnz)(fr32* z /*inout*/, const fr32 x /*in*/, const unsigned int ax /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_vmove_vr_eqz)(vr64* z /*inout*/, const vr64 x /*in*/, const vr64 y /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_vmove_vr_gez)(vr64* z /*inout*/, const vr64 x /*in*/, const vr64 y /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_vmove_vr_gtz)(vr64* z /*inout*/, const vr64 x /*in*/, const vr64 y /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_vmove_vr_lez)(vr64* z /*inout*/, const vr64 x /*in*/, const vr64 y /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_vmove_vr_ltz)(vr64* z /*inout*/, const vr64 x /*in*/, const vr64 y /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_vmove_vr_nez)(vr64* z /*inout*/, const vr64 x /*in*/, const vr64 y /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_vmove_vr_sat)(vr64* z /*inout*/, const vr64 x /*in*/, const vr64 y /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_replicate)(vr64* z /*inout*/, immediate sel_code /*in*/, const vr64 x /*in*/, immediate el_x /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_replicate_ar)(vr64* z /*inout*/, immediate sel_code /*in*/, const unsigned int ar /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_vreplicate)(const vr64 x /*in*/, immediate el_x /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_vreplicate_fr)(const fr32 fx /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_convert_16I_to_32F_x1)(vr64* z /*inout*/, const unsigned int exp_fxp /*in*/, immediate el /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_convert_16I_to_32F_x2)(vr64* z /*inout*/, const unsigned int exp_fxp /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_convert_32F_to_16I_x1)(vr64* z /*inout*/, const unsigned int exp_fxp /*in*/, immediate rnd /*in*/, immediate el /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_convert_32F_to_16I_x2)(vr64* z /*inout*/, const unsigned int exp_fxp /*in*/, immediate rnd /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_convert_32F_to_16F_x1)(vr64* z /*inout*/, immediate is_signed /*in*/, immediate exp_bits /*in*/, const unsigned int bias /*in*/, immediate round /*in*/, immediate el /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_convert_32F_to_16F_x2)(vr64* z /*inout*/, immediate is_signed /*in*/, immediate exp_bits /*in*/, const unsigned int bias /*in*/, immediate round /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_convert_16F_to_32F_x1)(vr64* z /*inout*/, immediate is_signed /*in*/, immediate exp_bits /*in*/, const unsigned int bias /*in*/, immediate el /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_convert_16F_to_32F_x2)(vr64* z /*inout*/, immediate is_signed /*in*/, immediate exp_bits /*in*/, const unsigned int bias /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_convert_32I_to_32F_x1)(vr64* z /*inout*/, const unsigned int exp_fxp /*in*/, immediate el /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_convert_32F_to_32I_x1)(vr64* z /*inout*/, const unsigned int exp_fxp /*in*/, immediate rnd /*in*/, immediate el /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_convert_IEEE_float_to_32F_x2)(vr64* z /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_convert_32F_to_IEEE_float_x2)(vr64* z /*inout*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_convert_32I_to_64F)(const unsigned int x /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_convert_64F_to_32I)(const vr64 x /*in*/, immediate rnd /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_convert_32F_to_64F)(const fr32 fx /*in*/);
CSTUB_EXTERN fr32 CSTUB_(_TIE_hmd1a_common_tie_convert_64F_to_32F)(const vr64 x /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_convert_IEEE_double_to_64F)(vr64* z /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_convert_64F_to_IEEE_double)(vr64* z /*inout*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_vadd_perm)(const vr64 x /*in*/, const vr64 y /*in*/, immediate selin_h /*in*/, immediate selin_l /*in*/, immediate signs4 /*in*/, immediate div_by_2_op /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_vsum_perm)(const vr64 z /*in*/, const vr64 x /*in*/, const vr64 y /*in*/, immediate selin_h /*in*/, immediate selin_l /*in*/, immediate signs4 /*in*/, immediate sign_z /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_vmul_perm)(const vr64 x /*in*/, const vr64 y /*in*/, immediate selin_h /*in*/, immediate selin_l /*in*/, immediate signs2 /*in*/, immediate div_by_2_op /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_vmac_perm)(const vr64 z /*in*/, const vr64 x /*in*/, const vr64 y /*in*/, immediate selin_h /*in*/, immediate selin_l /*in*/, immediate signs2 /*in*/, immediate sign_z /*in*/, immediate swap_z /*in*/, immediate div_by_2_op /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_vmac_boost)(const vr64 z /*in*/, const vr64 x /*in*/, const vr64 y /*in*/, immediate selin_h /*in*/, immediate selin_l /*in*/, immediate signs2 /*in*/, immediate boost /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_vblend)(const vr64 x /*in*/, const vr64 y /*in*/, immediate selin_h /*in*/, immediate selin_l /*in*/, immediate signs4 /*in*/, immediate div_by_2_op /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_vblend_add)(const vr64 z /*in*/, const vr64 x /*in*/, const vr64 y /*in*/, immediate selin_h /*in*/, immediate selin_l /*in*/, immediate signs4 /*in*/, immediate sign_z /*in*/, immediate swap_z /*in*/, immediate div_by_2_op /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_vblend_boost)(const vr64 z /*in*/, const vr64 x /*in*/, const vr64 y /*in*/, immediate selin_h /*in*/, immediate selin_l /*in*/, immediate signs4 /*in*/, immediate boost /*in*/);
CSTUB_EXTERN fr32 CSTUB_(_TIE_hmd1a_common_tie_fadds)(const fr32 fx /*in*/, const fr32 fy /*in*/, immediate signs2 /*in*/);
CSTUB_EXTERN fr32 CSTUB_(_TIE_hmd1a_common_tie_fmuls)(const fr32 fx /*in*/, const fr32 fy /*in*/, immediate signs2 /*in*/);
CSTUB_EXTERN fr32 CSTUB_(_TIE_hmd1a_common_tie_fmacs)(const fr32 fz /*in*/, const fr32 fx /*in*/, const fr32 fy /*in*/, immediate signs2 /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_dadds)(const vr64 z /*in*/, const vr64 x /*in*/, immediate signs2 /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_dmuls)(const vr64 x /*in*/, const vr64 y /*in*/, immediate signs2 /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_dmacs)(const vr64 z /*in*/, const vr64 x /*in*/, const vr64 y /*in*/, immediate signs2 /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_vadds)(const vr64 x /*in*/, const vr64 y /*in*/, immediate signs4 /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_vmuls)(const vr64 x /*in*/, const vr64 y /*in*/, immediate signs2 /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_vmacs)(const vr64 z /*in*/, const vr64 x /*in*/, const vr64 y /*in*/, immediate signs2 /*in*/, immediate sign_z /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_cmul)(const vr64 x /*in*/, const vr64 y /*in*/, immediate conj /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_cmac)(const vr64 z /*in*/, const vr64 x /*in*/, const vr64 y /*in*/, immediate conj /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_cmas)(const vr64 z /*in*/, const vr64 x /*in*/, const vr64 y /*in*/, immediate conj /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_vmulf)(const vr64 x /*in*/, const fr32 fy /*in*/, immediate signs2 /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_vmacf)(const vr64 z /*in*/, const vr64 x /*in*/, const fr32 fy /*in*/, immediate signs2 /*in*/, immediate sign_z /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_vabs)(const vr64 x /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_vexp_adj)(const vr64 x /*in*/, const unsigned int exp_adj_ar /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_vexp_adji)(const vr64 x /*in*/, immediate exp_adj_imm /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_vpermi)(const vr64 x /*in*/, const vr64 y /*in*/, immediate sel4 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_seta_vr)(vr64* z /*inout*/, immediate sel_code /*in*/, immediate const_idx /*in*/, immediate exp_adj_const /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_vseta_vr)(immediate const_idx /*in*/, immediate exp_adj_const /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_seta_ar)(immediate const_idx /*in*/, immediate exp_adj_const /*in*/);
CSTUB_EXTERN fr32 CSTUB_(_TIE_hmd1a_common_tie_seta_fr)(immediate const_idx /*in*/, immediate exp_adj_const /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_load_AccExtend_postI)(const unsigned int ** ptr /*inout*/, immediate ofst2 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_load32x1_vr_idx16vr)(vr64* z /*inout*/, const unsigned int * ptr /*in*/, const vr64 vidx16 /*in*/, immediate ptr_sel /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_load_BB0_postI)(const unsigned int ** ptr /*inout*/, immediate ofst2 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_load_BB1_postI)(const unsigned int ** ptr /*inout*/, immediate ofst2 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_load_BB2_postI)(const unsigned int ** ptr /*inout*/, immediate ofst2 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_load_BB3_postI)(const unsigned int ** ptr /*inout*/, immediate ofst2 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_load_VB1_postI)(const unsigned int ** ptr /*inout*/, immediate ofst2 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_load_VB2_postI)(const unsigned int ** ptr /*inout*/, immediate ofst2 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_load_VB3_postI)(const unsigned int ** ptr /*inout*/, immediate ofst2 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_load_VB4_postI)(const unsigned int ** ptr /*inout*/, immediate ofst2 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_load_VB5_postI)(const unsigned int ** ptr /*inout*/, immediate ofst2 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_load_VB6_postI)(const unsigned int ** ptr /*inout*/, immediate ofst2 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_load_VB7_postI)(const unsigned int ** ptr /*inout*/, immediate ofst2 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_load_32x2_vr_a_bounded)(vr64* z /*out*/, ulsr32* buf /*inout*/, const unsigned int ** ptr /*inout*/, mir18* count /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_load_BBx_VB67_a_bounded)(ulsr32* buf /*inout*/, const unsigned int ** ptr /*inout*/, mir18* count /*inout*/, const unsigned int sel /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_flush_32x2_bounded)(const ulsr32 buf /*in*/, unsigned int ** ptr /*inout*/, mir18* count /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store_32x2_vr_a_bounded)(const vr64 z /*in*/, ulsr32* buf /*inout*/, unsigned int ** ptr /*inout*/, mir18* count /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store_AccExtend_postI)(unsigned int ** ptr /*inout*/, immediate ofst2 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store_BB0_postI)(unsigned int ** ptr /*inout*/, immediate ofst2 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store_BB1_postI)(unsigned int ** ptr /*inout*/, immediate ofst2 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store_BB2_postI)(unsigned int ** ptr /*inout*/, immediate ofst2 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store_BB3_postI)(unsigned int ** ptr /*inout*/, immediate ofst2 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store_VB1_postI)(unsigned int ** ptr /*inout*/, immediate ofst2 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store_VB2_postI)(unsigned int ** ptr /*inout*/, immediate ofst2 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store_VB3_postI)(unsigned int ** ptr /*inout*/, immediate ofst2 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store_VB4_postI)(unsigned int ** ptr /*inout*/, immediate ofst2 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store_VB5_postI)(unsigned int ** ptr /*inout*/, immediate ofst2 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store_VB6_postI)(unsigned int ** ptr /*inout*/, immediate ofst2 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_store_VB7_postI)(unsigned int ** ptr /*inout*/, immediate ofst2 /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_afloat_exp_extract)(const vr64 x /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_mov_AccExtend_vr)(const vr64 x /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_mov_vr_AccExtend)(void);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_mov_BB_VB67_to_vrVB_VB45)(void);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_mov_vrVB_VB45_to_BB_VB67)(const vr64 x /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_precess_16bits)(const vr64 x /*in*/, const vr64 y /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_set_BB_vrVB67_zero)(void);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_exp_shift_amount)(const vr64 input1 /*in*/, const vr64 input2 /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_rnd_sat_pack)(vr64* z /*inout*/, immediate el32 /*in*/, const vr64 x /*in*/, const vr64 y /*in*/, const atbool sgn /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_rectify32_into8)(vr64* z /*inout*/, const vr64 x /*in*/, const unsigned int shift /*in*/, immediate rnd /*in*/, immediate el32 /*in*/, immediate half /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_shift8_into32_arith)(const vr64 x /*in*/, const unsigned int shift /*in*/, immediate rnd /*in*/, immediate el32 /*in*/, immediate half /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_shift32_arith)(const vr64 x /*in*/, const unsigned int shift /*in*/, immediate rnd /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_mac8bx8b)(vr64* z /*inout*/, const vr64 x /*in*/, const vr64 y /*in*/, const atbool signed_xy /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_mac8bx8b_sparse)(vr64* z /*inout*/, const vr64 x /*in*/, const vr64 y /*in*/, const atbool signed_xy /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_mac8bx8b_conv)(vr64* z /*inout*/, const vr64 x /*in*/, const atbool signed_xy /*in*/, immediate shift_in /*in*/);
CSTUB_EXTERN mir18 CSTUB_(_TIE_hmd1a_common_tie_mir_init)(const unsigned int low /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_f_abs)(vr64* z /*inout*/, immediate el_z /*in*/, const vr64 x /*in*/, immediate el_x /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_fclamp)(vr64* z /*inout*/, immediate el_z /*in*/, const vr64 x /*in*/, immediate el_x /*in*/, const vr64 y /*in*/, immediate el_y /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_fclamp_bp)(vr64* z /*inout*/, immediate el_z /*in*/, const vr64 x /*in*/, immediate el_x /*in*/, const vr64 y /*in*/, immediate el_y /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_fclamp_one)(vr64* z /*inout*/, immediate el_z /*in*/, const vr64 x /*in*/, immediate el_x /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_fmax)(vr64* z /*inout*/, immediate el_z /*in*/, const vr64 x /*in*/, immediate el_x /*in*/, const vr64 y /*in*/, immediate el_y /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_fmin)(vr64* z /*inout*/, immediate el_z /*in*/, const vr64 x /*in*/, immediate el_x /*in*/, const vr64 y /*in*/, immediate el_y /*in*/);
CSTUB_EXTERN fr32 CSTUB_(_TIE_hmd1a_common_tie_max_fr)(const fr32 fx /*in*/, const fr32 fy /*in*/);
CSTUB_EXTERN fr32 CSTUB_(_TIE_hmd1a_common_tie_min_fr)(const fr32 fx /*in*/, const fr32 fy /*in*/);
CSTUB_EXTERN fr32 CSTUB_(_TIE_hmd1a_common_tie_log2)(const fr32 x /*in*/);
CSTUB_EXTERN fr32 CSTUB_(_TIE_hmd1a_common_tie_pow2)(const fr32 x /*in*/);
CSTUB_EXTERN fr32 CSTUB_(_TIE_hmd1a_common_tie_sigmoid)(const fr32 x /*in*/);
CSTUB_EXTERN fr32 CSTUB_(_TIE_hmd1a_common_tie_inv)(const fr32 x /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_ratio)(fr32* z /*out*/, const fr32 x /*in*/, const fr32 y /*in*/, atbool* bz /*out*/);
CSTUB_EXTERN fr32 CSTUB_(_TIE_hmd1a_common_tie_atanratio)(const fr32 x /*in*/, const atbool bx /*in*/);
CSTUB_EXTERN fr32 CSTUB_(_TIE_hmd1a_common_tie_invsqrt)(const fr32 x /*in*/);
CSTUB_EXTERN fr32 CSTUB_(_TIE_hmd1a_common_tie_sine)(const fr32 x /*in*/);
CSTUB_EXTERN fr32 CSTUB_(_TIE_hmd1a_common_tie_cosine)(const fr32 x /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_log2mul)(fr32* z /*out*/, const fr32 x /*in*/, const fr32 y /*in*/, atbool* bz /*out*/);
CSTUB_EXTERN fr32 CSTUB_(_TIE_hmd1a_common_tie_cspow2)(const fr32 x /*in*/, const atbool bx /*in*/);
CSTUB_EXTERN atbool CSTUB_(_TIE_hmd1a_common_tie_comp)(const vr64 x /*in*/, immediate el_x /*in*/, const vr64 y /*in*/, immediate el_y /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_eq)(const vr64 x /*in*/, immediate el_x /*in*/, const vr64 y /*in*/, immediate el_y /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_ge)(const vr64 x /*in*/, immediate el_x /*in*/, const vr64 y /*in*/, immediate el_y /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_gt)(const vr64 x /*in*/, immediate el_x /*in*/, const vr64 y /*in*/, immediate el_y /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_le)(const vr64 x /*in*/, immediate el_x /*in*/, const vr64 y /*in*/, immediate el_y /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_lt)(const vr64 x /*in*/, immediate el_x /*in*/, const vr64 y /*in*/, immediate el_y /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_ne)(const vr64 x /*in*/, immediate el_x /*in*/, const vr64 y /*in*/, immediate el_y /*in*/);
CSTUB_EXTERN atbool CSTUB_(_TIE_hmd1a_common_tie_comp_const)(const vr64 x /*in*/, immediate el_x /*in*/, immediate const_idx /*in*/, immediate exp_adj_const /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_eq_const)(const vr64 x /*in*/, immediate el_x /*in*/, immediate const_idx /*in*/, immediate exp_adj_const /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_ge_const)(const vr64 x /*in*/, immediate el_x /*in*/, immediate const_idx /*in*/, immediate exp_adj_const /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_gt_const)(const vr64 x /*in*/, immediate el_x /*in*/, immediate const_idx /*in*/, immediate exp_adj_const /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_le_const)(const vr64 x /*in*/, immediate el_x /*in*/, immediate const_idx /*in*/, immediate exp_adj_const /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_lt_const)(const vr64 x /*in*/, immediate el_x /*in*/, immediate const_idx /*in*/, immediate exp_adj_const /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_ne_const)(const vr64 x /*in*/, immediate el_x /*in*/, immediate const_idx /*in*/, immediate exp_adj_const /*in*/);
CSTUB_EXTERN atbool CSTUB_(_TIE_hmd1a_common_tie_comp_fr)(const fr32 fx /*in*/, const fr32 fy /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_eq_fr)(const fr32 fx /*in*/, const fr32 fy /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_ge_fr)(const fr32 fx /*in*/, const fr32 fy /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_gt_fr)(const fr32 fx /*in*/, const fr32 fy /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_le_fr)(const fr32 fx /*in*/, const fr32 fy /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_lt_fr)(const fr32 fx /*in*/, const fr32 fy /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_ne_fr)(const fr32 fx /*in*/, const fr32 fy /*in*/);
CSTUB_EXTERN fr32 CSTUB_(_TIE_hmd1a_common_tie_neg_fr)(const fr32 fx /*in*/);
CSTUB_EXTERN fr32 CSTUB_(_TIE_hmd1a_common_tie_abs_fr)(const fr32 fx /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_deqz)(const vr64 x /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_dgez)(const vr64 x /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_dgtz)(const vr64 x /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_dlez)(const vr64 x /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_dltz)(const vr64 x /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_dnez)(const vr64 x /*in*/);
CSTUB_EXTERN atbool CSTUB_(_TIE_hmd1a_common_tie_veq)(const vr64 x /*in*/, const vr64 y /*in*/);
CSTUB_EXTERN atbool CSTUB_(_TIE_hmd1a_common_tie_vge)(const vr64 x /*in*/, const vr64 y /*in*/);
CSTUB_EXTERN atbool CSTUB_(_TIE_hmd1a_common_tie_vgt)(const vr64 x /*in*/, const vr64 y /*in*/);
CSTUB_EXTERN atbool CSTUB_(_TIE_hmd1a_common_tie_vle)(const vr64 x /*in*/, const vr64 y /*in*/);
CSTUB_EXTERN atbool CSTUB_(_TIE_hmd1a_common_tie_vlt)(const vr64 x /*in*/, const vr64 y /*in*/);
CSTUB_EXTERN atbool CSTUB_(_TIE_hmd1a_common_tie_vne)(const vr64 x /*in*/, const vr64 y /*in*/);
CSTUB_EXTERN atbool CSTUB_(_TIE_hmd1a_common_tie_veq_const)(const vr64 x /*in*/, immediate const_idx /*in*/, immediate exp_adj_const /*in*/);
CSTUB_EXTERN atbool CSTUB_(_TIE_hmd1a_common_tie_vge_const)(const vr64 x /*in*/, immediate const_idx /*in*/, immediate exp_adj_const /*in*/);
CSTUB_EXTERN atbool CSTUB_(_TIE_hmd1a_common_tie_vgt_const)(const vr64 x /*in*/, immediate const_idx /*in*/, immediate exp_adj_const /*in*/);
CSTUB_EXTERN atbool CSTUB_(_TIE_hmd1a_common_tie_vle_const)(const vr64 x /*in*/, immediate const_idx /*in*/, immediate exp_adj_const /*in*/);
CSTUB_EXTERN atbool CSTUB_(_TIE_hmd1a_common_tie_vlt_const)(const vr64 x /*in*/, immediate const_idx /*in*/, immediate exp_adj_const /*in*/);
CSTUB_EXTERN atbool CSTUB_(_TIE_hmd1a_common_tie_vne_const)(const vr64 x /*in*/, immediate const_idx /*in*/, immediate exp_adj_const /*in*/);
CSTUB_EXTERN fr32 CSTUB_(_TIE_hmd1a_common_tie_sel_1b2)(const fr32 fx /*in*/, const fr32 fy /*in*/, const atbool bx /*in*/, immediate el_bx1 /*in*/);
CSTUB_EXTERN fr32 CSTUB_(_TIE_hmd1a_common_tie_sel_eq)(const fr32 fx /*in*/, const fr32 fy /*in*/, const atbool bx /*in*/);
CSTUB_EXTERN fr32 CSTUB_(_TIE_hmd1a_common_tie_sel_ge)(const fr32 fx /*in*/, const fr32 fy /*in*/, const atbool bx /*in*/);
CSTUB_EXTERN fr32 CSTUB_(_TIE_hmd1a_common_tie_sel_gt)(const fr32 fx /*in*/, const fr32 fy /*in*/, const atbool bx /*in*/);
CSTUB_EXTERN fr32 CSTUB_(_TIE_hmd1a_common_tie_sel_le)(const fr32 fx /*in*/, const fr32 fy /*in*/, const atbool bx /*in*/);
CSTUB_EXTERN fr32 CSTUB_(_TIE_hmd1a_common_tie_sel_lt)(const fr32 fx /*in*/, const fr32 fy /*in*/, const atbool bx /*in*/);
CSTUB_EXTERN fr32 CSTUB_(_TIE_hmd1a_common_tie_sel_ne)(const fr32 fx /*in*/, const fr32 fy /*in*/, const atbool bx /*in*/);
CSTUB_EXTERN fr32 CSTUB_(_TIE_hmd1a_common_tie_sel_ar)(const fr32 fx /*in*/, const fr32 fy /*in*/, const unsigned int sel /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_vsel)(const vr64 x /*in*/, const vr64 y /*in*/, const atbool bx /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_vsel_ar)(const vr64 x /*in*/, const vr64 y /*in*/, const unsigned int sel /*in*/);
CSTUB_EXTERN atbool CSTUB_(_TIE_hmd1a_common_tie_andb2)(const atbool bx /*in*/, const atbool by /*in*/);
CSTUB_EXTERN atbool CSTUB_(_TIE_hmd1a_common_tie_andbc2)(const atbool bx /*in*/, const atbool by /*in*/);
CSTUB_EXTERN atbool CSTUB_(_TIE_hmd1a_common_tie_orb2)(const atbool bx /*in*/, const atbool by /*in*/);
CSTUB_EXTERN atbool CSTUB_(_TIE_hmd1a_common_tie_orbc2)(const atbool bx /*in*/, const atbool by /*in*/);
CSTUB_EXTERN atbool CSTUB_(_TIE_hmd1a_common_tie_xorb2)(const atbool bx /*in*/, const atbool by /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_bcount0_maskI)(const atbool bx /*in*/, immediate imask /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_bcount0_maskR)(const atbool bx /*in*/, const atbool by /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_bcount1_maskI)(const atbool bx /*in*/, immediate imask /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_bcount1_maskR)(const atbool bx /*in*/, const atbool by /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_bfirst0_maskI)(const atbool bx /*in*/, immediate imask /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_bfirst0_maskR)(const atbool bx /*in*/, const atbool by /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_bfirst1_maskI)(const atbool bx /*in*/, immediate imask /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_bfirst1_maskR)(const atbool bx /*in*/, const atbool by /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_blast0_maskI)(const atbool bx /*in*/, immediate imask /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_blast0_maskR)(const atbool bx /*in*/, const atbool by /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_blast1_maskI)(const atbool bx /*in*/, immediate imask /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_blast1_maskR)(const atbool bx /*in*/, const atbool by /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_bgetI)(const atbool bx /*in*/, immediate ipos /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_bgetR)(const atbool bx /*in*/, const unsigned int rpos /*in*/);
CSTUB_EXTERN atbool CSTUB_(_TIE_hmd1a_common_tie_bsetI)(const atbool bx /*in*/, const unsigned int rpos /*in*/, immediate ibit /*in*/);
CSTUB_EXTERN atbool CSTUB_(_TIE_hmd1a_common_tie_bsetR)(const atbool bx /*in*/, const unsigned int rpos /*in*/, const unsigned int by /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_exp_adj)(vr64* z /*inout*/, immediate el_z /*in*/, const vr64 x /*in*/, immediate el_x /*in*/, const unsigned int exp_adj_ar /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_exp_adji)(vr64* z /*inout*/, immediate el_z /*in*/, const vr64 x /*in*/, immediate el_x /*in*/, immediate exp_adj_imm /*in*/);
CSTUB_EXTERN fr32 CSTUB_(_TIE_hmd1a_common_tie_exp_adj_fr)(const fr32 fx /*in*/, const unsigned int exp_adj_ar /*in*/);
CSTUB_EXTERN fr32 CSTUB_(_TIE_hmd1a_common_tie_exp_adji_fr)(const fr32 fx /*in*/, immediate exp_adj_imm /*in*/);
CSTUB_EXTERN fr32 CSTUB_(_TIE_hmd1a_common_tie_s_neg)(const fr32 fx /*in*/);
CSTUB_EXTERN fr32 CSTUB_(_TIE_hmd1a_common_tie_s_copy)(const fr32 fx /*in*/, const fr32 fy /*in*/);
CSTUB_EXTERN fr32 CSTUB_(_TIE_hmd1a_common_tie_s_and)(const fr32 fx /*in*/, const fr32 fy /*in*/);
CSTUB_EXTERN fr32 CSTUB_(_TIE_hmd1a_common_tie_s_andc)(const fr32 fx /*in*/, const fr32 fy /*in*/);
CSTUB_EXTERN fr32 CSTUB_(_TIE_hmd1a_common_tie_s_or)(const fr32 fx /*in*/, const fr32 fy /*in*/);
CSTUB_EXTERN fr32 CSTUB_(_TIE_hmd1a_common_tie_s_orc)(const fr32 fx /*in*/, const fr32 fy /*in*/);
CSTUB_EXTERN fr32 CSTUB_(_TIE_hmd1a_common_tie_s_xor)(const fr32 fx /*in*/, const fr32 fy /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_s_vneg)(const vr64 x /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_s_vcopy)(const vr64 x /*in*/, const vr64 y /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_s_vand)(const vr64 x /*in*/, const vr64 y /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_s_vandc)(const vr64 x /*in*/, const vr64 y /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_s_vor)(const vr64 x /*in*/, const vr64 y /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_s_vorc)(const vr64 x /*in*/, const vr64 y /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_s_vxor)(const vr64 x /*in*/, const vr64 y /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_floorp_frac)(unsigned int* floor /*out*/, vr64* z /*inout*/, immediate el_z /*in*/, const vr64 x /*in*/, immediate el_x /*in*/, immediate nbits /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_idx_frac)(unsigned int* floor /*out*/, vr64* z /*inout*/, immediate el_z /*in*/, const unsigned int input /*in*/, immediate nbits /*in*/);
CSTUB_EXTERN fr32 CSTUB_(_TIE_hmd1a_common_tie_truncate_fr)(const fr32 x /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_rmax_idx)(unsigned int* a /*out*/, fr32* fz /*out*/, const vr64 x /*in*/, const mir18 idx /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_rmin_idx)(unsigned int* a /*out*/, fr32* fz /*out*/, const vr64 x /*in*/, const mir18 idx /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_vmaxmin_init)(vr64* z /*out*/, const vr64 x /*in*/, mir18* idx /*out*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_vmax_idx)(vr64* z /*inout*/, const vr64 x /*in*/, mir18* idx /*inout*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_vmin_idx)(vr64* z /*inout*/, const vr64 x /*in*/, mir18* idx /*inout*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_vmax)(const vr64 x /*in*/, const vr64 y /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_vmin)(const vr64 x /*in*/, const vr64 y /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_sortupd_asc_vr)(unsigned int* a /*out*/, vr64* z /*out*/, const vr64 x /*in*/, const vr64 y /*in*/, immediate el_y /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_sortupd_des_vr)(unsigned int* a /*out*/, vr64* z /*out*/, const vr64 x /*in*/, const vr64 y /*in*/, immediate el_y /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_sortupd_asc_ar)(unsigned int* a /*inout*/, vr64* z /*out*/, const vr64 x /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_sortupd_des_ar)(unsigned int* a /*inout*/, vr64* z /*out*/, const vr64 x /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_vbool)(const vr64 x /*in*/, const vr64 y /*in*/, immediate op /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_align_up)(const unsigned int val /*in*/, const unsigned int option /*in*/);
CSTUB_EXTERN mir18 CSTUB_(_TIE_hmd1a_common_tie_mv_MIR)(const mir18 b /*in*/);
CSTUB_EXTERN ulsr32 CSTUB_(_TIE_hmd1a_common_tie_mv_ULSR)(const ulsr32 b /*in*/);
CSTUB_EXTERN cr64 CSTUB_(_TIE_hmd1a_common_tie_mv_CR)(const cr64 b /*in*/);
CSTUB_EXTERN fr32 CSTUB_(_TIE_hmd1a_common_tie_ld_FR)(const fr32 * addr /*in*/, immediate fimm /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_st_FR)(const fr32 fregin /*in*/, const fr32 * addr /*in*/, immediate fimm /*in*/);
CSTUB_EXTERN fr32 CSTUB_(_TIE_hmd1a_common_tie_ld_FR_idxR)(const fr32 * addr /*in*/, const unsigned int x /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_st_FR_idxR)(const fr32 fregin /*in*/, const fr32 * addr /*in*/, const unsigned int x /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_ld_FR_postI)(fr32* fregout /*out*/, const fr32 ** addr /*inout*/, immediate fimm /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_st_FR_postI)(const fr32 fregin /*in*/, fr32 ** addr /*inout*/, immediate fimm /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_ld_FR_postR)(fr32* fregout /*out*/, const fr32 ** addr /*inout*/, const unsigned int x /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_st_FR_postR)(const fr32 fregin /*in*/, fr32 ** addr /*inout*/, const unsigned int x /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_ld_VR)(const vr64 * addr /*in*/, immediate vimm /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_st_VR)(const vr64 vregin /*in*/, const vr64 * addr /*in*/, immediate vimm /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_ld_VR_idxR)(const vr64 * addr /*in*/, const unsigned int x /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_st_VR_idxR)(const vr64 vregin /*in*/, const vr64 * addr /*in*/, const unsigned int x /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_ld_VR_postI)(vr64* vregout /*out*/, const vr64 ** addr /*inout*/, immediate vimm /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_st_VR_postI)(const vr64 vregin /*in*/, vr64 ** addr /*inout*/, immediate vimm /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_ld_VR_postR)(vr64* vregout /*out*/, const vr64 ** addr /*inout*/, const unsigned int x /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_st_VR_postR)(const vr64 vregin /*in*/, vr64 ** addr /*inout*/, const unsigned int x /*in*/);
CSTUB_EXTERN fr32 CSTUB_(_TIE_hmd1a_common_tie_mv_FR)(const fr32 b /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_move_ar_fr)(const fr32 b /*in*/);
CSTUB_EXTERN fr32 CSTUB_(_TIE_hmd1a_common_tie_move_fr_ar)(const unsigned int b /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_mv_VR)(const vr64 b /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_move_ar_bbr)(const atbool b /*in*/);
CSTUB_EXTERN atbool CSTUB_(_TIE_hmd1a_common_tie_move_bbr_ar)(const unsigned int a /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_shift_from_bbr)(unsigned int* a /*inout*/, const atbool x /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_shift_to_bbr)(unsigned int* a /*inout*/, atbool* z /*out*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_ld_ar_x2)(unsigned int* a1_out /*out*/, unsigned int* a0_out /*out*/, const void * ptr /*in*/, immediate idx /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_st_ar_x2)(const void * ptr /*in*/, immediate idx /*in*/, const unsigned int a1_in /*in*/, const unsigned int a0_in /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_atbool_storei)(const atbool a /*in*/, const atbool * b /*in*/, immediate c /*in*/);
CSTUB_EXTERN atbool CSTUB_(_TIE_hmd1a_common_tie_atbool_loadi)(const atbool * b /*in*/, immediate c /*in*/);
CSTUB_EXTERN atbool CSTUB_(_TIE_hmd1a_common_tie_atbool_move)(const atbool b /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_ulsr32_storei)(const ulsr32 a /*in*/, const ulsr32 * b /*in*/, immediate c /*in*/);
CSTUB_EXTERN ulsr32 CSTUB_(_TIE_hmd1a_common_tie_ulsr32_loadi)(const ulsr32 * b /*in*/, immediate c /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_mir18_storei)(const mir18 a /*in*/, const mir18 * b /*in*/, immediate c /*in*/);
CSTUB_EXTERN mir18 CSTUB_(_TIE_hmd1a_common_tie_mir18_loadi)(const mir18 * b /*in*/, immediate c /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_cr64_storei)(const cr64 a /*in*/, const cr64 * b /*in*/, immediate c /*in*/);
CSTUB_EXTERN cr64 CSTUB_(_TIE_hmd1a_common_tie_cr64_loadi)(const cr64 * b /*in*/, immediate c /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_RUR_JammingBit)(void);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_WUR_JammingBit)(const unsigned int v /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_RUR_AccExtend_0)(void);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_WUR_AccExtend_0)(const unsigned int v /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_RUR_AccExtend_1)(void);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_WUR_AccExtend_1)(const unsigned int v /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_RUR_BB0_0)(void);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_WUR_BB0_0)(const unsigned int v /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_RUR_BB0_1)(void);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_WUR_BB0_1)(const unsigned int v /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_RUR_BB1_0)(void);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_WUR_BB1_0)(const unsigned int v /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_RUR_BB1_1)(void);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_WUR_BB1_1)(const unsigned int v /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_RUR_BB2_0)(void);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_WUR_BB2_0)(const unsigned int v /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_RUR_BB2_1)(void);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_WUR_BB2_1)(const unsigned int v /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_RUR_BB3_0)(void);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_WUR_BB3_0)(const unsigned int v /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_RUR_BB3_1)(void);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_WUR_BB3_1)(const unsigned int v /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_RUR_MvmAux)(void);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_WUR_MvmAux)(const unsigned int v /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_RUR_VB1_0)(void);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_WUR_VB1_0)(const unsigned int v /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_RUR_VB1_1)(void);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_WUR_VB1_1)(const unsigned int v /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_RUR_VB2_0)(void);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_WUR_VB2_0)(const unsigned int v /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_RUR_VB2_1)(void);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_WUR_VB2_1)(const unsigned int v /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_RUR_VB3_0)(void);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_WUR_VB3_0)(const unsigned int v /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_RUR_VB3_1)(void);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_WUR_VB3_1)(const unsigned int v /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_RUR_VB4_0)(void);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_WUR_VB4_0)(const unsigned int v /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_RUR_VB4_1)(void);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_WUR_VB4_1)(const unsigned int v /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_RUR_VB5_0)(void);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_WUR_VB5_0)(const unsigned int v /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_RUR_VB5_1)(void);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_WUR_VB5_1)(const unsigned int v /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_RUR_VB6_0)(void);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_WUR_VB6_0)(const unsigned int v /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_RUR_VB6_1)(void);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_WUR_VB6_1)(const unsigned int v /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_RUR_VB7_0)(void);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_WUR_VB7_0)(const unsigned int v /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_RUR_VB7_1)(void);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_WUR_VB7_1)(const unsigned int v /*in*/);
CSTUB_EXTERN mir18 CSTUB_(_TIE_hmd1a_common_tie_mir18_move)(const mir18 b /*in*/);
CSTUB_EXTERN ulsr32 CSTUB_(_TIE_hmd1a_common_tie_ulsr32_move)(const ulsr32 b /*in*/);
CSTUB_EXTERN cr64 CSTUB_(_TIE_hmd1a_common_tie_cr64_move)(const cr64 b /*in*/);
CSTUB_EXTERN fr32 CSTUB_(_TIE_hmd1a_common_tie_fr32_move)(const fr32 b /*in*/);
CSTUB_EXTERN fr32 CSTUB_(_TIE_hmd1a_common_tie_fr32_loadi)(const fr32 * p /*in*/, immediate o /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_fr32_storei)(const fr32 v /*in*/, const fr32 * p /*in*/, immediate o /*in*/);
CSTUB_EXTERN fr32 CSTUB_(_TIE_hmd1a_common_tie_fr32_loadx)(const fr32 * p /*in*/, const unsigned int x /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_fr32_storex)(const fr32 v /*in*/, const fr32 * p /*in*/, const unsigned int x /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_fr32_loadip)(fr32* v /*out*/, const fr32 ** p /*inout*/, immediate o /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_fr32_storeip)(const fr32 v /*in*/, fr32 ** p /*inout*/, immediate o /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_fr32_loadxp)(fr32* v /*out*/, const fr32 ** p /*inout*/, const unsigned int x /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_fr32_storexp)(const fr32 v /*in*/, fr32 ** p /*inout*/, const unsigned int x /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_hmd1a_common_tie_fr32_rtor_int32)(const fr32 b /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_fr32_rtor_uint32)(const fr32 b /*in*/);
CSTUB_EXTERN fr32 CSTUB_(_TIE_hmd1a_common_tie_int32_rtor_fr32)(const int a /*in*/);
CSTUB_EXTERN fr32 CSTUB_(_TIE_hmd1a_common_tie_uint32_rtor_fr32)(const unsigned int a /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_vr64_move)(const vr64 b /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_vr64_loadi)(const vr64 * p /*in*/, immediate o /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_vr64_storei)(const vr64 v /*in*/, const vr64 * p /*in*/, immediate o /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_vr64_loadx)(const vr64 * p /*in*/, const unsigned int x /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_vr64_storex)(const vr64 v /*in*/, const vr64 * p /*in*/, const unsigned int x /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_vr64_loadip)(vr64* v /*out*/, const vr64 ** p /*inout*/, immediate o /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_vr64_storeip)(const vr64 v /*in*/, vr64 ** p /*inout*/, immediate o /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_vr64_loadxp)(vr64* v /*out*/, const vr64 ** p /*inout*/, const unsigned int x /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_vr64_storexp)(const vr64 v /*in*/, vr64 ** p /*inout*/, const unsigned int x /*in*/);
CSTUB_EXTERN fr32 CSTUB_(_TIE_hmd1a_common_tie_get_VRH)(const vr64 b /*in*/);
CSTUB_EXTERN fr32 CSTUB_(_TIE_hmd1a_common_tie_get_VRL)(const vr64 b /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_set_VRH)(vr64* a /*inout*/, const fr32 b /*in*/);
CSTUB_EXTERN void CSTUB_(_TIE_hmd1a_common_tie_set_VRL)(vr64* a /*inout*/, const fr32 b /*in*/);
CSTUB_EXTERN vr64 CSTUB_(_TIE_hmd1a_common_tie_vr64_pair)(const fr32 hi /*in*/, const fr32 lo /*in*/);
CSTUB_EXTERN int CSTUB_(_TIE_hmd1a_common_tie_atbool_rtor_int32)(const atbool b /*in*/);
CSTUB_EXTERN unsigned int CSTUB_(_TIE_hmd1a_common_tie_atbool_rtor_uint32)(const atbool b /*in*/);
CSTUB_EXTERN atbool CSTUB_(_TIE_hmd1a_common_tie_int32_rtor_atbool)(const int a /*in*/);
CSTUB_EXTERN atbool CSTUB_(_TIE_hmd1a_common_tie_uint32_rtor_atbool)(const unsigned int a /*in*/);

CSTUB_EXTERN unsigned CSTUB_(_TIE_xt_core_RSR_SAR)(void);
CSTUB_EXTERN void CSTUB_(_TIE_xt_core_WSR_SAR)(unsigned t);
CSTUB_EXTERN void CSTUB_(_TIE_xt_core_XSR_SAR)(unsigned* t /*inout*/);
/* Proto macros */
#define AE_ZALIGN64() \
	CSTUB_(_TIE_xt_hifi2_AE_ZALIGN64)()
#define AE_LALIGN64_I(a, i64) \
	CSTUB_(_TIE_xt_hifi2_AE_LALIGN64_I)(a, i64)
#define AE_SALIGN64_I(su, a, i64) \
	CSTUB_(_TIE_xt_hifi2_AE_SALIGN64_I)(su, a, i64)
#define AE_MOVALIGN(v) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVALIGN)(v)
#define AE_ADDBRBA32(ab, ai) \
	CSTUB_(_TIE_xt_hifi2_AE_ADDBRBA32)(ab, ai)
#define AE_SHA32(ai) \
	CSTUB_(_TIE_xt_hifi2_AE_SHA32)(ai)
#define AE_VLDSHT(ar_t) \
	CSTUB_(_TIE_xt_hifi2_AE_VLDSHT)(ar_t)
#define XT_NOP_N() \
	CSTUB_(_TIE_xt_density_NOP_N)()
#define XT_NOP() \
	CSTUB_(_TIE_xt_core_NOP)()
#define XT_DEPBITS(art, ars, low_depbits, lngth_depbits) \
	CSTUB_(_TIE_xt_core_DEPBITS)(&art, ars, low_depbits, lngth_depbits)
#define XT_XORB(bs, bt) \
	CSTUB_(_TIE_xt_booleans_XORB)(bs, bt)
#define XT_ORBC(bs, bt) \
	CSTUB_(_TIE_xt_booleans_ORBC)(bs, bt)
#define XT_ORB(bs, bt) \
	CSTUB_(_TIE_xt_booleans_ORB)(bs, bt)
#define XT_ANDBC(bs, bt) \
	CSTUB_(_TIE_xt_booleans_ANDBC)(bs, bt)
#define XT_ANDB(bs, bt) \
	CSTUB_(_TIE_xt_booleans_ANDB)(bs, bt)
#define XT_ALL4(bs4) \
	CSTUB_(_TIE_xt_booleans_ALL4)(bs4)
#define XT_ANY4(bs4) \
	CSTUB_(_TIE_xt_booleans_ANY4)(bs4)
#define XT_ALL8(bs8) \
	CSTUB_(_TIE_xt_booleans_ALL8)(bs8)
#define XT_ANY8(bs8) \
	CSTUB_(_TIE_xt_booleans_ANY8)(bs8)
#define XT_MOVT(arr, ars, bt) \
	CSTUB_(_TIE_xt_booleans_MOVT)(&arr, ars, bt)
#define XT_MOVF(arr, ars, bt) \
	CSTUB_(_TIE_xt_booleans_MOVF)(&arr, ars, bt)
#define READ_IMPWIRE() \
	CSTUB_(_TIE_xt_ioports_READ_IMPWIRE)()
#define SETB_EXPSTATE(bitindex) \
	CSTUB_(_TIE_xt_ioports_SETB_EXPSTATE)(bitindex)
#define CLRB_EXPSTATE(bitindex) \
	CSTUB_(_TIE_xt_ioports_CLRB_EXPSTATE)(bitindex)
#define WRMSK_EXPSTATE(art, ars) \
	CSTUB_(_TIE_xt_ioports_WRMSK_EXPSTATE)(art, ars)
#define XT_L32I_N(p, i) \
	CSTUB_(_TIE_xt_density_L32I_N)(p, i)
#define XT_S32I_N(t, p, i) \
	CSTUB_(_TIE_xt_density_S32I_N)(t, p, i)
#define XT_ADD_N(s, t) \
	CSTUB_(_TIE_xt_density_ADD_N)(s, t)
#define XT_ADDI_N(s, i) \
	CSTUB_(_TIE_xt_density_ADDI_N)(s, i)
#define XT_MOV_N(s) \
	CSTUB_(_TIE_xt_density_MOV_N)(s)
#define XT_MOVI_N(i) \
	CSTUB_(_TIE_xt_density_MOVI_N)(i)
#define XT_uint32_loadi(p, o) \
	CSTUB_(_TIE_xt_core_uint32_loadi)(p, o)
#define XT_uint32_storei(c, p, o) \
	CSTUB_(_TIE_xt_core_uint32_storei)(c, p, o)
#define XT_uint32_move(b) \
	CSTUB_(_TIE_xt_core_uint32_move)(b)
#define XT_ADDI(s, i) \
	CSTUB_(_TIE_xt_core_ADDI)(s, i)
#define XT_OR(s, t) \
	CSTUB_(_TIE_xt_core_OR)(s, t)
#define XT_L32I(p, i) \
	CSTUB_(_TIE_xt_core_L32I)(p, i)
#define XT_S32I(r, p, i) \
	CSTUB_(_TIE_xt_core_S32I)(r, p, i)
#define XT_S32NB(r, p, i) \
	CSTUB_(_TIE_xt_core_S32NB)(r, p, i)
#define XT_L8UI(p, i) \
	CSTUB_(_TIE_xt_core_L8UI)(p, i)
#define XT_S8I(r, p, i) \
	CSTUB_(_TIE_xt_core_S8I)(r, p, i)
#define XT_L16UI(p, i) \
	CSTUB_(_TIE_xt_core_L16UI)(p, i)
#define XT_L16SI(p, i) \
	CSTUB_(_TIE_xt_core_L16SI)(p, i)
#define XT_S16I(r, p, i) \
	CSTUB_(_TIE_xt_core_S16I)(r, p, i)
#define XT_ADDMI(s, i) \
	CSTUB_(_TIE_xt_core_ADDMI)(s, i)
#define XT_ADD(s, t) \
	CSTUB_(_TIE_xt_core_ADD)(s, t)
#define XT_ADDX2(s, t) \
	CSTUB_(_TIE_xt_core_ADDX2)(s, t)
#define XT_ADDX4(s, t) \
	CSTUB_(_TIE_xt_core_ADDX4)(s, t)
#define XT_ADDX8(s, t) \
	CSTUB_(_TIE_xt_core_ADDX8)(s, t)
#define XT_SUB(s, t) \
	CSTUB_(_TIE_xt_core_SUB)(s, t)
#define XT_SUBX2(s, t) \
	CSTUB_(_TIE_xt_core_SUBX2)(s, t)
#define XT_SUBX4(s, t) \
	CSTUB_(_TIE_xt_core_SUBX4)(s, t)
#define XT_SUBX8(s, t) \
	CSTUB_(_TIE_xt_core_SUBX8)(s, t)
#define XT_SALT(s, t) \
	CSTUB_(_TIE_xt_core_SALT)(s, t)
#define XT_SALTU(s, t) \
	CSTUB_(_TIE_xt_core_SALTU)(s, t)
#define XT_AND(s, t) \
	CSTUB_(_TIE_xt_core_AND)(s, t)
#define XT_XOR(s, t) \
	CSTUB_(_TIE_xt_core_XOR)(s, t)
#define XT_EXTUI(t, i, o) \
	CSTUB_(_TIE_xt_core_EXTUI)(t, i, o)
#define XT_MOVI(i) \
	CSTUB_(_TIE_xt_core_MOVI)(i)
#define XT_MOVEQZ(r, s, t) \
	CSTUB_(_TIE_xt_core_MOVEQZ)(&r, s, t)
#define XT_MOVNEZ(r, s, t) \
	CSTUB_(_TIE_xt_core_MOVNEZ)(&r, s, t)
#define XT_MOVLTZ(r, s, t) \
	CSTUB_(_TIE_xt_core_MOVLTZ)(&r, s, t)
#define XT_MOVGEZ(r, s, t) \
	CSTUB_(_TIE_xt_core_MOVGEZ)(&r, s, t)
#define XT_NEG(t) \
	CSTUB_(_TIE_xt_core_NEG)(t)
#define XT_ABS(t) \
	CSTUB_(_TIE_xt_core_ABS)(t)
#define XT_SSR(s) \
	CSTUB_(_TIE_xt_core_SSR)(s)
#define XT_SSL(s) \
	CSTUB_(_TIE_xt_core_SSL)(s)
#define XT_SSA8L(s) \
	CSTUB_(_TIE_xt_core_SSA8L)(s)
#define XT_SSA8B(s) \
	CSTUB_(_TIE_xt_core_SSA8B)(s)
#define XT_SSAI(i) \
	CSTUB_(_TIE_xt_core_SSAI)(i)
#define XT_SLL(s) \
	CSTUB_(_TIE_xt_core_SLL)(s)
#define XT_SRC(s, t) \
	CSTUB_(_TIE_xt_core_SRC)(s, t)
#define XT_SRL(t) \
	CSTUB_(_TIE_xt_core_SRL)(t)
#define XT_SRA(t) \
	CSTUB_(_TIE_xt_core_SRA)(t)
#define XT_SLLI(s, i) \
	CSTUB_(_TIE_xt_core_SLLI)(s, i)
#define XT_SRAI(t, i) \
	CSTUB_(_TIE_xt_core_SRAI)(t, i)
#define XT_SRLI(t, i) \
	CSTUB_(_TIE_xt_core_SRLI)(t, i)
#define XT_SSAI_SRC(src1, src2, amount) \
	CSTUB_(_TIE_xt_core_SSAI_SRC)(src1, src2, amount)
#define XT_SSR_SRC(src1, src2, amount) \
	CSTUB_(_TIE_xt_core_SSR_SRC)(src1, src2, amount)
#define XT_SSR_SRA(src, amount) \
	CSTUB_(_TIE_xt_core_SSR_SRA)(src, amount)
#define XT_SSR_SRL(src, amount) \
	CSTUB_(_TIE_xt_core_SSR_SRL)(src, amount)
#define XT_SSL_SLL(src, amount) \
	CSTUB_(_TIE_xt_core_SSL_SLL)(src, amount)
#define XT_CLAMPS(s, i) \
	CSTUB_(_TIE_xt_misc_CLAMPS)(s, i)
#define XT_MIN(s, t) \
	CSTUB_(_TIE_xt_misc_MIN)(s, t)
#define XT_MAX(s, t) \
	CSTUB_(_TIE_xt_misc_MAX)(s, t)
#define XT_MINU(s, t) \
	CSTUB_(_TIE_xt_misc_MINU)(s, t)
#define XT_MAXU(s, t) \
	CSTUB_(_TIE_xt_misc_MAXU)(s, t)
#define XT_NSA(s) \
	CSTUB_(_TIE_xt_misc_NSA)(s)
#define XT_NSAU(s) \
	CSTUB_(_TIE_xt_misc_NSAU)(s)
#define XT_SEXT(s, i) \
	CSTUB_(_TIE_xt_misc_SEXT)(s, i)
#define RUR_AE_OVF_SAR() \
	CSTUB_(_TIE_xt_hifi2_RUR_AE_OVF_SAR)()
#define WUR_AE_OVF_SAR(v) \
	CSTUB_(_TIE_xt_hifi2_WUR_AE_OVF_SAR)(v)
#define RUR_AE_BITHEAD() \
	CSTUB_(_TIE_xt_hifi2_RUR_AE_BITHEAD)()
#define WUR_AE_BITHEAD(v) \
	CSTUB_(_TIE_xt_hifi2_WUR_AE_BITHEAD)(v)
#define RUR_AE_TS_FTS_BU_BP() \
	CSTUB_(_TIE_xt_hifi2_RUR_AE_TS_FTS_BU_BP)()
#define WUR_AE_TS_FTS_BU_BP(v) \
	CSTUB_(_TIE_xt_hifi2_WUR_AE_TS_FTS_BU_BP)(v)
#define RUR_AE_CW_SD_NO() \
	CSTUB_(_TIE_xt_hifi2_RUR_AE_CW_SD_NO)()
#define WUR_AE_CW_SD_NO(v) \
	CSTUB_(_TIE_xt_hifi2_WUR_AE_CW_SD_NO)(v)
#define RUR_AE_CBEGIN0() \
	CSTUB_(_TIE_xt_hifi2_RUR_AE_CBEGIN0)()
#define WUR_AE_CBEGIN0(v) \
	CSTUB_(_TIE_xt_hifi2_WUR_AE_CBEGIN0)(v)
#define RUR_AE_CEND0() \
	CSTUB_(_TIE_xt_hifi2_RUR_AE_CEND0)()
#define WUR_AE_CEND0(v) \
	CSTUB_(_TIE_xt_hifi2_WUR_AE_CEND0)(v)
#define RAE_OVERFLOW() \
	CSTUB_(_TIE_xt_hifi2_RAE_OVERFLOW)()
#define WAE_OVERFLOW(a) \
	CSTUB_(_TIE_xt_hifi2_WAE_OVERFLOW)(a)
#define RUR_AE_OVERFLOW() \
	CSTUB_(_TIE_xt_hifi2_RUR_AE_OVERFLOW)()
#define WUR_AE_OVERFLOW(a) \
	CSTUB_(_TIE_xt_hifi2_WUR_AE_OVERFLOW)(a)
#define RAE_SAR() \
	CSTUB_(_TIE_xt_hifi2_RAE_SAR)()
#define WAE_SAR(a) \
	CSTUB_(_TIE_xt_hifi2_WAE_SAR)(a)
#define RUR_AE_SAR() \
	CSTUB_(_TIE_xt_hifi2_RUR_AE_SAR)()
#define WUR_AE_SAR(a) \
	CSTUB_(_TIE_xt_hifi2_WUR_AE_SAR)(a)
#define RAE_BITPTR() \
	CSTUB_(_TIE_xt_hifi2_RAE_BITPTR)()
#define WAE_BITPTR(a) \
	CSTUB_(_TIE_xt_hifi2_WAE_BITPTR)(a)
#define RUR_AE_BITPTR() \
	CSTUB_(_TIE_xt_hifi2_RUR_AE_BITPTR)()
#define WUR_AE_BITPTR(a) \
	CSTUB_(_TIE_xt_hifi2_WUR_AE_BITPTR)(a)
#define RAE_BITSUSED() \
	CSTUB_(_TIE_xt_hifi2_RAE_BITSUSED)()
#define WAE_BITSUSED(a) \
	CSTUB_(_TIE_xt_hifi2_WAE_BITSUSED)(a)
#define RUR_AE_BITSUSED() \
	CSTUB_(_TIE_xt_hifi2_RUR_AE_BITSUSED)()
#define WUR_AE_BITSUSED(a) \
	CSTUB_(_TIE_xt_hifi2_WUR_AE_BITSUSED)(a)
#define RAE_TABLESIZE() \
	CSTUB_(_TIE_xt_hifi2_RAE_TABLESIZE)()
#define WAE_TABLESIZE(a) \
	CSTUB_(_TIE_xt_hifi2_WAE_TABLESIZE)(a)
#define RUR_AE_TABLESIZE() \
	CSTUB_(_TIE_xt_hifi2_RUR_AE_TABLESIZE)()
#define WUR_AE_TABLESIZE(a) \
	CSTUB_(_TIE_xt_hifi2_WUR_AE_TABLESIZE)(a)
#define RAE_FIRST_TS() \
	CSTUB_(_TIE_xt_hifi2_RAE_FIRST_TS)()
#define WAE_FIRST_TS(a) \
	CSTUB_(_TIE_xt_hifi2_WAE_FIRST_TS)(a)
#define RUR_AE_FIRST_TS() \
	CSTUB_(_TIE_xt_hifi2_RUR_AE_FIRST_TS)()
#define WUR_AE_FIRST_TS(a) \
	CSTUB_(_TIE_xt_hifi2_WUR_AE_FIRST_TS)(a)
#define RAE_NEXTOFFSET() \
	CSTUB_(_TIE_xt_hifi2_RAE_NEXTOFFSET)()
#define WAE_NEXTOFFSET(a) \
	CSTUB_(_TIE_xt_hifi2_WAE_NEXTOFFSET)(a)
#define RUR_AE_NEXTOFFSET() \
	CSTUB_(_TIE_xt_hifi2_RUR_AE_NEXTOFFSET)()
#define WUR_AE_NEXTOFFSET(a) \
	CSTUB_(_TIE_xt_hifi2_WUR_AE_NEXTOFFSET)(a)
#define RAE_SEARCHDONE() \
	CSTUB_(_TIE_xt_hifi2_RAE_SEARCHDONE)()
#define WAE_SEARCHDONE(a) \
	CSTUB_(_TIE_xt_hifi2_WAE_SEARCHDONE)(a)
#define RUR_AE_SEARCHDONE() \
	CSTUB_(_TIE_xt_hifi2_RUR_AE_SEARCHDONE)()
#define WUR_AE_SEARCHDONE(a) \
	CSTUB_(_TIE_xt_hifi2_WUR_AE_SEARCHDONE)(a)
#define RAE_CWRAP() \
	CSTUB_(_TIE_xt_hifi2_RAE_CWRAP)()
#define WAE_CWRAP(a) \
	CSTUB_(_TIE_xt_hifi2_WAE_CWRAP)(a)
#define RUR_AE_CWRAP() \
	CSTUB_(_TIE_xt_hifi2_RUR_AE_CWRAP)()
#define WUR_AE_CWRAP(a) \
	CSTUB_(_TIE_xt_hifi2_WUR_AE_CWRAP)(a)
#define AE_GETCBEGIN0() \
	CSTUB_(_TIE_xt_hifi2_AE_GETCBEGIN0)()
#define AE_SETCBEGIN0(a) \
	CSTUB_(_TIE_xt_hifi2_AE_SETCBEGIN0)(a)
#define AE_GETCEND0() \
	CSTUB_(_TIE_xt_hifi2_AE_GETCEND0)()
#define AE_SETCEND0(a) \
	CSTUB_(_TIE_xt_hifi2_AE_SETCEND0)(a)
#define AE_L16M_XC(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L16M_XC)(&d, (const ae_p16s **)&(a), off)
#define AE_LP16F_C(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_LP16F_C)(&d, (const ae_p16s **)&(a), off)
#define AE_L16M_I(a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L16M_I)(a, off)
#define AE_LP16F_I(a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_LP16F_I)(a, off)
#define ae_p16s_loadi(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p16s_loadi)(a, off)
#define AE_L16M_IU(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L16M_IU)(&d, (const ae_p16s **)&(a), off)
#define AE_LP16F_IU(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_LP16F_IU)(&d, (const ae_p16s **)&(a), off)
#define ae_p16s_loadiu(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p16s_loadiu)(&d, (const ae_p16s **)&(a), off)
#define AE_L16M_X(a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L16M_X)(a, off)
#define AE_LP16F_X(a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_LP16F_X)(a, off)
#define ae_p16s_loadx(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p16s_loadx)(a, off)
#define AE_L16M_XU(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L16M_XU)(&d, (const ae_p16s **)&(a), off)
#define AE_LP16F_XU(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_LP16F_XU)(&d, (const ae_p16s **)&(a), off)
#define ae_p16s_loadxu(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p16s_loadxu)(&d, (const ae_p16s **)&(a), off)
#define AE_L16_XC(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L16_XC)(&d, (const ae_int16 **)&(a), off)
#define AE_L16_I(a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L16_I)(a, off)
#define ae_int16_loadi(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int16_loadi)(a, off)
#define ae_f16_loadi(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f16_loadi)(a, off)
#define AE_L16_IP(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L16_IP)(&d, (const ae_int16 **)&(a), off)
#define ae_int16_loadip(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int16_loadip)(&d, (const ae_int16 **)&(a), off)
#define ae_f16_loadip(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f16_loadip)(&d, (const ae_f16 **)&(a), off)
#define AE_L16_X(a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L16_X)(a, off)
#define ae_int16_loadx(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int16_loadx)(a, off)
#define ae_f16_loadx(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f16_loadx)(a, off)
#define AE_L16_XP(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L16_XP)(&d, (const ae_int16 **)&(a), off)
#define ae_int16_loadxp(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int16_loadxp)(&d, (const ae_int16 **)&(a), off)
#define ae_f16_loadxp(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f16_loadxp)(&d, (const ae_f16 **)&(a), off)
#define AE_L32F24_XC(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L32F24_XC)(&d, (const ae_f24 **)&(a), off)
#define AE_LP24F_C(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_LP24F_C)(&d, (const ae_p24f **)&(a), off)
#define AE_L32F24_I(a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L32F24_I)(a, off)
#define AE_LP24F_I(a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_LP24F_I)(a, off)
#define ae_f24_loadi(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f24_loadi)(a, off)
#define ae_p24f_loadi(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p24f_loadi)(a, off)
#define AE_L32F24_IP(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L32F24_IP)(&d, (const ae_f24 **)&(a), off)
#define AE_LP24F_IU(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_LP24F_IU)(&d, (const ae_p24f **)&(a), off)
#define ae_f24_loadip(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f24_loadip)(&d, (const ae_f24 **)&(a), off)
#define ae_p24f_loadip(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p24f_loadip)(&d, (const ae_p24f **)&(a), off)
#define AE_L32F24_X(a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L32F24_X)(a, off)
#define AE_LP24F_X(a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_LP24F_X)(a, off)
#define ae_f24_loadx(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f24_loadx)(a, off)
#define ae_p24f_loadx(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p24f_loadx)(a, off)
#define AE_L32F24_XP(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L32F24_XP)(&d, (const ae_f24 **)&(a), off)
#define AE_LP24F_XU(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_LP24F_XU)(&d, (const ae_p24f **)&(a), off)
#define ae_f24_loadxp(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f24_loadxp)(&d, (const ae_f24 **)&(a), off)
#define ae_p24f_loadxp(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p24f_loadxp)(&d, (const ae_p24f **)&(a), off)
#define AE_L32_XC(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L32_XC)(&d, (const ae_int32 **)&(a), off)
#define AE_LP24_C(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_LP24_C)(&d, (const ae_p24s **)&(a), off)
#define AE_L32_I(a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L32_I)(a, off)
#define ae_int32_loadi(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int32_loadi)(a, off)
#define ae_f32_loadi(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f32_loadi)(a, off)
#define AE_LP24_I(a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_LP24_I)(a, off)
#define ae_int24_loadi(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int24_loadi)(a, off)
#define ae_p24s_loadi(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p24s_loadi)(a, off)
#define AE_L32_IP(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L32_IP)(&d, (const ae_int32 **)&(a), off)
#define ae_int32_loadip(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int32_loadip)(&d, (const ae_int32 **)&(a), off)
#define ae_f32_loadip(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f32_loadip)(&d, (const ae_f32 **)&(a), off)
#define AE_LP24_IU(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_LP24_IU)(&d, (const ae_p24s **)&(a), off)
#define ae_int24_loadip(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int24_loadip)(&d, (const ae_int24 **)&(a), off)
#define ae_p24s_loadip(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p24s_loadip)(&d, (const ae_p24s **)&(a), off)
#define AE_L32_X(a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L32_X)(a, off)
#define ae_int32_loadx(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int32_loadx)(a, off)
#define ae_f32_loadx(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f32_loadx)(a, off)
#define AE_LP24_X(a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_LP24_X)(a, off)
#define ae_int24_loadx(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int24_loadx)(a, off)
#define ae_p24s_loadx(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p24s_loadx)(a, off)
#define AE_L32_XP(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L32_XP)(&d, (const ae_int32 **)&(a), off)
#define ae_int32_loadxp(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int32_loadxp)(&d, (const ae_int32 **)&(a), off)
#define ae_f32_loadxp(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f32_loadxp)(&d, (const ae_f32 **)&(a), off)
#define AE_LP24_XU(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_LP24_XU)(&d, (const ae_p24s **)&(a), off)
#define ae_int24_loadxp(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int24_loadxp)(&d, (const ae_int24 **)&(a), off)
#define ae_p24s_loadxp(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p24s_loadxp)(&d, (const ae_p24s **)&(a), off)
#define AE_L32M_XC(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L32M_XC)(&d, (const ae_q32s **)&(a), off)
#define AE_LQ32F_C(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_LQ32F_C)(&d, (const ae_q32s **)&(a), off)
#define AE_L32M_I(a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L32M_I)(a, off)
#define AE_LQ32F_I(a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_LQ32F_I)(a, off)
#define ae_q32s_loadi(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_q32s_loadi)(a, off)
#define AE_L32M_IU(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L32M_IU)(&d, (const ae_q32s **)&(a), off)
#define AE_LQ32F_IU(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_LQ32F_IU)(&d, (const ae_q32s **)&(a), off)
#define ae_q32s_loadiu(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_q32s_loadiu)(&d, (const ae_q32s **)&(a), off)
#define AE_L32M_X(a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L32M_X)(a, off)
#define AE_LQ32F_X(a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_LQ32F_X)(a, off)
#define ae_q32s_loadx(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_q32s_loadx)(a, off)
#define AE_L32M_XU(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L32M_XU)(&d, (const ae_q32s **)&(a), off)
#define AE_LQ32F_XU(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_LQ32F_XU)(&d, (const ae_q32s **)&(a), off)
#define ae_q32s_loadxu(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_q32s_loadxu)(&d, (const ae_q32s **)&(a), off)
#define AE_L16X2M_XC(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L16X2M_XC)(&d, (const ae_p16x2s **)&(a), off)
#define AE_LP16X2F_C(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_LP16X2F_C)(&d, (const ae_p16x2s **)&(a), off)
#define AE_L16X2M_I(a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L16X2M_I)(a, off)
#define AE_LP16X2F_I(a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_LP16X2F_I)(a, off)
#define ae_p16x2s_loadi(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p16x2s_loadi)(a, off)
#define AE_L16X2M_IU(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L16X2M_IU)(&d, (const ae_p16x2s **)&(a), off)
#define AE_LP16X2F_IU(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_LP16X2F_IU)(&d, (const ae_p16x2s **)&(a), off)
#define ae_p16x2s_loadiu(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p16x2s_loadiu)(&d, (const ae_p16x2s **)&(a), off)
#define AE_L16X2M_X(a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L16X2M_X)(a, off)
#define AE_LP16X2F_X(a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_LP16X2F_X)(a, off)
#define ae_p16x2s_loadx(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p16x2s_loadx)(a, off)
#define AE_L16X2M_XU(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L16X2M_XU)(&d, (const ae_p16x2s **)&(a), off)
#define AE_LP16X2F_XU(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_LP16X2F_XU)(&d, (const ae_p16x2s **)&(a), off)
#define ae_p16x2s_loadxu(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p16x2s_loadxu)(&d, (const ae_p16x2s **)&(a), off)
#define AE_L32X2F24_XC(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L32X2F24_XC)(&d, (const ae_f24x2 **)&(a), off)
#define AE_LP24X2F_C(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_LP24X2F_C)(&d, (const ae_p24x2f **)&(a), off)
#define AE_L32X2F24_I(a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L32X2F24_I)(a, off)
#define AE_LP24X2F_I(a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_LP24X2F_I)(a, off)
#define ae_f24x2_loadi(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f24x2_loadi)(a, off)
#define ae_p24x2f_loadi(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2f_loadi)(a, off)
#define AE_L32X2F24_IP(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L32X2F24_IP)(&d, (const ae_f24x2 **)&(a), off)
#define AE_LP24X2F_IU(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_LP24X2F_IU)(&d, (const ae_p24x2f **)&(a), off)
#define ae_f24x2_loadip(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f24x2_loadip)(&d, (const ae_f24x2 **)&(a), off)
#define ae_p24x2f_loadip(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2f_loadip)(&d, (const ae_p24x2f **)&(a), off)
#define AE_L32X2F24_RIP(d, a) \
	CSTUB_(_TIE_xt_hifi2_AE_L32X2F24_RIP)(&d, (const ae_f24x2 **)&(a))
#define AE_L32X2F24_RIC(d, a) \
	CSTUB_(_TIE_xt_hifi2_AE_L32X2F24_RIC)(&d, (const ae_f24x2 **)&(a))
#define AE_L32X2F24_X(a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L32X2F24_X)(a, off)
#define AE_LP24X2F_X(a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_LP24X2F_X)(a, off)
#define ae_f24x2_loadx(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f24x2_loadx)(a, off)
#define ae_p24x2f_loadx(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2f_loadx)(a, off)
#define AE_L32X2F24_XP(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L32X2F24_XP)(&d, (const ae_f24x2 **)&(a), off)
#define AE_LP24X2F_XU(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_LP24X2F_XU)(&d, (const ae_p24x2f **)&(a), off)
#define ae_f24x2_loadxp(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f24x2_loadxp)(&d, (const ae_f24x2 **)&(a), off)
#define ae_p24x2f_loadxp(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2f_loadxp)(&d, (const ae_p24x2f **)&(a), off)
#define AE_L32X2_XC(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L32X2_XC)(&d, (const ae_int32x2 **)&(a), off)
#define AE_LP24X2_C(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_LP24X2_C)(&d, (const ae_p24x2s **)&(a), off)
#define AE_L32X2_I(a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L32X2_I)(a, off)
#define ae_int32x2_loadi(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x2_loadi)(a, off)
#define ae_f32x2_loadi(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f32x2_loadi)(a, off)
#define AE_LP24X2_I(a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_LP24X2_I)(a, off)
#define ae_int24x2_loadi(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int24x2_loadi)(a, off)
#define ae_p24x2s_loadi(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2s_loadi)(a, off)
#define AE_L32X2_IP(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L32X2_IP)(&d, (const ae_int32x2 **)&(a), off)
#define ae_int32x2_loadip(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x2_loadip)(&d, (const ae_int32x2 **)&(a), off)
#define ae_f32x2_loadip(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f32x2_loadip)(&d, (const ae_f32x2 **)&(a), off)
#define AE_LP24X2_IU(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_LP24X2_IU)(&d, (const ae_p24x2s **)&(a), off)
#define ae_int24x2_loadip(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int24x2_loadip)(&d, (const ae_int24x2 **)&(a), off)
#define ae_p24x2s_loadip(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2s_loadip)(&d, (const ae_p24x2s **)&(a), off)
#define AE_L32X2_RIP(d, a) \
	CSTUB_(_TIE_xt_hifi2_AE_L32X2_RIP)(&d, (const ae_int32x2 **)&(a))
#define AE_L32X2_RIC(d, a) \
	CSTUB_(_TIE_xt_hifi2_AE_L32X2_RIC)(&d, (const ae_int32x2 **)&(a))
#define AE_L32X2_X(a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L32X2_X)(a, off)
#define ae_int32x2_loadx(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x2_loadx)(a, off)
#define ae_f32x2_loadx(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f32x2_loadx)(a, off)
#define AE_LP24X2_X(a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_LP24X2_X)(a, off)
#define ae_int24x2_loadx(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int24x2_loadx)(a, off)
#define ae_p24x2s_loadx(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2s_loadx)(a, off)
#define AE_L32X2_XP(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L32X2_XP)(&d, (const ae_int32x2 **)&(a), off)
#define ae_int32x2_loadxp(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x2_loadxp)(&d, (const ae_int32x2 **)&(a), off)
#define ae_f32x2_loadxp(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f32x2_loadxp)(&d, (const ae_f32x2 **)&(a), off)
#define AE_LP24X2_XU(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_LP24X2_XU)(&d, (const ae_p24x2s **)&(a), off)
#define ae_int24x2_loadxp(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int24x2_loadxp)(&d, (const ae_int24x2 **)&(a), off)
#define ae_p24x2s_loadxp(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2s_loadxp)(&d, (const ae_p24x2s **)&(a), off)
#define AE_L16X4_XC(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L16X4_XC)(&d, (const ae_int16x4 **)&(a), off)
#define AE_L16X4_I(a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L16X4_I)(a, off)
#define ae_int16x4_loadi(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int16x4_loadi)(a, off)
#define ae_f16x4_loadi(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f16x4_loadi)(a, off)
#define AE_L16X4_IP(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L16X4_IP)(&d, (const ae_int16x4 **)&(a), off)
#define ae_int16x4_loadip(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int16x4_loadip)(&d, (const ae_int16x4 **)&(a), off)
#define ae_f16x4_loadip(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f16x4_loadip)(&d, (const ae_f16x4 **)&(a), off)
#define AE_L16X4_RIP(d, a) \
	CSTUB_(_TIE_xt_hifi2_AE_L16X4_RIP)(&d, (const ae_int16x4 **)&(a))
#define AE_L16X4_RIC(d, a) \
	CSTUB_(_TIE_xt_hifi2_AE_L16X4_RIC)(&d, (const ae_int16x4 **)&(a))
#define AE_L16X4_X(a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L16X4_X)(a, off)
#define ae_int16x4_loadx(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int16x4_loadx)(a, off)
#define ae_f16x4_loadx(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f16x4_loadx)(a, off)
#define AE_L16X4_XP(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L16X4_XP)(&d, (const ae_int16x4 **)&(a), off)
#define ae_int16x4_loadxp(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int16x4_loadxp)(&d, (const ae_int16x4 **)&(a), off)
#define ae_f16x4_loadxp(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f16x4_loadxp)(&d, (const ae_f16x4 **)&(a), off)
#define AE_L64_XC(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L64_XC)(&d, (const ae_int64 **)&(a), off)
#define AE_LQ56_C(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_LQ56_C)(&d, (const ae_q56s **)&(a), off)
#define AE_L64_I(a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L64_I)(a, off)
#define ae_int64_loadi(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int64_loadi)(a, off)
#define ae_f64_loadi(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f64_loadi)(a, off)
#define AE_LQ56_I(a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_LQ56_I)(a, off)
#define ae_q56s_loadi(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_q56s_loadi)(a, off)
#define AE_L64_IP(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L64_IP)(&d, (const ae_int64 **)&(a), off)
#define ae_int64_loadip(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int64_loadip)(&d, (const ae_int64 **)&(a), off)
#define ae_f64_loadip(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f64_loadip)(&d, (const ae_f64 **)&(a), off)
#define AE_LQ56_IU(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_LQ56_IU)(&d, (const ae_q56s **)&(a), off)
#define ae_q56s_loadip(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_q56s_loadip)(&d, (const ae_q56s **)&(a), off)
#define AE_L64_X(a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L64_X)(a, off)
#define ae_int64_loadx(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int64_loadx)(a, off)
#define ae_f64_loadx(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f64_loadx)(a, off)
#define AE_LQ56_X(a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_LQ56_X)(a, off)
#define ae_q56s_loadx(a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_q56s_loadx)(a, off)
#define AE_L64_XP(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_L64_XP)(&d, (const ae_int64 **)&(a), off)
#define ae_int64_loadxp(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int64_loadxp)(&d, (const ae_int64 **)&(a), off)
#define ae_f64_loadxp(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f64_loadxp)(&d, (const ae_f64 **)&(a), off)
#define AE_LQ56_XU(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_LQ56_XU)(&d, (const ae_q56s **)&(a), off)
#define ae_q56s_loadxp(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_q56s_loadxp)(&d, (const ae_q56s **)&(a), off)
#define AE_S16X2M_XC(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S16X2M_XC)(d, (ae_p16x2s **)&(a), off)
#define AE_SP16X2F_C(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SP16X2F_C)(d, (ae_p16x2s **)&(a), off)
#define AE_S16X2M_I(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S16X2M_I)(d, a, off)
#define AE_SP16X2F_I(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SP16X2F_I)(d, a, off)
#define ae_p16x2s_storei(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p16x2s_storei)(d, a, off)
#define AE_S16X2M_IU(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S16X2M_IU)(d, (ae_p16x2s **)&(a), off)
#define AE_SP16X2F_IU(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SP16X2F_IU)(d, (ae_p16x2s **)&(a), off)
#define ae_p16x2s_storeiu(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p16x2s_storeiu)(d, (ae_p16x2s **)&(a), off)
#define AE_S16X2M_X(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S16X2M_X)(d, a, off)
#define AE_SP16X2F_X(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SP16X2F_X)(d, a, off)
#define ae_p16x2s_storex(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p16x2s_storex)(d, a, off)
#define AE_S16X2M_XU(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S16X2M_XU)(d, (ae_p16x2s **)&(a), off)
#define AE_SP16X2F_XU(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SP16X2F_XU)(d, (ae_p16x2s **)&(a), off)
#define ae_p16x2s_storexu(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p16x2s_storexu)(d, (ae_p16x2s **)&(a), off)
#define AE_S32X2F24_XC(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S32X2F24_XC)(d, (ae_f24x2 **)&(a), off)
#define AE_SP24X2F_C(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SP24X2F_C)(d, (ae_p24x2f **)&(a), off)
#define AE_S32X2F24_I(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S32X2F24_I)(d, a, off)
#define AE_SP24X2F_I(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SP24X2F_I)(d, a, off)
#define ae_f24x2_storei(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f24x2_storei)(d, a, off)
#define ae_p24x2f_storei(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2f_storei)(d, a, off)
#define AE_S32X2F24_IP(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S32X2F24_IP)(d, (ae_f24x2 **)&(a), off)
#define AE_SP24X2F_IU(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SP24X2F_IU)(d, (ae_p24x2f **)&(a), off)
#define ae_f24x2_storeip(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f24x2_storeip)(d, (ae_f24x2 **)&(a), off)
#define ae_p24x2f_storeip(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2f_storeip)(d, (ae_p24x2f **)&(a), off)
#define AE_S32X2F24_RIP(d, a) \
	CSTUB_(_TIE_xt_hifi2_AE_S32X2F24_RIP)(d, (ae_f24x2 **)&(a))
#define AE_S32X2F24_RIC(d, a) \
	CSTUB_(_TIE_xt_hifi2_AE_S32X2F24_RIC)(d, (ae_f24x2 **)&(a))
#define AE_S32X2F24_X(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S32X2F24_X)(d, a, off)
#define AE_SP24X2F_X(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SP24X2F_X)(d, a, off)
#define ae_f24x2_storex(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f24x2_storex)(d, a, off)
#define ae_p24x2f_storex(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2f_storex)(d, a, off)
#define AE_S32X2F24_XP(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S32X2F24_XP)(d, (ae_f24x2 **)&(a), off)
#define AE_SP24X2F_XU(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SP24X2F_XU)(d, (ae_p24x2f **)&(a), off)
#define ae_f24x2_storexp(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f24x2_storexp)(d, (ae_f24x2 **)&(a), off)
#define ae_p24x2f_storexp(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2f_storexp)(d, (ae_p24x2f **)&(a), off)
#define AE_S32X2_XC(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S32X2_XC)(d, (ae_int32x2 **)&(a), off)
#define AE_SP24X2S_C(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SP24X2S_C)(d, (ae_p24x2s **)&(a), off)
#define AE_S32X2_I(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S32X2_I)(d, a, off)
#define ae_int32x2_storei(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x2_storei)(d, a, off)
#define ae_f32x2_storei(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f32x2_storei)(d, a, off)
#define AE_SP24X2S_I(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SP24X2S_I)(d, a, off)
#define ae_p24x2s_storei(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2s_storei)(d, a, off)
#define ae_int24x2_storei(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int24x2_storei)(d, a, off)
#define AE_S32X2_IP(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S32X2_IP)(d, (ae_int32x2 **)&(a), off)
#define ae_int32x2_storeip(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x2_storeip)(d, (ae_int32x2 **)&(a), off)
#define ae_f32x2_storeip(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f32x2_storeip)(d, (ae_f32x2 **)&(a), off)
#define AE_SP24X2S_IU(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SP24X2S_IU)(d, (ae_p24x2s **)&(a), off)
#define ae_p24x2s_storeip(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2s_storeip)(d, (ae_p24x2s **)&(a), off)
#define ae_int24x2_storeip(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int24x2_storeip)(d, (ae_int24x2 **)&(a), off)
#define AE_S32X2_RIP(d, a) \
	CSTUB_(_TIE_xt_hifi2_AE_S32X2_RIP)(d, (ae_int32x2 **)&(a))
#define AE_S32X2_RIC(d, a) \
	CSTUB_(_TIE_xt_hifi2_AE_S32X2_RIC)(d, (ae_int32x2 **)&(a))
#define AE_S32X2_X(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S32X2_X)(d, a, off)
#define ae_int32x2_storex(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x2_storex)(d, a, off)
#define ae_f32x2_storex(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f32x2_storex)(d, a, off)
#define AE_SP24X2S_X(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SP24X2S_X)(d, a, off)
#define ae_p24x2s_storex(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2s_storex)(d, a, off)
#define ae_int24x2_storex(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int24x2_storex)(d, a, off)
#define AE_S32X2_XP(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S32X2_XP)(d, (ae_int32x2 **)&(a), off)
#define ae_int32x2_storexp(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x2_storexp)(d, (ae_int32x2 **)&(a), off)
#define ae_f32x2_storexp(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f32x2_storexp)(d, (ae_f32x2 **)&(a), off)
#define AE_SP24X2S_XU(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SP24X2S_XU)(d, (ae_p24x2s **)&(a), off)
#define ae_p24x2s_storexp(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2s_storexp)(d, (ae_p24x2s **)&(a), off)
#define ae_int24x2_storexp(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int24x2_storexp)(d, (ae_int24x2 **)&(a), off)
#define AE_S16X4_XC(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S16X4_XC)(d, (ae_int16x4 **)&(a), off)
#define AE_S16X4_I(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S16X4_I)(d, a, off)
#define ae_int16x4_storei(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int16x4_storei)(d, a, off)
#define ae_f16x4_storei(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f16x4_storei)(d, a, off)
#define AE_S16X4_IP(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S16X4_IP)(d, (ae_int16x4 **)&(a), off)
#define ae_int16x4_storeip(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int16x4_storeip)(d, (ae_int16x4 **)&(a), off)
#define ae_f16x4_storeip(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f16x4_storeip)(d, (ae_f16x4 **)&(a), off)
#define AE_S16X4_RIP(d, a) \
	CSTUB_(_TIE_xt_hifi2_AE_S16X4_RIP)(d, (ae_int16x4 **)&(a))
#define AE_S16X4_RIC(d, a) \
	CSTUB_(_TIE_xt_hifi2_AE_S16X4_RIC)(d, (ae_int16x4 **)&(a))
#define AE_S16X4_X(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S16X4_X)(d, a, off)
#define ae_int16x4_storex(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int16x4_storex)(d, a, off)
#define ae_f16x4_storex(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f16x4_storex)(d, a, off)
#define AE_S16X4_XP(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S16X4_XP)(d, (ae_int16x4 **)&(a), off)
#define ae_int16x4_storexp(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int16x4_storexp)(d, (ae_int16x4 **)&(a), off)
#define ae_f16x4_storexp(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f16x4_storexp)(d, (ae_f16x4 **)&(a), off)
#define AE_S16M_L_XC(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S16M_L_XC)(d, (ae_p16s **)&(a), off)
#define AE_SP16F_L_C(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SP16F_L_C)(d, (ae_p16s **)&(a), off)
#define AE_S16M_L_I(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S16M_L_I)(d, a, off)
#define AE_SP16F_L_I(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SP16F_L_I)(d, a, off)
#define ae_p16s_storei(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p16s_storei)(d, a, off)
#define AE_S16M_L_IU(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S16M_L_IU)(d, (ae_p16s **)&(a), off)
#define AE_SP16F_L_IU(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SP16F_L_IU)(d, (ae_p16s **)&(a), off)
#define ae_p16s_storeiu(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p16s_storeiu)(d, (ae_p16s **)&(a), off)
#define AE_S16M_L_X(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S16M_L_X)(d, a, off)
#define AE_SP16F_L_X(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SP16F_L_X)(d, a, off)
#define ae_p16s_storex(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p16s_storex)(d, a, off)
#define AE_S16M_L_XU(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S16M_L_XU)(d, (ae_p16s **)&(a), off)
#define AE_SP16F_L_XU(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SP16F_L_XU)(d, (ae_p16s **)&(a), off)
#define ae_p16s_storexu(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p16s_storexu)(d, (ae_p16s **)&(a), off)
#define AE_S32F24_L_XC(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S32F24_L_XC)(d, (ae_f24 **)&(a), off)
#define AE_SP24F_L_C(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SP24F_L_C)(d, (ae_p24f **)&(a), off)
#define AE_S32F24_L_I(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S32F24_L_I)(d, a, off)
#define AE_SP24F_L_I(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SP24F_L_I)(d, a, off)
#define ae_f24_storei(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f24_storei)(d, a, off)
#define ae_p24f_storei(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p24f_storei)(d, a, off)
#define AE_S32F24_L_IP(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S32F24_L_IP)(d, (ae_f24 **)&(a), off)
#define AE_SP24F_L_IU(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SP24F_L_IU)(d, (ae_p24f **)&(a), off)
#define ae_f24_storeip(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f24_storeip)(d, (ae_f24 **)&(a), off)
#define ae_p24f_storeip(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p24f_storeip)(d, (ae_p24f **)&(a), off)
#define AE_S32F24_L_X(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S32F24_L_X)(d, a, off)
#define AE_SP24F_L_X(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SP24F_L_X)(d, a, off)
#define ae_f24_storex(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f24_storex)(d, a, off)
#define ae_p24f_storex(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p24f_storex)(d, a, off)
#define AE_S32F24_L_XP(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S32F24_L_XP)(d, (ae_f24 **)&(a), off)
#define AE_SP24F_L_XU(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SP24F_L_XU)(d, (ae_p24f **)&(a), off)
#define ae_f24_storexp(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f24_storexp)(d, (ae_f24 **)&(a), off)
#define ae_p24f_storexp(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p24f_storexp)(d, (ae_p24f **)&(a), off)
#define AE_S32_L_XC(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S32_L_XC)(d, (ae_int32 **)&(a), off)
#define AE_SP24S_L_C(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SP24S_L_C)(d, (ae_p24s **)&(a), off)
#define AE_S32_L_I(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S32_L_I)(d, a, off)
#define ae_int32_storei(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int32_storei)(d, a, off)
#define ae_f32_storei(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f32_storei)(d, a, off)
#define AE_SP24S_L_I(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SP24S_L_I)(d, a, off)
#define ae_int24_storei(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int24_storei)(d, a, off)
#define ae_p24s_storei(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p24s_storei)(d, a, off)
#define AE_S32_L_IP(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S32_L_IP)(d, (ae_int32 **)&(a), off)
#define ae_int32_storeip(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int32_storeip)(d, (ae_int32 **)&(a), off)
#define ae_f32_storeip(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f32_storeip)(d, (ae_f32 **)&(a), off)
#define AE_SP24S_L_IU(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SP24S_L_IU)(d, (ae_p24s **)&(a), off)
#define ae_int24_storeip(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int24_storeip)(d, (ae_int24 **)&(a), off)
#define ae_p24s_storeip(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p24s_storeip)(d, (ae_p24s **)&(a), off)
#define AE_S32_L_X(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S32_L_X)(d, a, off)
#define ae_int32_storex(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int32_storex)(d, a, off)
#define ae_f32_storex(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f32_storex)(d, a, off)
#define AE_SP24S_L_X(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SP24S_L_X)(d, a, off)
#define ae_int24_storex(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int24_storex)(d, a, off)
#define ae_p24s_storex(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p24s_storex)(d, a, off)
#define AE_S32_L_XP(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S32_L_XP)(d, (ae_int32 **)&(a), off)
#define ae_int32_storexp(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int32_storexp)(d, (ae_int32 **)&(a), off)
#define ae_f32_storexp(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f32_storexp)(d, (ae_f32 **)&(a), off)
#define AE_SP24S_L_XU(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SP24S_L_XU)(d, (ae_p24s **)&(a), off)
#define ae_int24_storexp(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int24_storexp)(d, (ae_int24 **)&(a), off)
#define ae_p24s_storexp(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_p24s_storexp)(d, (ae_p24s **)&(a), off)
#define AE_S16_0_XC(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S16_0_XC)(d, (ae_int16 **)&(a), off)
#define AE_S16_0_I(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S16_0_I)(d, a, off)
#define ae_int16_storei(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int16_storei)(d, a, off)
#define ae_f16_storei(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f16_storei)(d, a, off)
#define AE_S16_0_IP(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S16_0_IP)(d, (ae_int16 **)&(a), off)
#define ae_int16_storeip(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int16_storeip)(d, (ae_int16 **)&(a), off)
#define ae_f16_storeip(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f16_storeip)(d, (ae_f16 **)&(a), off)
#define AE_S16_0_X(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S16_0_X)(d, a, off)
#define ae_int16_storex(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int16_storex)(d, a, off)
#define ae_f16_storex(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f16_storex)(d, a, off)
#define AE_S16_0_XP(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S16_0_XP)(d, (ae_int16 **)&(a), off)
#define ae_int16_storexp(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int16_storexp)(d, (ae_int16 **)&(a), off)
#define ae_f16_storexp(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f16_storexp)(d, (ae_f16 **)&(a), off)
#define AE_S64_XC(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S64_XC)(d, (ae_int64 **)&(a), off)
#define AE_SQ56S_C(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SQ56S_C)(d, (ae_q56s **)&(a), off)
#define AE_S64_I(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S64_I)(d, a, off)
#define ae_int64_storei(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int64_storei)(d, a, off)
#define ae_f64_storei(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f64_storei)(d, a, off)
#define AE_SQ56S_I(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SQ56S_I)(d, a, off)
#define ae_q56s_storei(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_q56s_storei)(d, a, off)
#define AE_S64_IP(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S64_IP)(d, (ae_int64 **)&(a), off)
#define ae_int64_storeip(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int64_storeip)(d, (ae_int64 **)&(a), off)
#define ae_f64_storeip(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f64_storeip)(d, (ae_f64 **)&(a), off)
#define AE_SQ56S_IU(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SQ56S_IU)(d, (ae_q56s **)&(a), off)
#define ae_q56s_storeip(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_q56s_storeip)(d, (ae_q56s **)&(a), off)
#define AE_S64_X(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S64_X)(d, a, off)
#define ae_int64_storex(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int64_storex)(d, a, off)
#define ae_f64_storex(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f64_storex)(d, a, off)
#define AE_SQ56S_X(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SQ56S_X)(d, a, off)
#define ae_q56s_storex(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_q56s_storex)(d, a, off)
#define AE_S64_XP(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S64_XP)(d, (ae_int64 **)&(a), off)
#define ae_int64_storexp(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int64_storexp)(d, (ae_int64 **)&(a), off)
#define ae_f64_storexp(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f64_storexp)(d, (ae_f64 **)&(a), off)
#define AE_SQ56S_XU(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SQ56S_XU)(d, (ae_q56s **)&(a), off)
#define ae_q56s_storexp(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_q56s_storexp)(d, (ae_q56s **)&(a), off)
#define AE_S32M_XC(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S32M_XC)(d, (ae_q32s **)&(a), off)
#define AE_SQ32F_C(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SQ32F_C)(d, (ae_q32s **)&(a), off)
#define AE_S32M_I(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S32M_I)(d, a, off)
#define AE_SQ32F_I(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SQ32F_I)(d, a, off)
#define ae_q32s_storei(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_q32s_storei)(d, a, off)
#define AE_S32M_IU(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S32M_IU)(d, (ae_q32s **)&(a), off)
#define AE_SQ32F_IU(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SQ32F_IU)(d, (ae_q32s **)&(a), off)
#define ae_q32s_storeiu(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_q32s_storeiu)(d, (ae_q32s **)&(a), off)
#define AE_S32M_X(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S32M_X)(d, a, off)
#define AE_SQ32F_X(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SQ32F_X)(d, a, off)
#define ae_q32s_storex(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_q32s_storex)(d, a, off)
#define AE_S32M_XU(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S32M_XU)(d, (ae_q32s **)&(a), off)
#define AE_SQ32F_XU(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_SQ32F_XU)(d, (ae_q32s **)&(a), off)
#define ae_q32s_storexu(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_q32s_storexu)(d, (ae_q32s **)&(a), off)
#define AE_SA24_IC(d, su, a) \
	CSTUB_(_TIE_xt_hifi2_AE_SA24_IC)(d, &su, (void **)&(a))
#define AE_SA24_IP(d, su, a) \
	CSTUB_(_TIE_xt_hifi2_AE_SA24_IP)(d, &su, (void **)&(a))
#define AE_SA24_RIP(d, su, a) \
	CSTUB_(_TIE_xt_hifi2_AE_SA24_RIP)(d, &su, (void **)&(a))
#define AE_SA24_RIC(d, su, a) \
	CSTUB_(_TIE_xt_hifi2_AE_SA24_RIC)(d, &su, (void **)&(a))
#define ae_p16s_mtor_ae_p24x2s(a, i) \
	CSTUB_(_TIE_xt_hifi2_ae_p16s_mtor_ae_p24x2s)(a, i)
#define ae_p16s_mtor_ae_p24x2f(a, i) \
	CSTUB_(_TIE_xt_hifi2_ae_p16s_mtor_ae_p24x2f)(a, i)
#define ae_p16s_mtor_ae_p24s(a, i) \
	CSTUB_(_TIE_xt_hifi2_ae_p16s_mtor_ae_p24s)(a, i)
#define ae_p16s_mtor_ae_p24f(a, i) \
	CSTUB_(_TIE_xt_hifi2_ae_p16s_mtor_ae_p24f)(a, i)
#define ae_p24s_mtor_ae_p24x2s(a, i) \
	CSTUB_(_TIE_xt_hifi2_ae_p24s_mtor_ae_p24x2s)(a, i)
#define ae_p24s_mtor_ae_p24x2f(a, i) \
	CSTUB_(_TIE_xt_hifi2_ae_p24s_mtor_ae_p24x2f)(a, i)
#define ae_p24s_mtor_ae_p24f(a, i) \
	CSTUB_(_TIE_xt_hifi2_ae_p24s_mtor_ae_p24f)(a, i)
#define ae_p24f_mtor_ae_p24x2s(a, i) \
	CSTUB_(_TIE_xt_hifi2_ae_p24f_mtor_ae_p24x2s)(a, i)
#define ae_p24f_mtor_ae_p24x2f(a, i) \
	CSTUB_(_TIE_xt_hifi2_ae_p24f_mtor_ae_p24x2f)(a, i)
#define ae_p24x2f_mtor_ae_p24x2s(a, i) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2f_mtor_ae_p24x2s)(a, i)
#define ae_p16x2s_mtor_ae_p24x2s(a, i) \
	CSTUB_(_TIE_xt_hifi2_ae_p16x2s_mtor_ae_p24x2s)(a, i)
#define ae_p16x2s_mtor_ae_p24x2f(a, i) \
	CSTUB_(_TIE_xt_hifi2_ae_p16x2s_mtor_ae_p24x2f)(a, i)
#define ae_p24x2s_rtom_ae_p16x2s(d, a, i) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2s_rtom_ae_p16x2s)(d, a, i)
#define ae_p24x2f_rtom_ae_p16x2s(d, a, i) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2f_rtom_ae_p16x2s)(d, a, i)
#define ae_p24x2s_rtom_ae_p24x2f(d, a, i) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2s_rtom_ae_p24x2f)(d, a, i)
#define ae_p24x2f_rtom_ae_p24x2s(d, a, i) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2f_rtom_ae_p24x2s)(d, a, i)
#define ae_p24x2s_rtom_ae_p16s(d, a, i) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2s_rtom_ae_p16s)(d, a, i)
#define ae_p24x2f_rtom_ae_p16s(d, a, i) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2f_rtom_ae_p16s)(d, a, i)
#define ae_p24s_rtom_ae_p16s(d, a, i) \
	CSTUB_(_TIE_xt_hifi2_ae_p24s_rtom_ae_p16s)(d, a, i)
#define ae_p24f_rtom_ae_p16s(d, a, i) \
	CSTUB_(_TIE_xt_hifi2_ae_p24f_rtom_ae_p16s)(d, a, i)
#define ae_p24x2s_rtom_ae_p24s(d, a, i) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2s_rtom_ae_p24s)(d, a, i)
#define ae_p24x2f_rtom_ae_p24s(d, a, i) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2f_rtom_ae_p24s)(d, a, i)
#define ae_p24f_rtom_ae_p24s(d, a, i) \
	CSTUB_(_TIE_xt_hifi2_ae_p24f_rtom_ae_p24s)(d, a, i)
#define ae_p24x2s_rtom_ae_p24f(d, a, i) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2s_rtom_ae_p24f)(d, a, i)
#define ae_p24x2f_rtom_ae_p24f(d, a, i) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2f_rtom_ae_p24f)(d, a, i)
#define ae_p24s_rtom_ae_p24f(d, a, i) \
	CSTUB_(_TIE_xt_hifi2_ae_p24s_rtom_ae_p24f)(d, a, i)
#define ae_q32s_mtor_ae_q56s(a, i) \
	CSTUB_(_TIE_xt_hifi2_ae_q32s_mtor_ae_q56s)(a, i)
#define ae_q56s_rtom_ae_q32s(d, a, i) \
	CSTUB_(_TIE_xt_hifi2_ae_q56s_rtom_ae_q32s)(d, a, i)
#define ae_valign_loadi(a, imm) \
	CSTUB_(_TIE_xt_hifi2_ae_valign_loadi)(a, imm)
#define ae_valign_storei(su, a, imm) \
	CSTUB_(_TIE_xt_hifi2_ae_valign_storei)(su, a, imm)
#define ae_valign_move(v) \
	CSTUB_(_TIE_xt_hifi2_ae_valign_move)(v)
#define AE_LA64_PP(a) \
	CSTUB_(_TIE_xt_hifi2_AE_LA64_PP)(a)
#define AE_LA24POS_PC(uu, a) \
	CSTUB_(_TIE_xt_hifi2_AE_LA24POS_PC)(&uu, (const void **)&(a))
#define AE_LA24X2POS_PC(uu, a) \
	CSTUB_(_TIE_xt_hifi2_AE_LA24X2POS_PC)(&uu, (const void **)&(a))
#define AE_LA32X2POS_PC(uu, a) \
	CSTUB_(_TIE_xt_hifi2_AE_LA32X2POS_PC)(&uu, (const ae_int32x2 **)&(a))
#define AE_LA16X4POS_PC(uu, a) \
	CSTUB_(_TIE_xt_hifi2_AE_LA16X4POS_PC)(&uu, (const ae_int16x4 **)&(a))
#define AE_LA24NEG_PC(uu, a) \
	CSTUB_(_TIE_xt_hifi2_AE_LA24NEG_PC)(&uu, (const void **)&(a))
#define AE_LA24X2NEG_PC(uu, a) \
	CSTUB_(_TIE_xt_hifi2_AE_LA24X2NEG_PC)(&uu, (const void **)&(a))
#define AE_LA32X2NEG_PC(uu, a) \
	CSTUB_(_TIE_xt_hifi2_AE_LA32X2NEG_PC)(&uu, (const ae_int32x2 **)&(a))
#define AE_LA16X4NEG_PC(uu, a) \
	CSTUB_(_TIE_xt_hifi2_AE_LA16X4NEG_PC)(&uu, (const ae_int16x4 **)&(a))
#define AE_LA32X2F24POS_PC(uu, a) \
	CSTUB_(_TIE_xt_hifi2_AE_LA32X2F24POS_PC)(&uu, (const ae_f24x2 **)&(a))
#define AE_LA32X2F24NEG_PC(uu, a) \
	CSTUB_(_TIE_xt_hifi2_AE_LA32X2F24NEG_PC)(&uu, (const ae_f24x2 **)&(a))
#define AE_SA64POS_FP(su, a) \
	CSTUB_(_TIE_xt_hifi2_AE_SA64POS_FP)(&su, a)
#define AE_SA64POS_FC(su, a) \
	CSTUB_(_TIE_xt_hifi2_AE_SA64POS_FC)(&su, a)
#define AE_SA64NEG_FP(su, a) \
	CSTUB_(_TIE_xt_hifi2_AE_SA64NEG_FP)(&su, a)
#define AE_SA64NEG_FC(su, a) \
	CSTUB_(_TIE_xt_hifi2_AE_SA64NEG_FC)(&su, a)
#define AE_LA32X2_IC(d, uu, a) \
	CSTUB_(_TIE_xt_hifi2_AE_LA32X2_IC)(&d, &uu, (const ae_int32x2 **)&(a))
#define AE_LA32X2_IP(d, uu, a) \
	CSTUB_(_TIE_xt_hifi2_AE_LA32X2_IP)(&d, &uu, (const ae_int32x2 **)&(a))
#define AE_LA32X2_RIP(d, uu, a) \
	CSTUB_(_TIE_xt_hifi2_AE_LA32X2_RIP)(&d, &uu, (const ae_int32x2 **)&(a))
#define AE_LA32X2_RIC(d, uu, a) \
	CSTUB_(_TIE_xt_hifi2_AE_LA32X2_RIC)(&d, &uu, (const ae_int32x2 **)&(a))
#define AE_LA16X4_IC(d, uu, a) \
	CSTUB_(_TIE_xt_hifi2_AE_LA16X4_IC)(&d, &uu, (const ae_int16x4 **)&(a))
#define AE_LA16X4_IP(d, uu, a) \
	CSTUB_(_TIE_xt_hifi2_AE_LA16X4_IP)(&d, &uu, (const ae_int16x4 **)&(a))
#define AE_LA16X4_RIP(d, uu, a) \
	CSTUB_(_TIE_xt_hifi2_AE_LA16X4_RIP)(&d, &uu, (const ae_int16x4 **)&(a))
#define AE_LA16X4_RIC(d, uu, a) \
	CSTUB_(_TIE_xt_hifi2_AE_LA16X4_RIC)(&d, &uu, (const ae_int16x4 **)&(a))
#define AE_LA32X2F24_IC(d, uu, a) \
	CSTUB_(_TIE_xt_hifi2_AE_LA32X2F24_IC)(&d, &uu, (const ae_f24x2 **)&(a))
#define AE_LA32X2F24_IP(d, uu, a) \
	CSTUB_(_TIE_xt_hifi2_AE_LA32X2F24_IP)(&d, &uu, (const ae_f24x2 **)&(a))
#define AE_LA32X2F24_RIP(d, uu, a) \
	CSTUB_(_TIE_xt_hifi2_AE_LA32X2F24_RIP)(&d, &uu, (const ae_f24x2 **)&(a))
#define AE_LA32X2F24_RIC(d, uu, a) \
	CSTUB_(_TIE_xt_hifi2_AE_LA32X2F24_RIC)(&d, &uu, (const ae_f24x2 **)&(a))
#define AE_LA24_IC(d, uu, a) \
	CSTUB_(_TIE_xt_hifi2_AE_LA24_IC)(&d, &uu, (const void **)&(a))
#define AE_LA24_IP(d, uu, a) \
	CSTUB_(_TIE_xt_hifi2_AE_LA24_IP)(&d, &uu, (const void **)&(a))
#define AE_LA24_RIP(d, uu, a) \
	CSTUB_(_TIE_xt_hifi2_AE_LA24_RIP)(&d, &uu, (const void **)&(a))
#define AE_LA24_RIC(d, uu, a) \
	CSTUB_(_TIE_xt_hifi2_AE_LA24_RIC)(&d, &uu, (const void **)&(a))
#define AE_LA24X2_IC(d, uu, a) \
	CSTUB_(_TIE_xt_hifi2_AE_LA24X2_IC)(&d, &uu, (const void **)&(a))
#define AE_LA24X2_IP(d, uu, a) \
	CSTUB_(_TIE_xt_hifi2_AE_LA24X2_IP)(&d, &uu, (const void **)&(a))
#define AE_LA24X2_RIP(d, uu, a) \
	CSTUB_(_TIE_xt_hifi2_AE_LA24X2_RIP)(&d, &uu, (const void **)&(a))
#define AE_LA24X2_RIC(d, uu, a) \
	CSTUB_(_TIE_xt_hifi2_AE_LA24X2_RIC)(&d, &uu, (const void **)&(a))
#define AE_SA32X2_IC(d, su, a) \
	CSTUB_(_TIE_xt_hifi2_AE_SA32X2_IC)(d, &su, (ae_int32x2 **)&(a))
#define AE_SA32X2_IP(d, su, a) \
	CSTUB_(_TIE_xt_hifi2_AE_SA32X2_IP)(d, &su, (ae_int32x2 **)&(a))
#define AE_SA32X2_RIP(d, su, a) \
	CSTUB_(_TIE_xt_hifi2_AE_SA32X2_RIP)(d, &su, (ae_int32x2 **)&(a))
#define AE_SA32X2_RIC(d, su, a) \
	CSTUB_(_TIE_xt_hifi2_AE_SA32X2_RIC)(d, &su, (ae_int32x2 **)&(a))
#define AE_SA16X4_IC(d, su, a) \
	CSTUB_(_TIE_xt_hifi2_AE_SA16X4_IC)(d, &su, (ae_int16x4 **)&(a))
#define AE_SA16X4_IP(d, su, a) \
	CSTUB_(_TIE_xt_hifi2_AE_SA16X4_IP)(d, &su, (ae_int16x4 **)&(a))
#define AE_SA16X4_RIP(d, su, a) \
	CSTUB_(_TIE_xt_hifi2_AE_SA16X4_RIP)(d, &su, (ae_int16x4 **)&(a))
#define AE_SA16X4_RIC(d, su, a) \
	CSTUB_(_TIE_xt_hifi2_AE_SA16X4_RIC)(d, &su, (ae_int16x4 **)&(a))
#define AE_SA32X2F24_IC(d, su, a) \
	CSTUB_(_TIE_xt_hifi2_AE_SA32X2F24_IC)(d, &su, (ae_f24x2 **)&(a))
#define AE_SA32X2F24_IP(d, su, a) \
	CSTUB_(_TIE_xt_hifi2_AE_SA32X2F24_IP)(d, &su, (ae_f24x2 **)&(a))
#define AE_SA32X2F24_RIP(d, su, a) \
	CSTUB_(_TIE_xt_hifi2_AE_SA32X2F24_RIP)(d, &su, (ae_f24x2 **)&(a))
#define AE_SA32X2F24_RIC(d, su, a) \
	CSTUB_(_TIE_xt_hifi2_AE_SA32X2F24_RIC)(d, &su, (ae_f24x2 **)&(a))
#define AE_SA24_L_IC(d, su, a) \
	CSTUB_(_TIE_xt_hifi2_AE_SA24_L_IC)(d, &su, (void **)&(a))
#define AE_SA24_L_IP(d, su, a) \
	CSTUB_(_TIE_xt_hifi2_AE_SA24_L_IP)(d, &su, (void **)&(a))
#define AE_SA24_L_RIP(d, su, a) \
	CSTUB_(_TIE_xt_hifi2_AE_SA24_L_RIP)(d, &su, (void **)&(a))
#define AE_SA24_L_RIC(d, su, a) \
	CSTUB_(_TIE_xt_hifi2_AE_SA24_L_RIC)(d, &su, (void **)&(a))
#define AE_SA24X2_IC(d, su, a) \
	CSTUB_(_TIE_xt_hifi2_AE_SA24X2_IC)(d, &su, (void **)&(a))
#define AE_SA24X2_IP(d, su, a) \
	CSTUB_(_TIE_xt_hifi2_AE_SA24X2_IP)(d, &su, (void **)&(a))
#define AE_SA24X2_RIP(d, su, a) \
	CSTUB_(_TIE_xt_hifi2_AE_SA24X2_RIP)(d, &su, (void **)&(a))
#define AE_SA24X2_RIC(d, su, a) \
	CSTUB_(_TIE_xt_hifi2_AE_SA24X2_RIC)(d, &su, (void **)&(a))
#define AE_S32RA64S_I(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S32RA64S_I)(d, a, off)
#define AE_S32RA64S_IP(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S32RA64S_IP)(d, (ae_f32 **)&(a), off)
#define AE_S32RA64S_X(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S32RA64S_X)(d, a, off)
#define AE_S32RA64S_XP(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S32RA64S_XP)(d, (ae_f32 **)&(a), off)
#define AE_S32RA64S_XC(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S32RA64S_XC)(d, (ae_f32 **)&(a), off)
#define AE_S24RA64S_I(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S24RA64S_I)(d, a, off)
#define AE_S24RA64S_IP(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S24RA64S_IP)(d, (ae_f24 **)&(a), off)
#define AE_S24RA64S_X(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S24RA64S_X)(d, a, off)
#define AE_S24RA64S_XP(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S24RA64S_XP)(d, (ae_f24 **)&(a), off)
#define AE_S24RA64S_XC(d, a, off) \
	CSTUB_(_TIE_xt_hifi2_AE_S24RA64S_XC)(d, (ae_f24 **)&(a), off)
#define AE_S32X2RA64S_IP(d2, d1, a) \
	CSTUB_(_TIE_xt_hifi2_AE_S32X2RA64S_IP)(d2, d1, (ae_f32x2 **)&(a))
#define AE_S24X2RA64S_IP(d2, d1, a) \
	CSTUB_(_TIE_xt_hifi2_AE_S24X2RA64S_IP)(d2, d1, (ae_f24x2 **)&(a))
#define AE_ZERO() \
	CSTUB_(_TIE_xt_hifi2_AE_ZERO)()
#define AE_ZERO64() \
	CSTUB_(_TIE_xt_hifi2_AE_ZERO64)()
#define AE_ZERO32() \
	CSTUB_(_TIE_xt_hifi2_AE_ZERO32)()
#define AE_ZERO24() \
	CSTUB_(_TIE_xt_hifi2_AE_ZERO24)()
#define AE_ZERO16() \
	CSTUB_(_TIE_xt_hifi2_AE_ZERO16)()
#define AE_ZEROP48() \
	CSTUB_(_TIE_xt_hifi2_AE_ZEROP48)()
#define AE_MOV(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MOV)(d0)
#define AE_MOV64(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MOV64)(d0)
#define AE_MOV16(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MOV16)(d0)
#define AE_MOV24(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MOV24)(d0)
#define AE_MOV32(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MOV32)(d0)
#define AE_MOVP48(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVP48)(d0)
#define AE_SEL16I_N(d0, d1, i) \
	CSTUB_(_TIE_xt_hifi2_AE_SEL16I_N)(d0, d1, i)
#define AE_SEL16I(d0, d1, i) \
	CSTUB_(_TIE_xt_hifi2_AE_SEL16I)(d0, d1, i)
#define AE_SEL32I(d0, d1, i) \
	CSTUB_(_TIE_xt_hifi2_AE_SEL32I)(d0, d1, i)
#define AE_SEL16_5432(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SEL16_5432)(d0, d1)
#define AE_SEL32_LH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SEL32_LH)(d0, d1)
#define AE_SEL24_LH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SEL24_LH)(d0, d1)
#define AE_SELP24_LH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SELP24_LH)(d0, d1)
#define AE_SEL16_7520(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SEL16_7520)(d0, d1)
#define AE_SEL16_7610(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SEL16_7610)(d0, d1)
#define AE_SEL32_HL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SEL32_HL)(d0, d1)
#define AE_SEL24_HL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SEL24_HL)(d0, d1)
#define AE_SELP24_HL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SELP24_HL)(d0, d1)
#define AE_SEL16_4321(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SEL16_4321)(d0, d1)
#define AE_SEL16_6543(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SEL16_6543)(d0, d1)
#define AE_SEL16_7632(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SEL16_7632)(d0, d1)
#define AE_SEL32_HH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SEL32_HH)(d0, d1)
#define AE_SEL24_HH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SEL24_HH)(d0, d1)
#define AE_SELP24_HH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SELP24_HH)(d0, d1)
#define AE_SEL16_5410(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SEL16_5410)(d0, d1)
#define AE_SEL32_LL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SEL32_LL)(d0, d1)
#define AE_SEL24_LL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SEL24_LL)(d0, d1)
#define AE_SELP24_LL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SELP24_LL)(d0, d1)
#define AE_SEL16_6420(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SEL16_6420)(d0, d1)
#define AE_CVT16X4(dl, dh) \
	CSTUB_(_TIE_xt_hifi2_AE_CVT16X4)(dl, dh)
#define AE_SEL16_7362(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SEL16_7362)(d0, d1)
#define AE_SEL16_5146(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SEL16_5146)(d0, d1)
#define AE_TRUNC16X4F32(dl, dh) \
	CSTUB_(_TIE_xt_hifi2_AE_TRUNC16X4F32)(dl, dh)
#define AE_SHORTSWAP(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_SHORTSWAP)(d0)
#define AE_MOVT16X4(d, d0, bhl) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVT16X4)(&d, d0, bhl)
#define AE_MOVF16X4(d, d0, bhl) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF16X4)(&d, d0, bhl)
#define AE_MOVT32X2(d, d0, bhl) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVT32X2)(&d, d0, bhl)
#define AE_MOVTP24X2(d, d0, bhl) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVTP24X2)(&d, d0, bhl)
#define AE_MOVF32X2(d, d0, bhl) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF32X2)(&d, d0, bhl)
#define AE_MOVFP24X2(d, d0, bhl) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVFP24X2)(&d, d0, bhl)
#define AE_MOVT64(d, d0, bi) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVT64)(&d, d0, bi)
#define AE_MOVTP48(d, d0, bi) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVTP48)(&d, d0, bi)
#define AE_MOVF64(d, d0, bi) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF64)(&d, d0, bi)
#define AE_MOVFP48(d, d0, bi) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVFP48)(&d, d0, bi)
#define AE_MOVDA32X2(a0, a1) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVDA32X2)(a0, a1)
#define AE_MOVPA24X2(ah, al) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVPA24X2)(ah, al)
#define AE_MOVDA32(a) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVDA32)(a)
#define AE_MOVDA16X2(ah, al) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVDA16X2)(ah, al)
#define AE_MOVDA16(a) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVDA16)(a)
#define AE_MOVI(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVI)(i)
#define AE_TRUNCP24A32X2(ah, al) \
	CSTUB_(_TIE_xt_hifi2_AE_TRUNCP24A32X2)(ah, al)
#define AE_SAT16X4(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SAT16X4)(d0, d1)
#define AE_CVT32X2F16_32(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_CVT32X2F16_32)(d0)
#define AE_CVT32X2F16_10(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_CVT32X2F16_10)(d0)
#define AE_SEXT32X2D16_32(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_SEXT32X2D16_32)(d0)
#define AE_SEXT32X2D16_10(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_SEXT32X2D16_10)(d0)
#define AE_CVTA32F24S_L(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_CVTA32F24S_L)(d0)
#define AE_CVTA32P24_L(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_CVTA32P24_L)(d0)
#define AE_CVTA32F24S_H(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_CVTA32F24S_H)(d0)
#define AE_CVTA32P24_H(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_CVTA32P24_H)(d0)
#define AE_CVTP24A16X2_LL(ah, al) \
	CSTUB_(_TIE_xt_hifi2_AE_CVTP24A16X2_LL)(ah, al)
#define AE_CVTP24A16X2_LH(ah, al) \
	CSTUB_(_TIE_xt_hifi2_AE_CVTP24A16X2_LH)(ah, al)
#define AE_CVTP24A16X2_HL(ah, al) \
	CSTUB_(_TIE_xt_hifi2_AE_CVTP24A16X2_HL)(ah, al)
#define AE_CVTP24A16X2_HH(ah, al) \
	CSTUB_(_TIE_xt_hifi2_AE_CVTP24A16X2_HH)(ah, al)
#define AE_TRUNCP24Q48X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_TRUNCP24Q48X2)(d0, d1)
#define AE_TRUNCA32X2F64S(d0, d1, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_TRUNCA32X2F64S)(d0, d1, sa)
#define AE_TRUNCI32X2F64S(d0, d1, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_TRUNCI32X2F64S)(d0, d1, sa)
#define AE_TRUNCA32F64S_L(d0, d1, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_TRUNCA32F64S_L)(d0, d1, sa)
#define AE_TRUNCI32F64S_L(d0, d1, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_TRUNCI32F64S_L)(d0, d1, sa)
#define AE_TRUNCP16(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_TRUNCP16)(d0)
#define AE_ROUND32X2F64SSYM(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_ROUND32X2F64SSYM)(d0, d1)
#define AE_ROUND32F64SSYM(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_ROUND32F64SSYM)(d0)
#define AE_ROUND32X2F64SASYM(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_ROUND32X2F64SASYM)(d0, d1)
#define AE_ROUND32F64SASYM(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_ROUND32F64SASYM)(d0)
#define AE_ROUND32X2F48SSYM(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_ROUND32X2F48SSYM)(d0, d1)
#define AE_ROUND32F48SSYM(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_ROUND32F48SSYM)(d0)
#define AE_ROUND32X2F48SASYM(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_ROUND32X2F48SASYM)(d0, d1)
#define AE_ROUND32F48SASYM(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_ROUND32F48SASYM)(d0)
#define AE_ROUND16X4F32SSYM(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_ROUND16X4F32SSYM)(d1, d0)
#define AE_ROUND16X4F32SASYM(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_ROUND16X4F32SASYM)(d1, d0)
#define AE_ROUND24X2F48SSYM(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_ROUND24X2F48SSYM)(d0, d1)
#define AE_ROUND24F48SSYM(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_ROUND24F48SSYM)(d0)
#define AE_ROUND24X2F48SASYM(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_ROUND24X2F48SASYM)(d0, d1)
#define AE_ROUND24F48SASYM(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_ROUND24F48SASYM)(d0)
#define AE_ROUNDSP16Q48X2SYM(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_ROUNDSP16Q48X2SYM)(d0, d1)
#define AE_ROUNDSP16Q48SYM(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_ROUNDSP16Q48SYM)(d0)
#define AE_ROUNDSP16Q48X2ASYM(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_ROUNDSP16Q48X2ASYM)(d0, d1)
#define AE_ROUNDSP16Q48ASYM(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_ROUNDSP16Q48ASYM)(d0)
#define AE_ROUNDSP24Q48ASYM(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_ROUNDSP24Q48ASYM)(d0)
#define AE_ROUNDSP24Q48SYM(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_ROUNDSP24Q48SYM)(d0)
#define AE_MINABS32S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MINABS32S)(d0, d1)
#define AE_MINABSSP24S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MINABSSP24S)(d0, d1)
#define AE_MAXABS32S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MAXABS32S)(d0, d1)
#define AE_MAXABSSP24S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MAXABSSP24S)(d0, d1)
#define AE_ROUNDSP16F24SYM(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_ROUNDSP16F24SYM)(d0)
#define AE_ROUNDSP16SYM(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_ROUNDSP16SYM)(d0)
#define AE_ROUNDSP16F24ASYM(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_ROUNDSP16F24ASYM)(d0)
#define AE_ROUNDSP16ASYM(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_ROUNDSP16ASYM)(d0)
#define AE_ZEROQ56() \
	CSTUB_(_TIE_xt_hifi2_AE_ZEROQ56)()
#define AE_MOVQ56(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVQ56)(d0)
#define AE_MOVTQ56(d, d0, bi) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVTQ56)(&d, d0, bi)
#define AE_MOVFQ56(d, d0, bi) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVFQ56)(&d, d0, bi)
#define AE_CVTQ56A32S(a0) \
	CSTUB_(_TIE_xt_hifi2_AE_CVTQ56A32S)(a0)
#define AE_CVT48A32(a0) \
	CSTUB_(_TIE_xt_hifi2_AE_CVT48A32)(a0)
#define AE_CVT64A32(a0) \
	CSTUB_(_TIE_xt_hifi2_AE_CVT64A32)(a0)
#define AE_CVTQ48A32S(a) \
	CSTUB_(_TIE_xt_hifi2_AE_CVTQ48A32S)(a)
#define AE_CVTQ56P32S_L(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_CVTQ56P32S_L)(d0)
#define AE_CVTQ48P24S_L(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_CVTQ48P24S_L)(d0)
#define AE_CVTQ56P32S_H(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_CVTQ56P32S_H)(d0)
#define AE_CVTQ48P24S_H(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_CVTQ48P24S_H)(d0)
#define AE_CVT64F32_H(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_CVT64F32_H)(d0)
#define AE_CVT64F32_L(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_CVT64F32_L)(d0)
#define AE_SAT48S(d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SAT48S)(d1)
#define AE_SATQ48S(d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SATQ48S)(d1)
#define AE_SATQ56S(d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SATQ56S)(d1)
#define AE_SAT24S(d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SAT24S)(d1)
#define AE_TRUNCQ32(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_TRUNCQ32)(d0)
#define AE_MINABS64S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MINABS64S)(d0, d1)
#define AE_MINABSSQ56S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MINABSSQ56S)(d0, d1)
#define AE_MAXABS64S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MAXABS64S)(d0, d1)
#define AE_MAXABSSQ56S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MAXABSSQ56S)(d0, d1)
#define AE_ROUNDSQ32F48SYM(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_ROUNDSQ32F48SYM)(d0)
#define AE_ROUNDSQ32SYM(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_ROUNDSQ32SYM)(d0)
#define AE_ROUNDSQ32F48ASYM(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_ROUNDSQ32F48ASYM)(d0)
#define AE_ROUNDSQ32ASYM(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_ROUNDSQ32ASYM)(d0)
#define AE_TRUNCA32Q48(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_TRUNCA32Q48)(d0)
#define AE_TRUNCA32Q64(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_TRUNCA32Q64)(d0)
#define AE_MOVAD32_L(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVAD32_L)(d0)
#define AE_MOVAP24S_L(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVAP24S_L)(d0)
#define AE_MOVAD32_H(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVAD32_H)(d0)
#define AE_MOVAP24S_H(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVAP24S_H)(d0)
#define AE_MOVAD16_3(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVAD16_3)(d0)
#define AE_MOVAD16_2(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVAD16_2)(d0)
#define AE_MOVAD16_1(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVAD16_1)(d0)
#define AE_MOVAD16_0(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVAD16_0)(d0)
#define AE_SRA64_32(s, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SRA64_32)(s, sa)
#define AE_PKSR24(d, ps, pos) \
	CSTUB_(_TIE_xt_hifi2_AE_PKSR24)(&d, ps, pos)
#define AE_PKSR32(d, ps, pos) \
	CSTUB_(_TIE_xt_hifi2_AE_PKSR32)(&d, ps, pos)
#define AE_TRUNCA16P24S_L(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_TRUNCA16P24S_L)(d0)
#define AE_TRUNCA16P24S_H(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_TRUNCA16P24S_H)(d0)
#define AE_ADD32(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_ADD32)(d0, d1)
#define AE_ADDP24(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_ADDP24)(d0, d1)
#define AE_SUB32(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SUB32)(d0, d1)
#define AE_SUBP24(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SUBP24)(d0, d1)
#define AE_ADDSUB32(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_ADDSUB32)(d0, d1)
#define AE_SUBADD32(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SUBADD32)(d0, d1)
#define AE_ADD16(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_ADD16)(d0, d1)
#define AE_SUB16(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SUB16)(d0, d1)
#define AE_ADD32_HL_LH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_ADD32_HL_LH)(d0, d1)
#define AE_NEG32(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_NEG32)(d0)
#define AE_NEGP24(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_NEGP24)(d0)
#define AE_ABS32(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_ABS32)(d0)
#define AE_ABSP24(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_ABSP24)(d0)
#define AE_ADD24S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_ADD24S)(d0, d1)
#define AE_ADDSP24S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_ADDSP24S)(d0, d1)
#define AE_SUB24S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SUB24S)(d0, d1)
#define AE_SUBSP24S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SUBSP24S)(d0, d1)
#define AE_ADD32S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_ADD32S)(d0, d1)
#define AE_SUB32S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SUB32S)(d0, d1)
#define AE_ADDSUB32S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_ADDSUB32S)(d0, d1)
#define AE_SUBADD32S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SUBADD32S)(d0, d1)
#define AE_ADD16S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_ADD16S)(d0, d1)
#define AE_SUB16S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SUB16S)(d0, d1)
#define AE_NEG24S(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_NEG24S)(d0)
#define AE_NEGSP24S(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_NEGSP24S)(d0)
#define AE_ABS24S(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_ABS24S)(d0)
#define AE_ABSSP24S(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_ABSSP24S)(d0)
#define AE_NEG32S(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_NEG32S)(d0)
#define AE_ABS32S(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_ABS32S)(d0)
#define AE_NEG16S(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_NEG16S)(d0)
#define AE_ABS16S(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_ABS16S)(d0)
#define AE_LT16(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_LT16)(d0, d1)
#define AE_LE16(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_LE16)(d0, d1)
#define AE_EQ16(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_EQ16)(d0, d1)
#define AE_LT32(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_LT32)(d0, d1)
#define AE_LTP24S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_LTP24S)(d0, d1)
#define AE_LE32(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_LE32)(d0, d1)
#define AE_LEP24S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_LEP24S)(d0, d1)
#define AE_EQ32(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_EQ32)(d0, d1)
#define AE_EQP24(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_EQP24)(d0, d1)
#define AE_MIN32(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MIN32)(d0, d1)
#define AE_MINP24S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MINP24S)(d0, d1)
#define AE_MINB32(d, d0, d1, bhl) \
	CSTUB_(_TIE_xt_hifi2_AE_MINB32)(&d, d0, d1, &bhl)
#define AE_MINBP24S(d, d0, d1, bhl) \
	CSTUB_(_TIE_xt_hifi2_AE_MINBP24S)(&d, d0, d1, &bhl)
#define AE_MAX32(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MAX32)(d0, d1)
#define AE_MAXP24S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MAXP24S)(d0, d1)
#define AE_MAXB32(d, d0, d1, bhl) \
	CSTUB_(_TIE_xt_hifi2_AE_MAXB32)(&d, d0, d1, &bhl)
#define AE_MAXBP24S(d, d0, d1, bhl) \
	CSTUB_(_TIE_xt_hifi2_AE_MAXBP24S)(&d, d0, d1, &bhl)
#define AE_ADD64(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_ADD64)(d0, d1)
#define AE_SUB64(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SUB64)(d0, d1)
#define AE_ADDQ56(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_ADDQ56)(d0, d1)
#define AE_SUBQ56(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SUBQ56)(d0, d1)
#define AE_NEGQ56(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_NEGQ56)(d0)
#define AE_ABSQ56(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_ABSQ56)(d0)
#define AE_NEG64(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_NEG64)(d0)
#define AE_ABS64(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_ABS64)(d0)
#define AE_ADDSQ56S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_ADDSQ56S)(d0, d1)
#define AE_SUBSQ56S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SUBSQ56S)(d0, d1)
#define AE_ADD64S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_ADD64S)(d0, d1)
#define AE_SUB64S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SUB64S)(d0, d1)
#define AE_NEGSQ56S(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_NEGSQ56S)(d0)
#define AE_ABSSQ56S(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_ABSSQ56S)(d0)
#define AE_NEG64S(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_NEG64S)(d0)
#define AE_ABS64S(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_ABS64S)(d0)
#define AE_AND(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_AND)(d0, d1)
#define AE_AND64(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_AND64)(d0, d1)
#define AE_AND32(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_AND32)(d0, d1)
#define AE_AND24(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_AND24)(d0, d1)
#define AE_AND16(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_AND16)(d0, d1)
#define AE_ANDP48(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_ANDP48)(d0, d1)
#define AE_ANDQ56(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_ANDQ56)(d0, d1)
#define AE_NAND(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_NAND)(d0, d1)
#define AE_NAND64(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_NAND64)(d0, d1)
#define AE_NAND32(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_NAND32)(d0, d1)
#define AE_NAND24(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_NAND24)(d0, d1)
#define AE_NAND16(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_NAND16)(d0, d1)
#define AE_NANDP48(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_NANDP48)(d0, d1)
#define AE_NANDQ56(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_NANDQ56)(d0, d1)
#define AE_OR(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_OR)(d0, d1)
#define AE_OR64(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_OR64)(d0, d1)
#define AE_OR32(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_OR32)(d0, d1)
#define AE_OR24(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_OR24)(d0, d1)
#define AE_OR16(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_OR16)(d0, d1)
#define AE_ORP48(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_ORP48)(d0, d1)
#define AE_ORQ56(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_ORQ56)(d0, d1)
#define AE_XOR(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_XOR)(d0, d1)
#define AE_XOR64(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_XOR64)(d0, d1)
#define AE_XOR32(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_XOR32)(d0, d1)
#define AE_XOR24(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_XOR24)(d0, d1)
#define AE_XOR16(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_XOR16)(d0, d1)
#define AE_XORP48(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_XORP48)(d0, d1)
#define AE_XORQ56(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_XORQ56)(d0, d1)
#define AE_SLAI24(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SLAI24)(d0, sa)
#define AE_SLLIP24(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SLLIP24)(d0, sa)
#define AE_SLLI24(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SLLI24)(d0, sa)
#define AE_SRLI24(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SRLI24)(d0, sa)
#define AE_SRLIP24(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SRLIP24)(d0, sa)
#define AE_SRAI24(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SRAI24)(d0, sa)
#define AE_SRAIP24(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SRAIP24)(d0, sa)
#define AE_SLAS24(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_SLAS24)(d0)
#define AE_SLLSP24(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_SLLSP24)(d0)
#define AE_SRLS24(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_SRLS24)(d0)
#define AE_SRLSP24(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_SRLSP24)(d0)
#define AE_SRAS24(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_SRAS24)(d0)
#define AE_SRASP24(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_SRASP24)(d0)
#define AE_SRAI16(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SRAI16)(d0, sa)
#define AE_SRAI16R(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SRAI16R)(d0, sa)
#define AE_SLAI32(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SLAI32)(d0, sa)
#define AE_SLLI32(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SLLI32)(d0, sa)
#define AE_SRLI32(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SRLI32)(d0, sa)
#define AE_SRAI32(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SRAI32)(d0, sa)
#define AE_SRAI32R(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SRAI32R)(d0, sa)
#define AE_SLAS32(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_SLAS32)(d0)
#define AE_SRLS32(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_SRLS32)(d0)
#define AE_SRAS32(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_SRAS32)(d0)
#define AE_SLAA32(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SLAA32)(d0, sa)
#define AE_SRLA32(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SRLA32)(d0, sa)
#define AE_SRAA32(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SRAA32)(d0, sa)
#define AE_SLLI16S(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SLLI16S)(d0, sa)
#define AE_SLAI16S(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SLAI16S)(d0, sa)
#define AE_SLAA16S(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SLAA16S)(d0, sa)
#define AE_SRAA16S(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SRAA16S)(d0, sa)
#define AE_SRAA16RS(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SRAA16RS)(d0, sa)
#define AE_SLAI24S(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SLAI24S)(d0, sa)
#define AE_SLLI24S(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SLLI24S)(d0, sa)
#define AE_SLLISP24S(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SLLISP24S)(d0, sa)
#define AE_SLAS24S(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_SLAS24S)(d0)
#define AE_SLLSSP24S(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_SLLSSP24S)(d0)
#define AE_SLLI32S(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SLLI32S)(d0, sa)
#define AE_SLAI32S(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SLAI32S)(d0, sa)
#define AE_SLAS32S(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_SLAS32S)(d0)
#define AE_SLAA32S(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SLAA32S)(d0, sa)
#define AE_SRAA32S(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SRAA32S)(d0, sa)
#define AE_SRAA32RS(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SRAA32RS)(d0, sa)
#define AE_SLASQ56(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_SLASQ56)(d0)
#define AE_SLLSQ56(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_SLLSQ56)(d0)
#define AE_SRLSQ56(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_SRLSQ56)(d0)
#define AE_SRASQ56(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_SRASQ56)(d0)
#define AE_SLAAQ56(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SLAAQ56)(d0, sa)
#define AE_SLAIQ56(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SLAIQ56)(d0, sa)
#define AE_SLLAQ56(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SLLAQ56)(d0, sa)
#define AE_SLLIQ56(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SLLIQ56)(d0, sa)
#define AE_SRLAQ56(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SRLAQ56)(d0, sa)
#define AE_SRLIQ56(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SRLIQ56)(d0, sa)
#define AE_SRAAQ56(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SRAAQ56)(d0, sa)
#define AE_SLAI64(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SLAI64)(d0, sa)
#define AE_SLLI64(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SLLI64)(d0, sa)
#define AE_SRLI64(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SRLI64)(d0, sa)
#define AE_SRAI64(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SRAI64)(d0, sa)
#define AE_SRAIQ56(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SRAIQ56)(d0, sa)
#define AE_SLAS64(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_SLAS64)(d0)
#define AE_SRLS64(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_SRLS64)(d0)
#define AE_SRAS64(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_SRAS64)(d0)
#define AE_SLAA64(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SLAA64)(d0, sa)
#define AE_SRLA64(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SRLA64)(d0, sa)
#define AE_SRAA64(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SRAA64)(d0, sa)
#define AE_SLAISQ56S(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SLAISQ56S)(d0, sa)
#define AE_SLLISQ56S(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SLLISQ56S)(d0, sa)
#define AE_SLASSQ56S(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_SLASSQ56S)(d0)
#define AE_SLLSSQ56S(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_SLLSSQ56S)(d0)
#define AE_SLAASQ56S(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SLAASQ56S)(d0, sa)
#define AE_SLLASQ56S(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SLLASQ56S)(d0, sa)
#define AE_SLAI64S(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SLAI64S)(d0, sa)
#define AE_SLLI64S(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SLLI64S)(d0, sa)
#define AE_SLAS64S(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_SLAS64S)(d0)
#define AE_SLAA64S(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SLAA64S)(d0, sa)
#define AE_LT64(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_LT64)(d0, d1)
#define AE_LTQ56S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_LTQ56S)(d0, d1)
#define AE_LE64(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_LE64)(d0, d1)
#define AE_LEQ56S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_LEQ56S)(d0, d1)
#define AE_EQ64(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_EQ64)(d0, d1)
#define AE_EQQ56(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_EQQ56)(d0, d1)
#define AE_MAX64(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MAX64)(d0, d1)
#define AE_MAXQ56S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MAXQ56S)(d0, d1)
#define AE_MAXB64(d, d0, d1, bo) \
	CSTUB_(_TIE_xt_hifi2_AE_MAXB64)(&d, d0, d1, &bo)
#define AE_MAXBQ56S(d, d0, d1, bo) \
	CSTUB_(_TIE_xt_hifi2_AE_MAXBQ56S)(&d, d0, d1, &bo)
#define AE_MIN64(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MIN64)(d0, d1)
#define AE_MINQ56S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MINQ56S)(d0, d1)
#define AE_MINB64(d, d0, d1, bo) \
	CSTUB_(_TIE_xt_hifi2_AE_MINB64)(&d, d0, d1, &bo)
#define AE_MINBQ56S(d, d0, d1, bo) \
	CSTUB_(_TIE_xt_hifi2_AE_MINBQ56S)(&d, d0, d1, &bo)
#define AE_NSA64(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_NSA64)(d0)
#define AE_NSAQ56S(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_NSAQ56S)(d0)
#define AE_NSAZ16_0(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_NSAZ16_0)(d0)
#define AE_NSAZ32_L(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_NSAZ32_L)(d0)
#define AE_MULS32F48P16S_LL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULS32F48P16S_LL)(d0, d1)
#define AE_MULFS32P16S_LL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFS32P16S_LL)(d0, d1)
#define AE_MULF32S_LL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF32S_LL)(d0, d1)
#define AE_MULFP24S_LL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFP24S_LL)(d0, d1)
#define AE_MULF24S_LL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF24S_LL)(d0, d1)
#define AE_MUL32_LL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MUL32_LL)(d0, d1)
#define AE_MULP24S_LL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULP24S_LL)(d0, d1)
#define AE_MUL24_LL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MUL24_LL)(d0, d1)
#define AE_MULS32F48P16S_LL_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULS32F48P16S_LL_S2)(d0, d1)
#define AE_MULFS32P16S_LL_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFS32P16S_LL_S2)(d0, d1)
#define AE_MULF32R_LL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF32R_LL)(d0, d1)
#define AE_MULS32F48P16S_LH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULS32F48P16S_LH)(d0, d1)
#define AE_MULFS32P16S_LH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFS32P16S_LH)(d0, d1)
#define AE_MULS32F48P16S_HL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULS32F48P16S_HL)(d0, d1)
#define AE_MULFS32P16S_HL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFS32P16S_HL)(d0, d1)
#define AE_MULF32S_LH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF32S_LH)(d0, d1)
#define AE_MULFP24S_LH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFP24S_LH)(d0, d1)
#define AE_MULF24S_LH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF24S_LH)(d0, d1)
#define AE_MULF32S_HL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF32S_HL)(d0, d1)
#define AE_MULFP24S_HL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFP24S_HL)(d0, d1)
#define AE_MULF24S_HL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF24S_HL)(d0, d1)
#define AE_MUL32_LH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MUL32_LH)(d0, d1)
#define AE_MULP24S_LH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULP24S_LH)(d0, d1)
#define AE_MUL24_LH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MUL24_LH)(d0, d1)
#define AE_MUL32_HL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MUL32_HL)(d0, d1)
#define AE_MULP24S_HL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULP24S_HL)(d0, d1)
#define AE_MUL24_HL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MUL24_HL)(d0, d1)
#define AE_MULS32F48P16S_LH_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULS32F48P16S_LH_S2)(d0, d1)
#define AE_MULFS32P16S_LH_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFS32P16S_LH_S2)(d0, d1)
#define AE_MULF32R_LH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF32R_LH)(d0, d1)
#define AE_MULF32R_HL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF32R_HL)(d0, d1)
#define AE_MULS32F48P16S_HH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULS32F48P16S_HH)(d0, d1)
#define AE_MULFS32P16S_HH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFS32P16S_HH)(d0, d1)
#define AE_MULF32S_HH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF32S_HH)(d0, d1)
#define AE_MULFP24S_HH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFP24S_HH)(d0, d1)
#define AE_MULF24S_HH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF24S_HH)(d0, d1)
#define AE_MUL32_HH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MUL32_HH)(d0, d1)
#define AE_MULP24S_HH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULP24S_HH)(d0, d1)
#define AE_MUL24_HH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MUL24_HH)(d0, d1)
#define AE_MULS32F48P16S_HH_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULS32F48P16S_HH_S2)(d0, d1)
#define AE_MULFS32P16S_HH_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFS32P16S_HH_S2)(d0, d1)
#define AE_MULF32R_HH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF32R_HH)(d0, d1)
#define AE_MULF32R_LL_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF32R_LL_S2)(d0, d1)
#define AE_MULAS32F48P16S_LL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAS32F48P16S_LL)(&d, d0, d1)
#define AE_MULAFS32P16S_LL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFS32P16S_LL)(&d, d0, d1)
#define AE_MULAF32S_LL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF32S_LL)(&d, d0, d1)
#define AE_MULAFP24S_LL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFP24S_LL)(&d, d0, d1)
#define AE_MULAF24S_LL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF24S_LL)(&d, d0, d1)
#define AE_MULA32_LL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULA32_LL)(&d, d0, d1)
#define AE_MULAP24S_LL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAP24S_LL)(&d, d0, d1)
#define AE_MULA24_LL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULA24_LL)(&d, d0, d1)
#define AE_MULAS32F48P16S_LL_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAS32F48P16S_LL_S2)(&d, d0, d1)
#define AE_MULAFS32P16S_LL_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFS32P16S_LL_S2)(&d, d0, d1)
#define AE_MULAF32R_LL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF32R_LL)(&d, d0, d1)
#define AE_MULAS32F48P16S_LH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAS32F48P16S_LH)(&d, d0, d1)
#define AE_MULAFS32P16S_LH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFS32P16S_LH)(&d, d0, d1)
#define AE_MULAS32F48P16S_HL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAS32F48P16S_HL)(&d, d0, d1)
#define AE_MULAFS32P16S_HL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFS32P16S_HL)(&d, d0, d1)
#define AE_MULAF32S_LH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF32S_LH)(&d, d0, d1)
#define AE_MULAFP24S_LH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFP24S_LH)(&d, d0, d1)
#define AE_MULAF24S_LH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF24S_LH)(&d, d0, d1)
#define AE_MULAF32S_HL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF32S_HL)(&d, d0, d1)
#define AE_MULAFP24S_HL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFP24S_HL)(&d, d0, d1)
#define AE_MULAF24S_HL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF24S_HL)(&d, d0, d1)
#define AE_MULA32_LH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULA32_LH)(&d, d0, d1)
#define AE_MULAP24S_LH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAP24S_LH)(&d, d0, d1)
#define AE_MULA24_LH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULA24_LH)(&d, d0, d1)
#define AE_MULA32_HL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULA32_HL)(&d, d0, d1)
#define AE_MULAP24S_HL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAP24S_HL)(&d, d0, d1)
#define AE_MULA24_HL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULA24_HL)(&d, d0, d1)
#define AE_MULAS32F48P16S_LH_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAS32F48P16S_LH_S2)(&d, d0, d1)
#define AE_MULAFS32P16S_LH_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFS32P16S_LH_S2)(&d, d0, d1)
#define AE_MULAF32R_LH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF32R_LH)(&d, d0, d1)
#define AE_MULAF32R_HL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF32R_HL)(&d, d0, d1)
#define AE_MULAS32F48P16S_HH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAS32F48P16S_HH)(&d, d0, d1)
#define AE_MULAFS32P16S_HH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFS32P16S_HH)(&d, d0, d1)
#define AE_MULAF32S_HH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF32S_HH)(&d, d0, d1)
#define AE_MULAFP24S_HH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFP24S_HH)(&d, d0, d1)
#define AE_MULAF24S_HH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF24S_HH)(&d, d0, d1)
#define AE_MULA32_HH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULA32_HH)(&d, d0, d1)
#define AE_MULAP24S_HH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAP24S_HH)(&d, d0, d1)
#define AE_MULA24_HH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULA24_HH)(&d, d0, d1)
#define AE_MULAS32F48P16S_HH_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAS32F48P16S_HH_S2)(&d, d0, d1)
#define AE_MULAFS32P16S_HH_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFS32P16S_HH_S2)(&d, d0, d1)
#define AE_MULAF32R_HH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF32R_HH)(&d, d0, d1)
#define AE_MULAF32R_LL_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF32R_LL_S2)(&d, d0, d1)
#define AE_MULSS32F48P16S_LL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSS32F48P16S_LL)(&d, d0, d1)
#define AE_MULSFS32P16S_LL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFS32P16S_LL)(&d, d0, d1)
#define AE_MULSF32S_LL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF32S_LL)(&d, d0, d1)
#define AE_MULSFP24S_LL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFP24S_LL)(&d, d0, d1)
#define AE_MULSF24S_LL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF24S_LL)(&d, d0, d1)
#define AE_MULS32_LL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULS32_LL)(&d, d0, d1)
#define AE_MULSP24S_LL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSP24S_LL)(&d, d0, d1)
#define AE_MULS24_LL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULS24_LL)(&d, d0, d1)
#define AE_MULSS32F48P16S_LL_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSS32F48P16S_LL_S2)(&d, d0, d1)
#define AE_MULSFS32P16S_LL_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFS32P16S_LL_S2)(&d, d0, d1)
#define AE_MULSF32R_LL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF32R_LL)(&d, d0, d1)
#define AE_MULSS32F48P16S_LH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSS32F48P16S_LH)(&d, d0, d1)
#define AE_MULSFS32P16S_LH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFS32P16S_LH)(&d, d0, d1)
#define AE_MULSS32F48P16S_HL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSS32F48P16S_HL)(&d, d0, d1)
#define AE_MULSFS32P16S_HL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFS32P16S_HL)(&d, d0, d1)
#define AE_MULSF32S_LH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF32S_LH)(&d, d0, d1)
#define AE_MULSFP24S_LH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFP24S_LH)(&d, d0, d1)
#define AE_MULSF24S_LH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF24S_LH)(&d, d0, d1)
#define AE_MULSF32S_HL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF32S_HL)(&d, d0, d1)
#define AE_MULSFP24S_HL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFP24S_HL)(&d, d0, d1)
#define AE_MULSF24S_HL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF24S_HL)(&d, d0, d1)
#define AE_MULS32_LH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULS32_LH)(&d, d0, d1)
#define AE_MULSP24S_LH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSP24S_LH)(&d, d0, d1)
#define AE_MULS24_LH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULS24_LH)(&d, d0, d1)
#define AE_MULS32_HL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULS32_HL)(&d, d0, d1)
#define AE_MULSP24S_HL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSP24S_HL)(&d, d0, d1)
#define AE_MULS24_HL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULS24_HL)(&d, d0, d1)
#define AE_MULSS32F48P16S_LH_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSS32F48P16S_LH_S2)(&d, d0, d1)
#define AE_MULSFS32P16S_LH_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFS32P16S_LH_S2)(&d, d0, d1)
#define AE_MULSF32R_LH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF32R_LH)(&d, d0, d1)
#define AE_MULSF32R_HL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF32R_HL)(&d, d0, d1)
#define AE_MULSS32F48P16S_HH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSS32F48P16S_HH)(&d, d0, d1)
#define AE_MULSFS32P16S_HH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFS32P16S_HH)(&d, d0, d1)
#define AE_MULSF32S_HH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF32S_HH)(&d, d0, d1)
#define AE_MULSFP24S_HH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFP24S_HH)(&d, d0, d1)
#define AE_MULSF24S_HH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF24S_HH)(&d, d0, d1)
#define AE_MULS32_HH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULS32_HH)(&d, d0, d1)
#define AE_MULSP24S_HH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSP24S_HH)(&d, d0, d1)
#define AE_MULS24_HH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULS24_HH)(&d, d0, d1)
#define AE_MULSS32F48P16S_HH_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSS32F48P16S_HH_S2)(&d, d0, d1)
#define AE_MULSFS32P16S_HH_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFS32P16S_HH_S2)(&d, d0, d1)
#define AE_MULSF32R_HH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF32R_HH)(&d, d0, d1)
#define AE_MULSF32R_LL_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF32R_LL_S2)(&d, d0, d1)
#define AE_MULF32S_LL_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF32S_LL_S2)(d0, d1)
#define AE_MULFP24S_LL_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFP24S_LL_S2)(d0, d1)
#define AE_MULF24S_LL_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF24S_LL_S2)(d0, d1)
#define AE_MULAF32S_LL_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF32S_LL_S2)(&d, d0, d1)
#define AE_MULAFP24S_LL_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFP24S_LL_S2)(&d, d0, d1)
#define AE_MULAF24S_LL_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF24S_LL_S2)(&d, d0, d1)
#define AE_MUL32_LL_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MUL32_LL_S2)(d0, d1)
#define AE_MULP24S_LL_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULP24S_LL_S2)(d0, d1)
#define AE_MUL24_LL_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MUL24_LL_S2)(d0, d1)
#define AE_MULA32_LL_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULA32_LL_S2)(&d, d0, d1)
#define AE_MULAP24S_LL_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAP24S_LL_S2)(&d, d0, d1)
#define AE_MULA24_LL_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULA24_LL_S2)(&d, d0, d1)
#define AE_MUL32U_LL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MUL32U_LL)(d0, d1)
#define AE_MULA32U_LL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULA32U_LL)(&d, d0, d1)
#define AE_MULS32U_LL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULS32U_LL)(&d, d0, d1)
#define AE_MULAFS56P24S_LL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFS56P24S_LL)(&d, d0, d1)
#define AE_MULAS56P24S_LL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAS56P24S_LL)(&d, d0, d1)
#define AE_MULAFS56P24S_LH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFS56P24S_LH)(&d, d0, d1)
#define AE_MULAFS56P24S_HL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFS56P24S_HL)(&d, d0, d1)
#define AE_MULAS56P24S_LH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAS56P24S_LH)(&d, d0, d1)
#define AE_MULAS56P24S_HL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAS56P24S_HL)(&d, d0, d1)
#define AE_MULAFS56P24S_HH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFS56P24S_HH)(&d, d0, d1)
#define AE_MULAS56P24S_HH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAS56P24S_HH)(&d, d0, d1)
#define AE_MULSFS56P24S_LL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFS56P24S_LL)(&d, d0, d1)
#define AE_MULSS56P24S_LL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSS56P24S_LL)(&d, d0, d1)
#define AE_MULSFS56P24S_LH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFS56P24S_LH)(&d, d0, d1)
#define AE_MULSFS56P24S_HL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFS56P24S_HL)(&d, d0, d1)
#define AE_MULSS56P24S_LH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSS56P24S_LH)(&d, d0, d1)
#define AE_MULSS56P24S_HL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSS56P24S_HL)(&d, d0, d1)
#define AE_MULSFS56P24S_HH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFS56P24S_HH)(&d, d0, d1)
#define AE_MULSS56P24S_HH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSS56P24S_HH)(&d, d0, d1)
#define AE_MULF16SS_33(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF16SS_33)(d0, d1)
#define AE_MULF16SS_22(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF16SS_22)(d0, d1)
#define AE_MULF16SS_32(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF16SS_32)(d0, d1)
#define AE_MULF16SS_21(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF16SS_21)(d0, d1)
#define AE_MULF16SS_31(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF16SS_31)(d0, d1)
#define AE_MULF16SS_30(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF16SS_30)(d0, d1)
#define AE_MULF16SS_10(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF16SS_10)(d0, d1)
#define AE_MULF16SS_20(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF16SS_20)(d0, d1)
#define AE_MULF16SS_11(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF16SS_11)(d0, d1)
#define AE_MULF16SS_00(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF16SS_00)(d0, d1)
#define AE_MULF16SS_00_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF16SS_00_S2)(d0, d1)
#define AE_MULSF16SS_33(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF16SS_33)(&d, d0, d1)
#define AE_MULSF16SS_22(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF16SS_22)(&d, d0, d1)
#define AE_MULSF16SS_32(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF16SS_32)(&d, d0, d1)
#define AE_MULSF16SS_21(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF16SS_21)(&d, d0, d1)
#define AE_MULSF16SS_31(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF16SS_31)(&d, d0, d1)
#define AE_MULSF16SS_30(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF16SS_30)(&d, d0, d1)
#define AE_MULSF16SS_10(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF16SS_10)(&d, d0, d1)
#define AE_MULSF16SS_20(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF16SS_20)(&d, d0, d1)
#define AE_MULSF16SS_11(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF16SS_11)(&d, d0, d1)
#define AE_MULSF16SS_00(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF16SS_00)(&d, d0, d1)
#define AE_MULSF16SS_00_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF16SS_00_S2)(&d, d0, d1)
#define AE_MULAF16SS_33(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF16SS_33)(&d, d0, d1)
#define AE_MULAF16SS_22(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF16SS_22)(&d, d0, d1)
#define AE_MULAF16SS_32(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF16SS_32)(&d, d0, d1)
#define AE_MULAF16SS_21(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF16SS_21)(&d, d0, d1)
#define AE_MULAF16SS_31(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF16SS_31)(&d, d0, d1)
#define AE_MULAF16SS_30(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF16SS_30)(&d, d0, d1)
#define AE_MULAF16SS_10(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF16SS_10)(&d, d0, d1)
#define AE_MULAF16SS_20(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF16SS_20)(&d, d0, d1)
#define AE_MULAF16SS_11(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF16SS_11)(&d, d0, d1)
#define AE_MULAF16SS_00(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF16SS_00)(&d, d0, d1)
#define AE_MULAF16SS_00_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF16SS_00_S2)(&d, d0, d1)
#define AE_MULAAFD16SS_33_22(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAFD16SS_33_22)(&d, d0, d1)
#define AE_MULAAFD16SS_33_22_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAFD16SS_33_22_S2)(&d, d0, d1)
#define AE_MULAAFD16SS_13_02(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAFD16SS_13_02)(&d, d0, d1)
#define AE_MULAAFD16SS_13_02_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAFD16SS_13_02_S2)(&d, d0, d1)
#define AE_MULAAFD16SS_11_00(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAFD16SS_11_00)(&d, d0, d1)
#define AE_MULAAFD16SS_11_00_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAFD16SS_11_00_S2)(&d, d0, d1)
#define AE_MULSSFD16SS_33_22(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSSFD16SS_33_22)(&d, d0, d1)
#define AE_MULSSFD16SS_33_22_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSSFD16SS_33_22_S2)(&d, d0, d1)
#define AE_MULSSFD16SS_13_02(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSSFD16SS_13_02)(&d, d0, d1)
#define AE_MULSSFD16SS_13_02_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSSFD16SS_13_02_S2)(&d, d0, d1)
#define AE_MULSSFD16SS_11_00(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSSFD16SS_11_00)(&d, d0, d1)
#define AE_MULSSFD16SS_11_00_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSSFD16SS_11_00_S2)(&d, d0, d1)
#define AE_MULZAAFD16SS_33_22(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAFD16SS_33_22)(d0, d1)
#define AE_MULZAAFD16SS_33_22_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAFD16SS_33_22_S2)(d0, d1)
#define AE_MULZAAFD16SS_13_02(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAFD16SS_13_02)(d0, d1)
#define AE_MULZAAFD16SS_13_02_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAFD16SS_13_02_S2)(d0, d1)
#define AE_MULZAAFD16SS_11_00(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAFD16SS_11_00)(d0, d1)
#define AE_MULZAAFD16SS_11_00_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAFD16SS_11_00_S2)(d0, d1)
#define AE_MULZSSFD16SS_33_22(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSFD16SS_33_22)(d0, d1)
#define AE_MULZSSFD16SS_33_22_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSFD16SS_33_22_S2)(d0, d1)
#define AE_MULZSSFD16SS_13_02(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSFD16SS_13_02)(d0, d1)
#define AE_MULZSSFD16SS_13_02_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSFD16SS_13_02_S2)(d0, d1)
#define AE_MULZSSFD16SS_11_00(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSFD16SS_11_00)(d0, d1)
#define AE_MULZSSFD16SS_11_00_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSFD16SS_11_00_S2)(d0, d1)
#define AE_MULF48Q32SP16S_L(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF48Q32SP16S_L)(d0, d1)
#define AE_MULFQ32SP16S_L(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFQ32SP16S_L)(d0, d1)
#define AE_MULF48Q32SP16S_L_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF48Q32SP16S_L_S2)(d0, d1)
#define AE_MULFQ32SP16S_L_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFQ32SP16S_L_S2)(d0, d1)
#define AE_MULF48Q32SP16U_L(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF48Q32SP16U_L)(d0, d1)
#define AE_MULFQ32SP16U_L(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFQ32SP16U_L)(d0, d1)
#define AE_MULF48Q32SP16U_L_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF48Q32SP16U_L_S2)(d0, d1)
#define AE_MULFQ32SP16U_L_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFQ32SP16U_L_S2)(d0, d1)
#define AE_MULQ32SP16S_L(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULQ32SP16S_L)(d0, d1)
#define AE_MULQ32SP16S_L_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULQ32SP16S_L_S2)(d0, d1)
#define AE_MULQ32SP16U_L(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULQ32SP16U_L)(d0, d1)
#define AE_MULQ32SP16U_L_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULQ32SP16U_L_S2)(d0, d1)
#define AE_MULAF48Q32SP16S_L(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF48Q32SP16S_L)(&d, d0, d1)
#define AE_MULAFQ32SP16S_L(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFQ32SP16S_L)(&d, d0, d1)
#define AE_MULAF48Q32SP16S_L_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF48Q32SP16S_L_S2)(&d, d0, d1)
#define AE_MULAFQ32SP16S_L_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFQ32SP16S_L_S2)(&d, d0, d1)
#define AE_MULAF48Q32SP16U_L(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF48Q32SP16U_L)(&d, d0, d1)
#define AE_MULAFQ32SP16U_L(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFQ32SP16U_L)(&d, d0, d1)
#define AE_MULAF48Q32SP16U_L_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF48Q32SP16U_L_S2)(&d, d0, d1)
#define AE_MULAFQ32SP16U_L_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFQ32SP16U_L_S2)(&d, d0, d1)
#define AE_MULAQ32SP16S_L(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAQ32SP16S_L)(&d, d0, d1)
#define AE_MULAQ32SP16S_L_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAQ32SP16S_L_S2)(&d, d0, d1)
#define AE_MULAQ32SP16U_L(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAQ32SP16U_L)(&d, d0, d1)
#define AE_MULAQ32SP16U_L_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAQ32SP16U_L_S2)(&d, d0, d1)
#define AE_MULSF48Q32SP16S_L(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF48Q32SP16S_L)(&d, d0, d1)
#define AE_MULSFQ32SP16S_L(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFQ32SP16S_L)(&d, d0, d1)
#define AE_MULSF48Q32SP16S_L_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF48Q32SP16S_L_S2)(&d, d0, d1)
#define AE_MULSFQ32SP16S_L_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFQ32SP16S_L_S2)(&d, d0, d1)
#define AE_MULSF48Q32SP16U_L(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF48Q32SP16U_L)(&d, d0, d1)
#define AE_MULSFQ32SP16U_L(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFQ32SP16U_L)(&d, d0, d1)
#define AE_MULSF48Q32SP16U_L_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF48Q32SP16U_L_S2)(&d, d0, d1)
#define AE_MULSFQ32SP16U_L_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFQ32SP16U_L_S2)(&d, d0, d1)
#define AE_MULSQ32SP16S_L(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSQ32SP16S_L)(&d, d0, d1)
#define AE_MULSQ32SP16S_L_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSQ32SP16S_L_S2)(&d, d0, d1)
#define AE_MULSQ32SP16U_L(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSQ32SP16U_L)(&d, d0, d1)
#define AE_MULSQ32SP16U_L_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSQ32SP16U_L_S2)(&d, d0, d1)
#define AE_MULFP24X2RA(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFP24X2RA)(d0, d1)
#define AE_MULFP24X2R(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFP24X2R)(d0, d1)
#define AE_MULP24X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULP24X2)(d0, d1)
#define AE_MULFP24X2RA_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFP24X2RA_S2)(d0, d1)
#define AE_MULFP24X2R_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFP24X2R_S2)(d0, d1)
#define AE_MULP24X2_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULP24X2_S2)(d0, d1)
#define AE_MULAFP24X2RA(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFP24X2RA)(&d, d0, d1)
#define AE_MULAFP24X2R(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFP24X2R)(&d, d0, d1)
#define AE_MULAP24X2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAP24X2)(&d, d0, d1)
#define AE_MULAFP24X2RA_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFP24X2RA_S2)(&d, d0, d1)
#define AE_MULAFP24X2R_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFP24X2R_S2)(&d, d0, d1)
#define AE_MULAP24X2_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAP24X2_S2)(&d, d0, d1)
#define AE_MULSFP24X2RA(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFP24X2RA)(&d, d0, d1)
#define AE_MULSFP24X2R(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFP24X2R)(&d, d0, d1)
#define AE_MULSP24X2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSP24X2)(&d, d0, d1)
#define AE_MULSFP24X2RA_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFP24X2RA_S2)(&d, d0, d1)
#define AE_MULSFP24X2R_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFP24X2R_S2)(&d, d0, d1)
#define AE_MULSP24X2_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSP24X2_S2)(&d, d0, d1)
#define AE_MULZAAFD24_HH_LL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAFD24_HH_LL)(d0, d1)
#define AE_MULZAAFP24S_HH_LL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAFP24S_HH_LL)(d0, d1)
#define AE_MULZAAD24_HH_LL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAD24_HH_LL)(d0, d1)
#define AE_MULZAAP24S_HH_LL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAP24S_HH_LL)(d0, d1)
#define AE_MULZAAFD24_HH_LL_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAFD24_HH_LL_S2)(d0, d1)
#define AE_MULZAAFP24S_HH_LL_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAFP24S_HH_LL_S2)(d0, d1)
#define AE_MULZAAD24_HH_LL_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAD24_HH_LL_S2)(d0, d1)
#define AE_MULZAAP24S_HH_LL_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAP24S_HH_LL_S2)(d0, d1)
#define AE_MULZAAFD24_HL_LH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAFD24_HL_LH)(d0, d1)
#define AE_MULZAAFP24S_HL_LH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAFP24S_HL_LH)(d0, d1)
#define AE_MULZAAD24_HL_LH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAD24_HL_LH)(d0, d1)
#define AE_MULZAAP24S_HL_LH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAP24S_HL_LH)(d0, d1)
#define AE_MULZAAFD24_HL_LH_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAFD24_HL_LH_S2)(d0, d1)
#define AE_MULZAAFP24S_HL_LH_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAFP24S_HL_LH_S2)(d0, d1)
#define AE_MULZAAD24_HL_LH_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAD24_HL_LH_S2)(d0, d1)
#define AE_MULZAAP24S_HL_LH_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAP24S_HL_LH_S2)(d0, d1)
#define AE_MULZASFD24_HH_LL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASFD24_HH_LL)(d0, d1)
#define AE_MULZASFP24S_HH_LL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASFP24S_HH_LL)(d0, d1)
#define AE_MULZASD24_HH_LL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASD24_HH_LL)(d0, d1)
#define AE_MULZASP24S_HH_LL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASP24S_HH_LL)(d0, d1)
#define AE_MULZASFD24_HH_LL_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASFD24_HH_LL_S2)(d0, d1)
#define AE_MULZASFP24S_HH_LL_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASFP24S_HH_LL_S2)(d0, d1)
#define AE_MULZASD24_HH_LL_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASD24_HH_LL_S2)(d0, d1)
#define AE_MULZASP24S_HH_LL_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASP24S_HH_LL_S2)(d0, d1)
#define AE_MULZASFD24_HL_LH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASFD24_HL_LH)(d0, d1)
#define AE_MULZASFP24S_HL_LH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASFP24S_HL_LH)(d0, d1)
#define AE_MULZSAF48P24S_HL_LH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAF48P24S_HL_LH)(d0, d1)
#define AE_MULZSAFP24S_HL_LH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAFP24S_HL_LH)(d0, d1)
#define AE_MULZASD24_HL_LH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASD24_HL_LH)(d0, d1)
#define AE_MULZASP24S_HL_LH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASP24S_HL_LH)(d0, d1)
#define AE_MULZSA64P24S_HL_LH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSA64P24S_HL_LH)(d0, d1)
#define AE_MULZSAP24S_HL_LH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAP24S_HL_LH)(d0, d1)
#define AE_MULZASFD24_HL_LH_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASFD24_HL_LH_S2)(d0, d1)
#define AE_MULZASFP24S_HL_LH_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASFP24S_HL_LH_S2)(d0, d1)
#define AE_MULZSAF48P24S_HL_LH_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAF48P24S_HL_LH_S2)(d0, d1)
#define AE_MULZSAFP24S_HL_LH_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAFP24S_HL_LH_S2)(d0, d1)
#define AE_MULZASD24_HL_LH_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASD24_HL_LH_S2)(d0, d1)
#define AE_MULZASP24S_HL_LH_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASP24S_HL_LH_S2)(d0, d1)
#define AE_MULZSA64P24S_HL_LH_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSA64P24S_HL_LH_S2)(d0, d1)
#define AE_MULZSAP24S_HL_LH_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAP24S_HL_LH_S2)(d0, d1)
#define AE_MULZSAFD24_HH_LL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAFD24_HH_LL)(d0, d1)
#define AE_MULZSAFP24S_HH_LL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAFP24S_HH_LL)(d0, d1)
#define AE_MULZSAD24_HH_LL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAD24_HH_LL)(d0, d1)
#define AE_MULZSAP24S_HH_LL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAP24S_HH_LL)(d0, d1)
#define AE_MULZSAFD24_HH_LL_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAFD24_HH_LL_S2)(d0, d1)
#define AE_MULZSAFP24S_HH_LL_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAFP24S_HH_LL_S2)(d0, d1)
#define AE_MULZSAD24_HH_LL_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAD24_HH_LL_S2)(d0, d1)
#define AE_MULZSAP24S_HH_LL_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAP24S_HH_LL_S2)(d0, d1)
#define AE_MULZSSFD24_HH_LL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSFD24_HH_LL)(d0, d1)
#define AE_MULZSSFP24S_HH_LL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSFP24S_HH_LL)(d0, d1)
#define AE_MULZSSD24_HH_LL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSD24_HH_LL)(d0, d1)
#define AE_MULZSSP24S_HH_LL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSP24S_HH_LL)(d0, d1)
#define AE_MULZSSFD24_HH_LL_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSFD24_HH_LL_S2)(d0, d1)
#define AE_MULZSSFP24S_HH_LL_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSFP24S_HH_LL_S2)(d0, d1)
#define AE_MULZSSD24_HH_LL_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSD24_HH_LL_S2)(d0, d1)
#define AE_MULZSSP24S_HH_LL_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSP24S_HH_LL_S2)(d0, d1)
#define AE_MULZSSFD24_HL_LH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSFD24_HL_LH)(d0, d1)
#define AE_MULZSSFP24S_HL_LH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSFP24S_HL_LH)(d0, d1)
#define AE_MULZSSD24_HL_LH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSD24_HL_LH)(d0, d1)
#define AE_MULZSSP24S_HL_LH(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSP24S_HL_LH)(d0, d1)
#define AE_MULZSSFD24_HL_LH_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSFD24_HL_LH_S2)(d0, d1)
#define AE_MULZSSFP24S_HL_LH_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSFP24S_HL_LH_S2)(d0, d1)
#define AE_MULZSSD24_HL_LH_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSD24_HL_LH_S2)(d0, d1)
#define AE_MULZSSP24S_HL_LH_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSP24S_HL_LH_S2)(d0, d1)
#define AE_MULAAFD24_HH_LL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAFD24_HH_LL)(&d, d0, d1)
#define AE_MULAAFP24S_HH_LL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAFP24S_HH_LL)(&d, d0, d1)
#define AE_MULAAD24_HH_LL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAD24_HH_LL)(&d, d0, d1)
#define AE_MULAAP24S_HH_LL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAP24S_HH_LL)(&d, d0, d1)
#define AE_MULAAFD24_HH_LL_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAFD24_HH_LL_S2)(&d, d0, d1)
#define AE_MULAAFP24S_HH_LL_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAFP24S_HH_LL_S2)(&d, d0, d1)
#define AE_MULAAD24_HH_LL_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAD24_HH_LL_S2)(&d, d0, d1)
#define AE_MULAAP24S_HH_LL_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAP24S_HH_LL_S2)(&d, d0, d1)
#define AE_MULAAFD24_HL_LH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAFD24_HL_LH)(&d, d0, d1)
#define AE_MULAAFP24S_HL_LH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAFP24S_HL_LH)(&d, d0, d1)
#define AE_MULAAD24_HL_LH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAD24_HL_LH)(&d, d0, d1)
#define AE_MULAAP24S_HL_LH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAP24S_HL_LH)(&d, d0, d1)
#define AE_MULAAFD24_HL_LH_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAFD24_HL_LH_S2)(&d, d0, d1)
#define AE_MULAAFP24S_HL_LH_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAFP24S_HL_LH_S2)(&d, d0, d1)
#define AE_MULAAD24_HL_LH_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAD24_HL_LH_S2)(&d, d0, d1)
#define AE_MULAAP24S_HL_LH_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAP24S_HL_LH_S2)(&d, d0, d1)
#define AE_MULASFD24_HH_LL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULASFD24_HH_LL)(&d, d0, d1)
#define AE_MULASFP24S_HH_LL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULASFP24S_HH_LL)(&d, d0, d1)
#define AE_MULASD24_HH_LL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULASD24_HH_LL)(&d, d0, d1)
#define AE_MULASP24S_HH_LL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULASP24S_HH_LL)(&d, d0, d1)
#define AE_MULASFD24_HH_LL_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULASFD24_HH_LL_S2)(&d, d0, d1)
#define AE_MULASFP24S_HH_LL_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULASFP24S_HH_LL_S2)(&d, d0, d1)
#define AE_MULASD24_HH_LL_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULASD24_HH_LL_S2)(&d, d0, d1)
#define AE_MULASP24S_HH_LL_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULASP24S_HH_LL_S2)(&d, d0, d1)
#define AE_MULASFD24_HL_LH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULASFD24_HL_LH)(&d, d0, d1)
#define AE_MULASFP24S_HL_LH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULASFP24S_HL_LH)(&d, d0, d1)
#define AE_MULSAF48P24S_HL_LH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSAF48P24S_HL_LH)(&d, d0, d1)
#define AE_MULSAFP24S_HL_LH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSAFP24S_HL_LH)(&d, d0, d1)
#define AE_MULASD24_HL_LH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULASD24_HL_LH)(&d, d0, d1)
#define AE_MULASP24S_HL_LH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULASP24S_HL_LH)(&d, d0, d1)
#define AE_MULSA64P24S_HL_LH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSA64P24S_HL_LH)(&d, d0, d1)
#define AE_MULSAP24S_HL_LH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSAP24S_HL_LH)(&d, d0, d1)
#define AE_MULASFD24_HL_LH_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULASFD24_HL_LH_S2)(&d, d0, d1)
#define AE_MULASFP24S_HL_LH_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULASFP24S_HL_LH_S2)(&d, d0, d1)
#define AE_MULSAF48P24S_HL_LH_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSAF48P24S_HL_LH_S2)(&d, d0, d1)
#define AE_MULSAFP24S_HL_LH_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSAFP24S_HL_LH_S2)(&d, d0, d1)
#define AE_MULASD24_HL_LH_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULASD24_HL_LH_S2)(&d, d0, d1)
#define AE_MULASP24S_HL_LH_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULASP24S_HL_LH_S2)(&d, d0, d1)
#define AE_MULSA64P24S_HL_LH_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSA64P24S_HL_LH_S2)(&d, d0, d1)
#define AE_MULSAP24S_HL_LH_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSAP24S_HL_LH_S2)(&d, d0, d1)
#define AE_MULSAFD24_HH_LL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSAFD24_HH_LL)(&d, d0, d1)
#define AE_MULSAFP24S_HH_LL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSAFP24S_HH_LL)(&d, d0, d1)
#define AE_MULSAD24_HH_LL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSAD24_HH_LL)(&d, d0, d1)
#define AE_MULSAP24S_HH_LL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSAP24S_HH_LL)(&d, d0, d1)
#define AE_MULSAFD24_HH_LL_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSAFD24_HH_LL_S2)(&d, d0, d1)
#define AE_MULSAFP24S_HH_LL_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSAFP24S_HH_LL_S2)(&d, d0, d1)
#define AE_MULSAD24_HH_LL_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSAD24_HH_LL_S2)(&d, d0, d1)
#define AE_MULSAP24S_HH_LL_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSAP24S_HH_LL_S2)(&d, d0, d1)
#define AE_MULSSFD24_HH_LL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSSFD24_HH_LL)(&d, d0, d1)
#define AE_MULSSFP24S_HH_LL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSSFP24S_HH_LL)(&d, d0, d1)
#define AE_MULSSD24_HH_LL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSSD24_HH_LL)(&d, d0, d1)
#define AE_MULSSP24S_HH_LL(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSSP24S_HH_LL)(&d, d0, d1)
#define AE_MULSSFD24_HH_LL_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSSFD24_HH_LL_S2)(&d, d0, d1)
#define AE_MULSSFP24S_HH_LL_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSSFP24S_HH_LL_S2)(&d, d0, d1)
#define AE_MULSSD24_HH_LL_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSSD24_HH_LL_S2)(&d, d0, d1)
#define AE_MULSSP24S_HH_LL_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSSP24S_HH_LL_S2)(&d, d0, d1)
#define AE_MULSSFD24_HL_LH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSSFD24_HL_LH)(&d, d0, d1)
#define AE_MULSSFP24S_HL_LH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSSFP24S_HL_LH)(&d, d0, d1)
#define AE_MULSSD24_HL_LH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSSD24_HL_LH)(&d, d0, d1)
#define AE_MULSSP24S_HL_LH(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSSP24S_HL_LH)(&d, d0, d1)
#define AE_MULSSFD24_HL_LH_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSSFD24_HL_LH_S2)(&d, d0, d1)
#define AE_MULSSFP24S_HL_LH_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSSFP24S_HL_LH_S2)(&d, d0, d1)
#define AE_MULSSD24_HL_LH_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSSD24_HL_LH_S2)(&d, d0, d1)
#define AE_MULSSP24S_HL_LH_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSSP24S_HL_LH_S2)(&d, d0, d1)
#define AE_MULSRFQ32SP24S_H(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSRFQ32SP24S_H)(&d, d0, d1)
#define AE_MULSRFQ32SP24S_L(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSRFQ32SP24S_L)(&d, d0, d1)
#define AE_MULSRFQ32SP24S_H_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSRFQ32SP24S_H_S2)(&d, d0, d1)
#define AE_MULSRFQ32SP24S_L_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSRFQ32SP24S_L_S2)(&d, d0, d1)
#define AE_MULARFQ32SP24S_H(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULARFQ32SP24S_H)(&d, d0, d1)
#define AE_MULARFQ32SP24S_L(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULARFQ32SP24S_L)(&d, d0, d1)
#define AE_MULARFQ32SP24S_H_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULARFQ32SP24S_H_S2)(&d, d0, d1)
#define AE_MULARFQ32SP24S_L_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULARFQ32SP24S_L_S2)(&d, d0, d1)
#define AE_MULRFQ32SP24S_H(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULRFQ32SP24S_H)(d0, d1)
#define AE_MULRFQ32SP24S_L(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULRFQ32SP24S_L)(d0, d1)
#define AE_MULRFQ32SP24S_H_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULRFQ32SP24S_H_S2)(d0, d1)
#define AE_MULRFQ32SP24S_L_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULRFQ32SP24S_L_S2)(d0, d1)
#define AE_MULSFQ32SP24S_H(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFQ32SP24S_H)(&d, d0, d1)
#define AE_MULSFQ32SP24S_L(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFQ32SP24S_L)(&d, d0, d1)
#define AE_MULSFQ32SP24S_H_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFQ32SP24S_H_S2)(&d, d0, d1)
#define AE_MULSFQ32SP24S_L_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFQ32SP24S_L_S2)(&d, d0, d1)
#define AE_MULAFQ32SP24S_H(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFQ32SP24S_H)(&d, d0, d1)
#define AE_MULAFQ32SP24S_L(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFQ32SP24S_L)(&d, d0, d1)
#define AE_MULAFQ32SP24S_H_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFQ32SP24S_H_S2)(&d, d0, d1)
#define AE_MULAFQ32SP24S_L_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFQ32SP24S_L_S2)(&d, d0, d1)
#define AE_MULFQ32SP24S_H(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFQ32SP24S_H)(d0, d1)
#define AE_MULFQ32SP24S_L(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFQ32SP24S_L)(d0, d1)
#define AE_MULFQ32SP24S_H_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFQ32SP24S_H_S2)(d0, d1)
#define AE_MULFQ32SP24S_L_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFQ32SP24S_L_S2)(d0, d1)
#define AE_MULF32X16_L0(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF32X16_L0)(d1, d0)
#define AE_MUL32X16_L0(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MUL32X16_L0)(d1, d0)
#define AE_MULF32X16_L0_S2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF32X16_L0_S2)(d1, d0)
#define AE_MUL32X16_L0_S2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MUL32X16_L0_S2)(d1, d0)
#define AE_MULF32X16_L1(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF32X16_L1)(d1, d0)
#define AE_MUL32X16_L1(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MUL32X16_L1)(d1, d0)
#define AE_MULF32X16_L1_S2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF32X16_L1_S2)(d1, d0)
#define AE_MUL32X16_L1_S2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MUL32X16_L1_S2)(d1, d0)
#define AE_MULF32X16_L2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF32X16_L2)(d1, d0)
#define AE_MUL32X16_L2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MUL32X16_L2)(d1, d0)
#define AE_MULF32X16_L2_S2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF32X16_L2_S2)(d1, d0)
#define AE_MUL32X16_L2_S2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MUL32X16_L2_S2)(d1, d0)
#define AE_MULF32X16_L3(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF32X16_L3)(d1, d0)
#define AE_MUL32X16_L3(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MUL32X16_L3)(d1, d0)
#define AE_MULF32X16_L3_S2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF32X16_L3_S2)(d1, d0)
#define AE_MUL32X16_L3_S2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MUL32X16_L3_S2)(d1, d0)
#define AE_MULF32X16_H0(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF32X16_H0)(d1, d0)
#define AE_MUL32X16_H0(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MUL32X16_H0)(d1, d0)
#define AE_MULF32X16_H0_S2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF32X16_H0_S2)(d1, d0)
#define AE_MUL32X16_H0_S2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MUL32X16_H0_S2)(d1, d0)
#define AE_MULF32X16_H1(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF32X16_H1)(d1, d0)
#define AE_MUL32X16_H1(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MUL32X16_H1)(d1, d0)
#define AE_MULF32X16_H1_S2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF32X16_H1_S2)(d1, d0)
#define AE_MUL32X16_H1_S2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MUL32X16_H1_S2)(d1, d0)
#define AE_MULF32X16_H2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF32X16_H2)(d1, d0)
#define AE_MUL32X16_H2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MUL32X16_H2)(d1, d0)
#define AE_MULF32X16_H2_S2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF32X16_H2_S2)(d1, d0)
#define AE_MUL32X16_H2_S2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MUL32X16_H2_S2)(d1, d0)
#define AE_MULF32X16_H3(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF32X16_H3)(d1, d0)
#define AE_MUL32X16_H3(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MUL32X16_H3)(d1, d0)
#define AE_MULF32X16_H3_S2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF32X16_H3_S2)(d1, d0)
#define AE_MUL32X16_H3_S2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MUL32X16_H3_S2)(d1, d0)
#define AE_MULAF32X16_L0(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF32X16_L0)(&d, d1, d0)
#define AE_MULA32X16_L0(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULA32X16_L0)(&d, d1, d0)
#define AE_MULAF32X16_L0_S2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF32X16_L0_S2)(&d, d1, d0)
#define AE_MULA32X16_L0_S2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULA32X16_L0_S2)(&d, d1, d0)
#define AE_MULAF32X16_L1(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF32X16_L1)(&d, d1, d0)
#define AE_MULA32X16_L1(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULA32X16_L1)(&d, d1, d0)
#define AE_MULAF32X16_L1_S2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF32X16_L1_S2)(&d, d1, d0)
#define AE_MULA32X16_L1_S2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULA32X16_L1_S2)(&d, d1, d0)
#define AE_MULAF32X16_L2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF32X16_L2)(&d, d1, d0)
#define AE_MULA32X16_L2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULA32X16_L2)(&d, d1, d0)
#define AE_MULAF32X16_L2_S2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF32X16_L2_S2)(&d, d1, d0)
#define AE_MULA32X16_L2_S2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULA32X16_L2_S2)(&d, d1, d0)
#define AE_MULAF32X16_L3(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF32X16_L3)(&d, d1, d0)
#define AE_MULA32X16_L3(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULA32X16_L3)(&d, d1, d0)
#define AE_MULAF32X16_L3_S2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF32X16_L3_S2)(&d, d1, d0)
#define AE_MULA32X16_L3_S2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULA32X16_L3_S2)(&d, d1, d0)
#define AE_MULAF32X16_H0(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF32X16_H0)(&d, d1, d0)
#define AE_MULA32X16_H0(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULA32X16_H0)(&d, d1, d0)
#define AE_MULAF32X16_H0_S2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF32X16_H0_S2)(&d, d1, d0)
#define AE_MULA32X16_H0_S2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULA32X16_H0_S2)(&d, d1, d0)
#define AE_MULAF32X16_H1(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF32X16_H1)(&d, d1, d0)
#define AE_MULA32X16_H1(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULA32X16_H1)(&d, d1, d0)
#define AE_MULAF32X16_H1_S2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF32X16_H1_S2)(&d, d1, d0)
#define AE_MULA32X16_H1_S2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULA32X16_H1_S2)(&d, d1, d0)
#define AE_MULAF32X16_H2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF32X16_H2)(&d, d1, d0)
#define AE_MULA32X16_H2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULA32X16_H2)(&d, d1, d0)
#define AE_MULAF32X16_H2_S2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF32X16_H2_S2)(&d, d1, d0)
#define AE_MULA32X16_H2_S2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULA32X16_H2_S2)(&d, d1, d0)
#define AE_MULAF32X16_H3(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF32X16_H3)(&d, d1, d0)
#define AE_MULA32X16_H3(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULA32X16_H3)(&d, d1, d0)
#define AE_MULAF32X16_H3_S2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF32X16_H3_S2)(&d, d1, d0)
#define AE_MULA32X16_H3_S2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULA32X16_H3_S2)(&d, d1, d0)
#define AE_MULSF32X16_L0(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF32X16_L0)(&d, d1, d0)
#define AE_MULS32X16_L0(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULS32X16_L0)(&d, d1, d0)
#define AE_MULSF32X16_L0_S2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF32X16_L0_S2)(&d, d1, d0)
#define AE_MULS32X16_L0_S2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULS32X16_L0_S2)(&d, d1, d0)
#define AE_MULSF32X16_L1(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF32X16_L1)(&d, d1, d0)
#define AE_MULS32X16_L1(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULS32X16_L1)(&d, d1, d0)
#define AE_MULSF32X16_L1_S2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF32X16_L1_S2)(&d, d1, d0)
#define AE_MULS32X16_L1_S2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULS32X16_L1_S2)(&d, d1, d0)
#define AE_MULSF32X16_L2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF32X16_L2)(&d, d1, d0)
#define AE_MULS32X16_L2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULS32X16_L2)(&d, d1, d0)
#define AE_MULSF32X16_L2_S2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF32X16_L2_S2)(&d, d1, d0)
#define AE_MULS32X16_L2_S2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULS32X16_L2_S2)(&d, d1, d0)
#define AE_MULSF32X16_L3(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF32X16_L3)(&d, d1, d0)
#define AE_MULS32X16_L3(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULS32X16_L3)(&d, d1, d0)
#define AE_MULSF32X16_L3_S2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF32X16_L3_S2)(&d, d1, d0)
#define AE_MULS32X16_L3_S2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULS32X16_L3_S2)(&d, d1, d0)
#define AE_MULSF32X16_H0(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF32X16_H0)(&d, d1, d0)
#define AE_MULS32X16_H0(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULS32X16_H0)(&d, d1, d0)
#define AE_MULSF32X16_H0_S2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF32X16_H0_S2)(&d, d1, d0)
#define AE_MULS32X16_H0_S2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULS32X16_H0_S2)(&d, d1, d0)
#define AE_MULSF32X16_H1(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF32X16_H1)(&d, d1, d0)
#define AE_MULS32X16_H1(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULS32X16_H1)(&d, d1, d0)
#define AE_MULSF32X16_H1_S2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF32X16_H1_S2)(&d, d1, d0)
#define AE_MULS32X16_H1_S2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULS32X16_H1_S2)(&d, d1, d0)
#define AE_MULSF32X16_H2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF32X16_H2)(&d, d1, d0)
#define AE_MULS32X16_H2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULS32X16_H2)(&d, d1, d0)
#define AE_MULSF32X16_H2_S2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF32X16_H2_S2)(&d, d1, d0)
#define AE_MULS32X16_H2_S2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULS32X16_H2_S2)(&d, d1, d0)
#define AE_MULSF32X16_H3(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF32X16_H3)(&d, d1, d0)
#define AE_MULS32X16_H3(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULS32X16_H3)(&d, d1, d0)
#define AE_MULSF32X16_H3_S2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF32X16_H3_S2)(&d, d1, d0)
#define AE_MULS32X16_H3_S2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULS32X16_H3_S2)(&d, d1, d0)
#define AE_MULAAFD32X16_H3_L2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAFD32X16_H3_L2)(&d, d1, d0)
#define AE_MULAAD32X16_H3_L2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAD32X16_H3_L2)(&d, d1, d0)
#define AE_MULAAFD32X16_H3_L2_S2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAFD32X16_H3_L2_S2)(&d, d1, d0)
#define AE_MULAAD32X16_H3_L2_S2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAD32X16_H3_L2_S2)(&d, d1, d0)
#define AE_MULAAFD32X16_H1_L0(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAFD32X16_H1_L0)(&d, d1, d0)
#define AE_MULAAD32X16_H1_L0(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAD32X16_H1_L0)(&d, d1, d0)
#define AE_MULAAFD32X16_H1_L0_S2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAFD32X16_H1_L0_S2)(&d, d1, d0)
#define AE_MULAAD32X16_H1_L0_S2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAD32X16_H1_L0_S2)(&d, d1, d0)
#define AE_MULASFD32X16_H3_L2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULASFD32X16_H3_L2)(&d, d1, d0)
#define AE_MULASD32X16_H3_L2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULASD32X16_H3_L2)(&d, d1, d0)
#define AE_MULASFD32X16_H3_L2_S2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULASFD32X16_H3_L2_S2)(&d, d1, d0)
#define AE_MULASD32X16_H3_L2_S2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULASD32X16_H3_L2_S2)(&d, d1, d0)
#define AE_MULASFD32X16_H1_L0(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULASFD32X16_H1_L0)(&d, d1, d0)
#define AE_MULASD32X16_H1_L0(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULASD32X16_H1_L0)(&d, d1, d0)
#define AE_MULASFD32X16_H1_L0_S2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULASFD32X16_H1_L0_S2)(&d, d1, d0)
#define AE_MULASD32X16_H1_L0_S2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULASD32X16_H1_L0_S2)(&d, d1, d0)
#define AE_MULSAFD32X16_H3_L2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSAFD32X16_H3_L2)(&d, d1, d0)
#define AE_MULSAD32X16_H3_L2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSAD32X16_H3_L2)(&d, d1, d0)
#define AE_MULSAFD32X16_H3_L2_S2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSAFD32X16_H3_L2_S2)(&d, d1, d0)
#define AE_MULSAD32X16_H3_L2_S2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSAD32X16_H3_L2_S2)(&d, d1, d0)
#define AE_MULSAFD32X16_H1_L0(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSAFD32X16_H1_L0)(&d, d1, d0)
#define AE_MULSAD32X16_H1_L0(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSAD32X16_H1_L0)(&d, d1, d0)
#define AE_MULSAFD32X16_H1_L0_S2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSAFD32X16_H1_L0_S2)(&d, d1, d0)
#define AE_MULSAD32X16_H1_L0_S2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSAD32X16_H1_L0_S2)(&d, d1, d0)
#define AE_MULSSFD32X16_H3_L2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSSFD32X16_H3_L2)(&d, d1, d0)
#define AE_MULSSD32X16_H3_L2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSSD32X16_H3_L2)(&d, d1, d0)
#define AE_MULSSFD32X16_H3_L2_S2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSSFD32X16_H3_L2_S2)(&d, d1, d0)
#define AE_MULSSD32X16_H3_L2_S2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSSD32X16_H3_L2_S2)(&d, d1, d0)
#define AE_MULSSFD32X16_H1_L0(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSSFD32X16_H1_L0)(&d, d1, d0)
#define AE_MULSSD32X16_H1_L0(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSSD32X16_H1_L0)(&d, d1, d0)
#define AE_MULSSFD32X16_H1_L0_S2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSSFD32X16_H1_L0_S2)(&d, d1, d0)
#define AE_MULSSD32X16_H1_L0_S2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSSD32X16_H1_L0_S2)(&d, d1, d0)
#define AE_MULZAAFD32X16_H3_L2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAFD32X16_H3_L2)(d1, d0)
#define AE_MULZAAD32X16_H3_L2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAD32X16_H3_L2)(d1, d0)
#define AE_MULZAAFD32X16_H3_L2_S2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAFD32X16_H3_L2_S2)(d1, d0)
#define AE_MULZAAD32X16_H3_L2_S2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAD32X16_H3_L2_S2)(d1, d0)
#define AE_MULZAAFD32X16_H1_L0(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAFD32X16_H1_L0)(d1, d0)
#define AE_MULZAAD32X16_H1_L0(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAD32X16_H1_L0)(d1, d0)
#define AE_MULZAAFD32X16_H1_L0_S2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAFD32X16_H1_L0_S2)(d1, d0)
#define AE_MULZAAD32X16_H1_L0_S2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAD32X16_H1_L0_S2)(d1, d0)
#define AE_MULZASFD32X16_H3_L2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASFD32X16_H3_L2)(d1, d0)
#define AE_MULZASD32X16_H3_L2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASD32X16_H3_L2)(d1, d0)
#define AE_MULZASFD32X16_H3_L2_S2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASFD32X16_H3_L2_S2)(d1, d0)
#define AE_MULZASD32X16_H3_L2_S2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASD32X16_H3_L2_S2)(d1, d0)
#define AE_MULZASFD32X16_H1_L0(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASFD32X16_H1_L0)(d1, d0)
#define AE_MULZASD32X16_H1_L0(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASD32X16_H1_L0)(d1, d0)
#define AE_MULZASFD32X16_H1_L0_S2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASFD32X16_H1_L0_S2)(d1, d0)
#define AE_MULZASD32X16_H1_L0_S2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASD32X16_H1_L0_S2)(d1, d0)
#define AE_MULZSAFD32X16_H3_L2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAFD32X16_H3_L2)(d1, d0)
#define AE_MULZSAD32X16_H3_L2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAD32X16_H3_L2)(d1, d0)
#define AE_MULZSAFD32X16_H3_L2_S2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAFD32X16_H3_L2_S2)(d1, d0)
#define AE_MULZSAD32X16_H3_L2_S2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAD32X16_H3_L2_S2)(d1, d0)
#define AE_MULZSAFD32X16_H1_L0(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAFD32X16_H1_L0)(d1, d0)
#define AE_MULZSAD32X16_H1_L0(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAD32X16_H1_L0)(d1, d0)
#define AE_MULZSAFD32X16_H1_L0_S2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAFD32X16_H1_L0_S2)(d1, d0)
#define AE_MULZSAD32X16_H1_L0_S2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAD32X16_H1_L0_S2)(d1, d0)
#define AE_MULZSSFD32X16_H3_L2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSFD32X16_H3_L2)(d1, d0)
#define AE_MULZSSD32X16_H3_L2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSD32X16_H3_L2)(d1, d0)
#define AE_MULZSSFD32X16_H3_L2_S2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSFD32X16_H3_L2_S2)(d1, d0)
#define AE_MULZSSD32X16_H3_L2_S2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSD32X16_H3_L2_S2)(d1, d0)
#define AE_MULZSSFD32X16_H1_L0(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSFD32X16_H1_L0)(d1, d0)
#define AE_MULZSSD32X16_H1_L0(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSD32X16_H1_L0)(d1, d0)
#define AE_MULZSSFD32X16_H1_L0_S2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSFD32X16_H1_L0_S2)(d1, d0)
#define AE_MULZSSD32X16_H1_L0_S2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSD32X16_H1_L0_S2)(d1, d0)
#define AE_MULZAAFD32X16_H2_L3(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAFD32X16_H2_L3)(d1, d0)
#define AE_MULZAAFD32X16_H0_L1(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAFD32X16_H0_L1)(d1, d0)
#define AE_MULAAFD32X16_H2_L3(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAFD32X16_H2_L3)(&d, d1, d0)
#define AE_MULAAFD32X16_H0_L1(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAFD32X16_H0_L1)(&d, d1, d0)
#define AE_MULZAAD32X16_H2_L3(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAD32X16_H2_L3)(d1, d0)
#define AE_MULZAAD32X16_H0_L1(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAD32X16_H0_L1)(d1, d0)
#define AE_MULAAD32X16_H2_L3(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAD32X16_H2_L3)(&d, d1, d0)
#define AE_MULAAD32X16_H0_L1(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAD32X16_H0_L1)(&d, d1, d0)
#define AE_MULZAAFD32X16_H2_L3_S2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAFD32X16_H2_L3_S2)(d1, d0)
#define AE_MULZAAFD32X16_H0_L1_S2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAFD32X16_H0_L1_S2)(d1, d0)
#define AE_MULAAFD32X16_H2_L3_S2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAFD32X16_H2_L3_S2)(&d, d1, d0)
#define AE_MULAAFD32X16_H0_L1_S2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAFD32X16_H0_L1_S2)(&d, d1, d0)
#define AE_MULZAAD32X16_H2_L3_S2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAD32X16_H2_L3_S2)(d1, d0)
#define AE_MULZAAD32X16_H0_L1_S2(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAD32X16_H0_L1_S2)(d1, d0)
#define AE_MULAAD32X16_H2_L3_S2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAD32X16_H2_L3_S2)(&d, d1, d0)
#define AE_MULAAD32X16_H0_L1_S2(d, d1, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAD32X16_H0_L1_S2)(&d, d1, d0)
#define AE_MULP32X16X2_H(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULP32X16X2_H)(d0, d1)
#define AE_MULFP32X16X2RS_H(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFP32X16X2RS_H)(d0, d1)
#define AE_MULFP32X16X2RAS_H(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFP32X16X2RAS_H)(d0, d1)
#define AE_MULFP32X16X2RS_H_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFP32X16X2RS_H_S2)(d0, d1)
#define AE_MULFP32X16X2RAS_H_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFP32X16X2RAS_H_S2)(d0, d1)
#define AE_MULP32X16X2_L(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULP32X16X2_L)(d0, d1)
#define AE_MULFP32X16X2RS_L(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFP32X16X2RS_L)(d0, d1)
#define AE_MULFP32X16X2RAS_L(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFP32X16X2RAS_L)(d0, d1)
#define AE_MULFP32X16X2RS_L_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFP32X16X2RS_L_S2)(d0, d1)
#define AE_MULFP32X16X2RAS_L_S2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFP32X16X2RAS_L_S2)(d0, d1)
#define AE_MULAP32X16X2_H(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAP32X16X2_H)(&d, d0, d1)
#define AE_MULAFP32X16X2RS_H(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFP32X16X2RS_H)(&d, d0, d1)
#define AE_MULAFP32X16X2RAS_H(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFP32X16X2RAS_H)(&d, d0, d1)
#define AE_MULAFP32X16X2RS_H_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFP32X16X2RS_H_S2)(&d, d0, d1)
#define AE_MULAFP32X16X2RAS_H_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFP32X16X2RAS_H_S2)(&d, d0, d1)
#define AE_MULAP32X16X2_L(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAP32X16X2_L)(&d, d0, d1)
#define AE_MULAFP32X16X2RS_L(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFP32X16X2RS_L)(&d, d0, d1)
#define AE_MULAFP32X16X2RAS_L(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFP32X16X2RAS_L)(&d, d0, d1)
#define AE_MULAFP32X16X2RS_L_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFP32X16X2RS_L_S2)(&d, d0, d1)
#define AE_MULAFP32X16X2RAS_L_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFP32X16X2RAS_L_S2)(&d, d0, d1)
#define AE_MULSP32X16X2_H(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSP32X16X2_H)(&d, d0, d1)
#define AE_MULSFP32X16X2RS_H(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFP32X16X2RS_H)(&d, d0, d1)
#define AE_MULSFP32X16X2RAS_H(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFP32X16X2RAS_H)(&d, d0, d1)
#define AE_MULSFP32X16X2RS_H_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFP32X16X2RS_H_S2)(&d, d0, d1)
#define AE_MULSFP32X16X2RAS_H_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFP32X16X2RAS_H_S2)(&d, d0, d1)
#define AE_MULSP32X16X2_L(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSP32X16X2_L)(&d, d0, d1)
#define AE_MULSFP32X16X2RS_L(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFP32X16X2RS_L)(&d, d0, d1)
#define AE_MULSFP32X16X2RAS_L(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFP32X16X2RAS_L)(&d, d0, d1)
#define AE_MULSFP32X16X2RS_L_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFP32X16X2RS_L_S2)(&d, d0, d1)
#define AE_MULSFP32X16X2RAS_L_S2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFP32X16X2RAS_L_S2)(&d, d0, d1)
#define AE_MULP32X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULP32X2)(d0, d1)
#define AE_MULFP32X2RS(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFP32X2RS)(d0, d1)
#define AE_MULFP32X2RAS(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFP32X2RAS)(d0, d1)
#define AE_MULAP32X2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAP32X2)(&d, d0, d1)
#define AE_MULAFP32X2RS(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFP32X2RS)(&d, d0, d1)
#define AE_MULAFP32X2RAS(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFP32X2RAS)(&d, d0, d1)
#define AE_MULSP32X2(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSP32X2)(&d, d0, d1)
#define AE_MULSFP32X2RS(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFP32X2RS)(&d, d0, d1)
#define AE_MULSFP32X2RAS(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFP32X2RAS)(&d, d0, d1)
#define AE_MULFP16X4S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFP16X4S)(d0, d1)
#define AE_MULFP16X4RAS(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFP16X4RAS)(d0, d1)
#define AE_MULC24(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULC24)(d0, d1)
#define AE_MULFC24RA(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFC24RA)(d0, d1)
#define AE_MULC32X16_L(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULC32X16_L)(d0, d1)
#define AE_MULFC32X16RAS_L(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFC32X16RAS_L)(d0, d1)
#define AE_MULC32X16_H(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULC32X16_H)(d0, d1)
#define AE_MULFC32X16RAS_H(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFC32X16RAS_H)(d0, d1)
#define AE_MULAC24(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAC24)(&d, d0, d1)
#define AE_MULAFC24RA(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFC24RA)(&d, d0, d1)
#define AE_MULAC32X16_L(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAC32X16_L)(&d, d0, d1)
#define AE_MULAFC32X16RAS_L(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFC32X16RAS_L)(&d, d0, d1)
#define AE_MULAC32X16_H(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAC32X16_H)(&d, d0, d1)
#define AE_MULAFC32X16RAS_H(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFC32X16RAS_H)(&d, d0, d1)
#define AE_MULF16X4SS(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF16X4SS)(&d0, &d1, d2, d3)
#define AE_MULAF16X4SS(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF16X4SS)(&d0, &d1, d2, d3)
#define AE_MULSF16X4SS(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF16X4SS)(&d0, &d1, d2, d3)
#define AE_MUL16X4(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MUL16X4)(&d0, &d1, d2, d3)
#define AE_MULA16X4(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULA16X4)(&d0, &d1, d2, d3)
#define AE_MULS16X4(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULS16X4)(&d0, &d1, d2, d3)
#define AE_MULFD24X2_FIR_H(q0, q1, d0, d1, c) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFD24X2_FIR_H)(&q0, &q1, d0, d1, c)
#define AE_MULFD24X2_FIR_L(q0, q1, d0, d1, c) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFD24X2_FIR_L)(&q0, &q1, d0, d1, c)
#define AE_MULFD32X16X2_FIR_HH(q0, q1, d0, d1, c) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFD32X16X2_FIR_HH)(&q0, &q1, d0, d1, c)
#define AE_MULFD32X16X2_FIR_HL(q0, q1, d0, d1, c) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFD32X16X2_FIR_HL)(&q0, &q1, d0, d1, c)
#define AE_MULFD32X16X2_FIR_LH(q0, q1, d0, d1, c) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFD32X16X2_FIR_LH)(&q0, &q1, d0, d1, c)
#define AE_MULFD32X16X2_FIR_LL(q0, q1, d0, d1, c) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFD32X16X2_FIR_LL)(&q0, &q1, d0, d1, c)
#define AE_MULAFD24X2_FIR_H(q0, q1, d0, d1, c) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFD24X2_FIR_H)(&q0, &q1, d0, d1, c)
#define AE_MULAFD24X2_FIR_L(q0, q1, d0, d1, c) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFD24X2_FIR_L)(&q0, &q1, d0, d1, c)
#define AE_MULAFD32X16X2_FIR_HH(q0, q1, d0, d1, c) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFD32X16X2_FIR_HH)(&q0, &q1, d0, d1, c)
#define AE_MULAFD32X16X2_FIR_HL(q0, q1, d0, d1, c) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFD32X16X2_FIR_HL)(&q0, &q1, d0, d1, c)
#define AE_MULAFD32X16X2_FIR_LH(q0, q1, d0, d1, c) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFD32X16X2_FIR_LH)(&q0, &q1, d0, d1, c)
#define AE_MULAFD32X16X2_FIR_LL(q0, q1, d0, d1, c) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFD32X16X2_FIR_LL)(&q0, &q1, d0, d1, c)
#define AE_DIV64D32_H(d, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_DIV64D32_H)(&d, d0)
#define AE_DIV64D32_L(d, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_DIV64D32_L)(&d, d0)
#define AE_LB(ba) \
	CSTUB_(_TIE_xt_hifi2_AE_LB)(ba)
#define AE_LBI(ba) \
	CSTUB_(_TIE_xt_hifi2_AE_LBI)(ba)
#define AE_LBK(a0, ba) \
	CSTUB_(_TIE_xt_hifi2_AE_LBK)(a0, ba)
#define AE_LBKI(a0, ba) \
	CSTUB_(_TIE_xt_hifi2_AE_LBKI)(a0, ba)
#define AE_LBS(ba) \
	CSTUB_(_TIE_xt_hifi2_AE_LBS)(ba)
#define AE_LBSI(ba) \
	CSTUB_(_TIE_xt_hifi2_AE_LBSI)(ba)
#define AE_DB(a, count) \
	CSTUB_(_TIE_xt_hifi2_AE_DB)((const unsigned short **)&(a), count)
#define AE_DBI(a, count) \
	CSTUB_(_TIE_xt_hifi2_AE_DBI)((const unsigned short **)&(a), count)
#define AE_DB_IC(a, count) \
	CSTUB_(_TIE_xt_hifi2_AE_DB_IC)((const unsigned short **)&(a), count)
#define AE_DB_XC(a, count) \
	CSTUB_(_TIE_xt_hifi2_AE_DB_XC)((const unsigned short **)&(a), count)
#define AE_DBI_IC(a, count) \
	CSTUB_(_TIE_xt_hifi2_AE_DBI_IC)((const unsigned short **)&(a), count)
#define AE_DBI_XC(a, count) \
	CSTUB_(_TIE_xt_hifi2_AE_DBI_XC)((const unsigned short **)&(a), count)
#define AE_DB_IP(a, count) \
	CSTUB_(_TIE_xt_hifi2_AE_DB_IP)((const unsigned short **)&(a), count)
#define AE_DBI_IP(a, count) \
	CSTUB_(_TIE_xt_hifi2_AE_DBI_IP)((const unsigned short **)&(a), count)
#define AE_SEXT32(d0, bit) \
	CSTUB_(_TIE_xt_hifi2_AE_SEXT32)(d0, bit)
#define ae_p16s_move(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_p16s_move)(d0)
#define ae_p16x2s_move(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_p16x2s_move)(d0)
#define ae_int24_move(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_int24_move)(d0)
#define ae_p24s_move(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_p24s_move)(d0)
#define ae_int16_move(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_int16_move)(d0)
#define ae_int16x4_move(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_int16x4_move)(d0)
#define ae_f16_move(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_f16_move)(d0)
#define ae_f16x4_move(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_f16x4_move)(d0)
#define ae_int32_move(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_int32_move)(d0)
#define ae_f32_move(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_f32_move)(d0)
#define ae_p24x2s_move(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2s_move)(d0)
#define ae_int24x2_move(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_int24x2_move)(d0)
#define ae_f24_move(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_f24_move)(d0)
#define ae_p24f_move(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_p24f_move)(d0)
#define ae_p24x2f_move(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2f_move)(d0)
#define ae_f24x2_move(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_f24x2_move)(d0)
#define ae_int32x2_move(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x2_move)(d0)
#define ae_f32x2_move(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_f32x2_move)(d0)
#define ae_q32s_move(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_q32s_move)(d0)
#define ae_q56s_move(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_q56s_move)(d0)
#define ae_int64_move(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_int64_move)(d0)
#define ae_f64_move(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_f64_move)(d0)
#define ae_p24x2f_rtor_ae_p24x2s(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2f_rtor_ae_p24x2s)(d0)
#define ae_p24x2f_rtor_ae_p16x2s(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2f_rtor_ae_p16x2s)(d0)
#define ae_p24x2f_rtor_ae_p16s(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2f_rtor_ae_p16s)(d0)
#define ae_p24x2f_rtor_ae_p24s(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2f_rtor_ae_p24s)(d0)
#define ae_p24x2f_rtor_ae_p24f(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2f_rtor_ae_p24f)(d0)
#define ae_p24x2s_rtor_ae_p24x2f(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2s_rtor_ae_p24x2f)(d0)
#define ae_p24x2s_rtor_ae_p16x2s(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2s_rtor_ae_p16x2s)(d0)
#define ae_p24x2s_rtor_ae_p16s(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2s_rtor_ae_p16s)(d0)
#define ae_p24x2s_rtor_ae_p24s(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2s_rtor_ae_p24s)(d0)
#define ae_p24x2s_rtor_ae_p24f(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2s_rtor_ae_p24f)(d0)
#define ae_p24s_rtor_ae_p24x2f(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_p24s_rtor_ae_p24x2f)(d0)
#define ae_p24s_rtor_ae_p24x2s(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_p24s_rtor_ae_p24x2s)(d0)
#define ae_p24f_rtor_ae_p24x2f(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_p24f_rtor_ae_p24x2f)(d0)
#define ae_p24f_rtor_ae_p24x2s(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_p24f_rtor_ae_p24x2s)(d0)
#define ae_q56s_rtor_ae_q32s(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_q56s_rtor_ae_q32s)(d0)
#define AE_CVTP24A16(ai) \
	CSTUB_(_TIE_xt_hifi2_AE_CVTP24A16)(ai)
#define AE_CVTP24A16X2(ah, al) \
	CSTUB_(_TIE_xt_hifi2_AE_CVTP24A16X2)(ah, al)
#define AE_MOVPA24(ai) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVPA24)(ai)
#define AE_TRUNCP24Q48(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_TRUNCP24Q48)(d0)
#define AE_TRUNCI32F64S(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_TRUNCI32F64S)(d0, sa)
#define AE_TRUNCA32F64S(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_TRUNCA32F64S)(d0, sa)
#define AE_NOTP48(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_NOTP48)(d0)
#define AE_NOT32(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_NOT32)(d0)
#define AE_NOT16(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_NOT16)(d0)
#define AE_NOT24(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_NOT24)(d0)
#define AE_NOTQ56(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_NOTQ56)(d0)
#define AE_NOT64(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_NOT64)(d0)
#define AE_NOT(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_NOT)(d0)
#define AE_MULF48Q32SP16S_H(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF48Q32SP16S_H)(d0, d1)
#define AE_MULFQ32SP16S_H(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFQ32SP16S_H)(d0, d1)
#define AE_MULF48Q32SP16U_H(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF48Q32SP16U_H)(d0, d1)
#define AE_MULFQ32SP16U_H(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFQ32SP16U_H)(d0, d1)
#define AE_MULQ32SP16S_H(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULQ32SP16S_H)(d0, d1)
#define AE_MULQ32SP16U_H(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULQ32SP16U_H)(d0, d1)
#define AE_MULAF48Q32SP16S_H(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF48Q32SP16S_H)(&d, d0, d1)
#define AE_MULAFQ32SP16S_H(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFQ32SP16S_H)(&d, d0, d1)
#define AE_MULAF48Q32SP16U_H(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF48Q32SP16U_H)(&d, d0, d1)
#define AE_MULAFQ32SP16U_H(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAFQ32SP16U_H)(&d, d0, d1)
#define AE_MULAQ32SP16S_H(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAQ32SP16S_H)(&d, d0, d1)
#define AE_MULAQ32SP16U_H(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAQ32SP16U_H)(&d, d0, d1)
#define AE_MULSF48Q32SP16S_H(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF48Q32SP16S_H)(&d, d0, d1)
#define AE_MULSFQ32SP16S_H(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFQ32SP16S_H)(&d, d0, d1)
#define AE_MULSF48Q32SP16U_H(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF48Q32SP16U_H)(&d, d0, d1)
#define AE_MULSFQ32SP16U_H(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSFQ32SP16U_H)(&d, d0, d1)
#define AE_MULSQ32SP16S_H(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSQ32SP16S_H)(&d, d0, d1)
#define AE_MULSQ32SP16U_H(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSQ32SP16U_H)(&d, d0, d1)
#define AE_MULZAAFQ32SP16S_LL(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAFQ32SP16S_LL)(d0, d1, d2, d3)
#define AE_MULZAAFQ32SP16S_LL_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAFQ32SP16S_LL_S2)(d0, d1, d2, d3)
#define AE_MULZAAQ32SP16S_LL(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAQ32SP16S_LL)(d0, d1, d2, d3)
#define AE_MULZAAQ32SP16S_LL_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAQ32SP16S_LL_S2)(d0, d1, d2, d3)
#define AE_MULZAAFQ32SP16U_LL(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAFQ32SP16U_LL)(d0, d1, d2, d3)
#define AE_MULZAAFQ32SP16U_LL_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAFQ32SP16U_LL_S2)(d0, d1, d2, d3)
#define AE_MULZAAQ32SP16U_LL(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAQ32SP16U_LL)(d0, d1, d2, d3)
#define AE_MULZAAQ32SP16U_LL_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAQ32SP16U_LL_S2)(d0, d1, d2, d3)
#define AE_MULZAAFQ32SP16S_HH(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAFQ32SP16S_HH)(d0, d1, d2, d3)
#define AE_MULZAAFQ32SP16S_HH_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAFQ32SP16S_HH_S2)(d0, d1, d2, d3)
#define AE_MULZAAQ32SP16S_HH(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAQ32SP16S_HH)(d0, d1, d2, d3)
#define AE_MULZAAQ32SP16S_HH_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAQ32SP16S_HH_S2)(d0, d1, d2, d3)
#define AE_MULZAAFQ32SP16U_HH(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAFQ32SP16U_HH)(d0, d1, d2, d3)
#define AE_MULZAAFQ32SP16U_HH_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAFQ32SP16U_HH_S2)(d0, d1, d2, d3)
#define AE_MULZAAQ32SP16U_HH(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAQ32SP16U_HH)(d0, d1, d2, d3)
#define AE_MULZAAQ32SP16U_HH_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAQ32SP16U_HH_S2)(d0, d1, d2, d3)
#define AE_MULZAAFQ32SP16S_LH(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAFQ32SP16S_LH)(d0, d1, d2, d3)
#define AE_MULZAAFQ32SP16S_LH_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAFQ32SP16S_LH_S2)(d0, d1, d2, d3)
#define AE_MULZAAQ32SP16S_LH(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAQ32SP16S_LH)(d0, d1, d2, d3)
#define AE_MULZAAQ32SP16S_LH_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAQ32SP16S_LH_S2)(d0, d1, d2, d3)
#define AE_MULZAAFQ32SP16U_LH(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAFQ32SP16U_LH)(d0, d1, d2, d3)
#define AE_MULZAAFQ32SP16U_LH_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAFQ32SP16U_LH_S2)(d0, d1, d2, d3)
#define AE_MULZAAQ32SP16U_LH(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAQ32SP16U_LH)(d0, d1, d2, d3)
#define AE_MULZAAQ32SP16U_LH_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZAAQ32SP16U_LH_S2)(d0, d1, d2, d3)
#define AE_MULZASFQ32SP16S_LL(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASFQ32SP16S_LL)(d0, d1, d2, d3)
#define AE_MULZASFQ32SP16S_LL_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASFQ32SP16S_LL_S2)(d0, d1, d2, d3)
#define AE_MULZASQ32SP16S_LL(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASQ32SP16S_LL)(d0, d1, d2, d3)
#define AE_MULZASQ32SP16S_LL_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASQ32SP16S_LL_S2)(d0, d1, d2, d3)
#define AE_MULZASFQ32SP16U_LL(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASFQ32SP16U_LL)(d0, d1, d2, d3)
#define AE_MULZASFQ32SP16U_LL_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASFQ32SP16U_LL_S2)(d0, d1, d2, d3)
#define AE_MULZASQ32SP16U_LL(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASQ32SP16U_LL)(d0, d1, d2, d3)
#define AE_MULZASQ32SP16U_LL_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASQ32SP16U_LL_S2)(d0, d1, d2, d3)
#define AE_MULZASFQ32SP16S_HH(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASFQ32SP16S_HH)(d0, d1, d2, d3)
#define AE_MULZASFQ32SP16S_HH_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASFQ32SP16S_HH_S2)(d0, d1, d2, d3)
#define AE_MULZASQ32SP16S_HH(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASQ32SP16S_HH)(d0, d1, d2, d3)
#define AE_MULZASQ32SP16S_HH_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASQ32SP16S_HH_S2)(d0, d1, d2, d3)
#define AE_MULZASFQ32SP16U_HH(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASFQ32SP16U_HH)(d0, d1, d2, d3)
#define AE_MULZASFQ32SP16U_HH_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASFQ32SP16U_HH_S2)(d0, d1, d2, d3)
#define AE_MULZASQ32SP16U_HH(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASQ32SP16U_HH)(d0, d1, d2, d3)
#define AE_MULZASQ32SP16U_HH_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASQ32SP16U_HH_S2)(d0, d1, d2, d3)
#define AE_MULZASFQ32SP16S_LH(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASFQ32SP16S_LH)(d0, d1, d2, d3)
#define AE_MULZASFQ32SP16S_LH_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASFQ32SP16S_LH_S2)(d0, d1, d2, d3)
#define AE_MULZASQ32SP16S_LH(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASQ32SP16S_LH)(d0, d1, d2, d3)
#define AE_MULZASQ32SP16S_LH_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASQ32SP16S_LH_S2)(d0, d1, d2, d3)
#define AE_MULZASFQ32SP16U_LH(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASFQ32SP16U_LH)(d0, d1, d2, d3)
#define AE_MULZASFQ32SP16U_LH_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASFQ32SP16U_LH_S2)(d0, d1, d2, d3)
#define AE_MULZASQ32SP16U_LH(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASQ32SP16U_LH)(d0, d1, d2, d3)
#define AE_MULZASQ32SP16U_LH_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZASQ32SP16U_LH_S2)(d0, d1, d2, d3)
#define AE_MULZSAFQ32SP16S_LL(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAFQ32SP16S_LL)(d0, d1, d2, d3)
#define AE_MULZSAFQ32SP16S_LL_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAFQ32SP16S_LL_S2)(d0, d1, d2, d3)
#define AE_MULZSAQ32SP16S_LL(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAQ32SP16S_LL)(d0, d1, d2, d3)
#define AE_MULZSAQ32SP16S_LL_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAQ32SP16S_LL_S2)(d0, d1, d2, d3)
#define AE_MULZSAFQ32SP16U_LL(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAFQ32SP16U_LL)(d0, d1, d2, d3)
#define AE_MULZSAFQ32SP16U_LL_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAFQ32SP16U_LL_S2)(d0, d1, d2, d3)
#define AE_MULZSAQ32SP16U_LL(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAQ32SP16U_LL)(d0, d1, d2, d3)
#define AE_MULZSAQ32SP16U_LL_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAQ32SP16U_LL_S2)(d0, d1, d2, d3)
#define AE_MULZSAFQ32SP16S_HH(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAFQ32SP16S_HH)(d0, d1, d2, d3)
#define AE_MULZSAFQ32SP16S_HH_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAFQ32SP16S_HH_S2)(d0, d1, d2, d3)
#define AE_MULZSAQ32SP16S_HH(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAQ32SP16S_HH)(d0, d1, d2, d3)
#define AE_MULZSAQ32SP16S_HH_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAQ32SP16S_HH_S2)(d0, d1, d2, d3)
#define AE_MULZSAFQ32SP16U_HH(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAFQ32SP16U_HH)(d0, d1, d2, d3)
#define AE_MULZSAFQ32SP16U_HH_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAFQ32SP16U_HH_S2)(d0, d1, d2, d3)
#define AE_MULZSAQ32SP16U_HH(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAQ32SP16U_HH)(d0, d1, d2, d3)
#define AE_MULZSAQ32SP16U_HH_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAQ32SP16U_HH_S2)(d0, d1, d2, d3)
#define AE_MULZSAFQ32SP16S_LH(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAFQ32SP16S_LH)(d0, d1, d2, d3)
#define AE_MULZSAFQ32SP16S_LH_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAFQ32SP16S_LH_S2)(d0, d1, d2, d3)
#define AE_MULZSAQ32SP16S_LH(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAQ32SP16S_LH)(d0, d1, d2, d3)
#define AE_MULZSAQ32SP16S_LH_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAQ32SP16S_LH_S2)(d0, d1, d2, d3)
#define AE_MULZSAFQ32SP16U_LH(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAFQ32SP16U_LH)(d0, d1, d2, d3)
#define AE_MULZSAFQ32SP16U_LH_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAFQ32SP16U_LH_S2)(d0, d1, d2, d3)
#define AE_MULZSAQ32SP16U_LH(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAQ32SP16U_LH)(d0, d1, d2, d3)
#define AE_MULZSAQ32SP16U_LH_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSAQ32SP16U_LH_S2)(d0, d1, d2, d3)
#define AE_MULZSSFQ32SP16S_LL(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSFQ32SP16S_LL)(d0, d1, d2, d3)
#define AE_MULZSSFQ32SP16S_LL_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSFQ32SP16S_LL_S2)(d0, d1, d2, d3)
#define AE_MULZSSQ32SP16S_LL(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSQ32SP16S_LL)(d0, d1, d2, d3)
#define AE_MULZSSQ32SP16S_LL_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSQ32SP16S_LL_S2)(d0, d1, d2, d3)
#define AE_MULZSSFQ32SP16U_LL(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSFQ32SP16U_LL)(d0, d1, d2, d3)
#define AE_MULZSSFQ32SP16U_LL_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSFQ32SP16U_LL_S2)(d0, d1, d2, d3)
#define AE_MULZSSQ32SP16U_LL(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSQ32SP16U_LL)(d0, d1, d2, d3)
#define AE_MULZSSQ32SP16U_LL_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSQ32SP16U_LL_S2)(d0, d1, d2, d3)
#define AE_MULZSSFQ32SP16S_HH(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSFQ32SP16S_HH)(d0, d1, d2, d3)
#define AE_MULZSSFQ32SP16S_HH_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSFQ32SP16S_HH_S2)(d0, d1, d2, d3)
#define AE_MULZSSQ32SP16S_HH(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSQ32SP16S_HH)(d0, d1, d2, d3)
#define AE_MULZSSQ32SP16S_HH_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSQ32SP16S_HH_S2)(d0, d1, d2, d3)
#define AE_MULZSSFQ32SP16U_HH(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSFQ32SP16U_HH)(d0, d1, d2, d3)
#define AE_MULZSSFQ32SP16U_HH_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSFQ32SP16U_HH_S2)(d0, d1, d2, d3)
#define AE_MULZSSQ32SP16U_HH(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSQ32SP16U_HH)(d0, d1, d2, d3)
#define AE_MULZSSQ32SP16U_HH_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSQ32SP16U_HH_S2)(d0, d1, d2, d3)
#define AE_MULZSSFQ32SP16S_LH(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSFQ32SP16S_LH)(d0, d1, d2, d3)
#define AE_MULZSSFQ32SP16S_LH_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSFQ32SP16S_LH_S2)(d0, d1, d2, d3)
#define AE_MULZSSQ32SP16S_LH(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSQ32SP16S_LH)(d0, d1, d2, d3)
#define AE_MULZSSQ32SP16S_LH_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSQ32SP16S_LH_S2)(d0, d1, d2, d3)
#define AE_MULZSSFQ32SP16U_LH(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSFQ32SP16U_LH)(d0, d1, d2, d3)
#define AE_MULZSSFQ32SP16U_LH_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSFQ32SP16U_LH_S2)(d0, d1, d2, d3)
#define AE_MULZSSQ32SP16U_LH(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSQ32SP16U_LH)(d0, d1, d2, d3)
#define AE_MULZSSQ32SP16U_LH_S2(d0, d1, d2, d3) \
	CSTUB_(_TIE_xt_hifi2_AE_MULZSSQ32SP16U_LH_S2)(d0, d1, d2, d3)
#define AE_VLDL16T(done, symbol, a) \
	CSTUB_(_TIE_xt_hifi2_AE_VLDL16T)(&done, &symbol, a)
#define AE_VLDL16C(a) \
	CSTUB_(_TIE_xt_hifi2_AE_VLDL16C)((const unsigned short **)&(a))
#define AE_VLDL16C_XC(a) \
	CSTUB_(_TIE_xt_hifi2_AE_VLDL16C_XC)((const unsigned short **)&(a))
#define AE_VLDL16C_IC(a) \
	CSTUB_(_TIE_xt_hifi2_AE_VLDL16C_IC)((const unsigned short **)&(a))
#define AE_VLDL16C_IP(a) \
	CSTUB_(_TIE_xt_hifi2_AE_VLDL16C_IP)((const unsigned short **)&(a))
#define AE_VLEL16T(done, symbol, a) \
	CSTUB_(_TIE_xt_hifi2_AE_VLEL16T)(&done, &symbol, a)
#define AE_VLES16C(a) \
	CSTUB_(_TIE_xt_hifi2_AE_VLES16C)((unsigned short **)&(a))
#define AE_VLES16C_IC(a) \
	CSTUB_(_TIE_xt_hifi2_AE_VLES16C_IC)((unsigned short **)&(a))
#define AE_VLES16C_XC(a) \
	CSTUB_(_TIE_xt_hifi2_AE_VLES16C_XC)((unsigned short **)&(a))
#define AE_VLES16C_IP(a) \
	CSTUB_(_TIE_xt_hifi2_AE_VLES16C_IP)((unsigned short **)&(a))
#define AE_VLDL32T(done, symbol, a) \
	CSTUB_(_TIE_xt_hifi2_AE_VLDL32T)(&done, &symbol, a)
#define AE_VLEL32T(done, symbol, a) \
	CSTUB_(_TIE_xt_hifi2_AE_VLEL32T)(&done, &symbol, a)
#define AE_SB(a, bits) \
	CSTUB_(_TIE_xt_hifi2_AE_SB)((unsigned short **)&(a), bits)
#define AE_SB_IC(a, bits) \
	CSTUB_(_TIE_xt_hifi2_AE_SB_IC)((unsigned short **)&(a), bits)
#define AE_SB_XC(a, bits) \
	CSTUB_(_TIE_xt_hifi2_AE_SB_XC)((unsigned short **)&(a), bits)
#define AE_SB_IP(a, bits) \
	CSTUB_(_TIE_xt_hifi2_AE_SB_IP)((unsigned short **)&(a), bits)
#define AE_SBI(a, bits, count) \
	CSTUB_(_TIE_xt_hifi2_AE_SBI)((unsigned short **)&(a), bits, count)
#define AE_SBI_IC(a, bits, count) \
	CSTUB_(_TIE_xt_hifi2_AE_SBI_IC)((unsigned short **)&(a), bits, count)
#define AE_SBI_XC(a, bits, count) \
	CSTUB_(_TIE_xt_hifi2_AE_SBI_XC)((unsigned short **)&(a), bits, count)
#define AE_SBI_IP(a, bits, count) \
	CSTUB_(_TIE_xt_hifi2_AE_SBI_IP)((unsigned short **)&(a), bits, count)
#define AE_SBF(a) \
	CSTUB_(_TIE_xt_hifi2_AE_SBF)((unsigned short **)&(a))
#define AE_SBF_IC(a) \
	CSTUB_(_TIE_xt_hifi2_AE_SBF_IC)((unsigned short **)&(a))
#define AE_SBF_XC(a) \
	CSTUB_(_TIE_xt_hifi2_AE_SBF_XC)((unsigned short **)&(a))
#define AE_SBF_IP(a) \
	CSTUB_(_TIE_xt_hifi2_AE_SBF_IP)((unsigned short **)&(a))
#define AE_F16X4_MULF_F16X4(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F16X4_MULF_F16X4)(d0, d1)
#define AE_INT16X4_MUL_INT16X4(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16X4_MUL_INT16X4)(d0, d1)
#define AE_INT24X2_ADD_INT24X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24X2_ADD_INT24X2)(d0, d1)
#define AE_INT24X2_SUB_INT24X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24X2_SUB_INT24X2)(d0, d1)
#define AE_INT24X2_AND_INT24X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24X2_AND_INT24X2)(d0, d1)
#define AE_INT24X2_XOR_INT24X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24X2_XOR_INT24X2)(d0, d1)
#define AE_INT24X2_OR_INT24X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24X2_OR_INT24X2)(d0, d1)
#define AE_INT24X2_MUL_INT24X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24X2_MUL_INT24X2)(d0, d1)
#define AE_INT24X2_EQ_INT24X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24X2_EQ_INT24X2)(d0, d1)
#define AE_INT24X2_LT_INT24X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24X2_LT_INT24X2)(d0, d1)
#define AE_INT24X2_LE_INT24X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24X2_LE_INT24X2)(d0, d1)
#define AE_INT24X2_GT_INT24X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24X2_GT_INT24X2)(d0, d1)
#define AE_INT24X2_GE_INT24X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24X2_GE_INT24X2)(d0, d1)
#define AE_INT24X2_ADD_INT24(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24X2_ADD_INT24)(d0, d1)
#define AE_INT24X2_SUB_INT24(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24X2_SUB_INT24)(d0, d1)
#define AE_INT24X2_AND_INT24(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24X2_AND_INT24)(d0, d1)
#define AE_INT24X2_XOR_INT24(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24X2_XOR_INT24)(d0, d1)
#define AE_INT24X2_OR_INT24(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24X2_OR_INT24)(d0, d1)
#define AE_INT24X2_NEG(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24X2_NEG)(d0)
#define AE_INT24X2_BNOT(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24X2_BNOT)(d0)
#define AE_INT24X2_SLA(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24X2_SLA)(d0, sa)
#define AE_INT24X2_SRA(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24X2_SRA)(d0, sa)
#define AE_INT24X2_SLAI(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24X2_SLAI)(d0, sa)
#define AE_INT24X2_SRAI(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24X2_SRAI)(d0, sa)
#define AE_INT24_ADD_INT24X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24_ADD_INT24X2)(d0, d1)
#define AE_INT24_SUB_INT24X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24_SUB_INT24X2)(d0, d1)
#define AE_INT24_AND_INT24X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24_AND_INT24X2)(d0, d1)
#define AE_INT24_XOR_INT24X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24_XOR_INT24X2)(d0, d1)
#define AE_INT24_OR_INT24X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24_OR_INT24X2)(d0, d1)
#define AE_INT24_ADD_INT24(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24_ADD_INT24)(d0, d1)
#define AE_INT24_SUB_INT24(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24_SUB_INT24)(d0, d1)
#define AE_INT24_AND_INT24(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24_AND_INT24)(d0, d1)
#define AE_INT24_XOR_INT24(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24_XOR_INT24)(d0, d1)
#define AE_INT24_OR_INT24(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24_OR_INT24)(d0, d1)
#define AE_INT24_MUL_INT24(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24_MUL_INT24)(d0, d1)
#define AE_INT24_NEG(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24_NEG)(d0)
#define AE_INT24_BNOT(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24_BNOT)(d0)
#define AE_INT24_SLA(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24_SLA)(d0, sa)
#define AE_INT24_SRA(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24_SRA)(d0, sa)
#define AE_INT24_SLAI(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24_SLAI)(d0, sa)
#define AE_INT24_SRAI(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_INT24_SRAI)(d0, sa)
#define AE_F24X2_ADDS_F24X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F24X2_ADDS_F24X2)(d0, d1)
#define AE_F24X2_SUBS_F24X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F24X2_SUBS_F24X2)(d0, d1)
#define AE_F24X2_AND_F24X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F24X2_AND_F24X2)(d0, d1)
#define AE_F24X2_XOR_F24X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F24X2_XOR_F24X2)(d0, d1)
#define AE_F24X2_OR_F24X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F24X2_OR_F24X2)(d0, d1)
#define AE_F24X2_MULF_F24X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F24X2_MULF_F24X2)(d0, d1)
#define AE_F24X2_EQ_F24X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F24X2_EQ_F24X2)(d0, d1)
#define AE_F24X2_LT_F24X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F24X2_LT_F24X2)(d0, d1)
#define AE_F24X2_LE_F24X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F24X2_LE_F24X2)(d0, d1)
#define AE_F24X2_GT_F24X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F24X2_GT_F24X2)(d0, d1)
#define AE_F24X2_GE_F24X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F24X2_GE_F24X2)(d0, d1)
#define AE_F24X2_ADDS_F24(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F24X2_ADDS_F24)(d0, d1)
#define AE_F24X2_SUBS_F24(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F24X2_SUBS_F24)(d0, d1)
#define AE_F24X2_AND_F24(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F24X2_AND_F24)(d0, d1)
#define AE_F24X2_XOR_F24(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F24X2_XOR_F24)(d0, d1)
#define AE_F24X2_OR_F24(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F24X2_OR_F24)(d0, d1)
#define AE_F24X2_NEGS(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_F24X2_NEGS)(d0)
#define AE_F24X2_BNOT(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_F24X2_BNOT)(d0)
#define AE_F24X2_SLA(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_F24X2_SLA)(d0, sa)
#define AE_F24X2_SRA(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_F24X2_SRA)(d0, sa)
#define AE_F24X2_SLAI(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_F24X2_SLAI)(d0, sa)
#define AE_F24X2_SRAI(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_F24X2_SRAI)(d0, sa)
#define AE_F24_ADDS_F24X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F24_ADDS_F24X2)(d0, d1)
#define AE_F24_SUBS_F24X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F24_SUBS_F24X2)(d0, d1)
#define AE_F24_AND_F24X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F24_AND_F24X2)(d0, d1)
#define AE_F24_XOR_F24X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F24_XOR_F24X2)(d0, d1)
#define AE_F24_OR_F24X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F24_OR_F24X2)(d0, d1)
#define AE_F24_ADDS_F24(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F24_ADDS_F24)(d0, d1)
#define AE_F24_SUBS_F24(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F24_SUBS_F24)(d0, d1)
#define AE_F24_AND_F24(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F24_AND_F24)(d0, d1)
#define AE_F24_XOR_F24(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F24_XOR_F24)(d0, d1)
#define AE_F24_OR_F24(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F24_OR_F24)(d0, d1)
#define AE_F24_MULF_F24(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F24_MULF_F24)(d0, d1)
#define AE_F24_NEGS(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_F24_NEGS)(d0)
#define AE_F24_BNOT(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_F24_BNOT)(d0)
#define AE_F24_SLA(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_F24_SLA)(d0, sa)
#define AE_F24_SRA(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_F24_SRA)(d0, sa)
#define AE_F24_SLAI(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_F24_SLAI)(d0, sa)
#define AE_F24_SRAI(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_F24_SRAI)(d0, sa)
#define AE_INT16X4_ADD_INT16X4(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16X4_ADD_INT16X4)(d0, d1)
#define AE_INT16X4_SUB_INT16X4(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16X4_SUB_INT16X4)(d0, d1)
#define AE_INT16X4_AND_INT16X4(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16X4_AND_INT16X4)(d0, d1)
#define AE_INT16X4_XOR_INT16X4(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16X4_XOR_INT16X4)(d0, d1)
#define AE_INT16X4_OR_INT16X4(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16X4_OR_INT16X4)(d0, d1)
#define AE_INT16X4_EQ_INT16X4(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16X4_EQ_INT16X4)(d0, d1)
#define AE_INT16X4_LT_INT16X4(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16X4_LT_INT16X4)(d0, d1)
#define AE_INT16X4_LE_INT16X4(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16X4_LE_INT16X4)(d0, d1)
#define AE_INT16X4_GT_INT16X4(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16X4_GT_INT16X4)(d0, d1)
#define AE_INT16X4_GE_INT16X4(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16X4_GE_INT16X4)(d0, d1)
#define AE_INT16X4_ADD_INT16(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16X4_ADD_INT16)(d0, d1)
#define AE_INT16X4_SUB_INT16(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16X4_SUB_INT16)(d0, d1)
#define AE_INT16X4_AND_INT16(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16X4_AND_INT16)(d0, d1)
#define AE_INT16X4_XOR_INT16(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16X4_XOR_INT16)(d0, d1)
#define AE_INT16X4_OR_INT16(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16X4_OR_INT16)(d0, d1)
#define AE_INT16X4_NEG(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16X4_NEG)(d0)
#define AE_INT16X4_BNOT(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16X4_BNOT)(d0)
#define AE_INT16X4_SRA(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16X4_SRA)(d0, sa)
#define AE_INT16X4_SRAI(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16X4_SRAI)(d0, sa)
#define AE_INT16_ADD_INT16X4(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16_ADD_INT16X4)(d0, d1)
#define AE_INT16_SUB_INT16X4(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16_SUB_INT16X4)(d0, d1)
#define AE_INT16_AND_INT16X4(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16_AND_INT16X4)(d0, d1)
#define AE_INT16_XOR_INT16X4(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16_XOR_INT16X4)(d0, d1)
#define AE_INT16_OR_INT16X4(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16_OR_INT16X4)(d0, d1)
#define AE_INT16_ADD_INT16(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16_ADD_INT16)(d0, d1)
#define AE_INT16_SUB_INT16(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16_SUB_INT16)(d0, d1)
#define AE_INT16_AND_INT16(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16_AND_INT16)(d0, d1)
#define AE_INT16_XOR_INT16(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16_XOR_INT16)(d0, d1)
#define AE_INT16_OR_INT16(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16_OR_INT16)(d0, d1)
#define AE_INT16_NEG(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16_NEG)(d0)
#define AE_INT16_BNOT(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16_BNOT)(d0)
#define AE_INT16_SRA(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16_SRA)(d0, sa)
#define AE_INT16_SRAI(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16_SRAI)(d0, sa)
#define AE_F16X4_ADDS_F16X4(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F16X4_ADDS_F16X4)(d0, d1)
#define AE_F16X4_SUBS_F16X4(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F16X4_SUBS_F16X4)(d0, d1)
#define AE_F16X4_AND_F16X4(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F16X4_AND_F16X4)(d0, d1)
#define AE_F16X4_XOR_F16X4(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F16X4_XOR_F16X4)(d0, d1)
#define AE_F16X4_OR_F16X4(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F16X4_OR_F16X4)(d0, d1)
#define AE_F16X4_EQ_F16X4(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F16X4_EQ_F16X4)(d0, d1)
#define AE_F16X4_LT_F16X4(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F16X4_LT_F16X4)(d0, d1)
#define AE_F16X4_LE_F16X4(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F16X4_LE_F16X4)(d0, d1)
#define AE_F16X4_GT_F16X4(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F16X4_GT_F16X4)(d0, d1)
#define AE_F16X4_GE_F16X4(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F16X4_GE_F16X4)(d0, d1)
#define AE_F16X4_ADDS_F16(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F16X4_ADDS_F16)(d0, d1)
#define AE_F16X4_SUBS_F16(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F16X4_SUBS_F16)(d0, d1)
#define AE_F16X4_AND_F16(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F16X4_AND_F16)(d0, d1)
#define AE_F16X4_XOR_F16(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F16X4_XOR_F16)(d0, d1)
#define AE_F16X4_OR_F16(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F16X4_OR_F16)(d0, d1)
#define AE_F16X4_NEGS(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_F16X4_NEGS)(d0)
#define AE_F16X4_BNOT(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_F16X4_BNOT)(d0)
#define AE_F16X4_SLAS(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_F16X4_SLAS)(d0, sa)
#define AE_F16X4_SRA(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_F16X4_SRA)(d0, sa)
#define AE_F16X4_SLAIS(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_F16X4_SLAIS)(d0, sa)
#define AE_F16X4_SRAI(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_F16X4_SRAI)(d0, sa)
#define AE_F16_ADDS_F16X4(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F16_ADDS_F16X4)(d0, d1)
#define AE_F16_SUBS_F16X4(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F16_SUBS_F16X4)(d0, d1)
#define AE_F16_AND_F16X4(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F16_AND_F16X4)(d0, d1)
#define AE_F16_XOR_F16X4(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F16_XOR_F16X4)(d0, d1)
#define AE_F16_OR_F16X4(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F16_OR_F16X4)(d0, d1)
#define AE_F16_ADDS_F16(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F16_ADDS_F16)(d0, d1)
#define AE_F16_SUBS_F16(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F16_SUBS_F16)(d0, d1)
#define AE_F16_AND_F16(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F16_AND_F16)(d0, d1)
#define AE_F16_XOR_F16(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F16_XOR_F16)(d0, d1)
#define AE_F16_OR_F16(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F16_OR_F16)(d0, d1)
#define AE_F16_NEGS(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_F16_NEGS)(d0)
#define AE_F16_BNOT(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_F16_BNOT)(d0)
#define AE_F16_SLAS(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_F16_SLAS)(d0, sa)
#define AE_F16_SRA(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_F16_SRA)(d0, sa)
#define AE_F16_SLAIS(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_F16_SLAIS)(d0, sa)
#define AE_F16_SRAI(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_F16_SRAI)(d0, sa)
#define AE_INT32X2_ADD_INT32X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_ADD_INT32X2)(d0, d1)
#define AE_INT32X2_SUB_INT32X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_SUB_INT32X2)(d0, d1)
#define AE_INT32X2_AND_INT32X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_AND_INT32X2)(d0, d1)
#define AE_INT32X2_XOR_INT32X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_XOR_INT32X2)(d0, d1)
#define AE_INT32X2_OR_INT32X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_OR_INT32X2)(d0, d1)
#define AE_INT32X2_MUL_INT32X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_MUL_INT32X2)(d0, d1)
#define AE_INT32X2_EQ_INT32X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_EQ_INT32X2)(d0, d1)
#define AE_INT32X2_LT_INT32X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_LT_INT32X2)(d0, d1)
#define AE_INT32X2_LE_INT32X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_LE_INT32X2)(d0, d1)
#define AE_INT32X2_GT_INT32X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_GT_INT32X2)(d0, d1)
#define AE_INT32X2_GE_INT32X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_GE_INT32X2)(d0, d1)
#define AE_INT32X2_ADD_INT32(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_ADD_INT32)(d0, d1)
#define AE_INT32X2_SUB_INT32(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_SUB_INT32)(d0, d1)
#define AE_INT32X2_AND_INT32(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_AND_INT32)(d0, d1)
#define AE_INT32X2_XOR_INT32(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_XOR_INT32)(d0, d1)
#define AE_INT32X2_OR_INT32(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_OR_INT32)(d0, d1)
#define AE_INT32X2_NEG(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_NEG)(d0)
#define AE_INT32X2_BNOT(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_BNOT)(d0)
#define AE_INT32X2_SLA(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_SLA)(d0, sa)
#define AE_INT32X2_SRA(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_SRA)(d0, sa)
#define AE_INT32X2_SLAI(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_SLAI)(d0, sa)
#define AE_INT32X2_SRAI(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_SRAI)(d0, sa)
#define AE_INT32_ADD_INT32X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32_ADD_INT32X2)(d0, d1)
#define AE_INT32_SUB_INT32X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32_SUB_INT32X2)(d0, d1)
#define AE_INT32_AND_INT32X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32_AND_INT32X2)(d0, d1)
#define AE_INT32_XOR_INT32X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32_XOR_INT32X2)(d0, d1)
#define AE_INT32_OR_INT32X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32_OR_INT32X2)(d0, d1)
#define AE_INT32_ADD_INT32(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32_ADD_INT32)(d0, d1)
#define AE_INT32_SUB_INT32(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32_SUB_INT32)(d0, d1)
#define AE_INT32_AND_INT32(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32_AND_INT32)(d0, d1)
#define AE_INT32_XOR_INT32(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32_XOR_INT32)(d0, d1)
#define AE_INT32_OR_INT32(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32_OR_INT32)(d0, d1)
#define AE_INT32_MUL_INT32(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32_MUL_INT32)(d0, d1)
#define AE_INT32_NEG(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32_NEG)(d0)
#define AE_INT32_BNOT(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32_BNOT)(d0)
#define AE_INT32_SLA(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32_SLA)(d0, sa)
#define AE_INT32_SRA(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32_SRA)(d0, sa)
#define AE_INT32_SLAI(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32_SLAI)(d0, sa)
#define AE_INT32_SRAI(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32_SRAI)(d0, sa)
#define AE_F32X2_ADDS_F32X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F32X2_ADDS_F32X2)(d0, d1)
#define AE_F32X2_SUBS_F32X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F32X2_SUBS_F32X2)(d0, d1)
#define AE_F32X2_AND_F32X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F32X2_AND_F32X2)(d0, d1)
#define AE_F32X2_XOR_F32X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F32X2_XOR_F32X2)(d0, d1)
#define AE_F32X2_OR_F32X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F32X2_OR_F32X2)(d0, d1)
#define AE_F32X2_MULF_F32X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F32X2_MULF_F32X2)(d0, d1)
#define AE_F32X2_EQ_F32X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F32X2_EQ_F32X2)(d0, d1)
#define AE_F32X2_LT_F32X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F32X2_LT_F32X2)(d0, d1)
#define AE_F32X2_LE_F32X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F32X2_LE_F32X2)(d0, d1)
#define AE_F32X2_GT_F32X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F32X2_GT_F32X2)(d0, d1)
#define AE_F32X2_GE_F32X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F32X2_GE_F32X2)(d0, d1)
#define AE_F32X2_ADDS_F32(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F32X2_ADDS_F32)(d0, d1)
#define AE_F32X2_SUBS_F32(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F32X2_SUBS_F32)(d0, d1)
#define AE_F32X2_AND_F32(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F32X2_AND_F32)(d0, d1)
#define AE_F32X2_XOR_F32(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F32X2_XOR_F32)(d0, d1)
#define AE_F32X2_OR_F32(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F32X2_OR_F32)(d0, d1)
#define AE_F32X2_NEGS(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_F32X2_NEGS)(d0)
#define AE_F32X2_BNOT(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_F32X2_BNOT)(d0)
#define AE_F32X2_SLAS(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_F32X2_SLAS)(d0, sa)
#define AE_F32X2_SRA(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_F32X2_SRA)(d0, sa)
#define AE_F32X2_SLAIS(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_F32X2_SLAIS)(d0, sa)
#define AE_F32X2_SRAI(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_F32X2_SRAI)(d0, sa)
#define AE_F32_ADDS_F32X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F32_ADDS_F32X2)(d0, d1)
#define AE_F32_SUBS_F32X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F32_SUBS_F32X2)(d0, d1)
#define AE_F32_AND_F32X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F32_AND_F32X2)(d0, d1)
#define AE_F32_XOR_F32X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F32_XOR_F32X2)(d0, d1)
#define AE_F32_OR_F32X2(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F32_OR_F32X2)(d0, d1)
#define AE_F32_ADDS_F32(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F32_ADDS_F32)(d0, d1)
#define AE_F32_SUBS_F32(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F32_SUBS_F32)(d0, d1)
#define AE_F32_AND_F32(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F32_AND_F32)(d0, d1)
#define AE_F32_XOR_F32(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F32_XOR_F32)(d0, d1)
#define AE_F32_OR_F32(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F32_OR_F32)(d0, d1)
#define AE_F32_MULF_F32(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F32_MULF_F32)(d0, d1)
#define AE_F32_NEGS(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_F32_NEGS)(d0)
#define AE_F32_BNOT(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_F32_BNOT)(d0)
#define AE_F32_SLAS(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_F32_SLAS)(d0, sa)
#define AE_F32_SRA(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_F32_SRA)(d0, sa)
#define AE_F32_SLAIS(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_F32_SLAIS)(d0, sa)
#define AE_F32_SRAI(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_F32_SRAI)(d0, sa)
#define AE_INT64_ADD(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT64_ADD)(d0, d1)
#define AE_INT64_SUB(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT64_SUB)(d0, d1)
#define AE_INT64_AND(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT64_AND)(d0, d1)
#define AE_INT64_XOR(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT64_XOR)(d0, d1)
#define AE_INT64_OR(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT64_OR)(d0, d1)
#define AE_INT64_NEG(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_INT64_NEG)(d0)
#define AE_INT64_BNOT(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_INT64_BNOT)(d0)
#define AE_INT64_SLA(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_INT64_SLA)(d0, sa)
#define AE_INT64_SRA(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_INT64_SRA)(d0, sa)
#define AE_INT64_SLAI(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_INT64_SLAI)(d0, sa)
#define AE_INT64_SRAI(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_INT64_SRAI)(d0, sa)
#define AE_INT64_EQ(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT64_EQ)(d0, d1)
#define AE_INT64_LT(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT64_LT)(d0, d1)
#define AE_INT64_LE(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT64_LE)(d0, d1)
#define AE_INT64_GT(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT64_GT)(d0, d1)
#define AE_INT64_GE(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT64_GE)(d0, d1)
#define AE_F64_ADDS(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F64_ADDS)(d0, d1)
#define AE_F64_SUBS(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F64_SUBS)(d0, d1)
#define AE_F64_AND(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F64_AND)(d0, d1)
#define AE_F64_XOR(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F64_XOR)(d0, d1)
#define AE_F64_OR(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F64_OR)(d0, d1)
#define AE_F64_NEGS(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_F64_NEGS)(d0)
#define AE_F64_BNOT(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_F64_BNOT)(d0)
#define AE_F64_SLAS(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_F64_SLAS)(d0, sa)
#define AE_F64_SRA(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_F64_SRA)(d0, sa)
#define AE_F64_SLAIS(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_F64_SLAIS)(d0, sa)
#define AE_F64_SRAI(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_F64_SRAI)(d0, sa)
#define AE_F64_EQ(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F64_EQ)(d0, d1)
#define AE_F64_LT(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F64_LT)(d0, d1)
#define AE_F64_LE(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F64_LE)(d0, d1)
#define AE_F64_GT(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F64_GT)(d0, d1)
#define AE_F64_GE(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F64_GE)(d0, d1)
#define AE_INT32_MUL_INT16(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32_MUL_INT16)(d0, d1)
#define AE_F32_MUL_F16(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F32_MUL_F16)(d0, d1)
#define AE_P24X2S_ADDS_P24X2S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2S_ADDS_P24X2S)(d0, d1)
#define AE_P24X2S_SUBS_P24X2S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2S_SUBS_P24X2S)(d0, d1)
#define AE_P24X2S_AND_P24X2S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2S_AND_P24X2S)(d0, d1)
#define AE_P24X2S_XOR_P24X2S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2S_XOR_P24X2S)(d0, d1)
#define AE_P24X2S_OR_P24X2S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2S_OR_P24X2S)(d0, d1)
#define AE_P24X2S_MULF_P24X2S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2S_MULF_P24X2S)(d0, d1)
#define AE_P24X2S_EQ_P24X2S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2S_EQ_P24X2S)(d0, d1)
#define AE_P24X2S_LT_P24X2S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2S_LT_P24X2S)(d0, d1)
#define AE_P24X2S_LE_P24X2S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2S_LE_P24X2S)(d0, d1)
#define AE_P24X2S_GT_P24X2S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2S_GT_P24X2S)(d0, d1)
#define AE_P24X2S_GE_P24X2S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2S_GE_P24X2S)(d0, d1)
#define AE_P24X2S_ADDS_P24X2F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2S_ADDS_P24X2F)(d0, d1)
#define AE_P24X2S_SUBS_P24X2F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2S_SUBS_P24X2F)(d0, d1)
#define AE_P24X2S_AND_P24X2F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2S_AND_P24X2F)(d0, d1)
#define AE_P24X2S_XOR_P24X2F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2S_XOR_P24X2F)(d0, d1)
#define AE_P24X2S_OR_P24X2F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2S_OR_P24X2F)(d0, d1)
#define AE_P24X2S_MULF_P24X2F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2S_MULF_P24X2F)(d0, d1)
#define AE_P24X2S_EQ_P24X2F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2S_EQ_P24X2F)(d0, d1)
#define AE_P24X2S_LT_P24X2F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2S_LT_P24X2F)(d0, d1)
#define AE_P24X2S_LE_P24X2F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2S_LE_P24X2F)(d0, d1)
#define AE_P24X2S_GT_P24X2F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2S_GT_P24X2F)(d0, d1)
#define AE_P24X2S_GE_P24X2F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2S_GE_P24X2F)(d0, d1)
#define AE_P24X2S_ADDS_P24S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2S_ADDS_P24S)(d0, d1)
#define AE_P24X2S_SUBS_P24S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2S_SUBS_P24S)(d0, d1)
#define AE_P24X2S_AND_P24S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2S_AND_P24S)(d0, d1)
#define AE_P24X2S_XOR_P24S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2S_XOR_P24S)(d0, d1)
#define AE_P24X2S_OR_P24S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2S_OR_P24S)(d0, d1)
#define AE_P24X2S_ADDS_P24F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2S_ADDS_P24F)(d0, d1)
#define AE_P24X2S_SUBS_P24F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2S_SUBS_P24F)(d0, d1)
#define AE_P24X2S_AND_P24F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2S_AND_P24F)(d0, d1)
#define AE_P24X2S_XOR_P24F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2S_XOR_P24F)(d0, d1)
#define AE_P24X2S_OR_P24F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2S_OR_P24F)(d0, d1)
#define AE_P24X2S_NEGS(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2S_NEGS)(d0)
#define AE_P24X2S_BNOT(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2S_BNOT)(d0)
#define AE_P24X2S_SLAS(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2S_SLAS)(d0, sa)
#define AE_P24X2S_SRA(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2S_SRA)(d0, sa)
#define AE_P24X2S_SLAIS(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2S_SLAIS)(d0, sa)
#define AE_P24X2S_SRAI(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2S_SRAI)(d0, sa)
#define AE_P24X2F_ADDS_P24X2S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2F_ADDS_P24X2S)(d0, d1)
#define AE_P24X2F_SUBS_P24X2S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2F_SUBS_P24X2S)(d0, d1)
#define AE_P24X2F_AND_P24X2S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2F_AND_P24X2S)(d0, d1)
#define AE_P24X2F_XOR_P24X2S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2F_XOR_P24X2S)(d0, d1)
#define AE_P24X2F_OR_P24X2S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2F_OR_P24X2S)(d0, d1)
#define AE_P24X2F_MULF_P24X2S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2F_MULF_P24X2S)(d0, d1)
#define AE_P24X2F_EQ_P24X2S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2F_EQ_P24X2S)(d0, d1)
#define AE_P24X2F_LT_P24X2S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2F_LT_P24X2S)(d0, d1)
#define AE_P24X2F_LE_P24X2S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2F_LE_P24X2S)(d0, d1)
#define AE_P24X2F_GT_P24X2S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2F_GT_P24X2S)(d0, d1)
#define AE_P24X2F_GE_P24X2S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2F_GE_P24X2S)(d0, d1)
#define AE_P24X2F_ADDS_P24X2F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2F_ADDS_P24X2F)(d0, d1)
#define AE_P24X2F_SUBS_P24X2F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2F_SUBS_P24X2F)(d0, d1)
#define AE_P24X2F_AND_P24X2F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2F_AND_P24X2F)(d0, d1)
#define AE_P24X2F_XOR_P24X2F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2F_XOR_P24X2F)(d0, d1)
#define AE_P24X2F_OR_P24X2F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2F_OR_P24X2F)(d0, d1)
#define AE_P24X2F_MULF_P24X2F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2F_MULF_P24X2F)(d0, d1)
#define AE_P24X2F_EQ_P24X2F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2F_EQ_P24X2F)(d0, d1)
#define AE_P24X2F_LT_P24X2F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2F_LT_P24X2F)(d0, d1)
#define AE_P24X2F_LE_P24X2F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2F_LE_P24X2F)(d0, d1)
#define AE_P24X2F_GT_P24X2F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2F_GT_P24X2F)(d0, d1)
#define AE_P24X2F_GE_P24X2F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2F_GE_P24X2F)(d0, d1)
#define AE_P24X2F_ADDS_P24S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2F_ADDS_P24S)(d0, d1)
#define AE_P24X2F_SUBS_P24S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2F_SUBS_P24S)(d0, d1)
#define AE_P24X2F_AND_P24S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2F_AND_P24S)(d0, d1)
#define AE_P24X2F_XOR_P24S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2F_XOR_P24S)(d0, d1)
#define AE_P24X2F_OR_P24S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2F_OR_P24S)(d0, d1)
#define AE_P24X2F_ADDS_P24F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2F_ADDS_P24F)(d0, d1)
#define AE_P24X2F_SUBS_P24F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2F_SUBS_P24F)(d0, d1)
#define AE_P24X2F_AND_P24F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2F_AND_P24F)(d0, d1)
#define AE_P24X2F_XOR_P24F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2F_XOR_P24F)(d0, d1)
#define AE_P24X2F_OR_P24F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2F_OR_P24F)(d0, d1)
#define AE_P24X2F_NEGS(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2F_NEGS)(d0)
#define AE_P24X2F_BNOT(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2F_BNOT)(d0)
#define AE_P24X2F_SLAS(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2F_SLAS)(d0, sa)
#define AE_P24X2F_SRA(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2F_SRA)(d0, sa)
#define AE_P24X2F_SLAIS(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2F_SLAIS)(d0, sa)
#define AE_P24X2F_SRAI(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_P24X2F_SRAI)(d0, sa)
#define AE_P24S_ADDS_P24X2S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24S_ADDS_P24X2S)(d0, d1)
#define AE_P24S_SUBS_P24X2S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24S_SUBS_P24X2S)(d0, d1)
#define AE_P24S_AND_P24X2S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24S_AND_P24X2S)(d0, d1)
#define AE_P24S_XOR_P24X2S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24S_XOR_P24X2S)(d0, d1)
#define AE_P24S_OR_P24X2S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24S_OR_P24X2S)(d0, d1)
#define AE_P24S_ADDS_P24X2F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24S_ADDS_P24X2F)(d0, d1)
#define AE_P24S_SUBS_P24X2F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24S_SUBS_P24X2F)(d0, d1)
#define AE_P24S_AND_P24X2F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24S_AND_P24X2F)(d0, d1)
#define AE_P24S_XOR_P24X2F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24S_XOR_P24X2F)(d0, d1)
#define AE_P24S_OR_P24X2F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24S_OR_P24X2F)(d0, d1)
#define AE_P24S_ADDS_P24S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24S_ADDS_P24S)(d0, d1)
#define AE_P24S_SUBS_P24S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24S_SUBS_P24S)(d0, d1)
#define AE_P24S_AND_P24S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24S_AND_P24S)(d0, d1)
#define AE_P24S_XOR_P24S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24S_XOR_P24S)(d0, d1)
#define AE_P24S_OR_P24S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24S_OR_P24S)(d0, d1)
#define AE_P24S_MULF_P24S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24S_MULF_P24S)(d0, d1)
#define AE_P24S_ADDS_P24F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24S_ADDS_P24F)(d0, d1)
#define AE_P24S_SUBS_P24F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24S_SUBS_P24F)(d0, d1)
#define AE_P24S_AND_P24F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24S_AND_P24F)(d0, d1)
#define AE_P24S_XOR_P24F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24S_XOR_P24F)(d0, d1)
#define AE_P24S_OR_P24F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24S_OR_P24F)(d0, d1)
#define AE_P24S_MULF_P24F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24S_MULF_P24F)(d0, d1)
#define AE_P24S_NEGS(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_P24S_NEGS)(d0)
#define AE_P24S_BNOT(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_P24S_BNOT)(d0)
#define AE_P24S_SLAS(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_P24S_SLAS)(d0, sa)
#define AE_P24S_SRA(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_P24S_SRA)(d0, sa)
#define AE_P24S_SLAIS(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_P24S_SLAIS)(d0, sa)
#define AE_P24S_SRAI(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_P24S_SRAI)(d0, sa)
#define AE_P24F_ADDS_P24X2S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24F_ADDS_P24X2S)(d0, d1)
#define AE_P24F_SUBS_P24X2S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24F_SUBS_P24X2S)(d0, d1)
#define AE_P24F_AND_P24X2S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24F_AND_P24X2S)(d0, d1)
#define AE_P24F_XOR_P24X2S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24F_XOR_P24X2S)(d0, d1)
#define AE_P24F_OR_P24X2S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24F_OR_P24X2S)(d0, d1)
#define AE_P24F_ADDS_P24X2F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24F_ADDS_P24X2F)(d0, d1)
#define AE_P24F_SUBS_P24X2F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24F_SUBS_P24X2F)(d0, d1)
#define AE_P24F_AND_P24X2F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24F_AND_P24X2F)(d0, d1)
#define AE_P24F_XOR_P24X2F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24F_XOR_P24X2F)(d0, d1)
#define AE_P24F_OR_P24X2F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24F_OR_P24X2F)(d0, d1)
#define AE_P24F_ADDS_P24S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24F_ADDS_P24S)(d0, d1)
#define AE_P24F_SUBS_P24S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24F_SUBS_P24S)(d0, d1)
#define AE_P24F_AND_P24S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24F_AND_P24S)(d0, d1)
#define AE_P24F_XOR_P24S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24F_XOR_P24S)(d0, d1)
#define AE_P24F_OR_P24S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24F_OR_P24S)(d0, d1)
#define AE_P24F_MULF_P24S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24F_MULF_P24S)(d0, d1)
#define AE_P24F_ADDS_P24F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24F_ADDS_P24F)(d0, d1)
#define AE_P24F_SUBS_P24F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24F_SUBS_P24F)(d0, d1)
#define AE_P24F_AND_P24F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24F_AND_P24F)(d0, d1)
#define AE_P24F_XOR_P24F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24F_XOR_P24F)(d0, d1)
#define AE_P24F_OR_P24F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24F_OR_P24F)(d0, d1)
#define AE_P24F_MULF_P24F(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_P24F_MULF_P24F)(d0, d1)
#define AE_P24F_NEGS(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_P24F_NEGS)(d0)
#define AE_P24F_BNOT(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_P24F_BNOT)(d0)
#define AE_P24F_SLAS(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_P24F_SLAS)(d0, sa)
#define AE_P24F_SRA(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_P24F_SRA)(d0, sa)
#define AE_P24F_SLAIS(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_P24F_SLAIS)(d0, sa)
#define AE_P24F_SRAI(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_P24F_SRAI)(d0, sa)
#define AE_Q56S_ADD(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_Q56S_ADD)(d0, d1)
#define AE_Q56S_SUB(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_Q56S_SUB)(d0, d1)
#define AE_Q56S_AND(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_Q56S_AND)(d0, d1)
#define AE_Q56S_XOR(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_Q56S_XOR)(d0, d1)
#define AE_Q56S_OR(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_Q56S_OR)(d0, d1)
#define AE_Q56S_NEG(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_Q56S_NEG)(d0)
#define AE_Q56S_BNOT(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_Q56S_BNOT)(d0)
#define AE_Q56S_SLA(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_Q56S_SLA)(d0, sa)
#define AE_Q56S_SRA(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_Q56S_SRA)(d0, sa)
#define AE_Q56S_SRAI(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_Q56S_SRAI)(d0, sa)
#define AE_Q56S_EQ(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_Q56S_EQ)(d0, d1)
#define AE_Q56S_LT(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_Q56S_LT)(d0, d1)
#define AE_Q56S_LE(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_Q56S_LE)(d0, d1)
#define AE_Q56S_GT(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_Q56S_GT)(d0, d1)
#define AE_Q56S_GE(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_Q56S_GE)(d0, d1)
#define ae_int32x4_loadi(b, c) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x4_loadi)(b, c)
#define ae_int32x4_storei(d, b, c) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x4_storei)(d, b, c)
#define ae_int32x4_move(b) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x4_move)(b)
#define AE_INT32X2_NOT(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_NOT)(d0)
#define ae_f32x4_loadi(b, c) \
	CSTUB_(_TIE_xt_hifi2_ae_f32x4_loadi)(b, c)
#define ae_f32x4_storei(d, b, c) \
	CSTUB_(_TIE_xt_hifi2_ae_f32x4_storei)(d, b, c)
#define ae_f32x4_move(b) \
	CSTUB_(_TIE_xt_hifi2_ae_f32x4_move)(b)
#define AE_SEL16X4IR(v0, v1, i) \
	CSTUB_(_TIE_xt_hifi2_AE_SEL16X4IR)(v0, v1, i)
#define AE_SEL32X2IR(v0, v1, i) \
	CSTUB_(_TIE_xt_hifi2_AE_SEL32X2IR)(v0, v1, i)
#define AE_SELF32X2IR(v0, v1, i) \
	CSTUB_(_TIE_xt_hifi2_AE_SELF32X2IR)(v0, v1, i)
#define AE_INT32X2_AND_rinit(a) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_AND_rinit)(a)
#define AE_INT32X2_AND_rvec(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_AND_rvec)(d0, d1)
#define AE_INT32X2_AND_rfini(d) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_AND_rfini)(d)
#define AE_INT32X2_OR_rinit(a) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_OR_rinit)(a)
#define AE_INT32X2_OR_rvec(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_OR_rvec)(d0, d1)
#define AE_INT32X2_OR_rfini(d) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_OR_rfini)(d)
#define AE_INT32X2_XOR_rinit(a) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_XOR_rinit)(a)
#define AE_INT32X2_XOR_rvec(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_XOR_rvec)(d0, d1)
#define AE_INT32X2_XOR_rfini(d) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_XOR_rfini)(d)
#define AE_INT32X2_RMIN(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_RMIN)(d0)
#define AE_INT32X2_RMAX(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_RMAX)(d0)
#define AE_INT32X2_RADD(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_RADD)(d0)
#define AE_F32X2_RADD(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_F32X2_RADD)(d0)
#define AE_ABS32S_scalar(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_ABS32S_scalar)(d0)
#define AE_INT32X4_ABS32S(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X4_ABS32S)(d0)
#define AE_INT32X2_ABS32S(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_ABS32S)(d0)
#define AE_ADD32S_scalar(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_ADD32S_scalar)(d0, d1)
#define AE_INT32X4_ADD32S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X4_ADD32S)(d0, d1)
#define AE_INT32X2_ADD32S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_ADD32S)(d0, d1)
#define AE_NEG32S_scalar(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_NEG32S_scalar)(d0)
#define AE_INT32X4_NEG32S(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X4_NEG32S)(d0)
#define AE_INT32X2_NEG32S(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_NEG32S)(d0)
#define AE_SUB32S_scalar(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SUB32S_scalar)(d0, d1)
#define AE_INT32X4_SUB32S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X4_SUB32S)(d0, d1)
#define AE_INT32X2_SUB32S(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X2_SUB32S)(d0, d1)
#define AE_SLAA32S_scalar(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SLAA32S_scalar)(d0, sa)
#define AE_SLAA32S_vector(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SLAA32S_vector)(d0, sa)
#define AE_SRAA32S_scalar(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SRAA32S_scalar)(d0, sa)
#define AE_SRAA32S_vector(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SRAA32S_vector)(d0, sa)
#define AE_SRAA32RS_scalar(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SRAA32RS_scalar)(d0, sa)
#define AE_SRAA32RS_vector(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SRAA32RS_vector)(d0, sa)
#define AE_INT16X4_NAND_INT16X4(a, b) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16X4_NAND_INT16X4)(a, b)
#define AE_ABS16S_scalar(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_ABS16S_scalar)(d0)
#define AE_ABS16S_vector(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_ABS16S_vector)(d0)
#define AE_ADD16S_scalar(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_ADD16S_scalar)(d0, d1)
#define AE_ADD16S_vector(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_ADD16S_vector)(d0, d1)
#define AE_MULFP16X4S_scalar(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFP16X4S_scalar)(d0, d1)
#define AE_MULFP16X4S_vector(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFP16X4S_vector)(d0, d1)
#define AE_MULFP16X4RAS_scalar(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFP16X4RAS_scalar)(d0, d1)
#define AE_MULFP16X4RAS_vector(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULFP16X4RAS_vector)(d0, d1)
#define AE_NSAZ16_0_scalar(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_NSAZ16_0_scalar)(d0)
#define AE_SAT16X4_scalar(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_SAT16X4_scalar)(d0)
#define AE_SAT16X4_vector(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_SAT16X4_vector)(d0)
#define AE_MULF16X4SS_scalar(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF16X4SS_scalar)(d0, d1)
#define AE_MULF16X4SS_vector(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF16X4SS_vector)(d0, d1)
#define AE_MUL16X4_vector(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MUL16X4_vector)(d0, d1)
#define AE_MULA16X4_vector(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULA16X4_vector)(&d, d0, d1)
#define AE_MULAAR16P16X4S_vector(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAAR16P16X4S_vector)(&d, d0, d1)
#define AE_MULR16P16X4S_vector(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULR16P16X4S_vector)(d0, d1)
#define AE_MULAF16X4SS_scalar(ain, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF16X4SS_scalar)(ain, d0, d1)
#define AE_MULAF16X4SS_vector(pin, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF16X4SS_vector)(pin, d0, d1)
#define AE_MULSF16X4SS_scalar(ain, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF16X4SS_scalar)(ain, d0, d1)
#define AE_MULSF16X4SS_vector(pin, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULSF16X4SS_vector)(pin, d0, d1)
#define AE_RLmac_rinit(a) \
	CSTUB_(_TIE_xt_hifi2_AE_RLmac_rinit)(a)
#define AE_RLmac_rvec(din, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_RLmac_rvec)(din, d0, d1)
#define AE_RLmac_rfini(d) \
	CSTUB_(_TIE_xt_hifi2_AE_RLmac_rfini)(d)
#define AE_RLmsu_rinit(a) \
	CSTUB_(_TIE_xt_hifi2_AE_RLmsu_rinit)(a)
#define AE_RLmsu_rvec(din, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_RLmsu_rvec)(din, d0, d1)
#define AE_RLmsu_rfini(d) \
	CSTUB_(_TIE_xt_hifi2_AE_RLmsu_rfini)(d)
#define AE_RLadd_rinit(a) \
	CSTUB_(_TIE_xt_hifi2_AE_RLadd_rinit)(a)
#define AE_RLadd_rvec(din, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_RLadd_rvec)(din, d0)
#define AE_RLadd_rfini(d) \
	CSTUB_(_TIE_xt_hifi2_AE_RLadd_rfini)(d)
#define AE_RLadd4_rinit(a) \
	CSTUB_(_TIE_xt_hifi2_AE_RLadd4_rinit)(a)
#define AE_RLadd4_rvec(din, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_RLadd4_rvec)(din, d0)
#define AE_RLadd4_rfini(d) \
	CSTUB_(_TIE_xt_hifi2_AE_RLadd4_rfini)(d)
#define AE_RLsub_rinit(a) \
	CSTUB_(_TIE_xt_hifi2_AE_RLsub_rinit)(a)
#define AE_RLsub_rvec(din, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_RLsub_rvec)(din, d0)
#define AE_RLsub_rfini(d) \
	CSTUB_(_TIE_xt_hifi2_AE_RLsub_rfini)(d)
#define AE_RLsub4_rinit(a) \
	CSTUB_(_TIE_xt_hifi2_AE_RLsub4_rinit)(a)
#define AE_RLsub4_rvec(din, d0) \
	CSTUB_(_TIE_xt_hifi2_AE_RLsub4_rvec)(din, d0)
#define AE_RLsub4_rfini(d) \
	CSTUB_(_TIE_xt_hifi2_AE_RLsub4_rfini)(d)
#define AE_NEG16S_scalar(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_NEG16S_scalar)(d0)
#define AE_NEG16S_vector(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_NEG16S_vector)(d0)
#define AE_ROUND16X4F32SASYM_scalar(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_ROUND16X4F32SASYM_scalar)(d0)
#define AE_ROUND16X4F32SASYM_vector(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_ROUND16X4F32SASYM_vector)(d0)
#define AE_SUB16S_scalar(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SUB16S_scalar)(d0, d1)
#define AE_SUB16S_vector(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SUB16S_vector)(d0, d1)
#define AE_SLAA16S_scalar(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SLAA16S_scalar)(d0, sa)
#define AE_SLAA16S_vector(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SLAA16S_vector)(d0, sa)
#define AE_SRAA16S_scalar(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SRAA16S_scalar)(d0, sa)
#define AE_SRAA16S_vector(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SRAA16S_vector)(d0, sa)
#define AE_SRAA16RS_scalar(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SRAA16RS_scalar)(d0, sa)
#define AE_SRAA16RS_vector(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SRAA16RS_vector)(d0, sa)
#define AE_CVT16X4_scalar(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_CVT16X4_scalar)(d0)
#define AE_CVT16X4_vector(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_CVT16X4_vector)(d0)
#define AE_TRUNC16X4F32_scalar(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_TRUNC16X4F32_scalar)(d0)
#define AE_TRUNC16X4F32_vector(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_TRUNC16X4F32_vector)(d0)
#define AE_SEXT32X2D16_10_scalar(p) \
	CSTUB_(_TIE_xt_hifi2_AE_SEXT32X2D16_10_scalar)(p)
#define AE_SEXT32X2D16_10_vector(p) \
	CSTUB_(_TIE_xt_hifi2_AE_SEXT32X2D16_10_vector)(p)
#define AE_CVT32X2F16_10_scalar(p) \
	CSTUB_(_TIE_xt_hifi2_AE_CVT32X2F16_10_scalar)(p)
#define AE_CVT32X2F16_10_vector(p) \
	CSTUB_(_TIE_xt_hifi2_AE_CVT32X2F16_10_vector)(p)
#define ae_int16x4_rtor_ae_int32x4(b) \
	CSTUB_(_TIE_xt_hifi2_ae_int16x4_rtor_ae_int32x4)(b)
#define ae_int32x4_rtor_ae_int16x4(b) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x4_rtor_ae_int16x4)(b)
#define AE_SRAA16_VECTOR(b, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SRAA16_VECTOR)(b, sa)
#define AE_F32X4_RADD(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_F32X4_RADD)(d0)
#define AE_INT32X4_RADD(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X4_RADD)(d0)
#define AE_INT32X4_ADD(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X4_ADD)(d0, d1)
#define AE_INT32X4_SUB(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X4_SUB)(d0, d1)
#define AE_INT32X4_AND(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X4_AND)(d0, d1)
#define AE_INT32X4_OR(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X4_OR)(d0, d1)
#define AE_INT32X4_XOR(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X4_XOR)(d0, d1)
#define AE_INT32X4_BNOT(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X4_BNOT)(d0)
#define AE_INT32X4_INT16X4_MUL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X4_INT16X4_MUL)(d0, d1)
#define AE_INT16X4_INT32X4_MUL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16X4_INT32X4_MUL)(d0, d1)
#define AE_INT32X4_SRAI32(d0, i) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X4_SRAI32)(d0, i)
#define AE_INT32X4_SRAA32(d0, a) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X4_SRAA32)(d0, a)
#define AE_INT32X4_SLAI32(d0, i) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X4_SLAI32)(d0, i)
#define AE_INT32X4_SLAA32(d0, a) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X4_SLAA32)(d0, a)
#define AE_INT32X4_NEG32(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X4_NEG32)(d0)
#define AE_INT32X4_ABS32(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X4_ABS32)(d0)
#define AE_INT32X4_MAX(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X4_MAX)(d0, d1)
#define AE_INT32X4_MIN(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT32X4_MIN)(d0, d1)
#define AE_INT16X4_MIN(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16X4_MIN)(d0, d1)
#define AE_INT16X4_MAX(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16X4_MAX)(d0, d1)
#define AE_INT16X4_RMAX(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16X4_RMAX)(d0)
#define AE_INT16X4_RMIN(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16X4_RMIN)(d0)
#define AE_INT16X4_RADD(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_INT16X4_RADD)(d0)
#define AE_F32X4_ADD(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F32X4_ADD)(d0, d1)
#define AE_F32X4_SUB(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F32X4_SUB)(d0, d1)
#define AE_F32X4_NEG32(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_F32X4_NEG32)(d0)
#define AE_F32X4_F16X4_MUL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F32X4_F16X4_MUL)(d0, d1)
#define AE_F16X4_F32X4_MUL(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F16X4_F32X4_MUL)(d0, d1)
#define AE_F32X4_AND(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F32X4_AND)(d0, d1)
#define AE_F32X4_OR(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F32X4_OR)(d0, d1)
#define AE_F32X4_XOR(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_F32X4_XOR)(d0, d1)
#define AE_F32X4_BNOT(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_F32X4_BNOT)(d0)
#define AE_F32X4_SLAI32S(d0, i) \
	CSTUB_(_TIE_xt_hifi2_AE_F32X4_SLAI32S)(d0, i)
#define AE_F32X4_SLAA32S(d0, a) \
	CSTUB_(_TIE_xt_hifi2_AE_F32X4_SLAA32S)(d0, a)
#define AE_F32X4_SRAI32(d0, i) \
	CSTUB_(_TIE_xt_hifi2_AE_F32X4_SRAI32)(d0, i)
#define AE_F32X4_SRAA32(d0, a) \
	CSTUB_(_TIE_xt_hifi2_AE_F32X4_SRAA32)(d0, a)
#define ae_int16x4_aligning_load_prime(a) \
	CSTUB_(_TIE_xt_hifi2_ae_int16x4_aligning_load_prime)(a)
#define ae_int16x4_aligning_load_post_update_positive(v, u, a) \
	CSTUB_(_TIE_xt_hifi2_ae_int16x4_aligning_load_post_update_positive)(&v, &u, (const ae_int16x4 **)&(a))
#define ae_int16x4_aligning_load_post_update_negative(v, u, a) \
	CSTUB_(_TIE_xt_hifi2_ae_int16x4_aligning_load_post_update_negative)(&v, &u, (const ae_int16x4 **)&(a))
#define ae_int16x4_load_post_update_positive(v, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int16x4_load_post_update_positive)(&v, (const ae_int16x4 **)&(a), off)
#define ae_int16x4_load_post_update_negative(v, a) \
	CSTUB_(_TIE_xt_hifi2_ae_int16x4_load_post_update_negative)(&v, (const ae_int16x4 **)&(a))
#define ae_int16x4_aligning_store_prime() \
	CSTUB_(_TIE_xt_hifi2_ae_int16x4_aligning_store_prime)()
#define ae_int16x4_aligning_store_post_update_positive(v, u, a) \
	CSTUB_(_TIE_xt_hifi2_ae_int16x4_aligning_store_post_update_positive)(v, &u, (ae_int16x4 **)&(a))
#define ae_int16x4_aligning_store_post_update_negative(v, u, a) \
	CSTUB_(_TIE_xt_hifi2_ae_int16x4_aligning_store_post_update_negative)(v, &u, (ae_int16x4 **)&(a))
#define ae_int16x4_store_post_update_positive(v, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int16x4_store_post_update_positive)(v, (ae_int16x4 **)&(a), off)
#define ae_int16x4_store_post_update_negative(v, a) \
	CSTUB_(_TIE_xt_hifi2_ae_int16x4_store_post_update_negative)(v, (ae_int16x4 **)&(a))
#define ae_int16x4_aligning_store_flush_positive(u, a) \
	CSTUB_(_TIE_xt_hifi2_ae_int16x4_aligning_store_flush_positive)(&u, a)
#define ae_int16x4_aligning_store_flush_negative(u, a) \
	CSTUB_(_TIE_xt_hifi2_ae_int16x4_aligning_store_flush_negative)(&u, a)
#define ae_int32x2_aligning_load_prime(a) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x2_aligning_load_prime)(a)
#define ae_int32x2_aligning_load_post_update_positive(v, u, a) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x2_aligning_load_post_update_positive)(&v, &u, (const ae_int32x2 **)&(a))
#define ae_int32x2_aligning_load_post_update_negative(v, u, a) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x2_aligning_load_post_update_negative)(&v, &u, (const ae_int32x2 **)&(a))
#define ae_int32x2_load_post_update_positive(v, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x2_load_post_update_positive)(&v, (const ae_int32x2 **)&(a), off)
#define ae_int32x2_load_post_update_negative(v, a) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x2_load_post_update_negative)(&v, (const ae_int32x2 **)&(a))
#define ae_int32x2_aligning_store_prime() \
	CSTUB_(_TIE_xt_hifi2_ae_int32x2_aligning_store_prime)()
#define ae_int32x2_aligning_store_post_update_positive(v, u, a) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x2_aligning_store_post_update_positive)(v, &u, (ae_int32x2 **)&(a))
#define ae_int32x2_aligning_store_post_update_negative(v, u, a) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x2_aligning_store_post_update_negative)(v, &u, (ae_int32x2 **)&(a))
#define ae_int32x2_store_post_update_positive(v, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x2_store_post_update_positive)(v, (ae_int32x2 **)&(a), off)
#define ae_int32x2_store_post_update_negative(v, a) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x2_store_post_update_negative)(v, (ae_int32x2 **)&(a))
#define ae_int32x2_aligning_store_flush_positive(u, a) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x2_aligning_store_flush_positive)(&u, a)
#define ae_int32x2_aligning_store_flush_negative(u, a) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x2_aligning_store_flush_negative)(&u, a)
#define ae_int32x4_aligning_load_prime(a) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x4_aligning_load_prime)(a)
#define ae_int32x4_aligning_load_post_update_positive(v, u, a) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x4_aligning_load_post_update_positive)(&v, &u, (const ae_int32x4 **)&(a))
#define ae_int32x4_aligning_load_post_update_negative(v, u, a) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x4_aligning_load_post_update_negative)(&v, &u, (const ae_int32x4 **)&(a))
#define ae_int32x4_load_post_update_positive(v, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x4_load_post_update_positive)(&v, (const ae_int32x4 **)&(a), off)
#define ae_int32x4_load_post_update_negative(v, a) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x4_load_post_update_negative)(&v, (const ae_int32x4 **)&(a))
#define ae_int32x4_aligning_store_prime() \
	CSTUB_(_TIE_xt_hifi2_ae_int32x4_aligning_store_prime)()
#define ae_int32x4_aligning_store_post_update_positive(v, u, a) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x4_aligning_store_post_update_positive)(v, &u, (ae_int32x4 **)&(a))
#define ae_int32x4_aligning_store_post_update_negative(v, u, a) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x4_aligning_store_post_update_negative)(v, &u, (ae_int32x4 **)&(a))
#define ae_int32x4_store_post_update_positive(v, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x4_store_post_update_positive)(v, (ae_int32x4 **)&(a), off)
#define ae_int32x4_store_post_update_negative(v, a) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x4_store_post_update_negative)(v, (ae_int32x4 **)&(a))
#define ae_int32x4_aligning_store_flush_positive(u, a) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x4_aligning_store_flush_positive)(&u, a)
#define ae_int32x4_aligning_store_flush_negative(u, a) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x4_aligning_store_flush_negative)(&u, a)
#define ae_int32x2_vextract_0_p32s(d) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x2_vextract_0_p32s)(d)
#define ae_int32x2_vextract_1_p32s(d) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x2_vextract_1_p32s)(d)
#define ae_int32x2_vpack_p32s(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x2_vpack_p32s)(d1, d0)
#define ae_int32x2_vextract_0_ae_int32(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x2_vextract_0_ae_int32)(d0)
#define ae_int32x2_vextract_1_ae_int32(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x2_vextract_1_ae_int32)(d0)
#define ae_int32x2_vpack_ae_int32(d1, d0) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x2_vpack_ae_int32)(d1, d0)
#define int32_rtor_ae_int64(a) \
	CSTUB_(_TIE_xt_hifi2_int32_rtor_ae_int64)(a)
#define int16_rtor_ae_int64(a) \
	CSTUB_(_TIE_xt_hifi2_int16_rtor_ae_int64)(a)
#define ae_int32_rtor_ae_int64(a) \
	CSTUB_(_TIE_xt_hifi2_ae_int32_rtor_ae_int64)(a)
#define ae_int16_rtor_ae_int64(a) \
	CSTUB_(_TIE_xt_hifi2_ae_int16_rtor_ae_int64)(a)
#define int32_rtor_ae_f64(a) \
	CSTUB_(_TIE_xt_hifi2_int32_rtor_ae_f64)(a)
#define int16_rtor_ae_f64(a) \
	CSTUB_(_TIE_xt_hifi2_int16_rtor_ae_f64)(a)
#define int64_rtor_ae_f64(a) \
	CSTUB_(_TIE_xt_hifi2_int64_rtor_ae_f64)(a)
#define ae_f64_rtor_int64(d) \
	CSTUB_(_TIE_xt_hifi2_ae_f64_rtor_int64)(d)
#define int64_rtor_ae_int64(a) \
	CSTUB_(_TIE_xt_hifi2_int64_rtor_ae_int64)(a)
#define ae_int64_rtor_int64(d) \
	CSTUB_(_TIE_xt_hifi2_ae_int64_rtor_int64)(d)
#define uint64_rtor_ae_int64(a) \
	CSTUB_(_TIE_xt_hifi2_uint64_rtor_ae_int64)(a)
#define ae_int64_rtor_uint64(d) \
	CSTUB_(_TIE_xt_hifi2_ae_int64_rtor_uint64)(d)
#define int32_rtor_ae_int32(a) \
	CSTUB_(_TIE_xt_hifi2_int32_rtor_ae_int32)(a)
#define ae_int32_rtor_int32(d) \
	CSTUB_(_TIE_xt_hifi2_ae_int32_rtor_int32)(d)
#define int32_rtor_ae_f32(a) \
	CSTUB_(_TIE_xt_hifi2_int32_rtor_ae_f32)(a)
#define ae_f32_rtor_int32(d) \
	CSTUB_(_TIE_xt_hifi2_ae_f32_rtor_int32)(d)
#define ae_f24_rtor_int32(d) \
	CSTUB_(_TIE_xt_hifi2_ae_f24_rtor_int32)(d)
#define int32_rtor_ae_f24(a) \
	CSTUB_(_TIE_xt_hifi2_int32_rtor_ae_f24)(a)
#define int32_rtor_ae_int24(a) \
	CSTUB_(_TIE_xt_hifi2_int32_rtor_ae_int24)(a)
#define ae_int24_rtor_int32(d) \
	CSTUB_(_TIE_xt_hifi2_ae_int24_rtor_int32)(d)
#define uint32_rtor_ae_int32(a) \
	CSTUB_(_TIE_xt_hifi2_uint32_rtor_ae_int32)(a)
#define ae_int32_rtor_uint32(d) \
	CSTUB_(_TIE_xt_hifi2_ae_int32_rtor_uint32)(d)
#define uint32_rtor_ae_int32u(a) \
	CSTUB_(_TIE_xt_hifi2_uint32_rtor_ae_int32u)(a)
#define ae_int32u_rtor_uint32(d) \
	CSTUB_(_TIE_xt_hifi2_ae_int32u_rtor_uint32)(d)
#define int32_rtor_ae_int16(a) \
	CSTUB_(_TIE_xt_hifi2_int32_rtor_ae_int16)(a)
#define int32_rtor_ae_int16x4(a) \
	CSTUB_(_TIE_xt_hifi2_int32_rtor_ae_int16x4)(a)
#define ae_int16_rtor_int32(d) \
	CSTUB_(_TIE_xt_hifi2_ae_int16_rtor_int32)(d)
#define int32_rtor_ae_f16(a) \
	CSTUB_(_TIE_xt_hifi2_int32_rtor_ae_f16)(a)
#define ae_f16_rtor_int32(d) \
	CSTUB_(_TIE_xt_hifi2_ae_f16_rtor_int32)(d)
#define int16_rtor_ae_int16(a) \
	CSTUB_(_TIE_xt_hifi2_int16_rtor_ae_int16)(a)
#define ae_int16_rtor_int16(d) \
	CSTUB_(_TIE_xt_hifi2_ae_int16_rtor_int16)(d)
#define int16_rtor_ae_f16(a) \
	CSTUB_(_TIE_xt_hifi2_int16_rtor_ae_f16)(a)
#define ae_f16_rtor_int16(d) \
	CSTUB_(_TIE_xt_hifi2_ae_f16_rtor_int16)(d)
#define int16_rtor_ae_f32(a) \
	CSTUB_(_TIE_xt_hifi2_int16_rtor_ae_f32)(a)
#define int16_rtor_ae_f24(a) \
	CSTUB_(_TIE_xt_hifi2_int16_rtor_ae_f24)(a)
#define int16_rtor_ae_int24(a) \
	CSTUB_(_TIE_xt_hifi2_int16_rtor_ae_int24)(a)
#define int16_rtor_ae_f32x2(a) \
	CSTUB_(_TIE_xt_hifi2_int16_rtor_ae_f32x2)(a)
#define int16_rtor_ae_f24x2(a) \
	CSTUB_(_TIE_xt_hifi2_int16_rtor_ae_f24x2)(a)
#define int16_rtor_ae_int24x2(a) \
	CSTUB_(_TIE_xt_hifi2_int16_rtor_ae_int24x2)(a)
#define ae_int16u_rtor_uint16(d) \
	CSTUB_(_TIE_xt_hifi2_ae_int16u_rtor_uint16)(d)
#define uint16_rtor_ae_int16u(a) \
	CSTUB_(_TIE_xt_hifi2_uint16_rtor_ae_int16u)(a)
#define int32_rtor_ae_int32x2(a) \
	CSTUB_(_TIE_xt_hifi2_int32_rtor_ae_int32x2)(a)
#define ae_int32x2_rtor_int32(d) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x2_rtor_int32)(d)
#define int32_rtor_ae_f32x2(a) \
	CSTUB_(_TIE_xt_hifi2_int32_rtor_ae_f32x2)(a)
#define int32_rtor_ae_f24x2(a) \
	CSTUB_(_TIE_xt_hifi2_int32_rtor_ae_f24x2)(a)
#define int32_rtor_ae_int24x2(a) \
	CSTUB_(_TIE_xt_hifi2_int32_rtor_ae_int24x2)(a)
#define int32_rtor_ae_int32x4(a) \
	CSTUB_(_TIE_xt_hifi2_int32_rtor_ae_int32x4)(a)
#define ae_int32x4_rtor_int32(d) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x4_rtor_int32)(d)
#define int32_rtor_ae_f32x4(a) \
	CSTUB_(_TIE_xt_hifi2_int32_rtor_ae_f32x4)(a)
#define ae_f32x4_rtor_int32(d) \
	CSTUB_(_TIE_xt_hifi2_ae_f32x4_rtor_int32)(d)
#define uint32_rtor_ae_int32x2(a) \
	CSTUB_(_TIE_xt_hifi2_uint32_rtor_ae_int32x2)(a)
#define ae_int32x2_rtor_uint32(d) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x2_rtor_uint32)(d)
#define uint32_rtor_ae_f32x2(a) \
	CSTUB_(_TIE_xt_hifi2_uint32_rtor_ae_f32x2)(a)
#define uint32_rtor_ae_f24x2(a) \
	CSTUB_(_TIE_xt_hifi2_uint32_rtor_ae_f24x2)(a)
#define uint32_rtor_ae_int24x2(a) \
	CSTUB_(_TIE_xt_hifi2_uint32_rtor_ae_int24x2)(a)
#define uint32_rtor_ae_int32x4(a) \
	CSTUB_(_TIE_xt_hifi2_uint32_rtor_ae_int32x4)(a)
#define ae_int32x4_rtor_uint32(d) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x4_rtor_uint32)(d)
#define uint32_rtor_ae_f32x4(a) \
	CSTUB_(_TIE_xt_hifi2_uint32_rtor_ae_f32x4)(a)
#define ae_f32x4_rtor_uint32(d) \
	CSTUB_(_TIE_xt_hifi2_ae_f32x4_rtor_uint32)(d)
#define int16_rtor_ae_int32x2(a) \
	CSTUB_(_TIE_xt_hifi2_int16_rtor_ae_int32x2)(a)
#define ae_int32x2_rtor_int16(d) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x2_rtor_int16)(d)
#define int16_rtor_ae_int32(a) \
	CSTUB_(_TIE_xt_hifi2_int16_rtor_ae_int32)(a)
#define ae_int32_rtor_int16(d) \
	CSTUB_(_TIE_xt_hifi2_ae_int32_rtor_int16)(d)
#define int16_rtor_ae_int16x4(a) \
	CSTUB_(_TIE_xt_hifi2_int16_rtor_ae_int16x4)(a)
#define ae_int16x4_rtor_int16(d) \
	CSTUB_(_TIE_xt_hifi2_ae_int16x4_rtor_int16)(d)
#define int16_rtor_ae_f16x4(a) \
	CSTUB_(_TIE_xt_hifi2_int16_rtor_ae_f16x4)(a)
#define ae_f16x4_rtor_int16(d) \
	CSTUB_(_TIE_xt_hifi2_ae_f16x4_rtor_int16)(d)
#define ae_int16_rtor_ae_int16u(b) \
	CSTUB_(_TIE_xt_hifi2_ae_int16_rtor_ae_int16u)(b)
#define ae_int16u_rtor_ae_int16(b) \
	CSTUB_(_TIE_xt_hifi2_ae_int16u_rtor_ae_int16)(b)
#define ae_int16u_rtor_ae_int32u(b) \
	CSTUB_(_TIE_xt_hifi2_ae_int16u_rtor_ae_int32u)(b)
#define ae_int32u_rtor_ae_int16u(b) \
	CSTUB_(_TIE_xt_hifi2_ae_int32u_rtor_ae_int16u)(b)
#define ae_int16u_rtor_ae_int32(b) \
	CSTUB_(_TIE_xt_hifi2_ae_int16u_rtor_ae_int32)(b)
#define ae_int32_rtor_ae_int16u(b) \
	CSTUB_(_TIE_xt_hifi2_ae_int32_rtor_ae_int16u)(b)
#define ae_int16_rtor_ae_int32u(b) \
	CSTUB_(_TIE_xt_hifi2_ae_int16_rtor_ae_int32u)(b)
#define ae_int32u_rtor_ae_int16(b) \
	CSTUB_(_TIE_xt_hifi2_ae_int32u_rtor_ae_int16)(b)
#define ae_int32u_rtor_ae_int32(b) \
	CSTUB_(_TIE_xt_hifi2_ae_int32u_rtor_ae_int32)(b)
#define ae_int32_rtor_ae_int32u(b) \
	CSTUB_(_TIE_xt_hifi2_ae_int32_rtor_ae_int32u)(b)
#define uint16_rtor_ae_int32(a) \
	CSTUB_(_TIE_xt_hifi2_uint16_rtor_ae_int32)(a)
#define uint16_rtor_ae_int32x2(a) \
	CSTUB_(_TIE_xt_hifi2_uint16_rtor_ae_int32x2)(a)
#define uint8_rtor_ae_int32(a) \
	CSTUB_(_TIE_xt_hifi2_uint8_rtor_ae_int32)(a)
#define int8_rtor_ae_int32(a) \
	CSTUB_(_TIE_xt_hifi2_int8_rtor_ae_int32)(a)
#define uint8_rtor_ae_int32x2(a) \
	CSTUB_(_TIE_xt_hifi2_uint8_rtor_ae_int32x2)(a)
#define int8_rtor_ae_int32x2(a) \
	CSTUB_(_TIE_xt_hifi2_int8_rtor_ae_int32x2)(a)
#define ae_int24x2_rtor_ae_f24(b) \
	CSTUB_(_TIE_xt_hifi2_ae_int24x2_rtor_ae_f24)(b)
#define ae_f24x2_rtor_ae_int24(b) \
	CSTUB_(_TIE_xt_hifi2_ae_f24x2_rtor_ae_int24)(b)
#define ae_int24_rtor_ae_f24x2(b) \
	CSTUB_(_TIE_xt_hifi2_ae_int24_rtor_ae_f24x2)(b)
#define ae_f24_rtor_ae_int24x2(b) \
	CSTUB_(_TIE_xt_hifi2_ae_f24_rtor_ae_int24x2)(b)
#define ae_int32x2_rtor_ae_f32(b) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x2_rtor_ae_f32)(b)
#define ae_f32x2_rtor_ae_int32(b) \
	CSTUB_(_TIE_xt_hifi2_ae_f32x2_rtor_ae_int32)(b)
#define ae_int32_rtor_ae_f32x2(b) \
	CSTUB_(_TIE_xt_hifi2_ae_int32_rtor_ae_f32x2)(b)
#define ae_f32_rtor_ae_int32x2(b) \
	CSTUB_(_TIE_xt_hifi2_ae_f32_rtor_ae_int32x2)(b)
#define ae_int24x2_rtor_ae_f32(b) \
	CSTUB_(_TIE_xt_hifi2_ae_int24x2_rtor_ae_f32)(b)
#define ae_f24x2_rtor_ae_int32(b) \
	CSTUB_(_TIE_xt_hifi2_ae_f24x2_rtor_ae_int32)(b)
#define ae_int24_rtor_ae_f32x2(b) \
	CSTUB_(_TIE_xt_hifi2_ae_int24_rtor_ae_f32x2)(b)
#define ae_f24_rtor_ae_int32x2(b) \
	CSTUB_(_TIE_xt_hifi2_ae_f24_rtor_ae_int32x2)(b)
#define ae_f24_rtor_ae_f32x2(b) \
	CSTUB_(_TIE_xt_hifi2_ae_f24_rtor_ae_f32x2)(b)
#define ae_int24_rtor_ae_int32x2(b) \
	CSTUB_(_TIE_xt_hifi2_ae_int24_rtor_ae_int32x2)(b)
#define int64_mtor_ae_int64(a, i) \
	CSTUB_(_TIE_xt_hifi2_int64_mtor_ae_int64)(a, i)
#define ae_int64_rtom_int64(d, a, i) \
	CSTUB_(_TIE_xt_hifi2_ae_int64_rtom_int64)(d, a, i)
#define uint64_mtor_ae_int64(a, i) \
	CSTUB_(_TIE_xt_hifi2_uint64_mtor_ae_int64)(a, i)
#define ae_int64_rtom_uint64(d, a, i) \
	CSTUB_(_TIE_xt_hifi2_ae_int64_rtom_uint64)(d, a, i)
#define int32_mtor_ae_int32(a, i) \
	CSTUB_(_TIE_xt_hifi2_int32_mtor_ae_int32)(a, i)
#define ae_int32_rtom_int32(d, a, i) \
	CSTUB_(_TIE_xt_hifi2_ae_int32_rtom_int32)(d, a, i)
#define uint32_mtor_ae_int32u(a, i) \
	CSTUB_(_TIE_xt_hifi2_uint32_mtor_ae_int32u)(a, i)
#define ae_int32u_rtom_uint32(d, a, i) \
	CSTUB_(_TIE_xt_hifi2_ae_int32u_rtom_uint32)(d, a, i)
#define int16_mtor_ae_int16(a, i) \
	CSTUB_(_TIE_xt_hifi2_int16_mtor_ae_int16)(a, i)
#define ae_int16_rtom_int16(d, a, i) \
	CSTUB_(_TIE_xt_hifi2_ae_int16_rtom_int16)(d, a, i)
#define uint16_mtor_ae_int16u(a, i) \
	CSTUB_(_TIE_xt_hifi2_uint16_mtor_ae_int16u)(a, i)
#define ae_int16u_rtom_uint16(d, a, i) \
	CSTUB_(_TIE_xt_hifi2_ae_int16u_rtom_uint16)(d, a, i)
#define int32_mtor_ae_int32x2(a, i) \
	CSTUB_(_TIE_xt_hifi2_int32_mtor_ae_int32x2)(a, i)
#define ae_int32x2_rtom_int32(d, a, i) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x2_rtom_int32)(d, a, i)
#define ae_int32x2_rtom_ae_int32(d, a, i) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x2_rtom_ae_int32)(d, a, i)
#define int32_mtor_ae_int32x4(a, i) \
	CSTUB_(_TIE_xt_hifi2_int32_mtor_ae_int32x4)(a, i)
#define ae_int32x4_rtom_int32(d, a, i) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x4_rtom_int32)(d, a, i)
#define int32_mtor_ae_f32x4(a, i) \
	CSTUB_(_TIE_xt_hifi2_int32_mtor_ae_f32x4)(a, i)
#define ae_f32x4_rtom_int32(d, a, i) \
	CSTUB_(_TIE_xt_hifi2_ae_f32x4_rtom_int32)(d, a, i)
#define ae_p24s_rtor_ae_int24x2(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_p24s_rtor_ae_int24x2)(d0)
#define ae_int24x2_rtor_ae_p24s(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_int24x2_rtor_ae_p24s)(d0)
#define ae_p24s_rtor_ae_f24x2(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_p24s_rtor_ae_f24x2)(d0)
#define ae_f24x2_rtor_ae_p24s(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_f24x2_rtor_ae_p24s)(d0)
#define ae_p24f_rtor_ae_int24x2(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_p24f_rtor_ae_int24x2)(d0)
#define ae_int24x2_rtor_ae_p24f(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_int24x2_rtor_ae_p24f)(d0)
#define ae_p24f_rtor_ae_f24x2(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_p24f_rtor_ae_f24x2)(d0)
#define ae_f24x2_rtor_ae_p24f(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_f24x2_rtor_ae_p24f)(d0)
#define ae_p24x2s_rtor_ae_int24x2(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2s_rtor_ae_int24x2)(d0)
#define ae_int24x2_rtor_ae_p24x2s(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_int24x2_rtor_ae_p24x2s)(d0)
#define ae_p24x2s_rtor_ae_f24x2(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2s_rtor_ae_f24x2)(d0)
#define ae_f24x2_rtor_ae_p24x2s(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_f24x2_rtor_ae_p24x2s)(d0)
#define ae_p24x2f_rtor_ae_int24x2(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2f_rtor_ae_int24x2)(d0)
#define ae_int24x2_rtor_ae_p24x2f(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_int24x2_rtor_ae_p24x2f)(d0)
#define ae_p24x2f_rtor_ae_f24x2(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_p24x2f_rtor_ae_f24x2)(d0)
#define ae_f24x2_rtor_ae_p24x2f(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_f24x2_rtor_ae_p24x2f)(d0)
#define ae_p16s_rtor_ae_int24x2(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_p16s_rtor_ae_int24x2)(d0)
#define ae_int24x2_rtor_ae_p16s(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_int24x2_rtor_ae_p16s)(d0)
#define ae_p16s_rtor_ae_f24x2(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_p16s_rtor_ae_f24x2)(d0)
#define ae_f24x2_rtor_ae_p16s(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_f24x2_rtor_ae_p16s)(d0)
#define ae_p16x2s_rtor_ae_int24x2(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_p16x2s_rtor_ae_int24x2)(d0)
#define ae_int24x2_rtor_ae_p16x2s(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_int24x2_rtor_ae_p16x2s)(d0)
#define ae_p16x2s_rtor_ae_f24x2(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_p16x2s_rtor_ae_f24x2)(d0)
#define ae_f24x2_rtor_ae_p16x2s(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_f24x2_rtor_ae_p16x2s)(d0)
#define ae_q56s_rtor_ae_int64(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_q56s_rtor_ae_int64)(d0)
#define ae_int64_rtor_ae_q56s(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_int64_rtor_ae_q56s)(d0)
#define ae_q56s_rtor_ae_f64(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_q56s_rtor_ae_f64)(d0)
#define ae_f64_rtor_ae_q56s(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_f64_rtor_ae_q56s)(d0)
#define ae_f32_rtor_ae_int32(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_f32_rtor_ae_int32)(d0)
#define ae_int32_rtor_ae_f32(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_int32_rtor_ae_f32)(d0)
#define ae_f32x2_rtor_ae_int32x2(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_f32x2_rtor_ae_int32x2)(d0)
#define ae_int32x2_rtor_ae_f32x2(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x2_rtor_ae_f32x2)(d0)
#define ae_f24_rtor_ae_int24(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_f24_rtor_ae_int24)(d0)
#define ae_int24_rtor_ae_f24(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_int24_rtor_ae_f24)(d0)
#define ae_f24x2_rtor_ae_int24x2(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_f24x2_rtor_ae_int24x2)(d0)
#define ae_int24x2_rtor_ae_f24x2(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_int24x2_rtor_ae_f24x2)(d0)
#define ae_f64_rtor_ae_int64(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_f64_rtor_ae_int64)(d0)
#define ae_int64_rtor_ae_f64(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_int64_rtor_ae_f64)(d0)
#define ae_f16_rtor_ae_int16(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_f16_rtor_ae_int16)(d0)
#define ae_int16_rtor_ae_f16(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_int16_rtor_ae_f16)(d0)
#define ae_f16x4_rtor_ae_int16x4(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_f16x4_rtor_ae_int16x4)(d0)
#define ae_int16x4_rtor_ae_f16x4(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_int16x4_rtor_ae_f16x4)(d0)
#define ae_f24_rtor_ae_f32(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_f24_rtor_ae_f32)(d0)
#define ae_f24x2_rtor_ae_f32x2(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_f24x2_rtor_ae_f32x2)(d0)
#define ae_int24_rtor_ae_int32(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_int24_rtor_ae_int32)(d0)
#define ae_int24x2_rtor_ae_int32x2(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_int24x2_rtor_ae_int32x2)(d0)
#define ae_f24_rtor_ae_int32(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_f24_rtor_ae_int32)(d0)
#define ae_f24x2_rtor_ae_int32x2(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_f24x2_rtor_ae_int32x2)(d0)
#define ae_int24_rtor_ae_f32(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_int24_rtor_ae_f32)(d0)
#define ae_int24x2_rtor_ae_f32x2(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_int24x2_rtor_ae_f32x2)(d0)
#define ae_f32_rtor_ae_f32x2(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_f32_rtor_ae_f32x2)(d0)
#define ae_f32x2_rtor_ae_f32(d01) \
	CSTUB_(_TIE_xt_hifi2_ae_f32x2_rtor_ae_f32)(d01)
#define ae_int32_rtor_ae_int32x2(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_int32_rtor_ae_int32x2)(d0)
#define ae_int32x2_rtor_ae_int32(d01) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x2_rtor_ae_int32)(d01)
#define ae_int32u_rtor_ae_int32x2(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_int32u_rtor_ae_int32x2)(d0)
#define ae_int32x2_rtor_ae_int32u(d01) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x2_rtor_ae_int32u)(d01)
#define ae_f24_rtor_ae_f24x2(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_f24_rtor_ae_f24x2)(d0)
#define ae_f24x2_rtor_ae_f24(d01) \
	CSTUB_(_TIE_xt_hifi2_ae_f24x2_rtor_ae_f24)(d01)
#define ae_int24_rtor_ae_int24x2(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_int24_rtor_ae_int24x2)(d0)
#define ae_int24x2_rtor_ae_int24(d01) \
	CSTUB_(_TIE_xt_hifi2_ae_int24x2_rtor_ae_int24)(d01)
#define ae_int16_rtor_ae_int16x4(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_int16_rtor_ae_int16x4)(d0)
#define ae_f16_rtor_ae_f16x4(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_f16_rtor_ae_f16x4)(d0)
#define ae_f16_rtor_ae_int16x4(d0) \
	CSTUB_(_TIE_xt_hifi2_ae_f16_rtor_ae_int16x4)(d0)
#define ae_int16x4_rtom_ae_int16(v, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int16x4_rtom_ae_int16)(v, a, off)
#define ae_f16x4_rtom_ae_f16(v, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f16x4_rtom_ae_f16)(v, a, off)
#define ae_int16x4_rtom_ae_f16(v, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_int16x4_rtom_ae_f16)(v, a, off)
#define ae_f16x4_rtom_ae_int16(v, a, off) \
	CSTUB_(_TIE_xt_hifi2_ae_f16x4_rtom_ae_int16)(v, a, off)
#define ae_int32_rtor_ae_int32x4(b) \
	CSTUB_(_TIE_xt_hifi2_ae_int32_rtor_ae_int32x4)(b)
#define ae_f32_rtor_ae_f32x4(b) \
	CSTUB_(_TIE_xt_hifi2_ae_f32_rtor_ae_f32x4)(b)
#define ae_int16_rtor_ae_int32(b) \
	CSTUB_(_TIE_xt_hifi2_ae_int16_rtor_ae_int32)(b)
#define ae_int32_rtor_ae_int16(b) \
	CSTUB_(_TIE_xt_hifi2_ae_int32_rtor_ae_int16)(b)
#define ae_f16_rtor_ae_f32(b) \
	CSTUB_(_TIE_xt_hifi2_ae_f16_rtor_ae_f32)(b)
#define ae_f32_rtor_ae_f16(b) \
	CSTUB_(_TIE_xt_hifi2_ae_f32_rtor_ae_f16)(b)
#define ae_int16_rtor_ae_int24(b) \
	CSTUB_(_TIE_xt_hifi2_ae_int16_rtor_ae_int24)(b)
#define ae_int24_rtor_ae_int16(b) \
	CSTUB_(_TIE_xt_hifi2_ae_int24_rtor_ae_int16)(b)
#define ae_f16_rtor_ae_f24(b) \
	CSTUB_(_TIE_xt_hifi2_ae_f16_rtor_ae_f24)(b)
#define ae_f24_rtor_ae_f16(b) \
	CSTUB_(_TIE_xt_hifi2_ae_f24_rtor_ae_f16)(b)
#define AE_MOVINT16X4_FROMINT16(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT16X4_FROMINT16)(i)
#define AE_MOVINT24_FROMINT16(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT24_FROMINT16)(i)
#define AE_MOVINT24X2_FROMINT16(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT24X2_FROMINT16)(i)
#define AE_MOVINT32_FROMINT16(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT32_FROMINT16)(i)
#define AE_MOVINT32X2_FROMINT16(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT32X2_FROMINT16)(i)
#define AE_MOVINT64_FROMINT16(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT64_FROMINT16)(i)
#define AE_MOVF16_FROMINT16(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF16_FROMINT16)(i)
#define AE_MOVF16X4_FROMINT16(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF16X4_FROMINT16)(i)
#define AE_MOVF24_FROMINT16(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF24_FROMINT16)(i)
#define AE_MOVF24X2_FROMINT16(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF24X2_FROMINT16)(i)
#define AE_MOVF32_FROMINT16(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF32_FROMINT16)(i)
#define AE_MOVF32X2_FROMINT16(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF32X2_FROMINT16)(i)
#define AE_MOVF64_FROMINT16(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF64_FROMINT16)(i)
#define AE_MOVINT16_FROMINT16X4(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT16_FROMINT16X4)(i)
#define AE_MOVINT24_FROMINT16X4(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT24_FROMINT16X4)(i)
#define AE_MOVINT24X2_FROMINT16X4(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT24X2_FROMINT16X4)(i)
#define AE_MOVINT32_FROMINT16X4(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT32_FROMINT16X4)(i)
#define AE_MOVINT32X2_FROMINT16X4(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT32X2_FROMINT16X4)(i)
#define AE_MOVINT64_FROMINT16X4(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT64_FROMINT16X4)(i)
#define AE_MOVF16_FROMINT16X4(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF16_FROMINT16X4)(i)
#define AE_MOVF16X4_FROMINT16X4(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF16X4_FROMINT16X4)(i)
#define AE_MOVF24_FROMINT16X4(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF24_FROMINT16X4)(i)
#define AE_MOVF24X2_FROMINT16X4(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF24X2_FROMINT16X4)(i)
#define AE_MOVF32_FROMINT16X4(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF32_FROMINT16X4)(i)
#define AE_MOVF32X2_FROMINT16X4(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF32X2_FROMINT16X4)(i)
#define AE_MOVF64_FROMINT16X4(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF64_FROMINT16X4)(i)
#define AE_MOVINT16_FROMINT24(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT16_FROMINT24)(i)
#define AE_MOVINT16X4_FROMINT24(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT16X4_FROMINT24)(i)
#define AE_MOVINT24X2_FROMINT24(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT24X2_FROMINT24)(i)
#define AE_MOVINT32_FROMINT24(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT32_FROMINT24)(i)
#define AE_MOVINT32X2_FROMINT24(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT32X2_FROMINT24)(i)
#define AE_MOVINT64_FROMINT24(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT64_FROMINT24)(i)
#define AE_MOVF16_FROMINT24(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF16_FROMINT24)(i)
#define AE_MOVF16X4_FROMINT24(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF16X4_FROMINT24)(i)
#define AE_MOVF24_FROMINT24(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF24_FROMINT24)(i)
#define AE_MOVF24X2_FROMINT24(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF24X2_FROMINT24)(i)
#define AE_MOVF32_FROMINT24(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF32_FROMINT24)(i)
#define AE_MOVF32X2_FROMINT24(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF32X2_FROMINT24)(i)
#define AE_MOVF64_FROMINT24(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF64_FROMINT24)(i)
#define AE_MOVINT16_FROMINT24X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT16_FROMINT24X2)(i)
#define AE_MOVINT16X4_FROMINT24X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT16X4_FROMINT24X2)(i)
#define AE_MOVINT24_FROMINT24X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT24_FROMINT24X2)(i)
#define AE_MOVINT32_FROMINT24X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT32_FROMINT24X2)(i)
#define AE_MOVINT32X2_FROMINT24X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT32X2_FROMINT24X2)(i)
#define AE_MOVINT64_FROMINT24X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT64_FROMINT24X2)(i)
#define AE_MOVF16_FROMINT24X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF16_FROMINT24X2)(i)
#define AE_MOVF16X4_FROMINT24X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF16X4_FROMINT24X2)(i)
#define AE_MOVF24_FROMINT24X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF24_FROMINT24X2)(i)
#define AE_MOVF24X2_FROMINT24X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF24X2_FROMINT24X2)(i)
#define AE_MOVF32_FROMINT24X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF32_FROMINT24X2)(i)
#define AE_MOVF32X2_FROMINT24X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF32X2_FROMINT24X2)(i)
#define AE_MOVF64_FROMINT24X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF64_FROMINT24X2)(i)
#define AE_MOVINT16_FROMINT32(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT16_FROMINT32)(i)
#define AE_MOVINT16X4_FROMINT32(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT16X4_FROMINT32)(i)
#define AE_MOVINT24_FROMINT32(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT24_FROMINT32)(i)
#define AE_MOVINT24X2_FROMINT32(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT24X2_FROMINT32)(i)
#define AE_MOVINT32X2_FROMINT32(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT32X2_FROMINT32)(i)
#define AE_MOVINT64_FROMINT32(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT64_FROMINT32)(i)
#define AE_MOVF16_FROMINT32(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF16_FROMINT32)(i)
#define AE_MOVF16X4_FROMINT32(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF16X4_FROMINT32)(i)
#define AE_MOVF24_FROMINT32(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF24_FROMINT32)(i)
#define AE_MOVF24X2_FROMINT32(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF24X2_FROMINT32)(i)
#define AE_MOVF32_FROMINT32(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF32_FROMINT32)(i)
#define AE_MOVF32X2_FROMINT32(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF32X2_FROMINT32)(i)
#define AE_MOVF64_FROMINT32(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF64_FROMINT32)(i)
#define AE_MOVINT16_FROMINT32X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT16_FROMINT32X2)(i)
#define AE_MOVINT16X4_FROMINT32X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT16X4_FROMINT32X2)(i)
#define AE_MOVINT24_FROMINT32X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT24_FROMINT32X2)(i)
#define AE_MOVINT24X2_FROMINT32X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT24X2_FROMINT32X2)(i)
#define AE_MOVINT32_FROMINT32X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT32_FROMINT32X2)(i)
#define AE_MOVINT64_FROMINT32X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT64_FROMINT32X2)(i)
#define AE_MOVF16_FROMINT32X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF16_FROMINT32X2)(i)
#define AE_MOVF16X4_FROMINT32X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF16X4_FROMINT32X2)(i)
#define AE_MOVF24_FROMINT32X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF24_FROMINT32X2)(i)
#define AE_MOVF24X2_FROMINT32X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF24X2_FROMINT32X2)(i)
#define AE_MOVF32_FROMINT32X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF32_FROMINT32X2)(i)
#define AE_MOVF32X2_FROMINT32X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF32X2_FROMINT32X2)(i)
#define AE_MOVF64_FROMINT32X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF64_FROMINT32X2)(i)
#define AE_MOVINT16_FROMINT64(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT16_FROMINT64)(i)
#define AE_MOVINT16X4_FROMINT64(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT16X4_FROMINT64)(i)
#define AE_MOVINT24_FROMINT64(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT24_FROMINT64)(i)
#define AE_MOVINT24X2_FROMINT64(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT24X2_FROMINT64)(i)
#define AE_MOVINT32_FROMINT64(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT32_FROMINT64)(i)
#define AE_MOVINT32X2_FROMINT64(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT32X2_FROMINT64)(i)
#define AE_MOVF16_FROMINT64(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF16_FROMINT64)(i)
#define AE_MOVF16X4_FROMINT64(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF16X4_FROMINT64)(i)
#define AE_MOVF24_FROMINT64(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF24_FROMINT64)(i)
#define AE_MOVF24X2_FROMINT64(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF24X2_FROMINT64)(i)
#define AE_MOVF32_FROMINT64(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF32_FROMINT64)(i)
#define AE_MOVF32X2_FROMINT64(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF32X2_FROMINT64)(i)
#define AE_MOVF64_FROMINT64(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF64_FROMINT64)(i)
#define AE_MOVINT16_FROMF16(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT16_FROMF16)(i)
#define AE_MOVINT16X4_FROMF16(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT16X4_FROMF16)(i)
#define AE_MOVINT24_FROMF16(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT24_FROMF16)(i)
#define AE_MOVINT24X2_FROMF16(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT24X2_FROMF16)(i)
#define AE_MOVINT32_FROMF16(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT32_FROMF16)(i)
#define AE_MOVINT32X2_FROMF16(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT32X2_FROMF16)(i)
#define AE_MOVINT64_FROMF16(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT64_FROMF16)(i)
#define AE_MOVF16X4_FROMF16(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF16X4_FROMF16)(i)
#define AE_MOVF24_FROMF16(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF24_FROMF16)(i)
#define AE_MOVF24X2_FROMF16(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF24X2_FROMF16)(i)
#define AE_MOVF32_FROMF16(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF32_FROMF16)(i)
#define AE_MOVF32X2_FROMF16(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF32X2_FROMF16)(i)
#define AE_MOVF64_FROMF16(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF64_FROMF16)(i)
#define AE_MOVINT16_FROMF16X4(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT16_FROMF16X4)(i)
#define AE_MOVINT16X4_FROMF16X4(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT16X4_FROMF16X4)(i)
#define AE_MOVINT24_FROMF16X4(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT24_FROMF16X4)(i)
#define AE_MOVINT24X2_FROMF16X4(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT24X2_FROMF16X4)(i)
#define AE_MOVINT32_FROMF16X4(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT32_FROMF16X4)(i)
#define AE_MOVINT32X2_FROMF16X4(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT32X2_FROMF16X4)(i)
#define AE_MOVINT64_FROMF16X4(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT64_FROMF16X4)(i)
#define AE_MOVF16_FROMF16X4(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF16_FROMF16X4)(i)
#define AE_MOVF24_FROMF16X4(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF24_FROMF16X4)(i)
#define AE_MOVF24X2_FROMF16X4(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF24X2_FROMF16X4)(i)
#define AE_MOVF32_FROMF16X4(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF32_FROMF16X4)(i)
#define AE_MOVF32X2_FROMF16X4(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF32X2_FROMF16X4)(i)
#define AE_MOVF64_FROMF16X4(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF64_FROMF16X4)(i)
#define AE_MOVINT16_FROMF24(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT16_FROMF24)(i)
#define AE_MOVINT16X4_FROMF24(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT16X4_FROMF24)(i)
#define AE_MOVINT24_FROMF24(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT24_FROMF24)(i)
#define AE_MOVINT24X2_FROMF24(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT24X2_FROMF24)(i)
#define AE_MOVINT32_FROMF24(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT32_FROMF24)(i)
#define AE_MOVINT32X2_FROMF24(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT32X2_FROMF24)(i)
#define AE_MOVINT64_FROMF24(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT64_FROMF24)(i)
#define AE_MOVF16_FROMF24(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF16_FROMF24)(i)
#define AE_MOVF16X4_FROMF24(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF16X4_FROMF24)(i)
#define AE_MOVF24X2_FROMF24(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF24X2_FROMF24)(i)
#define AE_MOVF32_FROMF24(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF32_FROMF24)(i)
#define AE_MOVF32X2_FROMF24(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF32X2_FROMF24)(i)
#define AE_MOVF64_FROMF24(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF64_FROMF24)(i)
#define AE_MOVINT16_FROMF24X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT16_FROMF24X2)(i)
#define AE_MOVINT16X4_FROMF24X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT16X4_FROMF24X2)(i)
#define AE_MOVINT24_FROMF24X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT24_FROMF24X2)(i)
#define AE_MOVINT24X2_FROMF24X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT24X2_FROMF24X2)(i)
#define AE_MOVINT32_FROMF24X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT32_FROMF24X2)(i)
#define AE_MOVINT32X2_FROMF24X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT32X2_FROMF24X2)(i)
#define AE_MOVINT64_FROMF24X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT64_FROMF24X2)(i)
#define AE_MOVF16_FROMF24X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF16_FROMF24X2)(i)
#define AE_MOVF16X4_FROMF24X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF16X4_FROMF24X2)(i)
#define AE_MOVF24_FROMF24X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF24_FROMF24X2)(i)
#define AE_MOVF32_FROMF24X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF32_FROMF24X2)(i)
#define AE_MOVF32X2_FROMF24X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF32X2_FROMF24X2)(i)
#define AE_MOVF64_FROMF24X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF64_FROMF24X2)(i)
#define AE_MOVINT16_FROMF32(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT16_FROMF32)(i)
#define AE_MOVINT16X4_FROMF32(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT16X4_FROMF32)(i)
#define AE_MOVINT24_FROMF32(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT24_FROMF32)(i)
#define AE_MOVINT24X2_FROMF32(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT24X2_FROMF32)(i)
#define AE_MOVINT32_FROMF32(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT32_FROMF32)(i)
#define AE_MOVINT32X2_FROMF32(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT32X2_FROMF32)(i)
#define AE_MOVINT64_FROMF32(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT64_FROMF32)(i)
#define AE_MOVF16_FROMF32(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF16_FROMF32)(i)
#define AE_MOVF16X4_FROMF32(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF16X4_FROMF32)(i)
#define AE_MOVF24_FROMF32(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF24_FROMF32)(i)
#define AE_MOVF24X2_FROMF32(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF24X2_FROMF32)(i)
#define AE_MOVF32X2_FROMF32(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF32X2_FROMF32)(i)
#define AE_MOVF64_FROMF32(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF64_FROMF32)(i)
#define AE_MOVINT16_FROMF32X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT16_FROMF32X2)(i)
#define AE_MOVINT16X4_FROMF32X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT16X4_FROMF32X2)(i)
#define AE_MOVINT24_FROMF32X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT24_FROMF32X2)(i)
#define AE_MOVINT24X2_FROMF32X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT24X2_FROMF32X2)(i)
#define AE_MOVINT32_FROMF32X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT32_FROMF32X2)(i)
#define AE_MOVINT32X2_FROMF32X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT32X2_FROMF32X2)(i)
#define AE_MOVINT64_FROMF32X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT64_FROMF32X2)(i)
#define AE_MOVF16_FROMF32X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF16_FROMF32X2)(i)
#define AE_MOVF16X4_FROMF32X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF16X4_FROMF32X2)(i)
#define AE_MOVF24_FROMF32X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF24_FROMF32X2)(i)
#define AE_MOVF24X2_FROMF32X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF24X2_FROMF32X2)(i)
#define AE_MOVF32_FROMF32X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF32_FROMF32X2)(i)
#define AE_MOVF64_FROMF32X2(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF64_FROMF32X2)(i)
#define AE_MOVINT16_FROMF64(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT16_FROMF64)(i)
#define AE_MOVINT16X4_FROMF64(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT16X4_FROMF64)(i)
#define AE_MOVINT24_FROMF64(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT24_FROMF64)(i)
#define AE_MOVINT24X2_FROMF64(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT24X2_FROMF64)(i)
#define AE_MOVINT32_FROMF64(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT32_FROMF64)(i)
#define AE_MOVINT32X2_FROMF64(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT32X2_FROMF64)(i)
#define AE_MOVINT64_FROMF64(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVINT64_FROMF64)(i)
#define AE_MOVF16_FROMF64(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF16_FROMF64)(i)
#define AE_MOVF16X4_FROMF64(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF16X4_FROMF64)(i)
#define AE_MOVF24_FROMF64(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF24_FROMF64)(i)
#define AE_MOVF24X2_FROMF64(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF24X2_FROMF64)(i)
#define AE_MOVF32_FROMF64(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF32_FROMF64)(i)
#define AE_MOVF32X2_FROMF64(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF32X2_FROMF64)(i)
#define ae_int32u_loadi(base, c) \
	CSTUB_(_TIE_xt_hifi2_ae_int32u_loadi)(base, c)
#define ae_int32u_storei(a, base, c) \
	CSTUB_(_TIE_xt_hifi2_ae_int32u_storei)(a, base, c)
#define ae_int32u_move(b) \
	CSTUB_(_TIE_xt_hifi2_ae_int32u_move)(b)
#define ae_int16u_loadi(base, c) \
	CSTUB_(_TIE_xt_hifi2_ae_int16u_loadi)(base, c)
#define ae_int16u_storei(a, base, c) \
	CSTUB_(_TIE_xt_hifi2_ae_int16u_storei)(a, base, c)
#define ae_int16u_move(b) \
	CSTUB_(_TIE_xt_hifi2_ae_int16u_move)(b)
#define AE_ABS_32(b) \
	CSTUB_(_TIE_xt_hifi2_AE_ABS_32)(b)
#define AE_MOV_32(b) \
	CSTUB_(_TIE_xt_hifi2_AE_MOV_32)(b)
#define AE_NEG_32(b) \
	CSTUB_(_TIE_xt_hifi2_AE_NEG_32)(b)
#define AE_ADD_32(b, c) \
	CSTUB_(_TIE_xt_hifi2_AE_ADD_32)(b, c)
#define AE_ADDI_32(b, c) \
	CSTUB_(_TIE_xt_hifi2_AE_ADDI_32)(b, c)
#define AE_ADDMI_32(b, c) \
	CSTUB_(_TIE_xt_hifi2_AE_ADDMI_32)(b, c)
#define AE_ADDX2_32(b, c) \
	CSTUB_(_TIE_xt_hifi2_AE_ADDX2_32)(b, c)
#define AE_ADDX4_32(b, c) \
	CSTUB_(_TIE_xt_hifi2_AE_ADDX4_32)(b, c)
#define AE_ADDX8_32(b, c) \
	CSTUB_(_TIE_xt_hifi2_AE_ADDX8_32)(b, c)
#define AE_SUBX2_32(b, c) \
	CSTUB_(_TIE_xt_hifi2_AE_SUBX2_32)(b, c)
#define AE_SUBX4_32(b, c) \
	CSTUB_(_TIE_xt_hifi2_AE_SUBX4_32)(b, c)
#define AE_SUBX8_32(b, c) \
	CSTUB_(_TIE_xt_hifi2_AE_SUBX8_32)(b, c)
#define AE_SUB_32(b, c) \
	CSTUB_(_TIE_xt_hifi2_AE_SUB_32)(b, c)
#define AE_SEXT_32(b, c) \
	CSTUB_(_TIE_xt_hifi2_AE_SEXT_32)(b, c)
#define AE_SRAI_32(b, c) \
	CSTUB_(_TIE_xt_hifi2_AE_SRAI_32)(b, c)
#define AE_SRLI_32(b, c) \
	CSTUB_(_TIE_xt_hifi2_AE_SRLI_32)(b, c)
#define AE_SLLI_32(b, c) \
	CSTUB_(_TIE_xt_hifi2_AE_SLLI_32)(b, c)
#define AE_L_32(base, c) \
	CSTUB_(_TIE_xt_hifi2_AE_L_32)(base, c)
#define AE_S_32(a, base, c) \
	CSTUB_(_TIE_xt_hifi2_AE_S_32)(a, base, c)
#define AE_L_16(base, c) \
	CSTUB_(_TIE_xt_hifi2_AE_L_16)(base, c)
#define AE_MAX_32_signed(b, c) \
	CSTUB_(_TIE_xt_hifi2_AE_MAX_32_signed)(b, c)
#define AE_MIN_32_signed(b, c) \
	CSTUB_(_TIE_xt_hifi2_AE_MIN_32_signed)(b, c)
#define AE_AND_32(b, c) \
	CSTUB_(_TIE_xt_hifi2_AE_AND_32)(b, c)
#define AE_MULAF16SS_00_scalar(a, b, c) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF16SS_00_scalar)(&a, b, c)
#define AE_MULAF16SS_30_scalar(a, b, c) \
	CSTUB_(_TIE_xt_hifi2_AE_MULAF16SS_30_scalar)(&a, b, c)
#define AE_MULF16SS_30_scalar(b, c) \
	CSTUB_(_TIE_xt_hifi2_AE_MULF16SS_30_scalar)(b, c)
#define AE_OR_32(b, c) \
	CSTUB_(_TIE_xt_hifi2_AE_OR_32)(b, c)
#define AE_XOR_32(b, c) \
	CSTUB_(_TIE_xt_hifi2_AE_XOR_32)(b, c)
#define AE_NAND_32(b, c) \
	CSTUB_(_TIE_xt_hifi2_AE_NAND_32)(b, c)
#define AE_MOVLTZ_32(a, b, test_value) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVLTZ_32)(&a, b, test_value)
#define AE_MOVGEZ_32(a, b, test_value) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVGEZ_32)(&a, b, test_value)
#define AE_MOVEQZ_32(a, b, test_value) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVEQZ_32)(&a, b, test_value)
#define AE_MOVNEZ_32(a, b, test_value) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVNEZ_32)(&a, b, test_value)
#define AE_MOVT_32(a, b, cond) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVT_32)(&a, b, cond)
#define AE_MOVI_32(i) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVI_32)(i)
#define AE_MOVT_32_unsigned(a, b, cond) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVT_32_unsigned)(&a, b, cond)
#define AE_MOVF_32(a, b, cond) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF_32)(&a, b, cond)
#define AE_MOVF_32_unsigned(a, b, cond) \
	CSTUB_(_TIE_xt_hifi2_AE_MOVF_32_unsigned)(&a, b, cond)
#define AE_S_16(a, base, c) \
	CSTUB_(_TIE_xt_hifi2_AE_S_16)(a, base, c)
#define AE_MUL16S(b, c) \
	CSTUB_(_TIE_xt_hifi2_AE_MUL16S)(b, c)
#define AE_L_16U(base, c) \
	CSTUB_(_TIE_xt_hifi2_AE_L_16U)(base, c)
#define AE_MUL32(b, c) \
	CSTUB_(_TIE_xt_hifi2_AE_MUL32)(b, c)
#define xtbool_join_xtbool2(src0, src1) \
	CSTUB_(_TIE_xt_hifi2_xtbool_join_xtbool2)(src0, src1)
#define xtbool_join_xtbool4(src0, src1, src2, src3) \
	CSTUB_(_TIE_xt_hifi2_xtbool_join_xtbool4)(src0, src1, src2, src3)
#define xtbool2_extract_0(src) \
	CSTUB_(_TIE_xt_hifi2_xtbool2_extract_0)(src)
#define xtbool2_extract_1(src) \
	CSTUB_(_TIE_xt_hifi2_xtbool2_extract_1)(src)
#define xtbool4_extract_0(src) \
	CSTUB_(_TIE_xt_hifi2_xtbool4_extract_0)(src)
#define xtbool4_extract_1(src) \
	CSTUB_(_TIE_xt_hifi2_xtbool4_extract_1)(src)
#define xtbool4_extract_2(src) \
	CSTUB_(_TIE_xt_hifi2_xtbool4_extract_2)(src)
#define xtbool4_extract_3(src) \
	CSTUB_(_TIE_xt_hifi2_xtbool4_extract_3)(src)
#define ae_int64x2_loadi(b, c) \
	CSTUB_(_TIE_xt_hifi2_ae_int64x2_loadi)(b, c)
#define ae_int64x2_storei(d, b, c) \
	CSTUB_(_TIE_xt_hifi2_ae_int64x2_storei)(d, b, c)
#define ae_int64x2_move(b) \
	CSTUB_(_TIE_xt_hifi2_ae_int64x2_move)(b)
#define AE_SLAA64X2_vector(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SLAA64X2_vector)(d0, sa)
#define AE_SLAI64X2_vector(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SLAI64X2_vector)(d0, sa)
#define AE_SRAA64X2_vector(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SRAA64X2_vector)(d0, sa)
#define AE_SRAI64X2_vector(d0, sa) \
	CSTUB_(_TIE_xt_hifi2_AE_SRAI64X2_vector)(d0, sa)
#define AE_NEG64X2_vector(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_NEG64X2_vector)(d0)
#define AE_ADD64X2_vector(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_ADD64X2_vector)(d0, d1)
#define AE_SUB64X2_vector(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_SUB64X2_vector)(d0, d1)
#define AE_MULA32X2_vector(d, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MULA32X2_vector)(&d, d0, d1)
#define AE_MUL32X2_vector(d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_MUL32X2_vector)(d0, d1)
#define ae_int32x2_rtor_ae_int64x2(b) \
	CSTUB_(_TIE_xt_hifi2_ae_int32x2_rtor_ae_int64x2)(b)
#define AE_INT64X2_RADD(d0) \
	CSTUB_(_TIE_xt_hifi2_AE_INT64X2_RADD)(d0)
#define AE_SRLA32_vector(var1, var2) \
	CSTUB_(_TIE_xt_hifi2_AE_SRLA32_vector)(var1, var2)
#define AE_SRLA32_scalar(var1, var2) \
	CSTUB_(_TIE_xt_hifi2_AE_SRLA32_scalar)(var1, var2)
#define AE_SRLA16_vector(var1, var2) \
	CSTUB_(_TIE_xt_hifi2_AE_SRLA16_vector)(var1, var2)
#define AE_SRLA16_scalar(var1, var2) \
	CSTUB_(_TIE_xt_hifi2_AE_SRLA16_scalar)(var1, var2)
#define AE_MULA16S_scalar(ain, var1, var2) \
	CSTUB_(_TIE_xt_hifi2_AE_MULA16S_scalar)(ain, var1, var2)
#define AE_MULA16S_vector(ain, var1, var2) \
	CSTUB_(_TIE_xt_hifi2_AE_MULA16S_vector)(ain, var1, var2)
#define AE_MULS16S_scalar(ain, var1, var2) \
	CSTUB_(_TIE_xt_hifi2_AE_MULS16S_scalar)(ain, var1, var2)
#define AE_MULS16S_vector(ain, var1, var2) \
	CSTUB_(_TIE_xt_hifi2_AE_MULS16S_vector)(ain, var1, var2)
#define AE_RLmula0_rinit(a) \
	CSTUB_(_TIE_xt_hifi2_AE_RLmula0_rinit)(a)
#define AE_RLmula0_rvec(din, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_RLmula0_rvec)(din, d0, d1)
#define AE_RLmula0_rfini(d) \
	CSTUB_(_TIE_xt_hifi2_AE_RLmula0_rfini)(d)
#define AE_RLmuls0_rinit(a) \
	CSTUB_(_TIE_xt_hifi2_AE_RLmuls0_rinit)(a)
#define AE_RLmuls0_rvec(din, d0, d1) \
	CSTUB_(_TIE_xt_hifi2_AE_RLmuls0_rvec)(din, d0, d1)
#define AE_RLmuls0_rfini(d) \
	CSTUB_(_TIE_xt_hifi2_AE_RLmuls0_rfini)(d)
#define READ_IPQ() \
	CSTUB_(_TIE_xt_ioports_READ_IPQ)()
#define CHECK_IPQ() \
	CSTUB_(_TIE_xt_ioports_CHECK_IPQ)()
#define WRITE_OPQ(a) \
	CSTUB_(_TIE_xt_ioports_WRITE_OPQ)(a)
#define CHECK_OPQ() \
	CSTUB_(_TIE_xt_ioports_CHECK_OPQ)()
#define RUR_EXPSTATE() \
	CSTUB_(_TIE_xt_ioports_RUR_EXPSTATE)()
#define WUR_EXPSTATE(v) \
	CSTUB_(_TIE_xt_ioports_WUR_EXPSTATE)(v)
#define st_BBR(a, b, c) \
	CSTUB_(_TIE_hmd1a_common_tie_st_BBR)(a, b, c)
#define ld_BBR(b, c) \
	CSTUB_(_TIE_hmd1a_common_tie_ld_BBR)(b, c)
#define mv_BBR(b) \
	CSTUB_(_TIE_hmd1a_common_tie_mv_BBR)(b)
#define st_ULSR(a, b, c) \
	CSTUB_(_TIE_hmd1a_common_tie_st_ULSR)(a, b, c)
#define ld_ULSR(b, c) \
	CSTUB_(_TIE_hmd1a_common_tie_ld_ULSR)(b, c)
#define st_MIR(a, b, c) \
	CSTUB_(_TIE_hmd1a_common_tie_st_MIR)(a, b, c)
#define ld_MIR(b, c) \
	CSTUB_(_TIE_hmd1a_common_tie_ld_MIR)(b, c)
#define st_CR(a, b, c) \
	CSTUB_(_TIE_hmd1a_common_tie_st_CR)(a, b, c)
#define ld_CR(b, c) \
	CSTUB_(_TIE_hmd1a_common_tie_ld_CR)(b, c)
#define dma_ld(src) \
	CSTUB_(_TIE_hmd1a_common_tie_dma_ld)(src)
#define dma_align_ld(src, dst) \
	CSTUB_(_TIE_hmd1a_common_tie_dma_align_ld)((const unsigned int **)&(src),(unsigned *)( dst))
#define dma_ldu(src) \
	CSTUB_(_TIE_hmd1a_common_tie_dma_ldu)((const unsigned int **)&(src))
#define dma_flush_ld(src, dst) \
	CSTUB_(_TIE_hmd1a_common_tie_dma_flush_ld)((const unsigned int **)&(src),(unsigned *)( dst))
#define dma_st(src, dst) \
	CSTUB_(_TIE_hmd1a_common_tie_dma_st)(src, dst)
#define dma_align_st(src, dst) \
	CSTUB_(_TIE_hmd1a_common_tie_dma_align_st)((unsigned *)(src), (unsigned int **)&(dst))
#define dma_stu(src, dst) \
	CSTUB_(_TIE_hmd1a_common_tie_dma_stu)((unsigned *)(src), (unsigned int **)&(dst))
#define dma_flush_st(src, dst) \
	CSTUB_(_TIE_hmd1a_common_tie_dma_flush_st)((unsigned *)(src), (unsigned *) ( dst))
#define dma_buf_save(dst) \
	CSTUB_(_TIE_hmd1a_common_tie_dma_buf_save)((unsigned int **)&(dst))
#define load32x2_vr_idxR(ptr, ofst) \
	CSTUB_(_TIE_hmd1a_common_tie_load32x2_vr_idxR)((unsigned *)(ptr), ofst)
#define load32x2_vr_idxI(ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_load32x2_vr_idxI)((unsigned *)(ptr), ofst2)
#define load32x2_vr_postR(z, ptr, ofst) \
	CSTUB_(_TIE_hmd1a_common_tie_load32x2_vr_postR)(&z, (const unsigned int **)&(ptr), ofst)
#define load32x2_vr_postI(z, ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_load32x2_vr_postI)(&z, (const unsigned int **)&(ptr), ofst2)
#define load32x2_vr_circI(z, ptr, ofst1, c) \
	CSTUB_(_TIE_hmd1a_common_tie_load32x2_vr_circI)(&z, (const unsigned int **)&(ptr), ofst1, c)
#define load32x1_vr_idxR(z, ptr, ofst, sel1) \
	CSTUB_(_TIE_hmd1a_common_tie_load32x1_vr_idxR)(&z,(unsigned *)( ptr), ofst, sel1)
#define load32x1_vr_idxI(z, ptr, ofst2, sel1) \
	CSTUB_(_TIE_hmd1a_common_tie_load32x1_vr_idxI)(&z,(unsigned *)( ptr), ofst2, sel1)
#define load32x1_vr_postR(z, ptr, ofst, sel1) \
	CSTUB_(_TIE_hmd1a_common_tie_load32x1_vr_postR)(&z, (const unsigned int **)&(ptr), ofst, sel1)
#define load32x1_vr_postI(z, ptr, ofst2, sel1) \
	CSTUB_(_TIE_hmd1a_common_tie_load32x1_vr_postI)(&z, (const unsigned int **)&(ptr), ofst2, sel1)
#define load32x1_vr_circI(z, ptr, ofst1, c, sel1) \
	CSTUB_(_TIE_hmd1a_common_tie_load32x1_vr_circI)(&z, (const unsigned int **)&(ptr), ofst1, c, sel1)
#define load32x2_vr_bdir(ptr, ofst) \
	CSTUB_(_TIE_hmd1a_common_tie_load32x2_vr_bdir)((unsigned *)(ptr), ofst)
#define load32x2_vr_brev(ptr, ofst) \
	CSTUB_(_TIE_hmd1a_common_tie_load32x2_vr_brev)((unsigned *)(ptr), ofst)
#define load32x2_vr_idxR_perm(z, ptr, ofst, perm) \
	CSTUB_(_TIE_hmd1a_common_tie_load32x2_vr_idxR_perm)(&z,(unsigned *)( ptr), ofst, perm)
#define load32x2_vr_idxI_perm_vr(z, ptr, ofst2, perm) \
	CSTUB_(_TIE_hmd1a_common_tie_load32x2_vr_idxI_perm_vr)(z,(unsigned *)( ptr), ofst2, perm)
#define load32x2_vr_postR_perm(z, ptr, ofst, perm) \
	CSTUB_(_TIE_hmd1a_common_tie_load32x2_vr_postR_perm)(&z, (const unsigned int **)&(ptr), ofst, perm)
#define load32x2_vr_postI_perm_vr(r, z, ptr, ofst2, perm) \
	CSTUB_(_TIE_hmd1a_common_tie_load32x2_vr_postI_perm_vr)(&r, z, (const unsigned int **)&(ptr), ofst2, perm)
#define load32x2_vr_circI_perm(z, ptr, ofst1, c, perm) \
	CSTUB_(_TIE_hmd1a_common_tie_load32x2_vr_circI_perm)(&z, (const unsigned int **)&(ptr), ofst1, c, perm)
#define load32x1_vr_idxR_perm(z, ptr, ofst, perm) \
	CSTUB_(_TIE_hmd1a_common_tie_load32x1_vr_idxR_perm)(&z,(unsigned *)( ptr), ofst, perm)
#define load32x1_vr_idxI_perm_vr(z, ptr, ofst2, perm) \
	CSTUB_(_TIE_hmd1a_common_tie_load32x1_vr_idxI_perm_vr)(z,(unsigned *)( ptr), ofst2, perm)
#define load32x1_vr_postR_perm(z, ptr, ofst, perm) \
	CSTUB_(_TIE_hmd1a_common_tie_load32x1_vr_postR_perm)(&z, (const unsigned int **)&(ptr), ofst, perm)
#define load32x1_vr_postI_perm_vr(r, z, ptr, ofst2, perm) \
	CSTUB_(_TIE_hmd1a_common_tie_load32x1_vr_postI_perm_vr)(&r, z, (const unsigned int **)&(ptr), ofst2, perm)
#define load32x1_vr_circI_perm(z, ptr, ofst1, c, perm) \
	CSTUB_(_TIE_hmd1a_common_tie_load32x1_vr_circI_perm)(&z, (const unsigned int **)&(ptr), ofst1, c, perm)
#define load16x2_vr_idxR(ptr, ofst) \
	CSTUB_(_TIE_hmd1a_common_tie_load16x2_vr_idxR)((unsigned *)(ptr), ofst)
#define load16x2_vr_idxI(ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_load16x2_vr_idxI)((unsigned *)(ptr), ofst2)
#define load16x2_vr_postR(z, ptr, ofst) \
	CSTUB_(_TIE_hmd1a_common_tie_load16x2_vr_postR)(&z, (const unsigned int **)&(ptr), ofst)
#define load16x2_vr_postI(z, ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_load16x2_vr_postI)(&z, (const unsigned int **)&(ptr), ofst2)
#define load16x2_vr_circI(z, ptr, ofst1, c) \
	CSTUB_(_TIE_hmd1a_common_tie_load16x2_vr_circI)(&z, (const unsigned int **)&(ptr), ofst1, c)
#define load16x1_vr_idxR(z, ptr, ofst, sel1) \
	CSTUB_(_TIE_hmd1a_common_tie_load16x1_vr_idxR)(&z, ptr, ofst, sel1)
#define load16x1_vr_idxI(z, ptr, ofst2, sel1) \
	CSTUB_(_TIE_hmd1a_common_tie_load16x1_vr_idxI)(&z, ptr, ofst2, sel1)
#define load16x1_vr_postR(z, ptr, ofst, sel1) \
	CSTUB_(_TIE_hmd1a_common_tie_load16x1_vr_postR)(&z, (const unsigned int **)&(ptr), ofst, sel1)
#define load16x1_vr_postI(z, ptr, ofst2, sel1) \
	CSTUB_(_TIE_hmd1a_common_tie_load16x1_vr_postI)(&z, (const unsigned int **)&(ptr), ofst2, sel1)
#define load16x1_vr_circI(z, ptr, ofst1, c, sel1) \
	CSTUB_(_TIE_hmd1a_common_tie_load16x1_vr_circI)(&z, (const unsigned int **)&(ptr), ofst1, c, sel1)
#define load8x2_vr_idxR(ptr, ofst) \
	CSTUB_(_TIE_hmd1a_common_tie_load8x2_vr_idxR)((unsigned *)(ptr), ofst)
#define load8x2_vr_idxI(ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_load8x2_vr_idxI)((unsigned *)(ptr), ofst2)
#define load8x2_vr_postR(z, ptr, ofst) \
	CSTUB_(_TIE_hmd1a_common_tie_load8x2_vr_postR)(&z, (const unsigned int **)&(ptr), ofst)
#define load8x2_vr_postI(z, ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_load8x2_vr_postI)(&z, (const unsigned int **)&(ptr), ofst2)
#define load8x2_vr_circI(z, ptr, ofst1, c) \
	CSTUB_(_TIE_hmd1a_common_tie_load8x2_vr_circI)(&z, (const unsigned int **)&(ptr), ofst1, c)
#define load8x1_vr_idxR(z, ptr, ofst, sel1) \
	CSTUB_(_TIE_hmd1a_common_tie_load8x1_vr_idxR)(&z, ptr, ofst, sel1)
#define load8x1_vr_idxI(z, ptr, ofst2, sel1) \
	CSTUB_(_TIE_hmd1a_common_tie_load8x1_vr_idxI)(&z, ptr, ofst2, sel1)
#define load8x1_vr_postR(z, ptr, ofst, sel1) \
	CSTUB_(_TIE_hmd1a_common_tie_load8x1_vr_postR)(&z, (const unsigned int **)&(ptr), ofst, sel1)
#define load8x1_vr_postI(z, ptr, ofst2, sel1) \
	CSTUB_(_TIE_hmd1a_common_tie_load8x1_vr_postI)(&z, (const unsigned int **)&(ptr), ofst2, sel1)
#define load8x1_vr_circI(z, ptr, ofst1, c, sel1) \
	CSTUB_(_TIE_hmd1a_common_tie_load8x1_vr_circI)(&z, (const unsigned int **)&(ptr), ofst1, c, sel1)
#define align_32x2_load(ptr) \
	CSTUB_(_TIE_hmd1a_common_tie_align_32x2_load)((unsigned *)(ptr))
#define load_32x2_vr_a(z, buf, ptr) \
	CSTUB_(_TIE_hmd1a_common_tie_load_32x2_vr_a)(&z, &buf, (const unsigned int **)&(ptr))
#define load_24x2_vr_a(z, buf, ptr) \
	CSTUB_(_TIE_hmd1a_common_tie_load_24x2_vr_a)(&z, &buf, (const unsigned int **)&(ptr))
#define load_32x2_vr_a_circ(z, buf, ptr, c) \
	CSTUB_(_TIE_hmd1a_common_tie_load_32x2_vr_a_circ)(&z, &buf, (const unsigned int **)&(ptr), c)
#define store32x2_vr_idxR(z, ptr, ofst) \
	CSTUB_(_TIE_hmd1a_common_tie_store32x2_vr_idxR)(z,(unsigned *)( ptr), ofst)
#define store32x2_vr_idxI(z, ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_store32x2_vr_idxI)(z,(unsigned *)( ptr), ofst2)
#define store32x2_vr_postR(z, ptr, ofst) \
	CSTUB_(_TIE_hmd1a_common_tie_store32x2_vr_postR)(z, (unsigned int **)&(ptr), ofst)
#define store32x2_vr_postI(z, ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_store32x2_vr_postI)(z, (unsigned int **)&(ptr), ofst2)
#define store32x2_vr_circI(z, ptr, ofst1, c) \
	CSTUB_(_TIE_hmd1a_common_tie_store32x2_vr_circI)(z, (unsigned int **)&(ptr), ofst1, c)
#define store32x1_vr_idxR(z, ptr, ofst, sel1) \
	CSTUB_(_TIE_hmd1a_common_tie_store32x1_vr_idxR)(z,(unsigned *)( ptr), ofst, sel1)
#define store32x1_vr_idxI(z, ptr, ofst2, sel1) \
	CSTUB_(_TIE_hmd1a_common_tie_store32x1_vr_idxI)(z,(unsigned *)( ptr), ofst2, sel1)
#define store32x1_vr_postR(z, ptr, ofst, sel1) \
	CSTUB_(_TIE_hmd1a_common_tie_store32x1_vr_postR)(z, (unsigned int **)&(ptr), ofst, sel1)
#define store32x1_vr_postI(z, ptr, ofst2, sel1) \
	CSTUB_(_TIE_hmd1a_common_tie_store32x1_vr_postI)(z, (unsigned int **)&(ptr), ofst2, sel1)
#define store32x1_vr_circI(z, ptr, ofst1, c, sel1) \
	CSTUB_(_TIE_hmd1a_common_tie_store32x1_vr_circI)(z, (unsigned int **)&(ptr), ofst1, c, sel1)
#define store32x2_vr_br_idxR(z, gate, ptr, ofst) \
	CSTUB_(_TIE_hmd1a_common_tie_store32x2_vr_br_idxR)(z, gate, ptr, ofst)
#define store32x2_vr_br_idxI(z, gate, ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_store32x2_vr_br_idxI)(z, gate, ptr, ofst2)
#define store32x2_vr_br_postR(z, gate, ptr, ofst) \
	CSTUB_(_TIE_hmd1a_common_tie_store32x2_vr_br_postR)(z, gate, (unsigned int **)&(ptr), ofst)
#define store32x2_vr_br_postI(z, gate, ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_store32x2_vr_br_postI)(z, gate, (unsigned int **)&(ptr), ofst2)
#define store32x2_vr_br_circI(z, gate, ptr, ofst1, c) \
	CSTUB_(_TIE_hmd1a_common_tie_store32x2_vr_br_circI)(z, gate, (unsigned int **)&(ptr), ofst1, c)
#define store32x1_vr_br_idxR(z, gate, ptr, ofst, sel1) \
	CSTUB_(_TIE_hmd1a_common_tie_store32x1_vr_br_idxR)(z, gate, ptr, ofst, sel1)
#define store32x1_vr_br_idxI(z, gate, ptr, ofst2, sel1) \
	CSTUB_(_TIE_hmd1a_common_tie_store32x1_vr_br_idxI)(z, gate, ptr, ofst2, sel1)
#define store32x1_vr_br_postR(z, gate, ptr, ofst, sel1) \
	CSTUB_(_TIE_hmd1a_common_tie_store32x1_vr_br_postR)(z, gate, (unsigned int **)&(ptr), ofst, sel1)
#define store32x1_vr_br_postI(z, gate, ptr, ofst2, sel1) \
	CSTUB_(_TIE_hmd1a_common_tie_store32x1_vr_br_postI)(z, gate, (unsigned int **)&(ptr), ofst2, sel1)
#define store32x1_vr_br_circI(z, gate, ptr, ofst1, c, sel1) \
	CSTUB_(_TIE_hmd1a_common_tie_store32x1_vr_br_circI)(z, gate, (unsigned int **)&(ptr), ofst1, c, sel1)
#define store32x2_vr_br_bdir(z, gate, ptr, ofst) \
	CSTUB_(_TIE_hmd1a_common_tie_store32x2_vr_br_bdir)(z, gate,(unsigned *)( ptr), ofst)
#define store32x2_vr_br_brev(z, gate, ptr, ofst) \
	CSTUB_(_TIE_hmd1a_common_tie_store32x2_vr_br_brev)(z, gate,(unsigned *)( ptr), ofst)
#define store16x2_vr_idxR(z, ptr, ofst) \
	CSTUB_(_TIE_hmd1a_common_tie_store16x2_vr_idxR)(z,(unsigned *)( ptr), ofst)
#define store16x2_vr_idxI(z, ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_store16x2_vr_idxI)(z,(unsigned *)( ptr), ofst2)
#define store16x2_vr_postR(z, ptr, ofst) \
	CSTUB_(_TIE_hmd1a_common_tie_store16x2_vr_postR)(z, (unsigned int **)&(ptr), ofst)
#define store16x2_vr_postI(z, ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_store16x2_vr_postI)(z, (unsigned int **)&(ptr), ofst2)
#define store16x2_vr_circI(z, ptr, ofst1, c) \
	CSTUB_(_TIE_hmd1a_common_tie_store16x2_vr_circI)(z, (unsigned int **)&(ptr), ofst1, c)
#define store16x1_vr_idxR(z, ptr, ofst, sel1) \
	CSTUB_(_TIE_hmd1a_common_tie_store16x1_vr_idxR)(z, ptr, ofst, sel1)
#define store16x1_vr_idxI(z, ptr, ofst2, sel1) \
	CSTUB_(_TIE_hmd1a_common_tie_store16x1_vr_idxI)(z, ptr, ofst2, sel1)
#define store16x1_vr_postR(z, ptr, ofst, sel1) \
	CSTUB_(_TIE_hmd1a_common_tie_store16x1_vr_postR)(z, (unsigned int **)&(ptr), ofst, sel1)
#define store16x1_vr_postI(z, ptr, ofst2, sel1) \
	CSTUB_(_TIE_hmd1a_common_tie_store16x1_vr_postI)(z, (unsigned int **)&(ptr), ofst2, sel1)
#define store16x1_vr_circI(z, ptr, ofst1, c, sel1) \
	CSTUB_(_TIE_hmd1a_common_tie_store16x1_vr_circI)(z, (unsigned int **)&(ptr), ofst1, c, sel1)
#define store8x2_vr_idxR(z, ptr, ofst) \
	CSTUB_(_TIE_hmd1a_common_tie_store8x2_vr_idxR)(z,(unsigned *)( ptr), ofst)
#define store8x2_vr_idxI(z, ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_store8x2_vr_idxI)(z,(unsigned *)( ptr), ofst2)
#define store8x2_vr_postR(z, ptr, ofst) \
	CSTUB_(_TIE_hmd1a_common_tie_store8x2_vr_postR)(z, (unsigned int **)&(ptr), ofst)
#define store8x2_vr_postI(z, ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_store8x2_vr_postI)(z, (unsigned int **)&(ptr), ofst2)
#define store8x2_vr_circI(z, ptr, ofst1, c) \
	CSTUB_(_TIE_hmd1a_common_tie_store8x2_vr_circI)(z, (unsigned int **)&(ptr), ofst1, c)
#define store8x1_vr_idxR(z, ptr, ofst, sel1) \
	CSTUB_(_TIE_hmd1a_common_tie_store8x1_vr_idxR)(z, ptr, ofst, sel1)
#define store8x1_vr_idxI(z, ptr, ofst2, sel1) \
	CSTUB_(_TIE_hmd1a_common_tie_store8x1_vr_idxI)(z, ptr, ofst2, sel1)
#define store8x1_vr_postR(z, ptr, ofst, sel1) \
	CSTUB_(_TIE_hmd1a_common_tie_store8x1_vr_postR)(z, (unsigned int **)&(ptr), ofst, sel1)
#define store8x1_vr_postI(z, ptr, ofst2, sel1) \
	CSTUB_(_TIE_hmd1a_common_tie_store8x1_vr_postI)(z, (unsigned int **)&(ptr), ofst2, sel1)
#define store8x1_vr_circI(z, ptr, ofst1, c, sel1) \
	CSTUB_(_TIE_hmd1a_common_tie_store8x1_vr_circI)(z, (unsigned int **)&(ptr), ofst1, c, sel1)
#define align_32x2_store(ptr) \
	CSTUB_(_TIE_hmd1a_common_tie_align_32x2_store)((unsigned *)(ptr))
#define store_32x2_vr_a(z, buf, ptr) \
	CSTUB_(_TIE_hmd1a_common_tie_store_32x2_vr_a)(z, &buf, (unsigned int **)&(ptr))
#define store_24x2_vr_a(z, buf, ptr) \
	CSTUB_(_TIE_hmd1a_common_tie_store_24x2_vr_a)(z, &buf, (unsigned int **)&(ptr))
#define store_32x2_vr_a_circ(z, buf, ptr, c) \
	CSTUB_(_TIE_hmd1a_common_tie_store_32x2_vr_a_circ)(z, &buf, (unsigned int **)&(ptr), c)
#define flush_32x2(buf, ptr) \
	CSTUB_(_TIE_hmd1a_common_tie_flush_32x2)(buf,(unsigned *)( ptr))
#define load_fr_postI(fx, ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_load_fr_postI)(&fx, (const unsigned int **)&(ptr), ofst2)
#define store_fr_postI(fx, ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_store_fr_postI)(fx, (unsigned int **)&(ptr), ofst2)
#define brev_upd(gate, idx_out, idx_in) \
	CSTUB_(_TIE_hmd1a_common_tie_brev_upd)(&gate, &idx_out, idx_in)
#define brev_upd_ext(gate, idx_out) \
	CSTUB_(_TIE_hmd1a_common_tie_brev_upd_ext)(&gate, &idx_out)
#define move32_ar_vr(x, sel1) \
	CSTUB_(_TIE_hmd1a_common_tie_move32_ar_vr)(x, sel1)
#define move32_vr_ar(z, sel1, a) \
	CSTUB_(_TIE_hmd1a_common_tie_move32_vr_ar)(&z, sel1, a)
#define move32_ar_vr_idx(x, idx) \
	CSTUB_(_TIE_hmd1a_common_tie_move32_ar_vr_idx)(x, idx)
#define move32_fr_vr_idx(x, idx) \
	CSTUB_(_TIE_hmd1a_common_tie_move32_fr_vr_idx)(x, idx)
#define move_fr_eqz(z, x, y) \
	CSTUB_(_TIE_hmd1a_common_tie_move_fr_eqz)(&z, x, y)
#define move_fr_gez(z, x, y) \
	CSTUB_(_TIE_hmd1a_common_tie_move_fr_gez)(&z, x, y)
#define move_fr_gtz(z, x, y) \
	CSTUB_(_TIE_hmd1a_common_tie_move_fr_gtz)(&z, x, y)
#define move_fr_lez(z, x, y) \
	CSTUB_(_TIE_hmd1a_common_tie_move_fr_lez)(&z, x, y)
#define move_fr_ltz(z, x, y) \
	CSTUB_(_TIE_hmd1a_common_tie_move_fr_ltz)(&z, x, y)
#define move_fr_nez(z, x, y) \
	CSTUB_(_TIE_hmd1a_common_tie_move_fr_nez)(&z, x, y)
#define move_fr_sat(z, x, y) \
	CSTUB_(_TIE_hmd1a_common_tie_move_fr_sat)(&z, x, y)
#define move_fr_arnz(z, x, ax) \
	CSTUB_(_TIE_hmd1a_common_tie_move_fr_arnz)(&z, x, ax)
#define vmove_vr_eqz(z, x, y) \
	CSTUB_(_TIE_hmd1a_common_tie_vmove_vr_eqz)(&z, x, y)
#define vmove_vr_gez(z, x, y) \
	CSTUB_(_TIE_hmd1a_common_tie_vmove_vr_gez)(&z, x, y)
#define vmove_vr_gtz(z, x, y) \
	CSTUB_(_TIE_hmd1a_common_tie_vmove_vr_gtz)(&z, x, y)
#define vmove_vr_lez(z, x, y) \
	CSTUB_(_TIE_hmd1a_common_tie_vmove_vr_lez)(&z, x, y)
#define vmove_vr_ltz(z, x, y) \
	CSTUB_(_TIE_hmd1a_common_tie_vmove_vr_ltz)(&z, x, y)
#define vmove_vr_nez(z, x, y) \
	CSTUB_(_TIE_hmd1a_common_tie_vmove_vr_nez)(&z, x, y)
#define vmove_vr_sat(z, x, y) \
	CSTUB_(_TIE_hmd1a_common_tie_vmove_vr_sat)(&z, x, y)
#define replicate(z, sel_code, x, el_x) \
	CSTUB_(_TIE_hmd1a_common_tie_replicate)(&z, sel_code, x, el_x)
#define replicate_ar(z, sel_code, ar) \
	CSTUB_(_TIE_hmd1a_common_tie_replicate_ar)(&z, sel_code, ar)
#define vreplicate(x, el_x) \
	CSTUB_(_TIE_hmd1a_common_tie_vreplicate)(x, el_x)
#define vreplicate_fr(fx) \
	CSTUB_(_TIE_hmd1a_common_tie_vreplicate_fr)(fx)
#define convert_16I_to_32F_x1(z, exp_fxp, el) \
	CSTUB_(_TIE_hmd1a_common_tie_convert_16I_to_32F_x1)(&z, exp_fxp, el)
#define convert_16I_to_32F_x2(z, exp_fxp) \
	CSTUB_(_TIE_hmd1a_common_tie_convert_16I_to_32F_x2)(&z, exp_fxp)
#define convert_32F_to_16I_x1(z, exp_fxp, rnd, el) \
	CSTUB_(_TIE_hmd1a_common_tie_convert_32F_to_16I_x1)(&z, exp_fxp, rnd, el)
#define convert_32F_to_16I_x2(z, exp_fxp, rnd) \
	CSTUB_(_TIE_hmd1a_common_tie_convert_32F_to_16I_x2)(&z, exp_fxp, rnd)
#define convert_32F_to_16F_x1(z, is_signed, exp_bits, bias, round, el) \
	CSTUB_(_TIE_hmd1a_common_tie_convert_32F_to_16F_x1)(&z, is_signed, exp_bits, bias, round, el)
#define convert_32F_to_16F_x2(z, is_signed, exp_bits, bias, round) \
	CSTUB_(_TIE_hmd1a_common_tie_convert_32F_to_16F_x2)(&z, is_signed, exp_bits, bias, round)
#define convert_16F_to_32F_x1(z, is_signed, exp_bits, bias, el) \
	CSTUB_(_TIE_hmd1a_common_tie_convert_16F_to_32F_x1)(&z, is_signed, exp_bits, bias, el)
#define convert_16F_to_32F_x2(z, is_signed, exp_bits, bias) \
	CSTUB_(_TIE_hmd1a_common_tie_convert_16F_to_32F_x2)(&z, is_signed, exp_bits, bias)
#define convert_32I_to_32F_x1(z, exp_fxp, el) \
	CSTUB_(_TIE_hmd1a_common_tie_convert_32I_to_32F_x1)(&z, exp_fxp, el)
#define convert_32F_to_32I_x1(z, exp_fxp, rnd, el) \
	CSTUB_(_TIE_hmd1a_common_tie_convert_32F_to_32I_x1)(&z, exp_fxp, rnd, el)
#define convert_IEEE_float_to_32F_x2(z) \
	CSTUB_(_TIE_hmd1a_common_tie_convert_IEEE_float_to_32F_x2)(&z)
#define convert_32F_to_IEEE_float_x2(z) \
	CSTUB_(_TIE_hmd1a_common_tie_convert_32F_to_IEEE_float_x2)(&z)
#define convert_32I_to_64F(x) \
	CSTUB_(_TIE_hmd1a_common_tie_convert_32I_to_64F)(x)
#define convert_64F_to_32I(x, rnd) \
	CSTUB_(_TIE_hmd1a_common_tie_convert_64F_to_32I)(x, rnd)
#define convert_32F_to_64F(fx) \
	CSTUB_(_TIE_hmd1a_common_tie_convert_32F_to_64F)(fx)
#define convert_64F_to_32F(x) \
	CSTUB_(_TIE_hmd1a_common_tie_convert_64F_to_32F)(x)
#define convert_IEEE_double_to_64F(z) \
	CSTUB_(_TIE_hmd1a_common_tie_convert_IEEE_double_to_64F)(&z)
#define convert_64F_to_IEEE_double(z) \
	CSTUB_(_TIE_hmd1a_common_tie_convert_64F_to_IEEE_double)(&z)
#define vadd_perm(x, y, selin_h, selin_l, signs4, div_by_2_op) \
	CSTUB_(_TIE_hmd1a_common_tie_vadd_perm)(x, y, selin_h, selin_l, signs4, div_by_2_op)
#define vsum_perm(z, x, y, selin_h, selin_l, signs4, sign_z) \
	CSTUB_(_TIE_hmd1a_common_tie_vsum_perm)(z, x, y, selin_h, selin_l, signs4, sign_z)
#define vmul_perm(x, y, selin_h, selin_l, signs2, div_by_2_op) \
	CSTUB_(_TIE_hmd1a_common_tie_vmul_perm)(x, y, selin_h, selin_l, signs2, div_by_2_op)
#define vmac_perm(z, x, y, selin_h, selin_l, signs2, sign_z, swap_z, div_by_2_op) \
	CSTUB_(_TIE_hmd1a_common_tie_vmac_perm)(z, x, y, selin_h, selin_l, signs2, sign_z, swap_z, div_by_2_op)
#define vmac_boost(z, x, y, selin_h, selin_l, signs2, boost) \
	CSTUB_(_TIE_hmd1a_common_tie_vmac_boost)(z, x, y, selin_h, selin_l, signs2, boost)
#define vblend(x, y, selin_h, selin_l, signs4, div_by_2_op) \
	CSTUB_(_TIE_hmd1a_common_tie_vblend)(x, y, selin_h, selin_l, signs4, div_by_2_op)
#define vblend_add(z, x, y, selin_h, selin_l, signs4, sign_z, swap_z, div_by_2_op) \
	CSTUB_(_TIE_hmd1a_common_tie_vblend_add)(z, x, y, selin_h, selin_l, signs4, sign_z, swap_z, div_by_2_op)
#define vblend_boost(z, x, y, selin_h, selin_l, signs4, boost) \
	CSTUB_(_TIE_hmd1a_common_tie_vblend_boost)(z, x, y, selin_h, selin_l, signs4, boost)
#define fadds(fx, fy, signs2) \
	CSTUB_(_TIE_hmd1a_common_tie_fadds)(fx, fy, signs2)
#define fmuls(fx, fy, signs2) \
	CSTUB_(_TIE_hmd1a_common_tie_fmuls)(fx, fy, signs2)
#define fmacs(fz, fx, fy, signs2) \
	CSTUB_(_TIE_hmd1a_common_tie_fmacs)(fz, fx, fy, signs2)
#define dadds(z, x, signs2) \
	CSTUB_(_TIE_hmd1a_common_tie_dadds)(z, x, signs2)
#define dmuls(x, y, signs2) \
	CSTUB_(_TIE_hmd1a_common_tie_dmuls)(x, y, signs2)
#define dmacs(z, x, y, signs2) \
	CSTUB_(_TIE_hmd1a_common_tie_dmacs)(z, x, y, signs2)
#define vadds(x, y, signs4) \
	CSTUB_(_TIE_hmd1a_common_tie_vadds)(x, y, signs4)
#define vmuls(x, y, signs2) \
	CSTUB_(_TIE_hmd1a_common_tie_vmuls)(x, y, signs2)
#define vmacs(z, x, y, signs2, sign_z) \
	CSTUB_(_TIE_hmd1a_common_tie_vmacs)(z, x, y, signs2, sign_z)
#define cmul(x, y, conj) \
	CSTUB_(_TIE_hmd1a_common_tie_cmul)(x, y, conj)
#define cmac(z, x, y, conj) \
	CSTUB_(_TIE_hmd1a_common_tie_cmac)(z, x, y, conj)
#define cmas(z, x, y, conj) \
	CSTUB_(_TIE_hmd1a_common_tie_cmas)(z, x, y, conj)
#define vmulf(x, fy, signs2) \
	CSTUB_(_TIE_hmd1a_common_tie_vmulf)(x, fy, signs2)
#define vmacf(z, x, fy, signs2, sign_z) \
	CSTUB_(_TIE_hmd1a_common_tie_vmacf)(z, x, fy, signs2, sign_z)
#define vabs(x) \
	CSTUB_(_TIE_hmd1a_common_tie_vabs)(x)
#define vexp_adj(x, exp_adj_ar) \
	CSTUB_(_TIE_hmd1a_common_tie_vexp_adj)(x, exp_adj_ar)
#define vexp_adji(x, exp_adj_imm) \
	CSTUB_(_TIE_hmd1a_common_tie_vexp_adji)(x, exp_adj_imm)
#define vpermi(x, y, sel4) \
	CSTUB_(_TIE_hmd1a_common_tie_vpermi)(x, y, sel4)
#define seta_vr(z, sel_code, const_idx, exp_adj_const) \
	CSTUB_(_TIE_hmd1a_common_tie_seta_vr)(&z, sel_code, const_idx, exp_adj_const)
#define vseta_vr(const_idx, exp_adj_const) \
	CSTUB_(_TIE_hmd1a_common_tie_vseta_vr)(const_idx, exp_adj_const)
#define seta_ar(const_idx, exp_adj_const) \
	CSTUB_(_TIE_hmd1a_common_tie_seta_ar)(const_idx, exp_adj_const)
#define seta_fr(const_idx, exp_adj_const) \
	CSTUB_(_TIE_hmd1a_common_tie_seta_fr)(const_idx, exp_adj_const)
#define load_AccExtend_postI(ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_load_AccExtend_postI)((const unsigned int **)&(ptr), ofst2)
#define load32x1_vr_idx16vr(z, ptr, vidx16, ptr_sel) \
	CSTUB_(_TIE_hmd1a_common_tie_load32x1_vr_idx16vr)(&z,(unsigned *)( ptr), vidx16, ptr_sel)
#define load_BB0_postI(ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_load_BB0_postI)((const unsigned int **)&(ptr), ofst2)
#define load_BB1_postI(ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_load_BB1_postI)((const unsigned int **)&(ptr), ofst2)
#define load_BB2_postI(ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_load_BB2_postI)((const unsigned int **)&(ptr), ofst2)
#define load_BB3_postI(ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_load_BB3_postI)((const unsigned int **)&(ptr), ofst2)
#define load_VB1_postI(ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_load_VB1_postI)((const unsigned int **)&(ptr), ofst2)
#define load_VB2_postI(ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_load_VB2_postI)((const unsigned int **)&(ptr), ofst2)
#define load_VB3_postI(ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_load_VB3_postI)((const unsigned int **)&(ptr), ofst2)
#define load_VB4_postI(ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_load_VB4_postI)((const unsigned int **)&(ptr), ofst2)
#define load_VB5_postI(ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_load_VB5_postI)((const unsigned int **)&(ptr), ofst2)
#define load_VB6_postI(ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_load_VB6_postI)((const unsigned int **)&(ptr), ofst2)
#define load_VB7_postI(ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_load_VB7_postI)((const unsigned int **)&(ptr), ofst2)
#define load_32x2_vr_a_bounded(z, buf, ptr, count) \
	CSTUB_(_TIE_hmd1a_common_tie_load_32x2_vr_a_bounded)(&z, &buf, (const unsigned int **)&(ptr), &count)
#define load_BBx_VB67_a_bounded(buf, ptr, count, sel) \
	CSTUB_(_TIE_hmd1a_common_tie_load_BBx_VB67_a_bounded)(&buf, (const unsigned int **)&(ptr), &count, sel)
#define flush_32x2_bounded(buf, ptr, count) \
	CSTUB_(_TIE_hmd1a_common_tie_flush_32x2_bounded)(buf, (unsigned int **)&(ptr), &count)
#define store_32x2_vr_a_bounded(z, buf, ptr, count) \
	CSTUB_(_TIE_hmd1a_common_tie_store_32x2_vr_a_bounded)(z, &buf, (unsigned int **)&(ptr), &count)
#define store_AccExtend_postI(ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_store_AccExtend_postI)((unsigned int **)&(ptr), ofst2)
#define store_BB0_postI(ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_store_BB0_postI)((unsigned int **)&(ptr), ofst2)
#define store_BB1_postI(ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_store_BB1_postI)((unsigned int **)&(ptr), ofst2)
#define store_BB2_postI(ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_store_BB2_postI)((unsigned int **)&(ptr), ofst2)
#define store_BB3_postI(ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_store_BB3_postI)((unsigned int **)&(ptr), ofst2)
#define store_VB1_postI(ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_store_VB1_postI)((unsigned int **)&(ptr), ofst2)
#define store_VB2_postI(ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_store_VB2_postI)((unsigned int **)&(ptr), ofst2)
#define store_VB3_postI(ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_store_VB3_postI)((unsigned int **)&(ptr), ofst2)
#define store_VB4_postI(ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_store_VB4_postI)((unsigned int **)&(ptr), ofst2)
#define store_VB5_postI(ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_store_VB5_postI)((unsigned int **)&(ptr), ofst2)
#define store_VB6_postI(ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_store_VB6_postI)((unsigned int **)&(ptr), ofst2)
#define store_VB7_postI(ptr, ofst2) \
	CSTUB_(_TIE_hmd1a_common_tie_store_VB7_postI)((unsigned int **)&(ptr), ofst2)
#define afloat_exp_extract(x) \
	CSTUB_(_TIE_hmd1a_common_tie_afloat_exp_extract)(x)
#define mov_AccExtend_vr(x) \
	CSTUB_(_TIE_hmd1a_common_tie_mov_AccExtend_vr)(x)
#define mov_vr_AccExtend() \
	CSTUB_(_TIE_hmd1a_common_tie_mov_vr_AccExtend)()
#define mov_BB_VB67_to_vrVB_VB45() \
	CSTUB_(_TIE_hmd1a_common_tie_mov_BB_VB67_to_vrVB_VB45)()
#define mov_vrVB_VB45_to_BB_VB67(x) \
	CSTUB_(_TIE_hmd1a_common_tie_mov_vrVB_VB45_to_BB_VB67)(x)
#define precess_16bits(x, y) \
	CSTUB_(_TIE_hmd1a_common_tie_precess_16bits)(x, y)
#define set_BB_vrVB67_zero() \
	CSTUB_(_TIE_hmd1a_common_tie_set_BB_vrVB67_zero)()
#define exp_shift_amount(input1, input2) \
	CSTUB_(_TIE_hmd1a_common_tie_exp_shift_amount)(input1, input2)
#define rnd_sat_pack(z, el32, x, y, sgn) \
	CSTUB_(_TIE_hmd1a_common_tie_rnd_sat_pack)(&z, el32, x, y, sgn)
#define rectify32_into8(z, x, shift, rnd, el32, half) \
	CSTUB_(_TIE_hmd1a_common_tie_rectify32_into8)(&z, x, shift, rnd, el32, half)
#define shift8_into32_arith(x, shift, rnd, el32, half) \
	CSTUB_(_TIE_hmd1a_common_tie_shift8_into32_arith)(x, shift, rnd, el32, half)
#define shift32_arith(x, shift, rnd) \
	CSTUB_(_TIE_hmd1a_common_tie_shift32_arith)(x, shift, rnd)
#define mac8bx8b(z, x, y, signed_xy) \
	CSTUB_(_TIE_hmd1a_common_tie_mac8bx8b)(&z, x, y, signed_xy)
#define mac8bx8b_sparse(z, x, y, signed_xy) \
	CSTUB_(_TIE_hmd1a_common_tie_mac8bx8b_sparse)(&z, x, y, signed_xy)
#define mac8bx8b_conv(z, x, signed_xy, shift_in) \
	CSTUB_(_TIE_hmd1a_common_tie_mac8bx8b_conv)(&z, x, signed_xy, shift_in)
#define mir_init(low) \
	CSTUB_(_TIE_hmd1a_common_tie_mir_init)(low)
#define f_abs(z, el_z, x, el_x) \
	CSTUB_(_TIE_hmd1a_common_tie_f_abs)(&z, el_z, x, el_x)
#define fclamp(z, el_z, x, el_x, y, el_y) \
	CSTUB_(_TIE_hmd1a_common_tie_fclamp)(&z, el_z, x, el_x, y, el_y)
#define fclamp_bp(z, el_z, x, el_x, y, el_y) \
	CSTUB_(_TIE_hmd1a_common_tie_fclamp_bp)(&z, el_z, x, el_x, y, el_y)
#define fclamp_one(z, el_z, x, el_x) \
	CSTUB_(_TIE_hmd1a_common_tie_fclamp_one)(&z, el_z, x, el_x)
#define fmax(z, el_z, x, el_x, y, el_y) \
	CSTUB_(_TIE_hmd1a_common_tie_fmax)(&z, el_z, x, el_x, y, el_y)
#define fmin(z, el_z, x, el_x, y, el_y) \
	CSTUB_(_TIE_hmd1a_common_tie_fmin)(&z, el_z, x, el_x, y, el_y)
#define max_fr(fx, fy) \
	CSTUB_(_TIE_hmd1a_common_tie_max_fr)(fx, fy)
#define min_fr(fx, fy) \
	CSTUB_(_TIE_hmd1a_common_tie_min_fr)(fx, fy)
#define log2(x) \
	CSTUB_(_TIE_hmd1a_common_tie_log2)(x)
#define pow2(x) \
	CSTUB_(_TIE_hmd1a_common_tie_pow2)(x)
#define sigmoid(x) \
	CSTUB_(_TIE_hmd1a_common_tie_sigmoid)(x)
#define inv(x) \
	CSTUB_(_TIE_hmd1a_common_tie_inv)(x)
#define ratio(z, x, y, bz) \
	CSTUB_(_TIE_hmd1a_common_tie_ratio)(&z, x, y, &bz)
#define atanratio(x, bx) \
	CSTUB_(_TIE_hmd1a_common_tie_atanratio)(x, bx)
#define invsqrt(x) \
	CSTUB_(_TIE_hmd1a_common_tie_invsqrt)(x)
#define sine(x) \
	CSTUB_(_TIE_hmd1a_common_tie_sine)(x)
#define cosine(x) \
	CSTUB_(_TIE_hmd1a_common_tie_cosine)(x)
#define log2mul(z, x, y, bz) \
	CSTUB_(_TIE_hmd1a_common_tie_log2mul)(&z, x, y, &bz)
#define cspow2(x, bx) \
	CSTUB_(_TIE_hmd1a_common_tie_cspow2)(x, bx)
#define comp(x, el_x, y, el_y) \
	CSTUB_(_TIE_hmd1a_common_tie_comp)(x, el_x, y, el_y)
#define eq(x, el_x, y, el_y) \
	CSTUB_(_TIE_hmd1a_common_tie_eq)(x, el_x, y, el_y)
#define ge(x, el_x, y, el_y) \
	CSTUB_(_TIE_hmd1a_common_tie_ge)(x, el_x, y, el_y)
#define gt(x, el_x, y, el_y) \
	CSTUB_(_TIE_hmd1a_common_tie_gt)(x, el_x, y, el_y)
#define le(x, el_x, y, el_y) \
	CSTUB_(_TIE_hmd1a_common_tie_le)(x, el_x, y, el_y)
#define lt(x, el_x, y, el_y) \
	CSTUB_(_TIE_hmd1a_common_tie_lt)(x, el_x, y, el_y)
#define ne(x, el_x, y, el_y) \
	CSTUB_(_TIE_hmd1a_common_tie_ne)(x, el_x, y, el_y)
#define comp_const(x, el_x, const_idx, exp_adj_const) \
	CSTUB_(_TIE_hmd1a_common_tie_comp_const)(x, el_x, const_idx, exp_adj_const)
#define eq_const(x, el_x, const_idx, exp_adj_const) \
	CSTUB_(_TIE_hmd1a_common_tie_eq_const)(x, el_x, const_idx, exp_adj_const)
#define ge_const(x, el_x, const_idx, exp_adj_const) \
	CSTUB_(_TIE_hmd1a_common_tie_ge_const)(x, el_x, const_idx, exp_adj_const)
#define gt_const(x, el_x, const_idx, exp_adj_const) \
	CSTUB_(_TIE_hmd1a_common_tie_gt_const)(x, el_x, const_idx, exp_adj_const)
#define le_const(x, el_x, const_idx, exp_adj_const) \
	CSTUB_(_TIE_hmd1a_common_tie_le_const)(x, el_x, const_idx, exp_adj_const)
#define lt_const(x, el_x, const_idx, exp_adj_const) \
	CSTUB_(_TIE_hmd1a_common_tie_lt_const)(x, el_x, const_idx, exp_adj_const)
#define ne_const(x, el_x, const_idx, exp_adj_const) \
	CSTUB_(_TIE_hmd1a_common_tie_ne_const)(x, el_x, const_idx, exp_adj_const)
#define comp_fr(fx, fy) \
	CSTUB_(_TIE_hmd1a_common_tie_comp_fr)(fx, fy)
#define eq_fr(fx, fy) \
	CSTUB_(_TIE_hmd1a_common_tie_eq_fr)(fx, fy)
#define ge_fr(fx, fy) \
	CSTUB_(_TIE_hmd1a_common_tie_ge_fr)(fx, fy)
#define gt_fr(fx, fy) \
	CSTUB_(_TIE_hmd1a_common_tie_gt_fr)(fx, fy)
#define le_fr(fx, fy) \
	CSTUB_(_TIE_hmd1a_common_tie_le_fr)(fx, fy)
#define lt_fr(fx, fy) \
	CSTUB_(_TIE_hmd1a_common_tie_lt_fr)(fx, fy)
#define ne_fr(fx, fy) \
	CSTUB_(_TIE_hmd1a_common_tie_ne_fr)(fx, fy)
#define neg_fr(fx) \
	CSTUB_(_TIE_hmd1a_common_tie_neg_fr)(fx)
#define abs_fr(fx) \
	CSTUB_(_TIE_hmd1a_common_tie_abs_fr)(fx)
#define deqz(x) \
	CSTUB_(_TIE_hmd1a_common_tie_deqz)(x)
#define dgez(x) \
	CSTUB_(_TIE_hmd1a_common_tie_dgez)(x)
#define dgtz(x) \
	CSTUB_(_TIE_hmd1a_common_tie_dgtz)(x)
#define dlez(x) \
	CSTUB_(_TIE_hmd1a_common_tie_dlez)(x)
#define dltz(x) \
	CSTUB_(_TIE_hmd1a_common_tie_dltz)(x)
#define dnez(x) \
	CSTUB_(_TIE_hmd1a_common_tie_dnez)(x)
#define veq(x, y) \
	CSTUB_(_TIE_hmd1a_common_tie_veq)(x, y)
#define vge(x, y) \
	CSTUB_(_TIE_hmd1a_common_tie_vge)(x, y)
#define vgt(x, y) \
	CSTUB_(_TIE_hmd1a_common_tie_vgt)(x, y)
#define vle(x, y) \
	CSTUB_(_TIE_hmd1a_common_tie_vle)(x, y)
#define vlt(x, y) \
	CSTUB_(_TIE_hmd1a_common_tie_vlt)(x, y)
#define vne(x, y) \
	CSTUB_(_TIE_hmd1a_common_tie_vne)(x, y)
#define veq_const(x, const_idx, exp_adj_const) \
	CSTUB_(_TIE_hmd1a_common_tie_veq_const)(x, const_idx, exp_adj_const)
#define vge_const(x, const_idx, exp_adj_const) \
	CSTUB_(_TIE_hmd1a_common_tie_vge_const)(x, const_idx, exp_adj_const)
#define vgt_const(x, const_idx, exp_adj_const) \
	CSTUB_(_TIE_hmd1a_common_tie_vgt_const)(x, const_idx, exp_adj_const)
#define vle_const(x, const_idx, exp_adj_const) \
	CSTUB_(_TIE_hmd1a_common_tie_vle_const)(x, const_idx, exp_adj_const)
#define vlt_const(x, const_idx, exp_adj_const) \
	CSTUB_(_TIE_hmd1a_common_tie_vlt_const)(x, const_idx, exp_adj_const)
#define vne_const(x, const_idx, exp_adj_const) \
	CSTUB_(_TIE_hmd1a_common_tie_vne_const)(x, const_idx, exp_adj_const)
#define sel_1b2(fx, fy, bx, el_bx1) \
	CSTUB_(_TIE_hmd1a_common_tie_sel_1b2)(fx, fy, bx, el_bx1)
#define sel_eq(fx, fy, bx) \
	CSTUB_(_TIE_hmd1a_common_tie_sel_eq)(fx, fy, bx)
#define sel_ge(fx, fy, bx) \
	CSTUB_(_TIE_hmd1a_common_tie_sel_ge)(fx, fy, bx)
#define sel_gt(fx, fy, bx) \
	CSTUB_(_TIE_hmd1a_common_tie_sel_gt)(fx, fy, bx)
#define sel_le(fx, fy, bx) \
	CSTUB_(_TIE_hmd1a_common_tie_sel_le)(fx, fy, bx)
#define sel_lt(fx, fy, bx) \
	CSTUB_(_TIE_hmd1a_common_tie_sel_lt)(fx, fy, bx)
#define sel_ne(fx, fy, bx) \
	CSTUB_(_TIE_hmd1a_common_tie_sel_ne)(fx, fy, bx)
#define sel_ar(fx, fy, sel) \
	CSTUB_(_TIE_hmd1a_common_tie_sel_ar)(fx, fy, sel)
#define vsel(x, y, bx) \
	CSTUB_(_TIE_hmd1a_common_tie_vsel)(x, y, bx)
#define vsel_ar(x, y, sel) \
	CSTUB_(_TIE_hmd1a_common_tie_vsel_ar)(x, y, sel)
#define andb2(bx, by) \
	CSTUB_(_TIE_hmd1a_common_tie_andb2)(bx, by)
#define andbc2(bx, by) \
	CSTUB_(_TIE_hmd1a_common_tie_andbc2)(bx, by)
#define orb2(bx, by) \
	CSTUB_(_TIE_hmd1a_common_tie_orb2)(bx, by)
#define orbc2(bx, by) \
	CSTUB_(_TIE_hmd1a_common_tie_orbc2)(bx, by)
#define xorb2(bx, by) \
	CSTUB_(_TIE_hmd1a_common_tie_xorb2)(bx, by)
#define bcount0_maskI(bx, imask) \
	CSTUB_(_TIE_hmd1a_common_tie_bcount0_maskI)(bx, imask)
#define bcount0_maskR(bx, by) \
	CSTUB_(_TIE_hmd1a_common_tie_bcount0_maskR)(bx, by)
#define bcount1_maskI(bx, imask) \
	CSTUB_(_TIE_hmd1a_common_tie_bcount1_maskI)(bx, imask)
#define bcount1_maskR(bx, by) \
	CSTUB_(_TIE_hmd1a_common_tie_bcount1_maskR)(bx, by)
#define bfirst0_maskI(bx, imask) \
	CSTUB_(_TIE_hmd1a_common_tie_bfirst0_maskI)(bx, imask)
#define bfirst0_maskR(bx, by) \
	CSTUB_(_TIE_hmd1a_common_tie_bfirst0_maskR)(bx, by)
#define bfirst1_maskI(bx, imask) \
	CSTUB_(_TIE_hmd1a_common_tie_bfirst1_maskI)(bx, imask)
#define bfirst1_maskR(bx, by) \
	CSTUB_(_TIE_hmd1a_common_tie_bfirst1_maskR)(bx, by)
#define blast0_maskI(bx, imask) \
	CSTUB_(_TIE_hmd1a_common_tie_blast0_maskI)(bx, imask)
#define blast0_maskR(bx, by) \
	CSTUB_(_TIE_hmd1a_common_tie_blast0_maskR)(bx, by)
#define blast1_maskI(bx, imask) \
	CSTUB_(_TIE_hmd1a_common_tie_blast1_maskI)(bx, imask)
#define blast1_maskR(bx, by) \
	CSTUB_(_TIE_hmd1a_common_tie_blast1_maskR)(bx, by)
#define bgetI(bx, ipos) \
	CSTUB_(_TIE_hmd1a_common_tie_bgetI)(bx, ipos)
#define bgetR(bx, rpos) \
	CSTUB_(_TIE_hmd1a_common_tie_bgetR)(bx, rpos)
#define bsetI(bx, rpos, ibit) \
	CSTUB_(_TIE_hmd1a_common_tie_bsetI)(bx, rpos, ibit)
#define bsetR(bx, rpos, by) \
	CSTUB_(_TIE_hmd1a_common_tie_bsetR)(bx, rpos, by)
#define exp_adj(z, el_z, x, el_x, exp_adj_ar) \
	CSTUB_(_TIE_hmd1a_common_tie_exp_adj)(&z, el_z, x, el_x, exp_adj_ar)
#define exp_adji(z, el_z, x, el_x, exp_adj_imm) \
	CSTUB_(_TIE_hmd1a_common_tie_exp_adji)(&z, el_z, x, el_x, exp_adj_imm)
#define exp_adj_fr(fx, exp_adj_ar) \
	CSTUB_(_TIE_hmd1a_common_tie_exp_adj_fr)(fx, exp_adj_ar)
#define exp_adji_fr(fx, exp_adj_imm) \
	CSTUB_(_TIE_hmd1a_common_tie_exp_adji_fr)(fx, exp_adj_imm)
#define s_neg(fx) \
	CSTUB_(_TIE_hmd1a_common_tie_s_neg)(fx)
#define s_copy(fx, fy) \
	CSTUB_(_TIE_hmd1a_common_tie_s_copy)(fx, fy)
#define s_and(fx, fy) \
	CSTUB_(_TIE_hmd1a_common_tie_s_and)(fx, fy)
#define s_andc(fx, fy) \
	CSTUB_(_TIE_hmd1a_common_tie_s_andc)(fx, fy)
#define s_or(fx, fy) \
	CSTUB_(_TIE_hmd1a_common_tie_s_or)(fx, fy)
#define s_orc(fx, fy) \
	CSTUB_(_TIE_hmd1a_common_tie_s_orc)(fx, fy)
#define s_xor(fx, fy) \
	CSTUB_(_TIE_hmd1a_common_tie_s_xor)(fx, fy)
#define s_vneg(x) \
	CSTUB_(_TIE_hmd1a_common_tie_s_vneg)(x)
#define s_vcopy(x, y) \
	CSTUB_(_TIE_hmd1a_common_tie_s_vcopy)(x, y)
#define s_vand(x, y) \
	CSTUB_(_TIE_hmd1a_common_tie_s_vand)(x, y)
#define s_vandc(x, y) \
	CSTUB_(_TIE_hmd1a_common_tie_s_vandc)(x, y)
#define s_vor(x, y) \
	CSTUB_(_TIE_hmd1a_common_tie_s_vor)(x, y)
#define s_vorc(x, y) \
	CSTUB_(_TIE_hmd1a_common_tie_s_vorc)(x, y)
#define s_vxor(x, y) \
	CSTUB_(_TIE_hmd1a_common_tie_s_vxor)(x, y)
#define floorp_frac(floor, z, el_z, x, el_x, nbits) \
	CSTUB_(_TIE_hmd1a_common_tie_floorp_frac)(&floor, &z, el_z, x, el_x, nbits)
#define idx_frac(floor, z, el_z, input, nbits) \
	CSTUB_(_TIE_hmd1a_common_tie_idx_frac)(&floor, &z, el_z, input, nbits)
#define truncate_fr(x) \
	CSTUB_(_TIE_hmd1a_common_tie_truncate_fr)(x)
#define rmax_idx(a, fz, x, idx) \
	CSTUB_(_TIE_hmd1a_common_tie_rmax_idx)(&a, &fz, x, idx)
#define rmin_idx(a, fz, x, idx) \
	CSTUB_(_TIE_hmd1a_common_tie_rmin_idx)(&a, &fz, x, idx)
#define vmaxmin_init(z, x, idx) \
	CSTUB_(_TIE_hmd1a_common_tie_vmaxmin_init)(&z, x, &idx)
#define vmax_idx(z, x, idx) \
	CSTUB_(_TIE_hmd1a_common_tie_vmax_idx)(&z, x, &idx)
#define vmin_idx(z, x, idx) \
	CSTUB_(_TIE_hmd1a_common_tie_vmin_idx)(&z, x, &idx)
#define vmax(x, y) \
	CSTUB_(_TIE_hmd1a_common_tie_vmax)(x, y)
#define vmin(x, y) \
	CSTUB_(_TIE_hmd1a_common_tie_vmin)(x, y)
#define sortupd_asc_vr(a, z, x, y, el_y) \
	CSTUB_(_TIE_hmd1a_common_tie_sortupd_asc_vr)(&a, &z, x, y, el_y)
#define sortupd_des_vr(a, z, x, y, el_y) \
	CSTUB_(_TIE_hmd1a_common_tie_sortupd_des_vr)(&a, &z, x, y, el_y)
#define sortupd_asc_ar(a, z, x) \
	CSTUB_(_TIE_hmd1a_common_tie_sortupd_asc_ar)(&a, &z, x)
#define sortupd_des_ar(a, z, x) \
	CSTUB_(_TIE_hmd1a_common_tie_sortupd_des_ar)(&a, &z, x)
#define vbool(x, y, op) \
	CSTUB_(_TIE_hmd1a_common_tie_vbool)(x, y, op)
#define align_up(val, option) \
	CSTUB_(_TIE_hmd1a_common_tie_align_up)((unsigned)(val), option)
#define mv_MIR(b) \
	CSTUB_(_TIE_hmd1a_common_tie_mv_MIR)(b)
#define mv_ULSR(b) \
	CSTUB_(_TIE_hmd1a_common_tie_mv_ULSR)(b)
#define mv_CR(b) \
	CSTUB_(_TIE_hmd1a_common_tie_mv_CR)(b)
#define ld_FR(addr, fimm) \
	CSTUB_(_TIE_hmd1a_common_tie_ld_FR)(addr, fimm)
#define st_FR(fregin, addr, fimm) \
	CSTUB_(_TIE_hmd1a_common_tie_st_FR)(fregin, addr, fimm)
#define ld_FR_idxR(addr, x) \
	CSTUB_(_TIE_hmd1a_common_tie_ld_FR_idxR)(addr, x)
#define st_FR_idxR(fregin, addr, x) \
	CSTUB_(_TIE_hmd1a_common_tie_st_FR_idxR)(fregin, addr, x)
#define ld_FR_postI(fregout, addr, fimm) \
	CSTUB_(_TIE_hmd1a_common_tie_ld_FR_postI)(&fregout, (const fr32 **)&(addr), fimm)
#define st_FR_postI(fregin, addr, fimm) \
	CSTUB_(_TIE_hmd1a_common_tie_st_FR_postI)(fregin, (fr32 **)&(addr), fimm)
#define ld_FR_postR(fregout, addr, x) \
	CSTUB_(_TIE_hmd1a_common_tie_ld_FR_postR)(&fregout, (const fr32 **)&(addr), x)
#define st_FR_postR(fregin, addr, x) \
	CSTUB_(_TIE_hmd1a_common_tie_st_FR_postR)(fregin, (fr32 **)&(addr), x)
#define ld_VR(addr, vimm) \
	CSTUB_(_TIE_hmd1a_common_tie_ld_VR)(addr, vimm)
#define st_VR(vregin, addr, vimm) \
	CSTUB_(_TIE_hmd1a_common_tie_st_VR)(vregin, addr, vimm)
#define ld_VR_idxR(addr, x) \
	CSTUB_(_TIE_hmd1a_common_tie_ld_VR_idxR)(addr, x)
#define st_VR_idxR(vregin, addr, x) \
	CSTUB_(_TIE_hmd1a_common_tie_st_VR_idxR)(vregin, addr, x)
#define ld_VR_postI(vregout, addr, vimm) \
	CSTUB_(_TIE_hmd1a_common_tie_ld_VR_postI)(&vregout, (const vr64 **)&(addr), vimm)
#define st_VR_postI(vregin, addr, vimm) \
	CSTUB_(_TIE_hmd1a_common_tie_st_VR_postI)(vregin, (vr64 **)&(addr), vimm)
#define ld_VR_postR(vregout, addr, x) \
	CSTUB_(_TIE_hmd1a_common_tie_ld_VR_postR)(&vregout, (const vr64 **)&(addr), x)
#define st_VR_postR(vregin, addr, x) \
	CSTUB_(_TIE_hmd1a_common_tie_st_VR_postR)(vregin, (vr64 **)&(addr), x)
#define mv_FR(b) \
	CSTUB_(_TIE_hmd1a_common_tie_mv_FR)(b)
#define move_ar_fr(b) \
	CSTUB_(_TIE_hmd1a_common_tie_move_ar_fr)(b)
#define move_fr_ar(b) \
	CSTUB_(_TIE_hmd1a_common_tie_move_fr_ar)(b)
#define mv_VR(b) \
	CSTUB_(_TIE_hmd1a_common_tie_mv_VR)(b)
#define move_ar_bbr(b) \
	CSTUB_(_TIE_hmd1a_common_tie_move_ar_bbr)(b)
#define move_bbr_ar(a) \
	CSTUB_(_TIE_hmd1a_common_tie_move_bbr_ar)(a)
#define shift_from_bbr(a, x) \
	CSTUB_(_TIE_hmd1a_common_tie_shift_from_bbr)(&a, x)
#define shift_to_bbr(a, z) \
	CSTUB_(_TIE_hmd1a_common_tie_shift_to_bbr)(&a, &z)
#define ld_ar_x2(a1_out, a0_out, ptr, idx) \
	CSTUB_(_TIE_hmd1a_common_tie_ld_ar_x2)(&a1_out, &a0_out, ptr, idx)
#define st_ar_x2(ptr, idx, a1_in, a0_in) \
	CSTUB_(_TIE_hmd1a_common_tie_st_ar_x2)(ptr, idx, a1_in, a0_in)
#define atbool_storei(a, b, c) \
	CSTUB_(_TIE_hmd1a_common_tie_atbool_storei)(a, b, c)
#define atbool_loadi(b, c) \
	CSTUB_(_TIE_hmd1a_common_tie_atbool_loadi)(b, c)
#define atbool_move(b) \
	CSTUB_(_TIE_hmd1a_common_tie_atbool_move)(b)
#define ulsr32_storei(a, b, c) \
	CSTUB_(_TIE_hmd1a_common_tie_ulsr32_storei)(a, b, c)
#define ulsr32_loadi(b, c) \
	CSTUB_(_TIE_hmd1a_common_tie_ulsr32_loadi)(b, c)
#define mir18_storei(a, b, c) \
	CSTUB_(_TIE_hmd1a_common_tie_mir18_storei)(a, b, c)
#define mir18_loadi(b, c) \
	CSTUB_(_TIE_hmd1a_common_tie_mir18_loadi)(b, c)
#define cr64_storei(a, b, c) \
	CSTUB_(_TIE_hmd1a_common_tie_cr64_storei)(a, b, c)
#define cr64_loadi(b, c) \
	CSTUB_(_TIE_hmd1a_common_tie_cr64_loadi)(b, c)
#define RUR_JammingBit() \
	CSTUB_(_TIE_hmd1a_common_tie_RUR_JammingBit)()
#define WUR_JammingBit(v) \
	CSTUB_(_TIE_hmd1a_common_tie_WUR_JammingBit)(v)
#define RUR_AccExtend_0() \
	CSTUB_(_TIE_hmd1a_common_tie_RUR_AccExtend_0)()
#define WUR_AccExtend_0(v) \
	CSTUB_(_TIE_hmd1a_common_tie_WUR_AccExtend_0)(v)
#define RUR_AccExtend_1() \
	CSTUB_(_TIE_hmd1a_common_tie_RUR_AccExtend_1)()
#define WUR_AccExtend_1(v) \
	CSTUB_(_TIE_hmd1a_common_tie_WUR_AccExtend_1)(v)
#define RUR_BB0_0() \
	CSTUB_(_TIE_hmd1a_common_tie_RUR_BB0_0)()
#define WUR_BB0_0(v) \
	CSTUB_(_TIE_hmd1a_common_tie_WUR_BB0_0)(v)
#define RUR_BB0_1() \
	CSTUB_(_TIE_hmd1a_common_tie_RUR_BB0_1)()
#define WUR_BB0_1(v) \
	CSTUB_(_TIE_hmd1a_common_tie_WUR_BB0_1)(v)
#define RUR_BB1_0() \
	CSTUB_(_TIE_hmd1a_common_tie_RUR_BB1_0)()
#define WUR_BB1_0(v) \
	CSTUB_(_TIE_hmd1a_common_tie_WUR_BB1_0)(v)
#define RUR_BB1_1() \
	CSTUB_(_TIE_hmd1a_common_tie_RUR_BB1_1)()
#define WUR_BB1_1(v) \
	CSTUB_(_TIE_hmd1a_common_tie_WUR_BB1_1)(v)
#define RUR_BB2_0() \
	CSTUB_(_TIE_hmd1a_common_tie_RUR_BB2_0)()
#define WUR_BB2_0(v) \
	CSTUB_(_TIE_hmd1a_common_tie_WUR_BB2_0)(v)
#define RUR_BB2_1() \
	CSTUB_(_TIE_hmd1a_common_tie_RUR_BB2_1)()
#define WUR_BB2_1(v) \
	CSTUB_(_TIE_hmd1a_common_tie_WUR_BB2_1)(v)
#define RUR_BB3_0() \
	CSTUB_(_TIE_hmd1a_common_tie_RUR_BB3_0)()
#define WUR_BB3_0(v) \
	CSTUB_(_TIE_hmd1a_common_tie_WUR_BB3_0)(v)
#define RUR_BB3_1() \
	CSTUB_(_TIE_hmd1a_common_tie_RUR_BB3_1)()
#define WUR_BB3_1(v) \
	CSTUB_(_TIE_hmd1a_common_tie_WUR_BB3_1)(v)
#define RUR_MvmAux() \
	CSTUB_(_TIE_hmd1a_common_tie_RUR_MvmAux)()
#define WUR_MvmAux(v) \
	CSTUB_(_TIE_hmd1a_common_tie_WUR_MvmAux)(v)
#define RUR_VB1_0() \
	CSTUB_(_TIE_hmd1a_common_tie_RUR_VB1_0)()
#define WUR_VB1_0(v) \
	CSTUB_(_TIE_hmd1a_common_tie_WUR_VB1_0)(v)
#define RUR_VB1_1() \
	CSTUB_(_TIE_hmd1a_common_tie_RUR_VB1_1)()
#define WUR_VB1_1(v) \
	CSTUB_(_TIE_hmd1a_common_tie_WUR_VB1_1)(v)
#define RUR_VB2_0() \
	CSTUB_(_TIE_hmd1a_common_tie_RUR_VB2_0)()
#define WUR_VB2_0(v) \
	CSTUB_(_TIE_hmd1a_common_tie_WUR_VB2_0)(v)
#define RUR_VB2_1() \
	CSTUB_(_TIE_hmd1a_common_tie_RUR_VB2_1)()
#define WUR_VB2_1(v) \
	CSTUB_(_TIE_hmd1a_common_tie_WUR_VB2_1)(v)
#define RUR_VB3_0() \
	CSTUB_(_TIE_hmd1a_common_tie_RUR_VB3_0)()
#define WUR_VB3_0(v) \
	CSTUB_(_TIE_hmd1a_common_tie_WUR_VB3_0)(v)
#define RUR_VB3_1() \
	CSTUB_(_TIE_hmd1a_common_tie_RUR_VB3_1)()
#define WUR_VB3_1(v) \
	CSTUB_(_TIE_hmd1a_common_tie_WUR_VB3_1)(v)
#define RUR_VB4_0() \
	CSTUB_(_TIE_hmd1a_common_tie_RUR_VB4_0)()
#define WUR_VB4_0(v) \
	CSTUB_(_TIE_hmd1a_common_tie_WUR_VB4_0)(v)
#define RUR_VB4_1() \
	CSTUB_(_TIE_hmd1a_common_tie_RUR_VB4_1)()
#define WUR_VB4_1(v) \
	CSTUB_(_TIE_hmd1a_common_tie_WUR_VB4_1)(v)
#define RUR_VB5_0() \
	CSTUB_(_TIE_hmd1a_common_tie_RUR_VB5_0)()
#define WUR_VB5_0(v) \
	CSTUB_(_TIE_hmd1a_common_tie_WUR_VB5_0)(v)
#define RUR_VB5_1() \
	CSTUB_(_TIE_hmd1a_common_tie_RUR_VB5_1)()
#define WUR_VB5_1(v) \
	CSTUB_(_TIE_hmd1a_common_tie_WUR_VB5_1)(v)
#define RUR_VB6_0() \
	CSTUB_(_TIE_hmd1a_common_tie_RUR_VB6_0)()
#define WUR_VB6_0(v) \
	CSTUB_(_TIE_hmd1a_common_tie_WUR_VB6_0)(v)
#define RUR_VB6_1() \
	CSTUB_(_TIE_hmd1a_common_tie_RUR_VB6_1)()
#define WUR_VB6_1(v) \
	CSTUB_(_TIE_hmd1a_common_tie_WUR_VB6_1)(v)
#define RUR_VB7_0() \
	CSTUB_(_TIE_hmd1a_common_tie_RUR_VB7_0)()
#define WUR_VB7_0(v) \
	CSTUB_(_TIE_hmd1a_common_tie_WUR_VB7_0)(v)
#define RUR_VB7_1() \
	CSTUB_(_TIE_hmd1a_common_tie_RUR_VB7_1)()
#define WUR_VB7_1(v) \
	CSTUB_(_TIE_hmd1a_common_tie_WUR_VB7_1)(v)
#define mir18_move(b) \
	CSTUB_(_TIE_hmd1a_common_tie_mir18_move)(b)
#define ulsr32_move(b) \
	CSTUB_(_TIE_hmd1a_common_tie_ulsr32_move)(b)
#define cr64_move(b) \
	CSTUB_(_TIE_hmd1a_common_tie_cr64_move)(b)
#define fr32_move(b) \
	CSTUB_(_TIE_hmd1a_common_tie_fr32_move)(b)
#define fr32_loadi(p, o) \
	CSTUB_(_TIE_hmd1a_common_tie_fr32_loadi)(p, o)
#define fr32_storei(v, p, o) \
	CSTUB_(_TIE_hmd1a_common_tie_fr32_storei)(v, p, o)
#define fr32_loadx(p, x) \
	CSTUB_(_TIE_hmd1a_common_tie_fr32_loadx)(p, x)
#define fr32_storex(v, p, x) \
	CSTUB_(_TIE_hmd1a_common_tie_fr32_storex)(v, p, x)
#define fr32_loadip(v, p, o) \
	CSTUB_(_TIE_hmd1a_common_tie_fr32_loadip)(&v, (const fr32 **)&(p), o)
#define fr32_storeip(v, p, o) \
	CSTUB_(_TIE_hmd1a_common_tie_fr32_storeip)(v, (fr32 **)&(p), o)
#define fr32_loadxp(v, p, x) \
	CSTUB_(_TIE_hmd1a_common_tie_fr32_loadxp)(&v, (const fr32 **)&(p), x)
#define fr32_storexp(v, p, x) \
	CSTUB_(_TIE_hmd1a_common_tie_fr32_storexp)(v, (fr32 **)&(p), x)
#define fr32_rtor_int32(b) \
	CSTUB_(_TIE_hmd1a_common_tie_fr32_rtor_int32)(b)
#define fr32_rtor_uint32(b) \
	CSTUB_(_TIE_hmd1a_common_tie_fr32_rtor_uint32)(b)
#define int32_rtor_fr32(a) \
	CSTUB_(_TIE_hmd1a_common_tie_int32_rtor_fr32)(a)
#define uint32_rtor_fr32(a) \
	CSTUB_(_TIE_hmd1a_common_tie_uint32_rtor_fr32)(a)
#define vr64_move(b) \
	CSTUB_(_TIE_hmd1a_common_tie_vr64_move)(b)
#define vr64_loadi(p, o) \
	CSTUB_(_TIE_hmd1a_common_tie_vr64_loadi)(p, o)
#define vr64_storei(v, p, o) \
	CSTUB_(_TIE_hmd1a_common_tie_vr64_storei)(v, p, o)
#define vr64_loadx(p, x) \
	CSTUB_(_TIE_hmd1a_common_tie_vr64_loadx)(p, x)
#define vr64_storex(v, p, x) \
	CSTUB_(_TIE_hmd1a_common_tie_vr64_storex)(v, p, x)
#define vr64_loadip(v, p, o) \
	CSTUB_(_TIE_hmd1a_common_tie_vr64_loadip)(&v, (const vr64 **)&(p), o)
#define vr64_storeip(v, p, o) \
	CSTUB_(_TIE_hmd1a_common_tie_vr64_storeip)(v, (vr64 **)&(p), o)
#define vr64_loadxp(v, p, x) \
	CSTUB_(_TIE_hmd1a_common_tie_vr64_loadxp)(&v, (const vr64 **)&(p), x)
#define vr64_storexp(v, p, x) \
	CSTUB_(_TIE_hmd1a_common_tie_vr64_storexp)(v, (vr64 **)&(p), x)
#define get_VRH(b) \
	CSTUB_(_TIE_hmd1a_common_tie_get_VRH)(b)
#define get_VRL(b) \
	CSTUB_(_TIE_hmd1a_common_tie_get_VRL)(b)
#define set_VRH(a, b) \
	CSTUB_(_TIE_hmd1a_common_tie_set_VRH)(&a, b)
#define set_VRL(a, b) \
	CSTUB_(_TIE_hmd1a_common_tie_set_VRL)(&a, b)
#define vr64_pair(hi, lo) \
	CSTUB_(_TIE_hmd1a_common_tie_vr64_pair)(hi, lo)
#define atbool_rtor_int32(b) \
	CSTUB_(_TIE_hmd1a_common_tie_atbool_rtor_int32)(b)
#define atbool_rtor_uint32(b) \
	CSTUB_(_TIE_hmd1a_common_tie_atbool_rtor_uint32)(b)
#define int32_rtor_atbool(a) \
	CSTUB_(_TIE_hmd1a_common_tie_int32_rtor_atbool)(a)
#define uint32_rtor_atbool(a) \
	CSTUB_(_TIE_hmd1a_common_tie_uint32_rtor_atbool)(a)
#define XT_RSR_SAR() \
	CSTUB_(_TIE_xt_core_RSR_SAR)()

#define XT_WSR_SAR(t) \
	CSTUB_(_TIE_xt_core_WSR_SAR)(t)

#define XT_XSR_SAR(t) \
	CSTUB_(_TIE_xt_core_XSR_SAR)((unsigned *)&t)

#endif /* __cplusplus */

/* User register read/write functions */
#define RTHREADPTR RUR_THREADPTR
#define WTHREADPTR WUR_THREADPTR
#define RUR231 RUR_THREADPTR
#define WUR231 WUR_THREADPTR

#define RAE_OVF_SAR RUR_AE_OVF_SAR
#define WAE_OVF_SAR WUR_AE_OVF_SAR
#define RUR240 RUR_AE_OVF_SAR
#define WUR240 WUR_AE_OVF_SAR

#define RAE_BITHEAD RUR_AE_BITHEAD
#define WAE_BITHEAD WUR_AE_BITHEAD
#define RUR241 RUR_AE_BITHEAD
#define WUR241 WUR_AE_BITHEAD

#define RAE_TS_FTS_BU_BP RUR_AE_TS_FTS_BU_BP
#define WAE_TS_FTS_BU_BP WUR_AE_TS_FTS_BU_BP
#define RUR242 RUR_AE_TS_FTS_BU_BP
#define WUR242 WUR_AE_TS_FTS_BU_BP

#define RAE_CW_SD_NO RUR_AE_CW_SD_NO
#define WAE_CW_SD_NO WUR_AE_CW_SD_NO
#define RUR243 RUR_AE_CW_SD_NO
#define WUR243 WUR_AE_CW_SD_NO

#define RAE_CBEGIN0 RUR_AE_CBEGIN0
#define WAE_CBEGIN0 WUR_AE_CBEGIN0
#define RUR246 RUR_AE_CBEGIN0
#define WUR246 WUR_AE_CBEGIN0

#define RAE_CEND0 RUR_AE_CEND0
#define WAE_CEND0 WUR_AE_CEND0
#define RUR247 RUR_AE_CEND0
#define WUR247 WUR_AE_CEND0

#define REXPSTATE RUR_EXPSTATE
#define WEXPSTATE WUR_EXPSTATE
#define RUR230 RUR_EXPSTATE
#define WUR230 WUR_EXPSTATE

#define RJammingBit RUR_JammingBit
#define WJammingBit WUR_JammingBit
#define RUR0 RUR_JammingBit
#define WUR0 WUR_JammingBit

#define RAccExtend_0 RUR_AccExtend_0
#define WAccExtend_0 WUR_AccExtend_0
#define RUR1 RUR_AccExtend_0
#define WUR1 WUR_AccExtend_0

#define RAccExtend_1 RUR_AccExtend_1
#define WAccExtend_1 WUR_AccExtend_1
#define RUR2 RUR_AccExtend_1
#define WUR2 WUR_AccExtend_1

#define RBB0_0 RUR_BB0_0
#define WBB0_0 WUR_BB0_0
#define RUR3 RUR_BB0_0
#define WUR3 WUR_BB0_0

#define RBB0_1 RUR_BB0_1
#define WBB0_1 WUR_BB0_1
#define RUR4 RUR_BB0_1
#define WUR4 WUR_BB0_1

#define RBB1_0 RUR_BB1_0
#define WBB1_0 WUR_BB1_0
#define RUR5 RUR_BB1_0
#define WUR5 WUR_BB1_0

#define RBB1_1 RUR_BB1_1
#define WBB1_1 WUR_BB1_1
#define RUR6 RUR_BB1_1
#define WUR6 WUR_BB1_1

#define RBB2_0 RUR_BB2_0
#define WBB2_0 WUR_BB2_0
#define RUR7 RUR_BB2_0
#define WUR7 WUR_BB2_0

#define RBB2_1 RUR_BB2_1
#define WBB2_1 WUR_BB2_1
#define RUR8 RUR_BB2_1
#define WUR8 WUR_BB2_1

#define RBB3_0 RUR_BB3_0
#define WBB3_0 WUR_BB3_0
#define RUR9 RUR_BB3_0
#define WUR9 WUR_BB3_0

#define RBB3_1 RUR_BB3_1
#define WBB3_1 WUR_BB3_1
#define RUR10 RUR_BB3_1
#define WUR10 WUR_BB3_1

#define RMvmAux RUR_MvmAux
#define WMvmAux WUR_MvmAux
#define RUR11 RUR_MvmAux
#define WUR11 WUR_MvmAux

#define RVB1_0 RUR_VB1_0
#define WVB1_0 WUR_VB1_0
#define RUR12 RUR_VB1_0
#define WUR12 WUR_VB1_0

#define RVB1_1 RUR_VB1_1
#define WVB1_1 WUR_VB1_1
#define RUR13 RUR_VB1_1
#define WUR13 WUR_VB1_1

#define RVB2_0 RUR_VB2_0
#define WVB2_0 WUR_VB2_0
#define RUR14 RUR_VB2_0
#define WUR14 WUR_VB2_0

#define RVB2_1 RUR_VB2_1
#define WVB2_1 WUR_VB2_1
#define RUR15 RUR_VB2_1
#define WUR15 WUR_VB2_1

#define RVB3_0 RUR_VB3_0
#define WVB3_0 WUR_VB3_0
#define RUR16 RUR_VB3_0
#define WUR16 WUR_VB3_0

#define RVB3_1 RUR_VB3_1
#define WVB3_1 WUR_VB3_1
#define RUR17 RUR_VB3_1
#define WUR17 WUR_VB3_1

#define RVB4_0 RUR_VB4_0
#define WVB4_0 WUR_VB4_0
#define RUR18 RUR_VB4_0
#define WUR18 WUR_VB4_0

#define RVB4_1 RUR_VB4_1
#define WVB4_1 WUR_VB4_1
#define RUR19 RUR_VB4_1
#define WUR19 WUR_VB4_1

#define RVB5_0 RUR_VB5_0
#define WVB5_0 WUR_VB5_0
#define RUR20 RUR_VB5_0
#define WUR20 WUR_VB5_0

#define RVB5_1 RUR_VB5_1
#define WVB5_1 WUR_VB5_1
#define RUR21 RUR_VB5_1
#define WUR21 WUR_VB5_1

#define RVB6_0 RUR_VB6_0
#define WVB6_0 WUR_VB6_0
#define RUR22 RUR_VB6_0
#define WUR22 WUR_VB6_0

#define RVB6_1 RUR_VB6_1
#define WVB6_1 WUR_VB6_1
#define RUR23 RUR_VB6_1
#define WUR23 WUR_VB6_1

#define RVB7_0 RUR_VB7_0
#define WVB7_0 WUR_VB7_0
#define RUR24 RUR_VB7_0
#define WUR24 WUR_VB7_0

#define RVB7_1 RUR_VB7_1
#define WVB7_1 WUR_VB7_1
#define RUR25 RUR_VB7_1
#define WUR25 WUR_VB7_1

#ifndef RUR
#define RUR(NUM) RUR##NUM()
#endif /* RUR */

#ifndef WUR
#define WUR(VAL, NUM) WUR##NUM(VAL)
#endif /* WUR */

/* Registration functions for external interfaces */
CSTUB_EXTERN void CSTUB_(register_EXPSTATE)(void *user_object, cstub_ExportState_func_t callback);

CSTUB_EXTERN void CSTUB_(register_ERI_RD)(void *user_object, cstub_Lookup_func_t callback);

CSTUB_EXTERN void CSTUB_(register_ERI_WR)(void *user_object, cstub_Lookup_func_t callback);

CSTUB_EXTERN void CSTUB_(register_IPQ)(void *user_object, cstub_InputQueue_Empty_func_t empty_callback, cstub_InputQueue_Data_func_t data_callback);

CSTUB_EXTERN void CSTUB_(register_OPQ)(void *user_object, cstub_OutputQueue_Full_func_t full_callback, cstub_OutputQueue_Data_func_t data_callback);

CSTUB_EXTERN void CSTUB_(register_IMPWIRE)(void *user_object, cstub_ImportWire_func_t callback);


#endif /* !CSTUB_Xm_hmd1a_HEADER */
